(create-root-object $fae_state -1 "Feature Control"
  
  (symbol $feature_name "2ARS4401-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS4402-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS4402-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS4403-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS4403-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS4404-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS4405-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS4405-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS4406-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS4407-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS4408-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS4408-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5201-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5201-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5201-S"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5202-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5203-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5203-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5204-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5204-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5205-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5205-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5206-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5206-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5207-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5207-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5208-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5209-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5209-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5209-S"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5210-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5211-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5213-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5214-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5214-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5214-S"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5216-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5216-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5218-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5218-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5218-S"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5222-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5222-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS5222-S"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6001-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6001-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6002-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6003-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6004-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6004-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6005-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6006-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6006-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6007-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6007-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "2ARS6008-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3101-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3101-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3102-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3102-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3103-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3103-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3104-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3104-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3105-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3105-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3106-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3107-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3108-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3108-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3501-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3502-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3502-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3503-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3503-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3504-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3505-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3505-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3506-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3507-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3508-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS3508-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4301-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4301-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4302-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4302-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4303-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4303-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4303-S"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4304-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4306-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4306-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4308-D"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )
  (symbol $feature_name "7RS4308-M"
    
    
    (set-route-if
      (==
        (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set")
      )
      $feature_name
    )
    (! Resets if requirements are not met and there has been a delay since the route state was set and we aren't within a small window after the route has been set
       We should only ever set to Clear if in the Set state - ie if set to Automated then it would do nothing. It means if we are paused and set the feature state that
       it will not clear until time starts)
    (set-feature-user-state-if
      (and
        (not (route-requirements-met $feature_name))
        (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))
        (not (sustain (rising-edge (== (get-feature-user-state $feature_name) (feature-state-id $feature_name "Set"))) 0.5))
      )
       $feature_name (feature-state-id $feature_name "Clear")
    )
        )

  (define-route "2ARS4401-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP4401" "2AP4402")
    )
    (define-number $fae_state "2ARS4401-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4401-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4401-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4401-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4401-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4401-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4401-M - Override")
        )
      ) (feature-state-id "2ARS4401-M" "Set") (feature-state-id "2ARS4401-M" "Clear")))
  )
  (define-route "2ARS4402-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP4403" "2AP4404")
    )
    (define-number $fae_state "2ARS4402-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4402-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4402-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4402-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4402-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4402-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4402-D - Override")
        )
      ) (feature-state-id "2ARS4402-D" "Set") (feature-state-id "2ARS4402-D" "Clear")))
  )
  (define-route "2ARS4402-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP4404" "2AP4403")
    )
    (define-number $fae_state "2ARS4402-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4402-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4402-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4402-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4402-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4402-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4402-M - Override")
        )
      ) (feature-state-id "2ARS4402-M" "Set") (feature-state-id "2ARS4402-M" "Clear")))
  )
  (define-route "2ARS4403-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP4403" "2AP4404")
    )
    (define-number $fae_state "2ARS4403-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4403-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4403-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4403-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4403-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4403-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4403-D - Override")
        )
      ) (feature-state-id "2ARS4403-D" "Set") (feature-state-id "2ARS4403-D" "Clear")))
  )
  (define-route "2ARS4403-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP4403" "2AP4404")
    )
    (define-number $fae_state "2ARS4403-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4403-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4403-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4403-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4403-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4403-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4403-M - Override")
        )
      ) (feature-state-id "2ARS4403-M" "Set") (feature-state-id "2ARS4403-M" "Clear")))
  )
  (define-route "2ARS4404-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP4402" "2AP4401")
    )
    (define-number $fae_state "2ARS4404-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4404-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4404-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4404-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4404-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4404-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4404-M - Override")
        )
      ) (feature-state-id "2ARS4404-M" "Set") (feature-state-id "2ARS4404-M" "Clear")))
  )
  (define-route "2ARS4405-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP4401" "2AP4402")
    )
    (define-number $fae_state "2ARS4405-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4405-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4405-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4405-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4405-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4405-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4405-D - Override")
        )
      ) (feature-state-id "2ARS4405-D" "Set") (feature-state-id "2ARS4405-D" "Clear")))
  )
  (define-route "2ARS4405-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP4402" "2AP4401")
    )
    (define-number $fae_state "2ARS4405-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4405-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4405-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4405-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4405-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4405-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4405-M - Override")
        )
      ) (feature-state-id "2ARS4405-M" "Set") (feature-state-id "2ARS4405-M" "Clear")))
  )
  (define-route "2ARS4406-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP4403" "2AP4404")
    )
    (define-number $fae_state "2ARS4406-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4406-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4406-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4406-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4406-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4406-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4406-M - Override")
        )
      ) (feature-state-id "2ARS4406-M" "Set") (feature-state-id "2ARS4406-M" "Clear")))
  )
  (define-route "2ARS4407-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP4404" "2AP4403")
    )
    (define-number $fae_state "2ARS4407-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4407-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4407-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4407-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4407-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4407-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4407-M - Override")
        )
      ) (feature-state-id "2ARS4407-M" "Set") (feature-state-id "2ARS4407-M" "Clear")))
  )
  (define-route "2ARS4408-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP4401" "2AP4402")
    )
    (define-number $fae_state "2ARS4408-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4408-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4408-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4408-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4408-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4408-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4408-D - Override")
        )
      ) (feature-state-id "2ARS4408-D" "Set") (feature-state-id "2ARS4408-D" "Clear")))
  )
  (define-route "2ARS4408-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP4402" "2AP4401")
    )
    (define-number $fae_state "2ARS4408-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS4408-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS4408-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS4408-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS4408-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS4408-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS4408-M - Override")
        )
      ) (feature-state-id "2ARS4408-M" "Set") (feature-state-id "2ARS4408-M" "Clear")))
  )
  (define-route "2ARS5201-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5204" "2AP5206")
      (route-reverse $rrs $rrid $rcid "2AP5201" "2AP5202")
    )
    (define-number $fae_state "2ARS5201-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5201-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5201-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5201-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5201-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5201-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5201-D - Override")
        )
      ) (feature-state-id "2ARS5201-D" "Set") (feature-state-id "2ARS5201-D" "Clear")))
  )
  (define-route "2ARS5201-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5201" "2AP5202")
    )
    (define-number $fae_state "2ARS5201-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5201-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5201-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5201-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5201-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5201-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5201-M - Override")
        )
      ) (feature-state-id "2ARS5201-M" "Set") (feature-state-id "2ARS5201-M" "Clear")))
  )
  (define-route "2ARS5201-S" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP5201" "2AP5202" "2AP5204" "2AP5206")
    )
    (define-number $fae_state "2ARS5201-S - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5201-S - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5201-S - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5201-S" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5201-S - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5201-S - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5201-S - Override")
        )
      ) (feature-state-id "2ARS5201-S" "Set") (feature-state-id "2ARS5201-S" "Clear")))
  )
  (define-route "2ARS5202-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5214" "2AP5205")
    )
    (define-number $fae_state "2ARS5202-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5202-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5202-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5202-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5202-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5202-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5202-M - Override")
        )
      ) (feature-state-id "2ARS5202-M" "Set") (feature-state-id "2ARS5202-M" "Clear")))
  )
  (define-route "2ARS5203-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP5203" "2AP5210")
    )
    (define-number $fae_state "2ARS5203-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5203-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5203-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5203-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5203-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5203-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5203-D - Override")
        )
      ) (feature-state-id "2ARS5203-D" "Set") (feature-state-id "2ARS5203-D" "Clear")))
  )
  (define-route "2ARS5203-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5203" "2AP5210")
    )
    (define-number $fae_state "2ARS5203-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5203-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5203-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5203-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5203-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5203-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5203-M - Override")
        )
      ) (feature-state-id "2ARS5203-M" "Set") (feature-state-id "2ARS5203-M" "Clear")))
  )
  (define-route "2ARS5204-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP5210" "2AP5203")
    )
    (define-number $fae_state "2ARS5204-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5204-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5204-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5204-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5204-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5204-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5204-D - Override")
        )
      ) (feature-state-id "2ARS5204-D" "Set") (feature-state-id "2ARS5204-D" "Clear")))
  )
  (define-route "2ARS5204-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5210" "2AP5203" "2AP5208" "2AP5212")
    )
    (define-number $fae_state "2ARS5204-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5204-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5204-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5204-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5204-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5204-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5204-M - Override")
        )
      ) (feature-state-id "2ARS5204-M" "Set") (feature-state-id "2ARS5204-M" "Clear")))
  )
  (define-route "2ARS5205-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5201" "2AP5202")
      (route-reverse $rrs $rrid $rcid "2AP5204" "2AP5206")
    )
    (define-number $fae_state "2ARS5205-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5205-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5205-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5205-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5205-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5205-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5205-D - Override")
        )
      ) (feature-state-id "2ARS5205-D" "Set") (feature-state-id "2ARS5205-D" "Clear")))
  )
  (define-route "2ARS5205-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5204" "2AP5206" "2AP5201" "2AP5202")
    )
    (define-number $fae_state "2ARS5205-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5205-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5205-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5205-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5205-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5205-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5205-M - Override")
        )
      ) (feature-state-id "2ARS5205-M" "Set") (feature-state-id "2ARS5205-M" "Clear")))
  )
  (define-route "2ARS5206-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5204" "2AP5206")
      (route-reverse $rrs $rrid $rcid "2AP5202" "2AP5201")
    )
    (define-number $fae_state "2ARS5206-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5206-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5206-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5206-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5206-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5206-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5206-D - Override")
        )
      ) (feature-state-id "2ARS5206-D" "Set") (feature-state-id "2ARS5206-D" "Clear")))
  )
  (define-route "2ARS5206-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5202" "2AP5201" "2AP5204" "2AP5206")
    )
    (define-number $fae_state "2ARS5206-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5206-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5206-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5206-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5206-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5206-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5206-M - Override")
        )
      ) (feature-state-id "2ARS5206-M" "Set") (feature-state-id "2ARS5206-M" "Clear")))
  )
  (define-route "2ARS5207-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP5208" "2AP5212")
    )
    (define-number $fae_state "2ARS5207-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5207-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5207-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5207-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5207-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5207-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5207-D - Override")
        )
      ) (feature-state-id "2ARS5207-D" "Set") (feature-state-id "2ARS5207-D" "Clear")))
  )
  (define-route "2ARS5207-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5208" "2AP5212" "2AP5210" "2AP5203")
    )
    (define-number $fae_state "2ARS5207-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5207-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5207-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5207-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5207-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5207-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5207-M - Override")
        )
      ) (feature-state-id "2ARS5207-M" "Set") (feature-state-id "2ARS5207-M" "Clear")))
  )
  (define-route "2ARS5208-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5203" "2AP5210")
    )
    (define-number $fae_state "2ARS5208-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5208-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5208-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5208-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5208-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5208-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5208-M - Override")
        )
      ) (feature-state-id "2ARS5208-M" "Set") (feature-state-id "2ARS5208-M" "Clear")))
  )
  (define-route "2ARS5209-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5207" "2AP5216")
      (route-reverse $rrs $rrid $rcid "2AP5214" "2AP5205")
    )
    (define-number $fae_state "2ARS5209-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5209-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5209-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5209-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5209-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5209-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5209-D - Override")
        )
      ) (feature-state-id "2ARS5209-D" "Set") (feature-state-id "2ARS5209-D" "Clear")))
  )
  (define-route "2ARS5209-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5214" "2AP5205")
    )
    (define-number $fae_state "2ARS5209-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5209-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5209-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5209-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5209-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5209-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5209-M - Override")
        )
      ) (feature-state-id "2ARS5209-M" "Set") (feature-state-id "2ARS5209-M" "Clear")))
  )
  (define-route "2ARS5209-S" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP5214" "2AP5205" "2AP5207" "2AP5216")
    )
    (define-number $fae_state "2ARS5209-S - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5209-S - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5209-S - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5209-S" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5209-S - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5209-S - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5209-S - Override")
        )
      ) (feature-state-id "2ARS5209-S" "Set") (feature-state-id "2ARS5209-S" "Clear")))
  )
  (define-route "2ARS5210-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5201" "2AP5202")
    )
    (define-number $fae_state "2ARS5210-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5210-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5210-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5210-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5210-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5210-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5210-M - Override")
        )
      ) (feature-state-id "2ARS5210-M" "Set") (feature-state-id "2ARS5210-M" "Clear")))
  )
  (define-route "2ARS5211-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5208" "2AP5212")
    )
    (define-number $fae_state "2ARS5211-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5211-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5211-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5211-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5211-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5211-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5211-M - Override")
        )
      ) (feature-state-id "2ARS5211-M" "Set") (feature-state-id "2ARS5211-M" "Clear")))
  )
  (define-route "2ARS5213-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5216" "2AP5207")
    )
    (define-number $fae_state "2ARS5213-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5213-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5213-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5213-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5213-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5213-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5213-M - Override")
        )
      ) (feature-state-id "2ARS5213-M" "Set") (feature-state-id "2ARS5213-M" "Clear")))
  )
  (define-route "2ARS5214-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5205" "2AP5214")
      (route-reverse $rrs $rrid $rcid "2AP5216" "2AP5207")
    )
    (define-number $fae_state "2ARS5214-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5214-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5214-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5214-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5214-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5214-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5214-D - Override")
        )
      ) (feature-state-id "2ARS5214-D" "Set") (feature-state-id "2ARS5214-D" "Clear")))
  )
  (define-route "2ARS5214-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5207" "2AP5216")
    )
    (define-number $fae_state "2ARS5214-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5214-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5214-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5214-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5214-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5214-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5214-M - Override")
        )
      ) (feature-state-id "2ARS5214-M" "Set") (feature-state-id "2ARS5214-M" "Clear")))
  )
  (define-route "2ARS5214-S" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP5216" "2AP5207" "2AP5205" "2AP5214")
    )
    (define-number $fae_state "2ARS5214-S - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5214-S - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5214-S - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5214-S" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5214-S - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5214-S - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5214-S - Override")
        )
      ) (feature-state-id "2ARS5214-S" "Set") (feature-state-id "2ARS5214-S" "Clear")))
  )
  (define-route "2ARS5216-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP5212" "2AP5208")
    )
    (define-number $fae_state "2ARS5216-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5216-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5216-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5216-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5216-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5216-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5216-D - Override")
        )
      ) (feature-state-id "2ARS5216-D" "Set") (feature-state-id "2ARS5216-D" "Clear")))
  )
  (define-route "2ARS5216-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5212" "2AP5208")
    )
    (define-number $fae_state "2ARS5216-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5216-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5216-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5216-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5216-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5216-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5216-M - Override")
        )
      ) (feature-state-id "2ARS5216-M" "Set") (feature-state-id "2ARS5216-M" "Clear")))
  )
  (define-route "2ARS5218-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5202" "2AP5201")
      (route-reverse $rrs $rrid $rcid "2AP5206" "2AP5204")
    )
    (define-number $fae_state "2ARS5218-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5218-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5218-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5218-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5218-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5218-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5218-D - Override")
        )
      ) (feature-state-id "2ARS5218-D" "Set") (feature-state-id "2ARS5218-D" "Clear")))
  )
  (define-route "2ARS5218-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5206" "2AP5204")
    )
    (define-number $fae_state "2ARS5218-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5218-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5218-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5218-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5218-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5218-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5218-M - Override")
        )
      ) (feature-state-id "2ARS5218-M" "Set") (feature-state-id "2ARS5218-M" "Clear")))
  )
  (define-route "2ARS5218-S" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP5206" "2AP5204" "2AP5202" "2AP5201")
    )
    (define-number $fae_state "2ARS5218-S - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5218-S - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5218-S - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5218-S" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5218-S - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5218-S - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5218-S - Override")
        )
      ) (feature-state-id "2ARS5218-S" "Set") (feature-state-id "2ARS5218-S" "Clear")))
  )
  (define-route "2ARS5222-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5207" "2AP5216")
      (route-reverse $rrs $rrid $rcid "2AP5205" "2AP5214")
    )
    (define-number $fae_state "2ARS5222-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5222-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5222-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5222-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5222-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5222-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5222-D - Override")
        )
      ) (feature-state-id "2ARS5222-D" "Set") (feature-state-id "2ARS5222-D" "Clear")))
  )
  (define-route "2ARS5222-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5207" "2AP5216" "2AP5205" "2AP5214")
    )
    (define-number $fae_state "2ARS5222-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5222-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5222-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5222-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5222-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5222-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5222-M - Override")
        )
      ) (feature-state-id "2ARS5222-M" "Set") (feature-state-id "2ARS5222-M" "Clear")))
  )
  (define-route "2ARS5222-S" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP5207" "2AP5216")
      (route-reverse $rrs $rrid $rcid "2AP5205" "2AP5214" "2AP5210" "2AP5203")
    )
    (define-number $fae_state "2ARS5222-S - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS5222-S - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS5222-S - Override" -1 0.5)
    (set-feature-automatic-state "2ARS5222-S" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS5222-S - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS5222-S - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS5222-S - Override")
        )
      ) (feature-state-id "2ARS5222-S" "Set") (feature-state-id "2ARS5222-S" "Clear")))
  )
  (define-route "2ARS6001-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP6001" "2AP6002")
    )
    (define-number $fae_state "2ARS6001-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6001-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6001-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6001-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6001-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6001-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6001-D - Override")
        )
      ) (feature-state-id "2ARS6001-D" "Set") (feature-state-id "2ARS6001-D" "Clear")))
  )
  (define-route "2ARS6001-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP6001" "2AP6002")
    )
    (define-number $fae_state "2ARS6001-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6001-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6001-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6001-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6001-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6001-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6001-M - Override")
        )
      ) (feature-state-id "2ARS6001-M" "Set") (feature-state-id "2ARS6001-M" "Clear")))
  )
  (define-route "2ARS6002-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP6004" "2AP6003")
    )
    (define-number $fae_state "2ARS6002-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6002-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6002-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6002-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6002-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6002-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6002-M - Override")
        )
      ) (feature-state-id "2ARS6002-M" "Set") (feature-state-id "2ARS6002-M" "Clear")))
  )
  (define-route "2ARS6003-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP6003" "2AP6004")
    )
    (define-number $fae_state "2ARS6003-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6003-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6003-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6003-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6003-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6003-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6003-M - Override")
        )
      ) (feature-state-id "2ARS6003-M" "Set") (feature-state-id "2ARS6003-M" "Clear")))
  )
  (define-route "2ARS6004-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP6002" "2AP6001")
    )
    (define-number $fae_state "2ARS6004-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6004-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6004-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6004-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6004-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6004-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6004-D - Override")
        )
      ) (feature-state-id "2ARS6004-D" "Set") (feature-state-id "2ARS6004-D" "Clear")))
  )
  (define-route "2ARS6004-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP6002" "2AP6001")
    )
    (define-number $fae_state "2ARS6004-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6004-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6004-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6004-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6004-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6004-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6004-M - Override")
        )
      ) (feature-state-id "2ARS6004-M" "Set") (feature-state-id "2ARS6004-M" "Clear")))
  )
  (define-route "2ARS6005-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP6002" "2AP6001")
    )
    (define-number $fae_state "2ARS6005-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6005-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6005-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6005-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6005-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6005-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6005-M - Override")
        )
      ) (feature-state-id "2ARS6005-M" "Set") (feature-state-id "2ARS6005-M" "Clear")))
  )
  (define-route "2ARS6006-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP6004" "2AP6003")
    )
    (define-number $fae_state "2ARS6006-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6006-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6006-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6006-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6006-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6006-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6006-D - Override")
        )
      ) (feature-state-id "2ARS6006-D" "Set") (feature-state-id "2ARS6006-D" "Clear")))
  )
  (define-route "2ARS6006-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP6003" "2AP6004")
    )
    (define-number $fae_state "2ARS6006-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6006-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6006-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6006-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6006-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6006-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6006-M - Override")
        )
      ) (feature-state-id "2ARS6006-M" "Set") (feature-state-id "2ARS6006-M" "Clear")))
  )
  (define-route "2ARS6007-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "2AP6004" "2AP6003")
    )
    (define-number $fae_state "2ARS6007-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6007-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6007-D - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6007-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6007-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6007-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6007-D - Override")
        )
      ) (feature-state-id "2ARS6007-D" "Set") (feature-state-id "2ARS6007-D" "Clear")))
  )
  (define-route "2ARS6007-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP6004" "2AP6003")
    )
    (define-number $fae_state "2ARS6007-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6007-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6007-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6007-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6007-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6007-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6007-M - Override")
        )
      ) (feature-state-id "2ARS6007-M" "Set") (feature-state-id "2ARS6007-M" "Clear")))
  )
  (define-route "2ARS6008-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "2AP6002" "2AP6001")
    )
    (define-number $fae_state "2ARS6008-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "2ARS6008-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "2ARS6008-M - Override" -1 0.5)
    (set-feature-automatic-state "2ARS6008-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "2ARS6008-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "2ARS6008-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "2ARS6008-M - Override")
        )
      ) (feature-state-id "2ARS6008-M" "Set") (feature-state-id "2ARS6008-M" "Clear")))
  )
  (define-route "7RS3101-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P3101" "7P3104")
    )
    (define-number $fae_state "7RS3101-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3101-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3101-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS3101-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3101-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3101-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3101-D - Override")
        )
      ) (feature-state-id "7RS3101-D" "Set") (feature-state-id "7RS3101-D" "Clear")))
  )
  (define-route "7RS3101-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3101" "7P3103" "7P3104" "7P3102")
    )
    (define-number $fae_state "7RS3101-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3101-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3101-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3101-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3101-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3101-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3101-M - Override")
        )
      ) (feature-state-id "7RS3101-M" "Set") (feature-state-id "7RS3101-M" "Clear")))
  )
  (define-route "7RS3102-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P3106" "7P3105")
    )
    (define-number $fae_state "7RS3102-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3102-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3102-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS3102-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3102-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3102-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3102-D - Override")
        )
      ) (feature-state-id "7RS3102-D" "Set") (feature-state-id "7RS3102-D" "Clear")))
  )
  (define-route "7RS3102-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3106" "7P3105")
    )
    (define-number $fae_state "7RS3102-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3102-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3102-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3102-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3102-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3102-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3102-M - Override")
        )
      ) (feature-state-id "7RS3102-M" "Set") (feature-state-id "7RS3102-M" "Clear")))
  )
  (define-route "7RS3103-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P3105" "7P3106")
    )
    (define-number $fae_state "7RS3103-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3103-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3103-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS3103-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3103-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3103-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3103-D - Override")
        )
      ) (feature-state-id "7RS3103-D" "Set") (feature-state-id "7RS3103-D" "Clear")))
  )
  (define-route "7RS3103-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3105" "7P3106")
    )
    (define-number $fae_state "7RS3103-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3103-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3103-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3103-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3103-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3103-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3103-M - Override")
        )
      ) (feature-state-id "7RS3103-M" "Set") (feature-state-id "7RS3103-M" "Clear")))
  )
  (define-route "7RS3104-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P3104" "7P3101")
    )
    (define-number $fae_state "7RS3104-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3104-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3104-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS3104-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3104-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3104-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3104-D - Override")
        )
      ) (feature-state-id "7RS3104-D" "Set") (feature-state-id "7RS3104-D" "Clear")))
  )
  (define-route "7RS3104-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3104" "7P3101" "7P3102" "7P3103")
    )
    (define-number $fae_state "7RS3104-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3104-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3104-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3104-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3104-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3104-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3104-M - Override")
        )
      ) (feature-state-id "7RS3104-M" "Set") (feature-state-id "7RS3104-M" "Clear")))
  )
  (define-route "7RS3105-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P3102" "7P3103")
    )
    (define-number $fae_state "7RS3105-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3105-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3105-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS3105-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3105-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3105-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3105-D - Override")
        )
      ) (feature-state-id "7RS3105-D" "Set") (feature-state-id "7RS3105-D" "Clear")))
  )
  (define-route "7RS3105-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3102" "7P3103" "7P3104" "7P3101")
    )
    (define-number $fae_state "7RS3105-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3105-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3105-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3105-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3105-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3105-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3105-M - Override")
        )
      ) (feature-state-id "7RS3105-M" "Set") (feature-state-id "7RS3105-M" "Clear")))
  )
  (define-route "7RS3106-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3105" "7P3106")
    )
    (define-number $fae_state "7RS3106-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3106-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3106-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3106-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3106-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3106-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3106-M - Override")
        )
      ) (feature-state-id "7RS3106-M" "Set") (feature-state-id "7RS3106-M" "Clear")))
  )
  (define-route "7RS3107-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3106" "7P3105")
    )
    (define-number $fae_state "7RS3107-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3107-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3107-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3107-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3107-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3107-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3107-M - Override")
        )
      ) (feature-state-id "7RS3107-M" "Set") (feature-state-id "7RS3107-M" "Clear")))
  )
  (define-route "7RS3108-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P3103" "7P3102")
    )
    (define-number $fae_state "7RS3108-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3108-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3108-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS3108-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3108-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3108-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3108-D - Override")
        )
      ) (feature-state-id "7RS3108-D" "Set") (feature-state-id "7RS3108-D" "Clear")))
  )
  (define-route "7RS3108-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3103" "7P3102" "7P3101" "7P3104")
    )
    (define-number $fae_state "7RS3108-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3108-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3108-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3108-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3108-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3108-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3108-M - Override")
        )
      ) (feature-state-id "7RS3108-M" "Set") (feature-state-id "7RS3108-M" "Clear")))
  )
  (define-route "7RS3501-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3501" "7P3502")
    )
    (define-number $fae_state "7RS3501-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3501-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3501-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3501-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3501-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3501-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3501-M - Override")
        )
      ) (feature-state-id "7RS3501-M" "Set") (feature-state-id "7RS3501-M" "Clear")))
  )
  (define-route "7RS3502-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P3504" "7P3503")
    )
    (define-number $fae_state "7RS3502-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3502-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3502-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS3502-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3502-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3502-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3502-D - Override")
        )
      ) (feature-state-id "7RS3502-D" "Set") (feature-state-id "7RS3502-D" "Clear")))
  )
  (define-route "7RS3502-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3504" "7P3503")
    )
    (define-number $fae_state "7RS3502-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3502-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3502-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3502-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3502-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3502-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3502-M - Override")
        )
      ) (feature-state-id "7RS3502-M" "Set") (feature-state-id "7RS3502-M" "Clear")))
  )
  (define-route "7RS3503-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P3503" "7P3503")
    )
    (define-number $fae_state "7RS3503-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3503-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3503-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS3503-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3503-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3503-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3503-D - Override")
        )
      ) (feature-state-id "7RS3503-D" "Set") (feature-state-id "7RS3503-D" "Clear")))
  )
  (define-route "7RS3503-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3503" "7P3504")
    )
    (define-number $fae_state "7RS3503-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3503-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3503-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3503-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3503-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3503-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3503-M - Override")
        )
      ) (feature-state-id "7RS3503-M" "Set") (feature-state-id "7RS3503-M" "Clear")))
  )
  (define-route "7RS3504-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3502" "7P3501")
    )
    (define-number $fae_state "7RS3504-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3504-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3504-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3504-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3504-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3504-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3504-M - Override")
        )
      ) (feature-state-id "7RS3504-M" "Set") (feature-state-id "7RS3504-M" "Clear")))
  )
  (define-route "7RS3505-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P3502" "7P3501")
    )
    (define-number $fae_state "7RS3505-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3505-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3505-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS3505-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3505-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3505-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3505-D - Override")
        )
      ) (feature-state-id "7RS3505-D" "Set") (feature-state-id "7RS3505-D" "Clear")))
  )
  (define-route "7RS3505-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3502" "7P3501")
    )
    (define-number $fae_state "7RS3505-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3505-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3505-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3505-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3505-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3505-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3505-M - Override")
        )
      ) (feature-state-id "7RS3505-M" "Set") (feature-state-id "7RS3505-M" "Clear")))
  )
  (define-route "7RS3506-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3503" "7P3504")
    )
    (define-number $fae_state "7RS3506-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3506-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3506-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3506-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3506-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3506-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3506-M - Override")
        )
      ) (feature-state-id "7RS3506-M" "Set") (feature-state-id "7RS3506-M" "Clear")))
  )
  (define-route "7RS3507-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3504" "7P3503")
    )
    (define-number $fae_state "7RS3507-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3507-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3507-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3507-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3507-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3507-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3507-M - Override")
        )
      ) (feature-state-id "7RS3507-M" "Set") (feature-state-id "7RS3507-M" "Clear")))
  )
  (define-route "7RS3508-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P3501" "7P3502")
    )
    (define-number $fae_state "7RS3508-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3508-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3508-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS3508-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3508-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3508-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3508-D - Override")
        )
      ) (feature-state-id "7RS3508-D" "Set") (feature-state-id "7RS3508-D" "Clear")))
  )
  (define-route "7RS3508-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P3501" "7P3502")
    )
    (define-number $fae_state "7RS3508-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS3508-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS3508-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS3508-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS3508-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS3508-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS3508-M - Override")
        )
      ) (feature-state-id "7RS3508-M" "Set") (feature-state-id "7RS3508-M" "Clear")))
  )
  (define-route "7RS4301-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P4301" "7P4304")
    )
    (define-number $fae_state "7RS4301-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4301-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4301-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS4301-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4301-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4301-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4301-D - Override")
        )
      ) (feature-state-id "7RS4301-D" "Set") (feature-state-id "7RS4301-D" "Clear")))
  )
  (define-route "7RS4301-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P4301" "7P4304")
    )
    (define-number $fae_state "7RS4301-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4301-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4301-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS4301-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4301-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4301-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4301-M - Override")
        )
      ) (feature-state-id "7RS4301-M" "Set") (feature-state-id "7RS4301-M" "Clear")))
  )
  (define-route "7RS4302-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P4304" "7P4301")
    )
    (define-number $fae_state "7RS4302-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4302-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4302-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS4302-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4302-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4302-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4302-D - Override")
        )
      ) (feature-state-id "7RS4302-D" "Set") (feature-state-id "7RS4302-D" "Clear")))
  )
  (define-route "7RS4302-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P4306" "7P4304" "7P4301")
    )
    (define-number $fae_state "7RS4302-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4302-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4302-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS4302-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4302-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4302-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4302-M - Override")
        )
      ) (feature-state-id "7RS4302-M" "Set") (feature-state-id "7RS4302-M" "Clear")))
  )
  (define-route "7RS4303-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P4302" "7P4308")
    )
    (define-number $fae_state "7RS4303-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4303-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4303-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS4303-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4303-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4303-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4303-D - Override")
        )
      ) (feature-state-id "7RS4303-D" "Set") (feature-state-id "7RS4303-D" "Clear")))
  )
  (define-route "7RS4303-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P4302" "7P4308")
    )
    (define-number $fae_state "7RS4303-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4303-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4303-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS4303-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4303-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4303-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4303-M - Override")
        )
      ) (feature-state-id "7RS4303-M" "Set") (feature-state-id "7RS4303-M" "Clear")))
  )
  (define-route "7RS4303-S" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P4302" "7P4308")
      (route-reverse $rrs $rrid $rcid "7P4306")
    )
    (define-number $fae_state "7RS4303-S - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4303-S - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4303-S - Override" -1 0.5)
    (set-feature-automatic-state "7RS4303-S" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4303-S - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4303-S - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4303-S - Override")
        )
      ) (feature-state-id "7RS4303-S" "Set") (feature-state-id "7RS4303-S" "Clear")))
  )
  (define-route "7RS4304-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P4301" "7P4304")
    )
    (define-number $fae_state "7RS4304-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4304-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4304-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS4304-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4304-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4304-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4304-M - Override")
        )
      ) (feature-state-id "7RS4304-M" "Set") (feature-state-id "7RS4304-M" "Clear")))
  )
  (define-route "7RS4306-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P4308" "7P4302")
    )
    (define-number $fae_state "7RS4306-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4306-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4306-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS4306-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4306-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4306-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4306-D - Override")
        )
      ) (feature-state-id "7RS4306-D" "Set") (feature-state-id "7RS4306-D" "Clear")))
  )
  (define-route "7RS4306-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P4308" "7P4302")
    )
    (define-number $fae_state "7RS4306-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4306-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4306-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS4306-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4306-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4306-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4306-M - Override")
        )
      ) (feature-state-id "7RS4306-M" "Set") (feature-state-id "7RS4306-M" "Clear")))
  )
  (define-route "7RS4308-D" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-reverse $rrs $rrid $rcid "7P4306" "7P4304" "7P4301")
    )
    (define-number $fae_state "7RS4308-D - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4308-D - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4308-D - Override" -1 0.5)
    (set-feature-automatic-state "7RS4308-D" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4308-D - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4308-D - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4308-D - Override")
        )
      ) (feature-state-id "7RS4308-D" "Set") (feature-state-id "7RS4308-D" "Clear")))
  )
  (define-route "7RS4308-M" $rs $rid
    (route-requirement $rs $rid $rrs $rrid $rcid
      (route-normal $rrs $rrid $rcid "7P4306" "7P4304" "7P4301" "7P4302" "7P4308")
    )
    (define-number $fae_state "7RS4308-M - Requirements Met" 0 0.5)
    (set-number
      (number-id $fae_state "7RS4308-M - Requirements Met")
      (route-requirements-met $rs)
    )
    (define-number $fae_state "7RS4308-M - Override" -1 0.5)
    (set-feature-automatic-state "7RS4308-M" (if (if
        (== -1
          (get-number
            (number-id $fae_state "7RS4308-M - Override")
          )
        )
        (get-number
          (number-id $fae_state "7RS4308-M - Requirements Met")
        )
        (get-number
          (number-id $fae_state "7RS4308-M - Override")
        )
      ) (feature-state-id "7RS4308-M" "Set") (feature-state-id "7RS4308-M" "Clear")))
  )
  (set-feature-automatic-state "2ARS4401_Signal"
    (case
      (and
        (is-route-set "2ARS4401-M")
        (and
          (is-track-clear "2AT4401")
          (is-track-clear "2AT4403" "2AT4405")
        )
      )
      (feature-state-id "2ARS4401_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4401-M")
        (is-track-clear "2AT4401")
      )
      (feature-state-id "2ARS4401_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4401-M")
      )
      (feature-state-id "2ARS4401_Signal"
        "Red"
      )
      (feature-state-id "2ARS4401_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS4402_RI"
    (case
      (and
        (is-route-set "2ARS4402-D")
        (and
          (is-track-clear "2AT4410")
          (is-track-clear "2AT4408" "2AT4407" "2AT4405")
        )
      )
      (feature-state-id "2ARS4402_RI" "D")
      (and
        (is-route-set "2ARS4402-D")
        (is-track-clear "2AT4410")
      )
      (feature-state-id "2ARS4402_RI" "D")
      (and
        (is-route-set "2ARS4402-M")
        (and
          (is-track-clear "2AT4410")
          (is-track-clear "2AT4408" "2AT4406")
        )
      )
      (feature-state-id "2ARS4402_RI" "M")
      (and
        (is-route-set "2ARS4402-M")
        (is-track-clear "2AT4410")
      )
      (feature-state-id "2ARS4402_RI" "M")
      (feature-state-id "2ARS4402_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS4402_Signal"
    (case
      (and
        (is-route-set "2ARS4402-D")
        (and
          (is-track-clear "2AT4410")
          (is-track-clear "2AT4408" "2AT4407" "2AT4405")
        )
      )
      (feature-state-id "2ARS4402_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4402-D")
        (is-track-clear "2AT4410")
      )
      (feature-state-id "2ARS4402_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4402-D")
      )
      (feature-state-id "2ARS4402_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS4402-M")
        (and
          (is-track-clear "2AT4410")
          (is-track-clear "2AT4408" "2AT4406")
        )
      )
      (feature-state-id "2ARS4402_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4402-M")
        (is-track-clear "2AT4410")
      )
      (feature-state-id "2ARS4402_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4402-M")
      )
      (feature-state-id "2ARS4402_Signal"
        "Red"
      )
      (feature-state-id "2ARS4402_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS4403_RI"
    (case
      (and
        (is-route-set "2ARS4403-D")
        (and
          (is-track-clear "2AT4407" "2AT4408")
          (is-track-clear "2AT4410" "2AT4412" "2AT4502" "2AT4504" "2AT4602" "2AT4604" "2AT4702" "2AT4704" "2AT4802" "2AT4804" "2AT4902" "2AT4904" "2AT5002" "2AT5004" "2AT5102" "2AT5104")
        )
      )
      (feature-state-id "2ARS4403_RI" "D")
      (and
        (is-route-set "2ARS4403-D")
        (is-track-clear "2AT4407" "2AT4408")
      )
      (feature-state-id "2ARS4403_RI" "D")
      (and
        (is-route-set "2ARS4403-M")
        (and
          (is-track-clear "2AT4407")
          (is-track-clear "2AT4409" "2AT4411" "2AT4501" "2AT4503" "2AT4601" "2AT4603" "2AT4701" "2AT4703" "2AT4801" "2AT4803" "2AT4901" "2AT4903" "2AT5001" "2AT5003" "2AT5101" "2AT5103")
        )
      )
      (feature-state-id "2ARS4403_RI" "M")
      (and
        (is-route-set "2ARS4403-M")
        (is-track-clear "2AT4407")
      )
      (feature-state-id "2ARS4403_RI" "M")
      (feature-state-id "2ARS4403_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS4403_Signal"
    (case
      (and
        (is-route-set "2ARS4403-D")
        (and
          (is-track-clear "2AT4407" "2AT4408")
          (is-track-clear "2AT4410" "2AT4412" "2AT4502" "2AT4504" "2AT4602" "2AT4604" "2AT4702" "2AT4704" "2AT4802" "2AT4804" "2AT4902" "2AT4904" "2AT5002" "2AT5004" "2AT5102" "2AT5104")
        )
      )
      (feature-state-id "2ARS4403_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4403-D")
        (is-track-clear "2AT4407" "2AT4408")
      )
      (feature-state-id "2ARS4403_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4403-D")
      )
      (feature-state-id "2ARS4403_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS4403-M")
        (and
          (is-track-clear "2AT4407")
          (is-track-clear "2AT4409" "2AT4411" "2AT4501" "2AT4503" "2AT4601" "2AT4603" "2AT4701" "2AT4703" "2AT4801" "2AT4803" "2AT4901" "2AT4903" "2AT5001" "2AT5003" "2AT5101" "2AT5103")
        )
      )
      (feature-state-id "2ARS4403_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4403-M")
        (is-track-clear "2AT4407")
      )
      (feature-state-id "2ARS4403_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4403-M")
      )
      (feature-state-id "2ARS4403_Signal"
        "Red"
      )
      (feature-state-id "2ARS4403_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS4404_Signal"
    (case
      (and
        (is-route-set "2ARS4404-M")
        (and
          (is-track-clear "2AT4404")
          (is-track-clear "2AT4402" "7T4310")
        )
      )
      (feature-state-id "2ARS4404_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4404-M")
        (is-track-clear "2AT4404")
      )
      (feature-state-id "2ARS4404_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4404-M")
      )
      (feature-state-id "2ARS4404_Signal"
        "Red"
      )
      (feature-state-id "2ARS4404_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS4405_RI"
    (case
      (and
        (is-route-set "2ARS4405-D")
        (and
          (is-track-clear "2AT4402")
          (is-track-clear "2AT4404" "2AT4403" "2AT4405")
        )
      )
      (feature-state-id "2ARS4405_RI" "D")
      (and
        (is-route-set "2ARS4405-D")
        (is-track-clear "2AT4402")
      )
      (feature-state-id "2ARS4405_RI" "D")
      (and
        (is-route-set "2ARS4405-M")
        (and
          (is-track-clear "2AT4402")
          (is-track-clear "2AT4404" "2AT4406")
        )
      )
      (feature-state-id "2ARS4405_RI" "M")
      (and
        (is-route-set "2ARS4405-M")
        (is-track-clear "2AT4402")
      )
      (feature-state-id "2ARS4405_RI" "M")
      (feature-state-id "2ARS4405_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS4405_Signal"
    (case
      (and
        (is-route-set "2ARS4405-D")
        (and
          (is-track-clear "2AT4402")
          (is-track-clear "2AT4404" "2AT4403" "2AT4405")
        )
      )
      (feature-state-id "2ARS4405_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4405-D")
        (is-track-clear "2AT4402")
      )
      (feature-state-id "2ARS4405_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4405-D")
      )
      (feature-state-id "2ARS4405_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS4405-M")
        (and
          (is-track-clear "2AT4402")
          (is-track-clear "2AT4404" "2AT4406")
        )
      )
      (feature-state-id "2ARS4405_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4405-M")
        (is-track-clear "2AT4402")
      )
      (feature-state-id "2ARS4405_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4405-M")
      )
      (feature-state-id "2ARS4405_Signal"
        "Red"
      )
      (feature-state-id "2ARS4405_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS4406_Signal"
    (case
      (and
        (is-route-set "2ARS4406-M")
        (and
          (is-track-clear "2AT4409")
          (is-track-clear "2AT4407" "2AT4405")
        )
      )
      (feature-state-id "2ARS4406_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4406-M")
        (is-track-clear "2AT4409")
      )
      (feature-state-id "2ARS4406_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4406-M")
      )
      (feature-state-id "2ARS4406_Signal"
        "Red"
      )
      (feature-state-id "2ARS4406_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS4407_Signal"
    (case
      (and
        (is-route-set "2ARS4407-M")
        (and
          (is-track-clear "2AT4408")
          (is-track-clear "2AT4410" "2AT4412" "2AT4502" "2AT4504" "2AT4602" "2AT4604" "2AT4702" "2AT4704" "2AT4802" "2AT4804" "2AT4902" "2AT4904" "2AT5002" "2AT5004" "2AT5102" "2AT5104")
        )
      )
      (feature-state-id "2ARS4407_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4407-M")
        (is-track-clear "2AT4408")
      )
      (feature-state-id "2ARS4407_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4407-M")
      )
      (feature-state-id "2ARS4407_Signal"
        "Red"
      )
      (feature-state-id "2ARS4407_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS4408_RI"
    (case
      (and
        (is-route-set "2ARS4408-D")
        (and
          (is-track-clear "2AT4403" "2AT4404")
          (is-track-clear "2AT4402" "7T4310")
        )
      )
      (feature-state-id "2ARS4408_RI" "D")
      (and
        (is-route-set "2ARS4408-D")
        (is-track-clear "2AT4403" "2AT4404")
      )
      (feature-state-id "2ARS4408_RI" "D")
      (and
        (is-route-set "2ARS4408-M")
        (and
          (is-track-clear "2AT4403")
          (is-track-clear "2AT4401" "7T4307")
        )
      )
      (feature-state-id "2ARS4408_RI" "M")
      (and
        (is-route-set "2ARS4408-M")
        (is-track-clear "2AT4403")
      )
      (feature-state-id "2ARS4408_RI" "M")
      (feature-state-id "2ARS4408_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS4408_Signal"
    (case
      (and
        (is-route-set "2ARS4408-D")
        (and
          (is-track-clear "2AT4403" "2AT4404")
          (is-track-clear "2AT4402" "7T4310")
        )
      )
      (feature-state-id "2ARS4408_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4408-D")
        (is-track-clear "2AT4403" "2AT4404")
      )
      (feature-state-id "2ARS4408_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4408-D")
      )
      (feature-state-id "2ARS4408_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS4408-M")
        (and
          (is-track-clear "2AT4403")
          (is-track-clear "2AT4401" "7T4307")
        )
      )
      (feature-state-id "2ARS4408_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS4408-M")
        (is-track-clear "2AT4403")
      )
      (feature-state-id "2ARS4408_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS4408-M")
      )
      (feature-state-id "2ARS4408_Signal"
        "Red"
      )
      (feature-state-id "2ARS4408_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5201_RI"
    (case
      (and
        (is-route-set "2ARS5201-S")
        (and
          (is-track-clear "2AT5201" "2AT5202")
          (is-track-clear "2AT5220" "2AT5222")
        )
      )
      (feature-state-id "2ARS5201_RI" "S")
      (and
        (is-route-set "2ARS5201-S")
        (is-track-clear "2AT5201" "2AT5202")
      )
      (feature-state-id "2ARS5201_RI" "S")
      (and
        (is-route-set "2ARS5201-D")
        (and
          (is-track-clear "2AT5201")
          (is-track-clear "2AT5203" "2AT5202" "2AT5204" "2AT5206")
        )
      )
      (feature-state-id "2ARS5201_RI" "D")
      (and
        (is-route-set "2ARS5201-D")
        (is-track-clear "2AT5201")
      )
      (feature-state-id "2ARS5201_RI" "D")
      (and
        (is-route-set "2ARS5201-M")
        (and
          (is-track-clear "2AT5201")
          (is-track-clear "2AT5203" "2AT5203" "2AT5205" "2AT5207")
        )
      )
      (feature-state-id "2ARS5201_RI" "M")
      (and
        (is-route-set "2ARS5201-M")
        (is-track-clear "2AT5201")
      )
      (feature-state-id "2ARS5201_RI" "M")
      (feature-state-id "2ARS5201_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS5201_Signal"
    (case
      (and
        (is-route-set "2ARS5201-S")
        (and
          (is-track-clear "2AT5201" "2AT5202")
          (is-track-clear "2AT5220" "2AT5222")
        )
      )
      (feature-state-id "2ARS5201_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5201-S")
        (is-track-clear "2AT5201" "2AT5202")
      )
      (feature-state-id "2ARS5201_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5201-S")
      )
      (feature-state-id "2ARS5201_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5201-D")
        (and
          (is-track-clear "2AT5201")
          (is-track-clear "2AT5203" "2AT5202" "2AT5204" "2AT5206")
        )
      )
      (feature-state-id "2ARS5201_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5201-D")
        (is-track-clear "2AT5201")
      )
      (feature-state-id "2ARS5201_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5201-D")
      )
      (feature-state-id "2ARS5201_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5201-M")
        (and
          (is-track-clear "2AT5201")
          (is-track-clear "2AT5203" "2AT5203" "2AT5205" "2AT5207")
        )
      )
      (feature-state-id "2ARS5201_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5201-M")
        (is-track-clear "2AT5201")
      )
      (feature-state-id "2ARS5201_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5201-M")
      )
      (feature-state-id "2ARS5201_Signal"
        "Red"
      )
      (feature-state-id "2ARS5201_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5202_Signal"
    (case
      (and
        (is-route-set "2ARS5202-M")
        (and
          (is-track-clear "2AT5216")
          (is-track-clear "2AT5214" "2AT5212")
        )
      )
      (feature-state-id "2ARS5202_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5202-M")
        (is-track-clear "2AT5216")
      )
      (feature-state-id "2ARS5202_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5202-M")
      )
      (feature-state-id "2ARS5202_Signal"
        "Red"
      )
      (feature-state-id "2ARS5202_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5203_RI"
    (case
      (and
        (is-route-set "2ARS5203-D")
        (and
          (is-track-clear "2AT5209" "2AT5210")
          (is-track-clear "2AT5212")
        )
      )
      (feature-state-id "2ARS5203_RI" "D")
      (and
        (is-route-set "2ARS5203-D")
        (is-track-clear "2AT5209" "2AT5210")
      )
      (feature-state-id "2ARS5203_RI" "D")
      (and
        (is-route-set "2ARS5203-M")
        (and
          (is-track-clear "2AT5209")
          (is-track-clear "2AT5211" "2AT5213" "2AT5301" "2AT5303" "2AT5401" "2AT5403" "2AT5501" "2AT5503" "2AT5601" "2AT5603" "2AT5701" "2AT5703" "2AT5801" "2AT5803" "2AT5901" "2AT5903")
        )
      )
      (feature-state-id "2ARS5203_RI" "M")
      (and
        (is-route-set "2ARS5203-M")
        (is-track-clear "2AT5209")
      )
      (feature-state-id "2ARS5203_RI" "M")
      (feature-state-id "2ARS5203_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS5203_Signal"
    (case
      (and
        (is-route-set "2ARS5203-D")
        (and
          (is-track-clear "2AT5209" "2AT5210")
          (is-track-clear "2AT5212")
        )
      )
      (feature-state-id "2ARS5203_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5203-D")
        (is-track-clear "2AT5209" "2AT5210")
      )
      (feature-state-id "2ARS5203_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5203-D")
      )
      (feature-state-id "2ARS5203_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5203-M")
        (and
          (is-track-clear "2AT5209")
          (is-track-clear "2AT5211" "2AT5213" "2AT5301" "2AT5303" "2AT5401" "2AT5403" "2AT5501" "2AT5503" "2AT5601" "2AT5603" "2AT5701" "2AT5703" "2AT5801" "2AT5803" "2AT5901" "2AT5903")
        )
      )
      (feature-state-id "2ARS5203_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5203-M")
        (is-track-clear "2AT5209")
      )
      (feature-state-id "2ARS5203_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5203-M")
      )
      (feature-state-id "2ARS5203_Signal"
        "Red"
      )
      (feature-state-id "2ARS5203_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5204_RI"
    (case
      (and
        (is-route-set "2ARS5204-D")
        (and
          (is-track-clear "2AT5210" "2AT5209")
          (is-track-clear "2AT5207")
        )
      )
      (feature-state-id "2ARS5204_RI" "D")
      (and
        (is-route-set "2ARS5204-D")
        (is-track-clear "2AT5210" "2AT5209")
      )
      (feature-state-id "2ARS5204_RI" "D")
      (and
        (is-route-set "2ARS5204-M")
        (and
          (is-track-clear "2AT5210")
          (is-track-clear "2AT5208" "2AT5206")
        )
      )
      (feature-state-id "2ARS5204_RI" "M")
      (and
        (is-route-set "2ARS5204-M")
        (is-track-clear "2AT5210")
      )
      (feature-state-id "2ARS5204_RI" "M")
      (feature-state-id "2ARS5204_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS5204_Signal"
    (case
      (and
        (is-route-set "2ARS5204-D")
        (and
          (is-track-clear "2AT5210" "2AT5209")
          (is-track-clear "2AT5207")
        )
      )
      (feature-state-id "2ARS5204_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5204-D")
        (is-track-clear "2AT5210" "2AT5209")
      )
      (feature-state-id "2ARS5204_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5204-D")
      )
      (feature-state-id "2ARS5204_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5204-M")
        (and
          (is-track-clear "2AT5210")
          (is-track-clear "2AT5208" "2AT5206")
        )
      )
      (feature-state-id "2ARS5204_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5204-M")
        (is-track-clear "2AT5210")
      )
      (feature-state-id "2ARS5204_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5204-M")
      )
      (feature-state-id "2ARS5204_Signal"
        "Red"
      )
      (feature-state-id "2ARS5204_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5205_RI"
    (case
      (and
        (is-route-set "2ARS5205-D")
        (and
          (is-track-clear "2AT5202" "2AT5220")
          (is-track-clear "2AT5222")
        )
      )
      (feature-state-id "2ARS5205_RI" "D")
      (and
        (is-route-set "2ARS5205-D")
        (is-track-clear "2AT5202" "2AT5220")
      )
      (feature-state-id "2ARS5205_RI" "D")
      (and
        (is-route-set "2ARS5205-M")
        (and
          (is-track-clear "2AT5202")
          (is-track-clear "2AT5204" "2AT5206")
        )
      )
      (feature-state-id "2ARS5205_RI" "M")
      (and
        (is-route-set "2ARS5205-M")
        (is-track-clear "2AT5202")
      )
      (feature-state-id "2ARS5205_RI" "M")
      (feature-state-id "2ARS5205_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS5205_Signal"
    (case
      (and
        (is-route-set "2ARS5205-D")
        (and
          (is-track-clear "2AT5202" "2AT5220")
          (is-track-clear "2AT5222")
        )
      )
      (feature-state-id "2ARS5205_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5205-D")
        (is-track-clear "2AT5202" "2AT5220")
      )
      (feature-state-id "2ARS5205_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5205-D")
      )
      (feature-state-id "2ARS5205_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5205-M")
        (and
          (is-track-clear "2AT5202")
          (is-track-clear "2AT5204" "2AT5206")
        )
      )
      (feature-state-id "2ARS5205_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5205-M")
        (is-track-clear "2AT5202")
      )
      (feature-state-id "2ARS5205_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5205-M")
      )
      (feature-state-id "2ARS5205_Signal"
        "Red"
      )
      (feature-state-id "2ARS5205_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5206_RI"
    (case
      (and
        (is-route-set "2ARS5206-D")
        (and
          (is-track-clear "2AT5204")
          (is-track-clear "2AT5202" "2AT5203" "2AT5201" "2AT5103" "2AT5101" "2AT5003" "2AT5001" "2AT4903" "2AT4901" "2AT4803" "2AT4801" "2AT4703" "2AT4701" "2AT4603" "2AT4601" "2AT4503" "2AT4501" "2AT4411")
        )
      )
      (feature-state-id "2ARS5206_RI" "D")
      (and
        (is-route-set "2ARS5206-D")
        (is-track-clear "2AT5204")
      )
      (feature-state-id "2ARS5206_RI" "D")
      (and
        (is-route-set "2ARS5206-M")
        (and
          (is-track-clear "2AT5204")
          (is-track-clear "2AT5202" "2AT5104" "2AT5102" "2AT5004" "2AT5002" "2AT4904" "2AT4902" "2AT4804" "2AT4802" "2AT4704" "2AT4702" "2AT4604" "2AT4602" "2AT4504" "2AT4502" "2AT4412")
        )
      )
      (feature-state-id "2ARS5206_RI" "M")
      (and
        (is-route-set "2ARS5206-M")
        (is-track-clear "2AT5204")
      )
      (feature-state-id "2ARS5206_RI" "M")
      (feature-state-id "2ARS5206_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS5206_Signal"
    (case
      (and
        (is-route-set "2ARS5206-D")
        (and
          (is-track-clear "2AT5204")
          (is-track-clear "2AT5202" "2AT5203" "2AT5201" "2AT5103" "2AT5101" "2AT5003" "2AT5001" "2AT4903" "2AT4901" "2AT4803" "2AT4801" "2AT4703" "2AT4701" "2AT4603" "2AT4601" "2AT4503" "2AT4501" "2AT4411")
        )
      )
      (feature-state-id "2ARS5206_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5206-D")
        (is-track-clear "2AT5204")
      )
      (feature-state-id "2ARS5206_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5206-D")
      )
      (feature-state-id "2ARS5206_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5206-M")
        (and
          (is-track-clear "2AT5204")
          (is-track-clear "2AT5202" "2AT5104" "2AT5102" "2AT5004" "2AT5002" "2AT4904" "2AT4902" "2AT4804" "2AT4802" "2AT4704" "2AT4702" "2AT4604" "2AT4602" "2AT4504" "2AT4502" "2AT4412")
        )
      )
      (feature-state-id "2ARS5206_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5206-M")
        (is-track-clear "2AT5204")
      )
      (feature-state-id "2ARS5206_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5206-M")
      )
      (feature-state-id "2ARS5206_Signal"
        "Red"
      )
      (feature-state-id "2ARS5206_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5207_RI"
    (case
      (and
        (is-route-set "2ARS5207-D")
        (and
          (is-track-clear "2AT5208" "2AT5226")
          (is-track-clear "2AT5228")
        )
      )
      (feature-state-id "2ARS5207_RI" "D")
      (and
        (is-route-set "2ARS5207-D")
        (is-track-clear "2AT5208" "2AT5226")
      )
      (feature-state-id "2ARS5207_RI" "D")
      (and
        (is-route-set "2ARS5207-M")
        (and
          (is-track-clear "2AT5208")
          (is-track-clear "2AT5210" "2AT5212")
        )
      )
      (feature-state-id "2ARS5207_RI" "M")
      (and
        (is-route-set "2ARS5207-M")
        (is-track-clear "2AT5208")
      )
      (feature-state-id "2ARS5207_RI" "M")
      (feature-state-id "2ARS5207_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS5207_Signal"
    (case
      (and
        (is-route-set "2ARS5207-D")
        (and
          (is-track-clear "2AT5208" "2AT5226")
          (is-track-clear "2AT5228")
        )
      )
      (feature-state-id "2ARS5207_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5207-D")
        (is-track-clear "2AT5208" "2AT5226")
      )
      (feature-state-id "2ARS5207_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5207-D")
      )
      (feature-state-id "2ARS5207_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5207-M")
        (and
          (is-track-clear "2AT5208")
          (is-track-clear "2AT5210" "2AT5212")
        )
      )
      (feature-state-id "2ARS5207_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5207-M")
        (is-track-clear "2AT5208")
      )
      (feature-state-id "2ARS5207_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5207-M")
      )
      (feature-state-id "2ARS5207_Signal"
        "Red"
      )
      (feature-state-id "2ARS5207_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5208_Signal"
    (case
      (and
        (is-route-set "2ARS5208-M")
        (and
          (is-track-clear "2AT5211")
          (is-track-clear "2AT5209" "2AT5207")
        )
      )
      (feature-state-id "2ARS5208_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5208-M")
        (is-track-clear "2AT5211")
      )
      (feature-state-id "2ARS5208_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5208-M")
      )
      (feature-state-id "2ARS5208_Signal"
        "Red"
      )
      (feature-state-id "2ARS5208_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5209_RI"
    (case
      (and
        (is-route-set "2ARS5209-S")
        (and
          (is-track-clear "2AT5214" "2AT5215")
          (is-track-clear "2AT5230" "2AT5232")
        )
      )
      (feature-state-id "2ARS5209_RI" "S")
      (and
        (is-route-set "2ARS5209-S")
        (is-track-clear "2AT5214" "2AT5215")
      )
      (feature-state-id "2ARS5209_RI" "S")
      (and
        (is-route-set "2ARS5209-D")
        (and
          (is-track-clear "2AT5214" "2AT5215")
          (is-track-clear "2AT5217" "2AT5219")
        )
      )
      (feature-state-id "2ARS5209_RI" "D")
      (and
        (is-route-set "2ARS5209-D")
        (is-track-clear "2AT5214" "2AT5215")
      )
      (feature-state-id "2ARS5209_RI" "D")
      (and
        (is-route-set "2ARS5209-M")
        (and
          (is-track-clear "2AT5214")
          (is-track-clear "2AT5216" "2AT5218" "2AT5302" "2AT5304" "2AT5502" "2AT5504" "2AT5602" "2AT5604" "2AT5702" "2AT5704" "2AT5802" "2AT5804" "2AT5902" "2AT5904")
        )
      )
      (feature-state-id "2ARS5209_RI" "M")
      (and
        (is-route-set "2ARS5209-M")
        (is-track-clear "2AT5214")
      )
      (feature-state-id "2ARS5209_RI" "M")
      (feature-state-id "2ARS5209_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS5209_Signal"
    (case
      (and
        (is-route-set "2ARS5209-S")
        (and
          (is-track-clear "2AT5214" "2AT5215")
          (is-track-clear "2AT5230" "2AT5232")
        )
      )
      (feature-state-id "2ARS5209_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5209-S")
        (is-track-clear "2AT5214" "2AT5215")
      )
      (feature-state-id "2ARS5209_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5209-S")
      )
      (feature-state-id "2ARS5209_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5209-D")
        (and
          (is-track-clear "2AT5214" "2AT5215")
          (is-track-clear "2AT5217" "2AT5219")
        )
      )
      (feature-state-id "2ARS5209_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5209-D")
        (is-track-clear "2AT5214" "2AT5215")
      )
      (feature-state-id "2ARS5209_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5209-D")
      )
      (feature-state-id "2ARS5209_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5209-M")
        (and
          (is-track-clear "2AT5214")
          (is-track-clear "2AT5216" "2AT5218" "2AT5302" "2AT5304" "2AT5502" "2AT5504" "2AT5602" "2AT5604" "2AT5702" "2AT5704" "2AT5802" "2AT5804" "2AT5902" "2AT5904")
        )
      )
      (feature-state-id "2ARS5209_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5209-M")
        (is-track-clear "2AT5214")
      )
      (feature-state-id "2ARS5209_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5209-M")
      )
      (feature-state-id "2ARS5209_Signal"
        "Red"
      )
      (feature-state-id "2ARS5209_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5210_Signal"
    (case
      (and
        (is-route-set "2ARS5210-M")
        (and
          (is-track-clear "2AT5205")
          (is-track-clear "2AT5203" "2AT5201" "2AT5103" "2AT5101" "2AT5003" "2AT5001" "2AT4903" "2AT4901" "2AT4803" "2AT4801" "2AT4703" "2AT4701" "2AT4603" "2AT4601" "2AT4503" "2AT4501" "2AT4411")
        )
      )
      (feature-state-id "2ARS5210_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5210-M")
        (is-track-clear "2AT5205")
      )
      (feature-state-id "2ARS5210_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5210-M")
      )
      (feature-state-id "2ARS5210_Signal"
        "Red"
      )
      (feature-state-id "2ARS5210_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5211_Signal"
    (case
      (and
        (is-route-set "2ARS5211-M")
        (and
          (is-track-clear "2AT5224")
          (is-track-clear "2AT5226" "2AT5228")
        )
      )
      (feature-state-id "2ARS5211_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5211-M")
        (is-track-clear "2AT5224")
      )
      (feature-state-id "2ARS5211_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5211-M")
      )
      (feature-state-id "2ARS5211_Signal"
        "Red"
      )
      (feature-state-id "2ARS5211_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5212_Signal"
    (case
      (and
        (is-track-clear "2AT5234")
      )
      (feature-state-id "2ARS5212_Signal"
        "Green"
      )
      (and 1)
      (feature-state-id "2ARS5212_Signal"
        "Red"
      )
      (feature-state-id "2ARS5212_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5213_Signal"
    (case
      (and
        (is-route-set "2ARS5213-M")
        (and
          (is-track-clear "2AT5230")
          (is-track-clear "2AT5232")
        )
      )
      (feature-state-id "2ARS5213_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5213-M")
        (is-track-clear "2AT5230")
      )
      (feature-state-id "2ARS5213_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5213-M")
      )
      (feature-state-id "2ARS5213_Signal"
        "Red"
      )
      (feature-state-id "2ARS5213_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5214_RI"
    (case
      (and
        (is-route-set "2ARS5214-S")
        (and
          (is-track-clear "2AT5232" "2AT5230")
          (is-track-clear "2AT5215" "2AT5214" "2AT5212")
        )
      )
      (feature-state-id "2ARS5214_RI" "S")
      (and
        (is-route-set "2ARS5214-S")
        (is-track-clear "2AT5232" "2AT5230")
      )
      (feature-state-id "2ARS5214_RI" "S")
      (and
        (is-route-set "2ARS5214-D")
        (and
          (is-track-clear "2AT5232" "2AT5230")
          (is-track-clear "2AT5215")
        )
      )
      (feature-state-id "2ARS5214_RI" "D")
      (and
        (is-route-set "2ARS5214-D")
        (is-track-clear "2AT5232" "2AT5230")
      )
      (feature-state-id "2ARS5214_RI" "D")
      (and
        (is-route-set "2ARS5214-M")
        (and
          (is-track-clear "2AT5232")
          (is-track-clear "2AT5230" "2AT5228")
        )
      )
      (feature-state-id "2ARS5214_RI" "M")
      (and
        (is-route-set "2ARS5214-M")
        (is-track-clear "2AT5232")
      )
      (feature-state-id "2ARS5214_RI" "M")
      (feature-state-id "2ARS5214_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS5214_Signal"
    (case
      (and
        (is-route-set "2ARS5214-S")
        (and
          (is-track-clear "2AT5232" "2AT5230")
          (is-track-clear "2AT5215" "2AT5214" "2AT5212")
        )
      )
      (feature-state-id "2ARS5214_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5214-S")
        (is-track-clear "2AT5232" "2AT5230")
      )
      (feature-state-id "2ARS5214_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5214-S")
      )
      (feature-state-id "2ARS5214_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5214-D")
        (and
          (is-track-clear "2AT5232" "2AT5230")
          (is-track-clear "2AT5215")
        )
      )
      (feature-state-id "2ARS5214_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5214-D")
        (is-track-clear "2AT5232" "2AT5230")
      )
      (feature-state-id "2ARS5214_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5214-D")
      )
      (feature-state-id "2ARS5214_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5214-M")
        (and
          (is-track-clear "2AT5232")
          (is-track-clear "2AT5230" "2AT5228")
        )
      )
      (feature-state-id "2ARS5214_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5214-M")
        (is-track-clear "2AT5232")
      )
      (feature-state-id "2ARS5214_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5214-M")
      )
      (feature-state-id "2ARS5214_Signal"
        "Red"
      )
      (feature-state-id "2ARS5214_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5216_RI"
    (case
      (and
        (is-route-set "2ARS5216-D")
        (and
          (is-track-clear "2AT5226" "2AT5208")
          (is-track-clear "2AT5206")
        )
      )
      (feature-state-id "2ARS5216_RI" "D")
      (and
        (is-route-set "2ARS5216-D")
        (is-track-clear "2AT5226" "2AT5208")
      )
      (feature-state-id "2ARS5216_RI" "D")
      (and
        (is-route-set "2ARS5216-M")
        (and
          (is-track-clear "2AT5226")
          (is-track-clear "2AT5224" "2AT5222")
        )
      )
      (feature-state-id "2ARS5216_RI" "M")
      (and
        (is-route-set "2ARS5216-M")
        (is-track-clear "2AT5226")
      )
      (feature-state-id "2ARS5216_RI" "M")
      (feature-state-id "2ARS5216_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS5216_Signal"
    (case
      (and
        (is-route-set "2ARS5216-D")
        (and
          (is-track-clear "2AT5226" "2AT5208")
          (is-track-clear "2AT5206")
        )
      )
      (feature-state-id "2ARS5216_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5216-D")
        (is-track-clear "2AT5226" "2AT5208")
      )
      (feature-state-id "2ARS5216_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5216-D")
      )
      (feature-state-id "2ARS5216_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5216-M")
        (and
          (is-track-clear "2AT5226")
          (is-track-clear "2AT5224" "2AT5222")
        )
      )
      (feature-state-id "2ARS5216_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5216-M")
        (is-track-clear "2AT5226")
      )
      (feature-state-id "2ARS5216_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5216-M")
      )
      (feature-state-id "2ARS5216_Signal"
        "Red"
      )
      (feature-state-id "2ARS5216_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5218_RI"
    (case
      (and
        (is-route-set "2ARS5218-S")
        (and
          (is-track-clear "2AT5220" "2AT5202")
          (is-track-clear "2AT5203" "2AT5201" "2AT5103" "2AT5101" "2AT5003" "2AT5001" "2AT4903" "2AT4901" "2AT4803" "2AT4801" "2AT4703" "2AT4701" "2AT4603" "2AT4601" "2AT4503" "2AT4501" "2AT4411")
        )
      )
      (feature-state-id "2ARS5218_RI" "S")
      (and
        (is-route-set "2ARS5218-S")
        (is-track-clear "2AT5220" "2AT5202")
      )
      (feature-state-id "2ARS5218_RI" "S")
      (and
        (is-route-set "2ARS5218-D")
        (and
          (is-track-clear "2AT5220" "2AT5202")
          (is-track-clear "2AT5104" "2AT5102" "2AT5004" "2AT5002" "2AT4904" "2AT4902" "2AT4804" "2AT4802" "2AT4704" "2AT4702" "2AT4604" "2AT4602" "2AT4504" "2AT4502" "2AT4412")
        )
      )
      (feature-state-id "2ARS5218_RI" "D")
      (and
        (is-route-set "2ARS5218-D")
        (is-track-clear "2AT5220" "2AT5202")
      )
      (feature-state-id "2ARS5218_RI" "D")
      (and
        (is-route-set "2ARS5218-M")
        (is-track-clear "2AT5220")
      )
      (feature-state-id "2ARS5218_RI" "M")
      (feature-state-id "2ARS5218_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS5218_Signal"
    (case
      (and
        (is-route-set "2ARS5218-S")
        (and
          (is-track-clear "2AT5220" "2AT5202")
          (is-track-clear "2AT5203" "2AT5201" "2AT5103" "2AT5101" "2AT5003" "2AT5001" "2AT4903" "2AT4901" "2AT4803" "2AT4801" "2AT4703" "2AT4701" "2AT4603" "2AT4601" "2AT4503" "2AT4501" "2AT4411")
        )
      )
      (feature-state-id "2ARS5218_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5218-S")
        (is-track-clear "2AT5220" "2AT5202")
      )
      (feature-state-id "2ARS5218_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5218-S")
      )
      (feature-state-id "2ARS5218_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5218-D")
        (and
          (is-track-clear "2AT5220" "2AT5202")
          (is-track-clear "2AT5104" "2AT5102" "2AT5004" "2AT5002" "2AT4904" "2AT4902" "2AT4804" "2AT4802" "2AT4704" "2AT4702" "2AT4604" "2AT4602" "2AT4504" "2AT4502" "2AT4412")
        )
      )
      (feature-state-id "2ARS5218_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5218-D")
        (is-track-clear "2AT5220" "2AT5202")
      )
      (feature-state-id "2ARS5218_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5218-D")
      )
      (feature-state-id "2ARS5218_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5218-M")
        (is-track-clear "2AT5220")
      )
      (feature-state-id "2ARS5218_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5218-M")
      )
      (feature-state-id "2ARS5218_Signal"
        "Red"
      )
      (feature-state-id "2ARS5218_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5220_Signal"
    (case
      (and
        (is-track-clear "2AT5219")
      )
      (feature-state-id "2ARS5220_Signal"
        "Green"
      )
      (and 1)
      (feature-state-id "2ARS5220_Signal"
        "Red"
      )
      (feature-state-id "2ARS5220_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS5222_RI"
    (case
      (and
        (is-route-set "2ARS5222-S")
        (and
          (is-track-clear "2AT5217")
          (is-track-clear "2AT5215" "2AT5214" "2AT5212" "2AT5210" "2AT5209" "2AT5207")
        )
      )
      (feature-state-id "2ARS5222_RI" "S")
      (and
        (is-route-set "2ARS5222-S")
        (is-track-clear "2AT5217")
      )
      (feature-state-id "2ARS5222_RI" "S")
      (and
        (is-route-set "2ARS5222-D")
        (and
          (is-track-clear "2AT5217")
          (is-track-clear "2AT5215" "2AT5214" "2AT5212")
        )
      )
      (feature-state-id "2ARS5222_RI" "D")
      (and
        (is-route-set "2ARS5222-D")
        (is-track-clear "2AT5217")
      )
      (feature-state-id "2ARS5222_RI" "D")
      (and
        (is-route-set "2ARS5222-M")
        (and
          (is-track-clear "2AT5217")
          (is-track-clear "2AT5215")
        )
      )
      (feature-state-id "2ARS5222_RI" "M")
      (and
        (is-route-set "2ARS5222-M")
        (is-track-clear "2AT5217")
      )
      (feature-state-id "2ARS5222_RI" "M")
      (feature-state-id "2ARS5222_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS5222_Signal"
    (case
      (and
        (is-route-set "2ARS5222-S")
        (and
          (is-track-clear "2AT5217")
          (is-track-clear "2AT5215" "2AT5214" "2AT5212" "2AT5210" "2AT5209" "2AT5207")
        )
      )
      (feature-state-id "2ARS5222_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5222-S")
        (is-track-clear "2AT5217")
      )
      (feature-state-id "2ARS5222_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5222-S")
      )
      (feature-state-id "2ARS5222_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5222-D")
        (and
          (is-track-clear "2AT5217")
          (is-track-clear "2AT5215" "2AT5214" "2AT5212")
        )
      )
      (feature-state-id "2ARS5222_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5222-D")
        (is-track-clear "2AT5217")
      )
      (feature-state-id "2ARS5222_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5222-D")
      )
      (feature-state-id "2ARS5222_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS5222-M")
        (and
          (is-track-clear "2AT5217")
          (is-track-clear "2AT5215")
        )
      )
      (feature-state-id "2ARS5222_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS5222-M")
        (is-track-clear "2AT5217")
      )
      (feature-state-id "2ARS5222_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS5222-M")
      )
      (feature-state-id "2ARS5222_Signal"
        "Red"
      )
      (feature-state-id "2ARS5222_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS6001_RI"
    (case
      (and
        (is-route-set "2ARS6001-D")
        (and
          (is-track-clear "2AT6001")
          (is-track-clear "2AT6003" "2AT6004" "2AT6006" "2AT6008")
        )
      )
      (feature-state-id "2ARS6001_RI" "D")
      (and
        (is-route-set "2ARS6001-D")
        (is-track-clear "2AT6001")
      )
      (feature-state-id "2ARS6001_RI" "D")
      (and
        (is-route-set "2ARS6001-M")
        (and
          (is-track-clear "2AT6001")
          (is-track-clear "2AT6003" "2AT6005" "2AT6007")
        )
      )
      (feature-state-id "2ARS6001_RI" "M")
      (and
        (is-route-set "2ARS6001-M")
        (is-track-clear "2AT6001")
      )
      (feature-state-id "2ARS6001_RI" "M")
      (feature-state-id "2ARS6001_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS6001_Signal"
    (case
      (and
        (is-route-set "2ARS6001-D")
        (and
          (is-track-clear "2AT6001")
          (is-track-clear "2AT6003" "2AT6004" "2AT6006" "2AT6008")
        )
      )
      (feature-state-id "2ARS6001_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6001-D")
        (is-track-clear "2AT6001")
      )
      (feature-state-id "2ARS6001_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6001-D")
      )
      (feature-state-id "2ARS6001_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS6001-M")
        (and
          (is-track-clear "2AT6001")
          (is-track-clear "2AT6003" "2AT6005" "2AT6007")
        )
      )
      (feature-state-id "2ARS6001_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6001-M")
        (is-track-clear "2AT6001")
      )
      (feature-state-id "2ARS6001_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6001-M")
      )
      (feature-state-id "2ARS6001_Signal"
        "Red"
      )
      (feature-state-id "2ARS6001_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS6002_Signal"
    (case
      (and
        (is-route-set "2ARS6002-M")
        (and
          (is-track-clear "2AT6012" "2AT6011")
          (is-track-clear "2AT6010" "2AT6008")
        )
      )
      (feature-state-id "2ARS6002_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6002-M")
        (is-track-clear "2AT6012" "2AT6011")
      )
      (feature-state-id "2ARS6002_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6002-M")
      )
      (feature-state-id "2ARS6002_Signal"
        "Red"
      )
      (feature-state-id "2ARS6002_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS6003_Signal"
    (case
      (and
        (is-route-set "2ARS6003-M")
        (and
          (is-track-clear "2AT6009")
          (is-track-clear "2AT6011" "2AT6013" "2AT6012")
        )
      )
      (feature-state-id "2ARS6003_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6003-M")
        (is-track-clear "2AT6009")
      )
      (feature-state-id "2ARS6003_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6003-M")
      )
      (feature-state-id "2ARS6003_Signal"
        "Red"
      )
      (feature-state-id "2ARS6003_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS6004_RI"
    (case
      (and
        (is-route-set "2ARS6004-D")
        (and
          (is-track-clear "2AT6006")
          (is-track-clear "2AT6004" "2AT6003" "2AT6001" "2AT5903" "2AT5901" "2AT5803" "2AT5801" "2AT5703" "2AT5701" "2AT5603" "2AT5601" "2AT5503" "2AT5501" "2AT5403" "2AT5401" "2AT5303" "2AT5301" "2AT5213")
        )
      )
      (feature-state-id "2ARS6004_RI" "D")
      (and
        (is-route-set "2ARS6004-D")
        (is-track-clear "2AT6006")
      )
      (feature-state-id "2ARS6004_RI" "D")
      (and
        (is-route-set "2ARS6004-M")
        (and
          (is-track-clear "2AT6006")
          (is-track-clear "2AT6004" "2AT6003" "2AT6002" "2AT5904" "2AT5902" "2AT5804" "2AT5802" "2AT5704" "2AT5702" "2AT5604" "2AT5602" "2AT5504" "2AT5502" "2AT5404" "2AT5402" "2AT5304" "2AT5302" "2AT5218")
        )
      )
      (feature-state-id "2ARS6004_RI" "M")
      (and
        (is-route-set "2ARS6004-M")
        (is-track-clear "2AT6006")
      )
      (feature-state-id "2ARS6004_RI" "M")
      (feature-state-id "2ARS6004_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS6004_Signal"
    (case
      (and
        (is-route-set "2ARS6004-D")
        (and
          (is-track-clear "2AT6006")
          (is-track-clear "2AT6004" "2AT6003" "2AT6001" "2AT5903" "2AT5901" "2AT5803" "2AT5801" "2AT5703" "2AT5701" "2AT5603" "2AT5601" "2AT5503" "2AT5501" "2AT5403" "2AT5401" "2AT5303" "2AT5301" "2AT5213")
        )
      )
      (feature-state-id "2ARS6004_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6004-D")
        (is-track-clear "2AT6006")
      )
      (feature-state-id "2ARS6004_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6004-D")
      )
      (feature-state-id "2ARS6004_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS6004-M")
        (and
          (is-track-clear "2AT6006")
          (is-track-clear "2AT6004" "2AT6003" "2AT6002" "2AT5904" "2AT5902" "2AT5804" "2AT5802" "2AT5704" "2AT5702" "2AT5604" "2AT5602" "2AT5504" "2AT5502" "2AT5404" "2AT5402" "2AT5304" "2AT5302" "2AT5218")
        )
      )
      (feature-state-id "2ARS6004_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6004-M")
        (is-track-clear "2AT6006")
      )
      (feature-state-id "2ARS6004_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6004-M")
      )
      (feature-state-id "2ARS6004_Signal"
        "Red"
      )
      (feature-state-id "2ARS6004_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS6005_Signal"
    (case
      (and
        (is-route-set "2ARS6005-M")
        (and
          (is-track-clear "2AT6002")
          (is-track-clear "2AT6004" "2AT6006" "2AT6008")
        )
      )
      (feature-state-id "2ARS6005_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6005-M")
        (is-track-clear "2AT6002")
      )
      (feature-state-id "2ARS6005_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6005-M")
      )
      (feature-state-id "2ARS6005_Signal"
        "Red"
      )
      (feature-state-id "2ARS6005_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS6006_RI"
    (case
      (and
        (is-route-set "2ARS6006-D")
        (and
          (is-track-clear "2AT6011" "2AT6012")
          (is-track-clear "2AT6010" "2AT6008")
        )
      )
      (feature-state-id "2ARS6006_RI" "D")
      (and
        (is-route-set "2ARS6006-D")
        (is-track-clear "2AT6011" "2AT6012")
      )
      (feature-state-id "2ARS6006_RI" "D")
      (and
        (is-route-set "2ARS6006-M")
        (and
          (is-track-clear "2AT6011" "2AT6012")
          (is-track-clear "2AT6009" "2AT6007")
        )
      )
      (feature-state-id "2ARS6006_RI" "M")
      (and
        (is-route-set "2ARS6006-M")
        (is-track-clear "2AT6011" "2AT6012")
      )
      (feature-state-id "2ARS6006_RI" "M")
      (feature-state-id "2ARS6006_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS6006_Signal"
    (case
      (and
        (is-route-set "2ARS6006-D")
        (and
          (is-track-clear "2AT6011" "2AT6012")
          (is-track-clear "2AT6010" "2AT6008")
        )
      )
      (feature-state-id "2ARS6006_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6006-D")
        (is-track-clear "2AT6011" "2AT6012")
      )
      (feature-state-id "2ARS6006_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6006-D")
      )
      (feature-state-id "2ARS6006_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS6006-M")
        (and
          (is-track-clear "2AT6011" "2AT6012")
          (is-track-clear "2AT6009" "2AT6007")
        )
      )
      (feature-state-id "2ARS6006_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6006-M")
        (is-track-clear "2AT6011" "2AT6012")
      )
      (feature-state-id "2ARS6006_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6006-M")
      )
      (feature-state-id "2ARS6006_Signal"
        "Red"
      )
      (feature-state-id "2ARS6006_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS6007_RI"
    (case
      (and
        (is-route-set "2ARS6007-D")
        (and
          (is-track-clear "2AT6010")
          (is-track-clear "2AT6012" "2AT6011" "2AT6013")
        )
      )
      (feature-state-id "2ARS6007_RI" "D")
      (and
        (is-route-set "2ARS6007-D")
        (is-track-clear "2AT6010")
      )
      (feature-state-id "2ARS6007_RI" "D")
      (and
        (is-route-set "2ARS6007-M")
        (and
          (is-track-clear "2AT6010")
          (is-track-clear "2AT6012" "2AT6014" "2AT6011")
        )
      )
      (feature-state-id "2ARS6007_RI" "M")
      (and
        (is-route-set "2ARS6007-M")
        (is-track-clear "2AT6010")
      )
      (feature-state-id "2ARS6007_RI" "M")
      (feature-state-id "2ARS6007_RI" "Off")
    )
  )
  (set-feature-automatic-state "2ARS6007_Signal"
    (case
      (and
        (is-route-set "2ARS6007-D")
        (and
          (is-track-clear "2AT6010")
          (is-track-clear "2AT6012" "2AT6011" "2AT6013")
        )
      )
      (feature-state-id "2ARS6007_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6007-D")
        (is-track-clear "2AT6010")
      )
      (feature-state-id "2ARS6007_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6007-D")
      )
      (feature-state-id "2ARS6007_Signal"
        "Red"
      )
      (and
        (is-route-set "2ARS6007-M")
        (and
          (is-track-clear "2AT6010")
          (is-track-clear "2AT6012" "2AT6014" "2AT6011")
        )
      )
      (feature-state-id "2ARS6007_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6007-M")
        (is-track-clear "2AT6010")
      )
      (feature-state-id "2ARS6007_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6007-M")
      )
      (feature-state-id "2ARS6007_Signal"
        "Red"
      )
      (feature-state-id "2ARS6007_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS6008_Signal"
    (case
      (and
        (is-route-set "2ARS6008-M")
        (and
          (is-track-clear "2AT6005")
          (is-track-clear "2AT6003" "2AT6001" "2AT5903" "2AT5901" "2AT5803" "2AT5801" "2AT5703" "2AT5701" "2AT5603" "2AT5601" "2AT5503" "2AT5501" "2AT5403" "2AT5401" "2AT5303" "2AT5301" "2AT5213")
        )
      )
      (feature-state-id "2ARS6008_Signal"
        "Green"
      )
      (and
        (is-route-set "2ARS6008-M")
        (is-track-clear "2AT6005")
      )
      (feature-state-id "2ARS6008_Signal"
        "Violet"
      )
      (and
        (is-route-set "2ARS6008-M")
      )
      (feature-state-id "2ARS6008_Signal"
        "Red"
      )
      (feature-state-id "2ARS6008_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "2ARS9101_Signal"
    (case
      (and 1)
      (feature-state-id "2ARS9101_Signal"
        "Off"
      )
      (feature-state-id "2ARS9101_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9002_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9002_Signal"
        "Off"
      )
      (feature-state-id "2ASH9002_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9902_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9902_Signal"
        "Off"
      )
      (feature-state-id "2ASH9902_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9904_Signal"
    (case
      (and
        (is-track-clear "2AT9906" "2AT9904" "2AT9902A" "2AT9902")
      )
      (feature-state-id "2ASH9904_Signal"
        "Off"
      )
      (feature-state-id "2ASH9904_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9905_Signal"
    (case
      (and
        (is-track-clear "2AT9903" "2AT9905" "2AT9907" "2AT9939")
      )
      (feature-state-id "2ASH9905_Signal"
        "Off"
      )
      (feature-state-id "2ASH9905_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9906_Signal"
    (case
      (and
        (is-track-clear "2AT9905" "2AT9903" "2AT9901A" "2AT9901")
      )
      (feature-state-id "2ASH9906_Signal"
        "Off"
      )
      (feature-state-id "2ASH9906_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9907_Signal"
    (case
      (and
        (is-track-clear "2AT9902A" "2AT9904" "2AT9906" "2AT9908" "2AT9934" "2AT9931" "2AT9909" "2AT9920" "2AT9926" "2AT9929" "2AT9932" "2AT9933" "2AT9935" "2AT9936" "2AT9938")
      )
      (feature-state-id "2ASH9907_Signal"
        "Off"
      )
      (feature-state-id "2ASH9907_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9909_Signal"
    (case
      (and
        (is-track-clear "2AT9907" "2AT9939" "2AT9940" "2AT9956" "2AT9941" "2AT9942" "2AT9943" "2AT9944" "2AT9945" "2AT9946" "2AT9947" "2AT9948" "2AT9957" "2AT9958" "2AT9950" "2AT9951" "2AT9952" "2AT9953")
      )
      (feature-state-id "2ASH9909_Signal"
        "Off"
      )
      (feature-state-id "2ASH9909_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9912_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9912_Signal"
        "Off"
      )
      (feature-state-id "2ASH9912_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9914_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9914_Signal"
        "Off"
      )
      (feature-state-id "2ASH9914_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9916_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9916_Signal"
        "Off"
      )
      (feature-state-id "2ASH9916_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9918_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9918_Signal"
        "Off"
      )
      (feature-state-id "2ASH9918_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9920_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9920_Signal"
        "Off"
      )
      (feature-state-id "2ASH9920_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9922_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9922_Signal"
        "Off"
      )
      (feature-state-id "2ASH9922_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9924_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9924_Signal"
        "Off"
      )
      (feature-state-id "2ASH9924_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9926_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9926_Signal"
        "Off"
      )
      (feature-state-id "2ASH9926_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9928_Signal"
    (case
      (and
        (is-track-clear "2AT9930" "2AT9929" "2AT9920" "2AT9908" "2AT9906" "2AT9906" "2AT9904")
      )
      (feature-state-id "2ASH9928_Signal"
        "Off"
      )
      (feature-state-id "2ASH9928_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9930_Signal"
    (case
      (and
        (is-track-clear "2AT9932" "2AT9931" "2AT9908" "2AT9906" "2AT9906" "2AT9904")
      )
      (feature-state-id "2ASH9930_Signal"
        "Off"
      )
      (feature-state-id "2ASH9930_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9932_Signal"
    (case
      (and
        (is-track-clear "2AT9933" "2AT9931" "2AT9908" "2AT9906" "2AT9906" "2AT9904")
      )
      (feature-state-id "2ASH9932_Signal"
        "Off"
      )
      (feature-state-id "2ASH9932_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9934_Signal"
    (case
      (and
        (is-track-clear "2AT9935" "2AT9934" "2AT9908" "2AT9906" "2AT9906" "2AT9904")
      )
      (feature-state-id "2ASH9934_Signal"
        "Off"
      )
      (feature-state-id "2ASH9934_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9936_Signal"
    (case
      (and
        (is-track-clear "2AT9936" "2AT9934" "2AT9908" "2AT9906" "2AT9906" "2AT9904")
      )
      (feature-state-id "2ASH9936_Signal"
        "Off"
      )
      (feature-state-id "2ASH9936_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9938_Signal"
    (case
      (and
        (is-track-clear "2AT9938" "2AT9934" "2AT9908" "2AT9906" "2AT9906" "2AT9904")
      )
      (feature-state-id "2ASH9938_Signal"
        "Off"
      )
      (feature-state-id "2ASH9938_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9940_Signal"
    (case
      (and
        (is-track-clear "2AT9941" "2AT9956" "2AT9940" "2AT9939" "2AT9907" "2AT9905" "2AT9903")
      )
      (feature-state-id "2ASH9940_Signal"
        "Off"
      )
      (feature-state-id "2ASH9940_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9942_Signal"
    (case
      (and
        (is-track-clear "2AT9942" "2AT9956" "2AT9940" "2AT9939" "2AT9907" "2AT9905" "2AT9903")
      )
      (feature-state-id "2ASH9942_Signal"
        "Off"
      )
      (feature-state-id "2ASH9942_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9944_Signal"
    (case
      (and
        (is-track-clear "2AT9943" "2AT9940" "2AT9939" "2AT9907" "2AT9905" "2AT9903")
      )
      (feature-state-id "2ASH9944_Signal"
        "Off"
      )
      (feature-state-id "2ASH9944_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9946_Signal"
    (case
      (and
        (is-track-clear "2AT9944" "2AT9940" "2AT9939" "2AT9907" "2AT9905" "2AT9903")
      )
      (feature-state-id "2ASH9946_Signal"
        "Off"
      )
      (feature-state-id "2ASH9946_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9948_Signal"
    (case
      (and
        (is-track-clear "2AT9945" "2AT9940" "2AT9939" "2AT9907" "2AT9905" "2AT9903")
      )
      (feature-state-id "2ASH9948_Signal"
        "Off"
      )
      (feature-state-id "2ASH9948_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9950_Signal"
    (case
      (and
        (is-track-clear "2AT9947" "2AT9946" "2AT9940" "2AT9939" "2AT9907" "2AT9905" "2AT9903")
      )
      (feature-state-id "2ASH9950_Signal"
        "Off"
      )
      (feature-state-id "2ASH9950_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9952_Signal"
    (case
      (and
        (is-track-clear "2AT9948" "2AT9957" "2AT9958" "2AT9946" "2AT9940" "2AT9939" "2AT9907" "2AT9905" "2AT9903")
      )
      (feature-state-id "2ASH9952_Signal"
        "Off"
      )
      (feature-state-id "2ASH9952_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9954_Signal"
    (case
      (and
        (is-track-clear "2AT9949" "2AT9958" "2AT9946" "2AT9940" "2AT9939" "2AT9907" "2AT9905" "2AT9903")
      )
      (feature-state-id "2ASH9954_Signal"
        "Off"
      )
      (feature-state-id "2ASH9954_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9956_Signal"
    (case
      (and
        (is-track-clear "2AT9956" "2AT9950" "2AT9939" "2AT9907" "2AT9905" "2AT9903")
      )
      (feature-state-id "2ASH9956_Signal"
        "Off"
      )
      (feature-state-id "2ASH9956_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9958_Signal"
    (case
      (and
        (is-track-clear "2AT9952" "2AT9950" "2AT9939" "2AT9907" "2AT9905" "2AT9903")
      )
      (feature-state-id "2ASH9958_Signal"
        "Off"
      )
      (feature-state-id "2ASH9958_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9960_Signal"
    (case
      (and
        (is-track-clear "2AT9953" "2AT9950" "2AT9939" "2AT9907" "2AT9905" "2AT9903")
      )
      (feature-state-id "2ASH9960_Signal"
        "Off"
      )
      (feature-state-id "2ASH9960_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9962_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9962_Signal"
        "Off"
      )
      (feature-state-id "2ASH9962_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "2ASH9964_Signal"
    (case
      (and 1)
      (feature-state-id "2ASH9964_Signal"
        "Off"
      )
      (feature-state-id "2ASH9964_Signal"
        "Off"
      )
    )
  )
  (set-feature-automatic-state "7RS3101_RI"
    (case
      (and
        (is-route-set "7RS3101-D")
        (and
          (is-track-clear "7T3103" "7T3104")
          (is-track-clear "7T3106" "7T3108")
        )
      )
      (feature-state-id "7RS3101_RI" "D")
      (and
        (is-route-set "7RS3101-D")
        (is-track-clear "7T3103" "7T3104")
      )
      (feature-state-id "7RS3101_RI" "D")
      (and
        (is-route-set "7RS3101-M")
        (and
          (is-track-clear "7T3103")
          (is-track-clear "7T3105" "7T3107")
        )
      )
      (feature-state-id "7RS3101_RI" "M")
      (and
        (is-route-set "7RS3101-M")
        (is-track-clear "7T3103")
      )
      (feature-state-id "7RS3101_RI" "M")
      (feature-state-id "7RS3101_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS3101_Signal"
    (case
      (and
        (is-route-set "7RS3101-D")
        (and
          (is-track-clear "7T3103" "7T3104")
          (is-track-clear "7T3106" "7T3108")
        )
      )
      (feature-state-id "7RS3101_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3101-D")
        (is-track-clear "7T3103" "7T3104")
      )
      (feature-state-id "7RS3101_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3101-D")
      )
      (feature-state-id "7RS3101_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS3101-M")
        (and
          (is-track-clear "7T3103")
          (is-track-clear "7T3105" "7T3107")
        )
      )
      (feature-state-id "7RS3101_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3101-M")
        (is-track-clear "7T3103")
      )
      (feature-state-id "7RS3101_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3101-M")
      )
      (feature-state-id "7RS3101_Signal"
        "Red"
      )
      (feature-state-id "7RS3101_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3102_RI"
    (case
      (and
        (is-route-set "7RS3102-D")
        (and
          (is-track-clear "7T3114")
          (is-track-clear "7T3112" "7T3111" "7T3109" "7T3107")
        )
      )
      (feature-state-id "7RS3102_RI" "D")
      (and
        (is-route-set "7RS3102-D")
        (is-track-clear "7T3114")
      )
      (feature-state-id "7RS3102_RI" "D")
      (and
        (is-route-set "7RS3102-M")
        (and
          (is-track-clear "7T3114")
          (is-track-clear "7T3112" "7T3110" "7T3108")
        )
      )
      (feature-state-id "7RS3102_RI" "M")
      (and
        (is-route-set "7RS3102-M")
        (is-track-clear "7T3114")
      )
      (feature-state-id "7RS3102_RI" "M")
      (feature-state-id "7RS3102_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS3102_Signal"
    (case
      (and
        (is-route-set "7RS3102-D")
        (and
          (is-track-clear "7T3114")
          (is-track-clear "7T3112" "7T3111" "7T3109" "7T3107")
        )
      )
      (feature-state-id "7RS3102_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3102-D")
        (is-track-clear "7T3114")
      )
      (feature-state-id "7RS3102_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3102-D")
      )
      (feature-state-id "7RS3102_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS3102-M")
        (and
          (is-track-clear "7T3114")
          (is-track-clear "7T3112" "7T3110" "7T3108")
        )
      )
      (feature-state-id "7RS3102_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3102-M")
        (is-track-clear "7T3114")
      )
      (feature-state-id "7RS3102_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3102-M")
      )
      (feature-state-id "7RS3102_Signal"
        "Red"
      )
      (feature-state-id "7RS3102_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3103_RI"
    (case
      (and
        (is-route-set "7RS3103-D")
        (and
          (is-track-clear "7T3109")
          (is-track-clear "7T3111" "7T3112" "7T3114" "7T3116" "7T3202" "7T3204" "7T3302" "7T3302A" "7T3402" "7T3404" "7T3406")
        )
      )
      (feature-state-id "7RS3103_RI" "D")
      (and
        (is-route-set "7RS3103-D")
        (is-track-clear "7T3109")
      )
      (feature-state-id "7RS3103_RI" "D")
      (and
        (is-route-set "7RS3103-M")
        (and
          (is-track-clear "7T3109")
          (is-track-clear "7T3111" "7T3113" "7T3201" "7T3203" "7T3301" "7T3301A" "7T3401" "7T3403" "7T3405")
        )
      )
      (feature-state-id "7RS3103_RI" "M")
      (and
        (is-route-set "7RS3103-M")
        (is-track-clear "7T3109")
      )
      (feature-state-id "7RS3103_RI" "M")
      (feature-state-id "7RS3103_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS3103_Signal"
    (case
      (and
        (is-route-set "7RS3103-D")
        (and
          (is-track-clear "7T3109")
          (is-track-clear "7T3111" "7T3112" "7T3114" "7T3116" "7T3202" "7T3204" "7T3302" "7T3302A" "7T3402" "7T3404" "7T3406")
        )
      )
      (feature-state-id "7RS3103_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3103-D")
        (is-track-clear "7T3109")
      )
      (feature-state-id "7RS3103_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3103-D")
      )
      (feature-state-id "7RS3103_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS3103-M")
        (and
          (is-track-clear "7T3109")
          (is-track-clear "7T3111" "7T3113" "7T3201" "7T3203" "7T3301" "7T3301A" "7T3401" "7T3403" "7T3405")
        )
      )
      (feature-state-id "7RS3103_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3103-M")
        (is-track-clear "7T3109")
      )
      (feature-state-id "7RS3103_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3103-M")
      )
      (feature-state-id "7RS3103_Signal"
        "Red"
      )
      (feature-state-id "7RS3103_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3104_RI"
    (case
      (and
        (is-route-set "7RS3104-D")
        (and
          (is-track-clear "7T3106")
          (is-track-clear "7T3104" "7T3103" "7T3101")
        )
      )
      (feature-state-id "7RS3104_RI" "D")
      (and
        (is-route-set "7RS3104-D")
        (is-track-clear "7T3106")
      )
      (feature-state-id "7RS3104_RI" "D")
      (and
        (is-route-set "7RS3104-M")
        (and
          (is-track-clear "7T3106")
          (is-track-clear "7T3104" "7T3102")
        )
      )
      (feature-state-id "7RS3104_RI" "M")
      (and
        (is-route-set "7RS3104-M")
        (is-track-clear "7T3106")
      )
      (feature-state-id "7RS3104_RI" "M")
      (feature-state-id "7RS3104_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS3104_Signal"
    (case
      (and
        (is-route-set "7RS3104-D")
        (and
          (is-track-clear "7T3106")
          (is-track-clear "7T3104" "7T3103" "7T3101")
        )
      )
      (feature-state-id "7RS3104_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3104-D")
        (is-track-clear "7T3106")
      )
      (feature-state-id "7RS3104_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3104-D")
      )
      (feature-state-id "7RS3104_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS3104-M")
        (and
          (is-track-clear "7T3106")
          (is-track-clear "7T3104" "7T3102")
        )
      )
      (feature-state-id "7RS3104_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3104-M")
        (is-track-clear "7T3106")
      )
      (feature-state-id "7RS3104_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3104-M")
      )
      (feature-state-id "7RS3104_Signal"
        "Red"
      )
      (feature-state-id "7RS3104_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3105_RI"
    (case
      (and
        (is-route-set "7RS3105-D")
        (and
          (is-track-clear "7T3104" "7T3103")
          (is-track-clear "7T3105" "7T3107")
        )
      )
      (feature-state-id "7RS3105_RI" "D")
      (and
        (is-route-set "7RS3105-D")
        (is-track-clear "7T3104" "7T3103")
      )
      (feature-state-id "7RS3105_RI" "D")
      (and
        (is-route-set "7RS3105-M")
        (and
          (is-track-clear "7T3104")
          (is-track-clear "7T3106" "7T3108")
        )
      )
      (feature-state-id "7RS3105_RI" "M")
      (and
        (is-route-set "7RS3105-M")
        (is-track-clear "7T3104")
      )
      (feature-state-id "7RS3105_RI" "M")
      (feature-state-id "7RS3105_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS3105_Signal"
    (case
      (and
        (is-route-set "7RS3105-D")
        (and
          (is-track-clear "7T3104" "7T3103")
          (is-track-clear "7T3105" "7T3107")
        )
      )
      (feature-state-id "7RS3105_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3105-D")
        (is-track-clear "7T3104" "7T3103")
      )
      (feature-state-id "7RS3105_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3105-D")
      )
      (feature-state-id "7RS3105_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS3105-M")
        (and
          (is-track-clear "7T3104")
          (is-track-clear "7T3106" "7T3108")
        )
      )
      (feature-state-id "7RS3105_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3105-M")
        (is-track-clear "7T3104")
      )
      (feature-state-id "7RS3105_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3105-M")
      )
      (feature-state-id "7RS3105_Signal"
        "Red"
      )
      (feature-state-id "7RS3105_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3106_Signal"
    (case
      (and
        (is-route-set "7RS3106-M")
        (and
          (is-track-clear "7T3111")
          (is-track-clear "7T3109" "7T3107")
        )
      )
      (feature-state-id "7RS3106_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3106-M")
        (is-track-clear "7T3111")
      )
      (feature-state-id "7RS3106_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3106-M")
      )
      (feature-state-id "7RS3106_Signal"
        "Red"
      )
      (feature-state-id "7RS3106_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3107_Signal"
    (case
      (and
        (is-route-set "7RS3107-M")
        (and
          (is-track-clear "7T3110")
          (is-track-clear "7T3112" "7T3114" "7T3116" "7T3202" "7T3204" "7T3302" "7T3402" "7T3404" "7T3406")
        )
      )
      (feature-state-id "7RS3107_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3107-M")
        (is-track-clear "7T3110")
      )
      (feature-state-id "7RS3107_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3107-M")
      )
      (feature-state-id "7RS3107_Signal"
        "Red"
      )
      (feature-state-id "7RS3107_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3108_RI"
    (case
      (and
        (is-route-set "7RS3108-D")
        (and
          (is-track-clear "7T3105")
          (is-track-clear "7T3103" "7T3104" "7T3102")
        )
      )
      (feature-state-id "7RS3108_RI" "D")
      (and
        (is-route-set "7RS3108-D")
        (is-track-clear "7T3105")
      )
      (feature-state-id "7RS3108_RI" "D")
      (and
        (is-route-set "7RS3108-M")
        (and
          (is-track-clear "7T3105")
          (is-track-clear "7T3103" "7T3101")
        )
      )
      (feature-state-id "7RS3108_RI" "M")
      (and
        (is-route-set "7RS3108-M")
        (is-track-clear "7T3105")
      )
      (feature-state-id "7RS3108_RI" "M")
      (feature-state-id "7RS3108_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS3108_Signal"
    (case
      (and
        (is-route-set "7RS3108-D")
        (and
          (is-track-clear "7T3105")
          (is-track-clear "7T3103" "7T3104" "7T3102")
        )
      )
      (feature-state-id "7RS3108_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3108-D")
        (is-track-clear "7T3105")
      )
      (feature-state-id "7RS3108_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3108-D")
      )
      (feature-state-id "7RS3108_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS3108-M")
        (and
          (is-track-clear "7T3105")
          (is-track-clear "7T3103" "7T3101")
        )
      )
      (feature-state-id "7RS3108_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3108-M")
        (is-track-clear "7T3105")
      )
      (feature-state-id "7RS3108_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3108-M")
      )
      (feature-state-id "7RS3108_Signal"
        "Red"
      )
      (feature-state-id "7RS3108_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3501_Signal"
    (case
      (and
        (is-route-set "7RS3501-M")
        (and
          (is-track-clear "7T3501")
          (is-track-clear "7T3503" "7T3505" "7T3507")
        )
      )
      (feature-state-id "7RS3501_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3501-M")
        (is-track-clear "7T3501")
      )
      (feature-state-id "7RS3501_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3501-M")
      )
      (feature-state-id "7RS3501_Signal"
        "Red"
      )
      (feature-state-id "7RS3501_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3502_RI"
    (case
      (and
        (is-route-set "7RS3502-D")
        (and
          (is-track-clear "7T3510")
          (is-track-clear "7T3508" "7T3507" "7T3505")
        )
      )
      (feature-state-id "7RS3502_RI" "D")
      (and
        (is-route-set "7RS3502-D")
        (is-track-clear "7T3510")
      )
      (feature-state-id "7RS3502_RI" "D")
      (and
        (is-route-set "7RS3502-M")
        (and
          (is-track-clear "7T3510")
          (is-track-clear "7T3508" "7T3506" "7T3504" "7T3502" "7T3406" "7T3406")
        )
      )
      (feature-state-id "7RS3502_RI" "M")
      (and
        (is-route-set "7RS3502-M")
        (is-track-clear "7T3510")
      )
      (feature-state-id "7RS3502_RI" "M")
      (feature-state-id "7RS3502_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS3502_Signal"
    (case
      (and
        (is-route-set "7RS3502-D")
        (and
          (is-track-clear "7T3510")
          (is-track-clear "7T3508" "7T3507" "7T3505")
        )
      )
      (feature-state-id "7RS3502_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3502-D")
        (is-track-clear "7T3510")
      )
      (feature-state-id "7RS3502_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3502-D")
      )
      (feature-state-id "7RS3502_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS3502-M")
        (and
          (is-track-clear "7T3510")
          (is-track-clear "7T3508" "7T3506" "7T3504" "7T3502" "7T3406" "7T3406")
        )
      )
      (feature-state-id "7RS3502_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3502-M")
        (is-track-clear "7T3510")
      )
      (feature-state-id "7RS3502_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3502-M")
      )
      (feature-state-id "7RS3502_Signal"
        "Red"
      )
      (feature-state-id "7RS3502_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3503_RI"
    (case
      (and
        (is-route-set "7RS3503-D")
        (and
          (is-track-clear "7T3507" "7T3508")
          (is-track-clear "7T3510" "7T3512" "7T3602" "7T3604" "7T3702" "7T3802" "7T3804" "7T3806" "7T3902" "7T3904" "7T4002" "7T4004" "7T4102" "7T4202" "7T4204" "7T4206" "7T4302")
        )
      )
      (feature-state-id "7RS3503_RI" "D")
      (and
        (is-route-set "7RS3503-D")
        (is-track-clear "7T3507" "7T3508")
      )
      (feature-state-id "7RS3503_RI" "D")
      (and
        (is-route-set "7RS3503-M")
        (and
          (is-track-clear "7T3507")
          (is-track-clear "7T3509" "7T3511" "7T3601" "7T3603" "7T3701" "7T3801" "7T3803" "7T3805" "7T3901" "7T3903" "7T4001" "7T4003" "7T4101" "7T4201" "7T4203" "7T4205" "7T4301")
        )
      )
      (feature-state-id "7RS3503_RI" "M")
      (and
        (is-route-set "7RS3503-M")
        (is-track-clear "7T3507")
      )
      (feature-state-id "7RS3503_RI" "M")
      (feature-state-id "7RS3503_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS3503_Signal"
    (case
      (and
        (is-route-set "7RS3503-D")
        (and
          (is-track-clear "7T3507" "7T3508")
          (is-track-clear "7T3510" "7T3512" "7T3602" "7T3604" "7T3702" "7T3802" "7T3804" "7T3806" "7T3902" "7T3904" "7T4002" "7T4004" "7T4102" "7T4202" "7T4204" "7T4206" "7T4302")
        )
      )
      (feature-state-id "7RS3503_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3503-D")
        (is-track-clear "7T3507" "7T3508")
      )
      (feature-state-id "7RS3503_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3503-D")
      )
      (feature-state-id "7RS3503_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS3503-M")
        (and
          (is-track-clear "7T3507")
          (is-track-clear "7T3509" "7T3511" "7T3601" "7T3603" "7T3701" "7T3801" "7T3803" "7T3805" "7T3901" "7T3903" "7T4001" "7T4003" "7T4101" "7T4201" "7T4203" "7T4205" "7T4301")
        )
      )
      (feature-state-id "7RS3503_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3503-M")
        (is-track-clear "7T3507")
      )
      (feature-state-id "7RS3503_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3503-M")
      )
      (feature-state-id "7RS3503_Signal"
        "Red"
      )
      (feature-state-id "7RS3503_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3504_Signal"
    (case
      (and
        (is-route-set "7RS3504-M")
        (and
          (is-track-clear "7T3504")
          (is-track-clear "7T3502" "7T3406" "7T3404" "7T3402" "7T3302" "7T3204" "7T3202" "7T3116")
        )
      )
      (feature-state-id "7RS3504_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3504-M")
        (is-track-clear "7T3504")
      )
      (feature-state-id "7RS3504_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3504-M")
      )
      (feature-state-id "7RS3504_Signal"
        "Red"
      )
      (feature-state-id "7RS3504_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3505_RI"
    (case
      (and
        (is-route-set "7RS3505-D")
        (and
          (is-track-clear "7T3502")
          (is-track-clear "7T3504" "7T3503" "7T3505" "7T3507")
        )
      )
      (feature-state-id "7RS3505_RI" "D")
      (and
        (is-route-set "7RS3505-D")
        (is-track-clear "7T3502")
      )
      (feature-state-id "7RS3505_RI" "D")
      (and
        (is-route-set "7RS3505-M")
        (and
          (is-track-clear "7T3502")
          (is-track-clear "7T3504" "7T3506")
        )
      )
      (feature-state-id "7RS3505_RI" "M")
      (and
        (is-route-set "7RS3505-M")
        (is-track-clear "7T3502")
      )
      (feature-state-id "7RS3505_RI" "M")
      (feature-state-id "7RS3505_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS3505_Signal"
    (case
      (and
        (is-route-set "7RS3505-D")
        (and
          (is-track-clear "7T3502")
          (is-track-clear "7T3504" "7T3503" "7T3505" "7T3507")
        )
      )
      (feature-state-id "7RS3505_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3505-D")
        (is-track-clear "7T3502")
      )
      (feature-state-id "7RS3505_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3505-D")
      )
      (feature-state-id "7RS3505_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS3505-M")
        (and
          (is-track-clear "7T3502")
          (is-track-clear "7T3504" "7T3506")
        )
      )
      (feature-state-id "7RS3505_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3505-M")
        (is-track-clear "7T3502")
      )
      (feature-state-id "7RS3505_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3505-M")
      )
      (feature-state-id "7RS3505_Signal"
        "Red"
      )
      (feature-state-id "7RS3505_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3506_Signal"
    (case
      (and
        (is-route-set "7RS3506-M")
        (and
          (is-track-clear "7T3509")
          (is-track-clear "7T3507" "7T3505")
        )
      )
      (feature-state-id "7RS3506_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3506-M")
        (is-track-clear "7T3509")
      )
      (feature-state-id "7RS3506_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3506-M")
      )
      (feature-state-id "7RS3506_Signal"
        "Red"
      )
      (feature-state-id "7RS3506_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3507_Signal"
    (case
      (and
        (is-route-set "7RS3507-M")
        (and
          (is-track-clear "7T3508")
          (is-track-clear "7T3510" "7T3512" "7T3602" "7T3604" "7T3702" "7T3802" "7T3804" "7T3806" "7T3902" "7T3904" "7T4002" "7T4004" "7T4102" "7T4202" "7T4204" "7T4206" "7T4302")
        )
      )
      (feature-state-id "7RS3507_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3507-M")
        (is-track-clear "7T3508")
      )
      (feature-state-id "7RS3507_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3507-M")
      )
      (feature-state-id "7RS3507_Signal"
        "Red"
      )
      (feature-state-id "7RS3507_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS3508_RI"
    (case
      (and
        (is-route-set "7RS3508-D")
        (and
          (is-track-clear "7T3503" "7T3504")
          (is-track-clear "7T3502" "7T3406" "7T3404" "7T3402" "7T3302" "7T3204" "7T3202" "7T3116")
        )
      )
      (feature-state-id "7RS3508_RI" "D")
      (and
        (is-route-set "7RS3508-D")
        (is-track-clear "7T3503" "7T3504")
      )
      (feature-state-id "7RS3508_RI" "D")
      (and
        (is-route-set "7RS3508-M")
        (and
          (is-track-clear "7T3503")
          (is-track-clear "7T3501" "7T3405" "7T3403" "7T3401" "7T3301" "7T3203" "7T3201" "7T3113")
        )
      )
      (feature-state-id "7RS3508_RI" "M")
      (and
        (is-route-set "7RS3508-M")
        (is-track-clear "7T3503")
      )
      (feature-state-id "7RS3508_RI" "M")
      (feature-state-id "7RS3508_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS3508_Signal"
    (case
      (and
        (is-route-set "7RS3508-D")
        (and
          (is-track-clear "7T3503" "7T3504")
          (is-track-clear "7T3502" "7T3406" "7T3404" "7T3402" "7T3302" "7T3204" "7T3202" "7T3116")
        )
      )
      (feature-state-id "7RS3508_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3508-D")
        (is-track-clear "7T3503" "7T3504")
      )
      (feature-state-id "7RS3508_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3508-D")
      )
      (feature-state-id "7RS3508_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS3508-M")
        (and
          (is-track-clear "7T3503")
          (is-track-clear "7T3501" "7T3405" "7T3403" "7T3401" "7T3301" "7T3203" "7T3201" "7T3113")
        )
      )
      (feature-state-id "7RS3508_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS3508-M")
        (is-track-clear "7T3503")
      )
      (feature-state-id "7RS3508_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS3508-M")
      )
      (feature-state-id "7RS3508_Signal"
        "Red"
      )
      (feature-state-id "7RS3508_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS4301_RI"
    (case
      (and
        (is-route-set "7RS4301-D")
        (and
          (is-track-clear "7T4303")
          (is-track-clear "7T4305" "7T4308" "7T4310")
        )
      )
      (feature-state-id "7RS4301_RI" "D")
      (and
        (is-route-set "7RS4301-D")
        (is-track-clear "7T4303")
      )
      (feature-state-id "7RS4301_RI" "D")
      (and
        (is-route-set "7RS4301-M")
        (and
          (is-track-clear "7T4303")
          (is-track-clear "7T4305" "7T4307")
        )
      )
      (feature-state-id "7RS4301_RI" "M")
      (and
        (is-route-set "7RS4301-M")
        (is-track-clear "7T4303")
      )
      (feature-state-id "7RS4301_RI" "M")
      (feature-state-id "7RS4301_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS4301_Signal"
    (case
      (and
        (is-route-set "7RS4301-D")
        (and
          (is-track-clear "7T4303")
          (is-track-clear "7T4305" "7T4308" "7T4310")
        )
      )
      (feature-state-id "7RS4301_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4301-D")
        (is-track-clear "7T4303")
      )
      (feature-state-id "7RS4301_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4301-D")
      )
      (feature-state-id "7RS4301_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS4301-M")
        (and
          (is-track-clear "7T4303")
          (is-track-clear "7T4305" "7T4307")
        )
      )
      (feature-state-id "7RS4301_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4301-M")
        (is-track-clear "7T4303")
      )
      (feature-state-id "7RS4301_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4301-M")
      )
      (feature-state-id "7RS4301_Signal"
        "Red"
      )
      (feature-state-id "7RS4301_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS4302_RI"
    (case
      (and
        (is-route-set "7RS4302-D")
        (and
          (is-track-clear "7T4308" "7T4305")
          (is-track-clear "7T4303" "7T4301" "7T4205" "7T4203" "7T4201" "7T4101" "7T4003" "7T4001" "7T3903" "7T3901" "7T3805" "7T3803" "7T3801" "7T3701" "7T3603" "7T3601" "7T3511")
        )
      )
      (feature-state-id "7RS4302_RI" "D")
      (and
        (is-route-set "7RS4302-D")
        (is-track-clear "7T4308" "7T4305")
      )
      (feature-state-id "7RS4302_RI" "D")
      (and
        (is-route-set "7RS4302-M")
        (and
          (is-track-clear "7T4308")
          (is-track-clear "7T4306" "7T4304" "7T4302" "7T4206" "7T4204" "7T4202" "7T4102" "7T4004" "7T4002" "7T3904" "7T3902" "7T3806" "7T3804" "7T3802" "7T3702" "7T3604" "7T3602" "7T3512")
        )
      )
      (feature-state-id "7RS4302_RI" "M")
      (and
        (is-route-set "7RS4302-M")
        (is-track-clear "7T4308")
      )
      (feature-state-id "7RS4302_RI" "M")
      (feature-state-id "7RS4302_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS4302_Signal"
    (case
      (and
        (is-route-set "7RS4302-D")
        (and
          (is-track-clear "7T4308" "7T4305")
          (is-track-clear "7T4303" "7T4301" "7T4205" "7T4203" "7T4201" "7T4101" "7T4003" "7T4001" "7T3903" "7T3901" "7T3805" "7T3803" "7T3801" "7T3701" "7T3603" "7T3601" "7T3511")
        )
      )
      (feature-state-id "7RS4302_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4302-D")
        (is-track-clear "7T4308" "7T4305")
      )
      (feature-state-id "7RS4302_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4302-D")
      )
      (feature-state-id "7RS4302_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS4302-M")
        (and
          (is-track-clear "7T4308")
          (is-track-clear "7T4306" "7T4304" "7T4302" "7T4206" "7T4204" "7T4202" "7T4102" "7T4004" "7T4002" "7T3904" "7T3902" "7T3806" "7T3804" "7T3802" "7T3702" "7T3604" "7T3602" "7T3512")
        )
      )
      (feature-state-id "7RS4302_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4302-M")
        (is-track-clear "7T4308")
      )
      (feature-state-id "7RS4302_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4302-M")
      )
      (feature-state-id "7RS4302_Signal"
        "Red"
      )
      (feature-state-id "7RS4302_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS4303_RI"
    (case
      (and
        (is-route-set "7RS4303-S")
        (and
          (is-track-clear "7T4304")
          (is-track-clear "7T4306" "7T4308" "7T4321")
        )
      )
      (feature-state-id "7RS4303_RI" "M")
      (and
        (is-route-set "7RS4303-S")
        (is-track-clear "7T4304")
      )
      (feature-state-id "7RS4303_RI" "M")
      (and
        (is-route-set "7RS4303-D")
        (and
          (is-track-clear "7T4304")
          (is-track-clear "7T4306" "7T4308" "7T4310")
        )
      )
      (feature-state-id "7RS4303_RI" "D")
      (and
        (is-route-set "7RS4303-D")
        (is-track-clear "7T4304")
      )
      (feature-state-id "7RS4303_RI" "D")
      (and
        (is-route-set "7RS4303-M")
        (and
          (is-track-clear "7T4304")
          (is-track-clear "7T4306" "7T4308" "7T4310")
        )
      )
      (feature-state-id "7RS4303_RI" "M")
      (and
        (is-route-set "7RS4303-M")
        (is-track-clear "7T4304")
      )
      (feature-state-id "7RS4303_RI" "M")
      (feature-state-id "7RS4303_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS4303_Signal"
    (case
      (and
        (is-route-set "7RS4303-S")
        (and
          (is-track-clear "7T4304")
          (is-track-clear "7T4306" "7T4308" "7T4321")
        )
      )
      (feature-state-id "7RS4303_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4303-S")
        (is-track-clear "7T4304")
      )
      (feature-state-id "7RS4303_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4303-S")
      )
      (feature-state-id "7RS4303_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS4303-D")
        (and
          (is-track-clear "7T4304")
          (is-track-clear "7T4306" "7T4308" "7T4310")
        )
      )
      (feature-state-id "7RS4303_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4303-D")
        (is-track-clear "7T4304")
      )
      (feature-state-id "7RS4303_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4303-D")
      )
      (feature-state-id "7RS4303_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS4303-M")
        (and
          (is-track-clear "7T4304")
          (is-track-clear "7T4306" "7T4308" "7T4310")
        )
      )
      (feature-state-id "7RS4303_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4303-M")
        (is-track-clear "7T4304")
      )
      (feature-state-id "7RS4303_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4303-M")
      )
      (feature-state-id "7RS4303_Signal"
        "Red"
      )
      (feature-state-id "7RS4303_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS4304_Signal"
    (case
      (and
        (is-route-set "7RS4304-M")
        (and
          (is-track-clear "7T4305")
          (is-track-clear "7T4303" "7T4301" "7T4205" "7T4203" "7T4201" "7T4101" "7T4003" "7T4001" "7T3903" "7T3901" "7T3805" "7T3803" "7T3801" "7T3701" "7T3603" "7T3601" "7T3511")
        )
      )
      (feature-state-id "7RS4304_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4304-M")
        (is-track-clear "7T4305")
      )
      (feature-state-id "7RS4304_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4304-M")
      )
      (feature-state-id "7RS4304_Signal"
        "Red"
      )
      (feature-state-id "7RS4304_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS4306_RI"
    (case
      (and
        (is-route-set "7RS4306-D")
        (and
          (is-track-clear "7T4322")
          (is-track-clear "7T4320" "7T4306" "7T4304" "7T4302" "7T4206" "7T4204" "7T4202" "7T4102" "7T4004" "7T4002" "7T3904" "7T3902" "7T3806" "7T3804" "7T3802" "7T3702" "7T3604" "7T3602" "7T3512")
        )
      )
      (feature-state-id "7RS4306_RI" "D")
      (and
        (is-route-set "7RS4306-D")
        (is-track-clear "7T4322")
      )
      (feature-state-id "7RS4306_RI" "D")
      (and
        (is-route-set "7RS4306-M")
        (and
          (is-track-clear "7T4322")
          (is-track-clear "7T4320")
        )
      )
      (feature-state-id "7RS4306_RI" "M")
      (and
        (is-route-set "7RS4306-M")
        (is-track-clear "7T4322")
      )
      (feature-state-id "7RS4306_RI" "M")
      (feature-state-id "7RS4306_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS4306_Signal"
    (case
      (and
        (is-route-set "7RS4306-D")
        (and
          (is-track-clear "7T4322")
          (is-track-clear "7T4320" "7T4306" "7T4304" "7T4302" "7T4206" "7T4204" "7T4202" "7T4102" "7T4004" "7T4002" "7T3904" "7T3902" "7T3806" "7T3804" "7T3802" "7T3702" "7T3604" "7T3602" "7T3512")
        )
      )
      (feature-state-id "7RS4306_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4306-D")
        (is-track-clear "7T4322")
      )
      (feature-state-id "7RS4306_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4306-D")
      )
      (feature-state-id "7RS4306_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS4306-M")
        (and
          (is-track-clear "7T4322")
          (is-track-clear "7T4320")
        )
      )
      (feature-state-id "7RS4306_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4306-M")
        (is-track-clear "7T4322")
      )
      (feature-state-id "7RS4306_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4306-M")
      )
      (feature-state-id "7RS4306_Signal"
        "Red"
      )
      (feature-state-id "7RS4306_Signal"
        "Red"
      )
    )
  )
  (set-feature-automatic-state "7RS4308_RI"
    (case
      (and
        (is-route-set "7RS4308-D")
        (and
          (is-track-clear "7T4308")
          (is-track-clear "7T4305" "7T4303" "7T4301" "7T4205" "7T4203" "7T4201" "7T4101" "7T4003" "7T4001" "7T3903" "7T3901" "7T3805" "7T3803" "7T3801" "7T3701" "7T3603" "7T3601" "7T3511")
        )
      )
      (feature-state-id "7RS4308_RI" "D")
      (and
        (is-route-set "7RS4308-D")
        (is-track-clear "7T4308")
      )
      (feature-state-id "7RS4308_RI" "D")
      (and
        (is-route-set "7RS4308-M")
        (and
          (is-track-clear "7T4308")
          (is-track-clear "7T4306" "7T4304" "7T4302" "7T4206" "7T4204" "7T4202" "7T4102" "7T4004" "7T4002" "7T3904" "7T3902" "7T3806" "7T3804" "7T3802" "7T3702" "7T3604" "7T3602" "7T3512")
        )
      )
      (feature-state-id "7RS4308_RI" "M")
      (and
        (is-route-set "7RS4308-M")
        (is-track-clear "7T4308")
      )
      (feature-state-id "7RS4308_RI" "M")
      (feature-state-id "7RS4308_RI" "Off")
    )
  )
  (set-feature-automatic-state "7RS4308_Signal"
    (case
      (and
        (is-route-set "7RS4308-D")
        (and
          (is-track-clear "7T4308")
          (is-track-clear "7T4305" "7T4303" "7T4301" "7T4205" "7T4203" "7T4201" "7T4101" "7T4003" "7T4001" "7T3903" "7T3901" "7T3805" "7T3803" "7T3801" "7T3701" "7T3603" "7T3601" "7T3511")
        )
      )
      (feature-state-id "7RS4308_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4308-D")
        (is-track-clear "7T4308")
      )
      (feature-state-id "7RS4308_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4308-D")
      )
      (feature-state-id "7RS4308_Signal"
        "Red"
      )
      (and
        (is-route-set "7RS4308-M")
        (and
          (is-track-clear "7T4308")
          (is-track-clear "7T4306" "7T4304" "7T4302" "7T4206" "7T4204" "7T4202" "7T4102" "7T4004" "7T4002" "7T3904" "7T3902" "7T3806" "7T3804" "7T3802" "7T3702" "7T3604" "7T3602" "7T3512")
        )
      )
      (feature-state-id "7RS4308_Signal"
        "Green"
      )
      (and
        (is-route-set "7RS4308-M")
        (is-track-clear "7T4308")
      )
      (feature-state-id "7RS4308_Signal"
        "Violet"
      )
      (and
        (is-route-set "7RS4308-M")
      )
      (feature-state-id "7RS4308_Signal"
        "Red"
      )
      (feature-state-id "7RS4308_Signal"
        "Red"
      )
    )
  )
)

