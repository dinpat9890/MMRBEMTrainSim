/*
 * Code generation for system model 'ElectricalSystem'
 *
 * Model                      : ElectricalSystem
 * Model version              : 1.2076
 * Simulink Coder version : 9.2 (R2019b) 18-Jul-2019
 *
 * Note that the functions contained in this file are part of a Simulink
 * model, and are not self-contained algorithms.
 */

#include "ElectricalSystem_capi.h"
#include "ElectricalSystem.h"
#include "ElectricalSystem_private.h"
#include "look1_pbinlcapw.h"
#include "rt_nrand_Upu32_Yd_f_pw_snf.h"

P_ElectricalSystem_T ElectricalSystem_P = {
  {
    {
      0.0,                             /* TW_TLPC1 */
      0.0,                             /* TW22502 */
      0.0,                             /* TW_UncoupleSignal */
      0.0,                             /* TW_TLGC1 */
      0.0,                             /* TW25102 */
      0.0,                             /* TW25103 */
      0.0,                             /* TW26201 */
      0.0,                             /* TDI_110VDC */
      0.0,                             /* TW31203 */
      0.0,                             /* TW51204 */
      0.0,                             /* TW51206 */
      0.0,                             /* TW_ZeroSpeed */
      0.0,                             /* TW81201 */
      0.0,                             /* TW81203 */
      0.0,                             /* TWPantoDNCmd */
      0.0,                             /* TW99102 */
      0.0,                             /* TW99103 */
      0.0,                             /* TW99104 */
      0.0,                             /* TW99105 */
      0.0,                             /* TW_LHPBR */
      0.0,                             /* TW_PADR */
      0.0,                             /* TW_CC_TrainWakeup */
      0.0,                             /* TW41701 */
      0.0,                             /* TW41704 */
      0.0,                             /* TW41A04 */
      0.0,                             /* TW_ATOState */
      0.0,                             /* TWNotBraking */
      0.0,                             /* TWMotoring */
      0.0,                             /* TWNotFSB */
      0.0,                             /* TWCabASelected */
      0.0,                             /* TWCabAKeySwitchON */
      0.0,                             /* TWCabBSelected */
      0.0,                             /* TWCabBKeySwitchON */
      0.0,                             /* TW31101 */
      0.0,                             /* TW31101V */
      0.0,                             /* TW31102 */
      0.0,                             /* TW31103 */
      0.0,                             /* TW22212 */
      0.0,                             /* TW11105 */
      0.0,                             /* TW_TSDR */
      0.0,                             /* TW_TLGC3 */
      0.0,                             /* TW_TLGC2 */
      0.0,                             /* TW_TLGC9 */
      0.0,                             /* TW_TLGC10 */
      0.0,                             /* TW_TLGC11 */
      0.0,                             /* TW_SaloonFire */
      0.0,                             /* TW_Integrity */
      0.0,                             /* TW22204 */
      0.0,                             /* TW_VCBTripByCI */
      0.0,                             /* TW_APSFault */
      0.0,                             /* TW_VCBTripByAPS */
      0.0,                             /* TW_LDISRR */
      0.0,                             /* TW_LDISLR */
      0.0                              /* TW_11104 */
    },                                 /* TrainWires */

    {
      0.0,                             /* UW11104 */
      0.0,                             /* UW26101 */
      0.0,                             /* UW33101 */
      0.0,                             /* LW32101_02_03V */
      0.0,                             /* UW_TPOR */
      0.0,                             /* UW_BCGPower */
      0.0,                             /* UW_VCB */
      0.0,                             /* UW_TCU_KStatus */
      0.0,                             /* UW_TCU_AKStatus */
      0.0,                             /* KContactorState */
      0.0,                             /* AKContactorState */
      0.0,                             /* APSPower */
      0.0,                             /* Contactor_Fault */
      0.0,                             /* UW_DC110VLowFault */
      0.0,                             /* UW_VCBTrip */
      0.0,                             /* UW_PADR */
      0.0,                             /* UW_BUVDR */
      0.0,                             /* UW_PantoDown */
      0.0,                             /* UW_ACOvercurrent */
      0.0,                             /* UW_KAKContactorCI */
      0.0,                             /* UW_VCBTripByCI */
      0.0,                             /* UW_APSFault */
      0.0,                             /* UW_VCBTripByAPS */
      0.0                              /* UW_TSDR */
    },                                 /* UnitWires */

    {
      0.0,                             /* TWForward */
      0.0,                             /* TWReverse */
      0.0,                             /* TW_LeftDoorClose */
      0.0,                             /* TW_RightDoorClose */
      0.0,                             /* TW_LeftDoorOpen */
      0.0,                             /* TW_RightDoorOpen */
      0.0,                             /* TW81114 */
      0.0,                             /* TW81115 */
      0.0,                             /* TW_LDE */
      0.0,                             /* TW_RDE */
      0.0,                             /* TW_LHDC */
      0.0,                             /* TW_RHDC */
      0.0,                             /* TW_LDO_LH */
      0.0                              /* TW_RDO_LH */
    },                                 /* OrientationWires */

    {
      0.0,                             /* TWCouplingForward */
      0.0                              /* TWCouplingReturn */
    },                                 /* CoupledCabsWires */

    {
      0.0,                             /* TW_TLGC3 */
      0.0                              /* Dummy */
    }                                  /* MiscWires */
  },

  /* Start of '<S1>/CoreSubsys' */
  {
    22.0,
    0.01,
    0.01,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    1.0,
    0.0,
    0.0,
    0.0,
    1.0,
    1.0,
    1.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    1.0,
    0.0,
    0.0,
    0.0,
    0.0,
    1.0,
    0.0,
    0.0,
    0.0,
    0.0,
    1.0,
    1.0,
    0.2,
    0.2,
    1.0,
    1.0,
    0.1,
    415.0,
    1.0,
    1.0,
    1.0,
    95.0,
    1.0,
    1.0,
    1.0,
    5.0,
    1.0,
    5.0,
    1.0,
    4.0,
    4.0,
    2.0,
    2.0,
    2.0,
    1.0,
    1.0,
    2.0,
    2.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    2.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    -101.0,
    -100.0,
    -100.0,
    0.0,
    0.0,
    0.0,
    100.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    5.0,
    -100.0,
    0.0,
    0.0,
    100.0,
    -101.0,
    -100.0,
    0.0,
    -101.0,
    -100.0,
    -100.0,
    0.0,
    0.0,
    0.0,
    100.0,
    1.0,
    1.0,
    1.0,
    0.0,
    3.0,
    2.0,
    1.0,
    2.0,
    5.0,
    1.0,
    5.0,
    4.0,
    4.0,
    0.0,
    0.0,
    1.0,
    1.0,
    1.0,
    3.0,
    -101.0,
    -100.0,
    -100.0,
    0.0,
    0.0,
    0.0,
    100.0,
    -101.0,
    -100.0,
    -100.0,
    0.0,
    0.0,
    0.0,
    100.0,
    -101.0,
    -100.0,
    -100.0,
    0.0,
    0.0,
    0.0,
    100.0,
    3.0,
    -101.0,
    -100.0,
    -100.0,
    0.0,
    0.0,
    0.0,
    100.0,
    1.0,
    1.0,
    2.0,
    -100.0,
    0.0,
    0.0,
    100.0,
    -101.0,
    -100.0,
    0.0,
    1.0,
    0.0,
    0.0,
    0.0,
    0.0,
    1.0,
    0.05,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    0.0,
    1.0,
    2.0,
    3.0,
    1.0,
    0.0,
    0.0,
    1.0,
    2.0,
    3.0,
    1.0,
    0.0,
    1.0,
    2.0,
    3.0,
    2.0,
    0.0,
    1.0,
    2.0,
    3.0,
    -1.0,
    0.0,
    1.0,
    2.0,
    3.0,
    0.0,
    1.0,
    2.0,
    3.0,
    0.0,
    0.0,
    1.0,
    2.0,
    3.0,
    1.0,
    0.0,
    1.0,
    2.0,
    3.0,
    2.0,
    0.0,
    1.0,
    2.0,
    3.0,
    -1.0,
    0.0,
    1.0,
    2.0,
    3.0,
    0.0,
    1.0,
    2.0,
    3.0,
    0.0,
    0.0,
    1.0,
    2.0,
    3.0,
    1.0,
    0.0,
    1.0,
    2.0,
    3.0,
    2.0,
    0.0,
    1.0,
    2.0,
    3.0,
    -1.0,
    0.0,
    1.0,
    2.0,
    3.0,
    1.0,
    0.0,
    1.0,
    2.0,
    0.0,
    1.0,
    2.0,
    0.0,
    1.0,
    2.0,
    1.0,
    1.0,
    1.0,
    1.0,
    -100.0,
    0.9,
    -0.9,
    5.0,
    1.0,
    1.0,
    1.0,
    0.0,
    1.0,
    1.0,
    3.0,
    1.0,
    4.0,
    1.0,
    2.0,
    1.0,
    1.0,
    -100.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    1.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    1,
    2,
    3,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,

    {
      {
        0.0,                           /* VCBClosePBLamp */
        0.0,                           /* VCBOpenPBLamp */
        0.0,                           /* AllDoorsClosedLight */
        0.0,                           /* EmergencyBrakePBLight */
        0.0,                           /* ParkBrakeApplyPBLight */
        0.0,                           /* BatteryVoltageGauge */
        0.0,                           /* OverheadLineVoltageGauge */
        0.0,                           /* FloodLight */
        0.0,                           /* FlasherLight */
        0.0,                           /* UTOOrRMLight */
        0.0,                           /* MarkerOrTailLight */
        0.0,                           /* HeadLight */
        0.0,                           /* SignallingLights */
        0.0,                           /* IdentificationLights */
        0.0,                           /* Speedometer */
        0.0,                           /* WiperPosition */
        0.0,                           /* HornPBLamp */
        0.0,                           /* LeftDoorClosePBOperatingPanel1Lamp */
        0.0,                           /* LeftDoorOpenPBOperatingPanel1Lamp */
        0.0,                           /* RightDoorOpenPBOperatingPanel1Lamp */
        0.0,                           /* RightDoorClosePBOperatingPanel1Lamp */
        0.0,                           /* CabMainLight */
        0.0,                           /* CabConsoleLight */
        0.0,                           /* DoorCloseAnnouncementLamp */
        0.0,                           /* LampTestPBLamp */
        0.0,                           /* UncouplePBLamp */
        0.0,                           /* FlasherLightPBLamp */
        0.0,                           /* FloodLightPBLamp */
        0.0,                           /* BatteryResetPBLamp */
        0.0,                           /* RightDoorOpenPBOperatingPanel5Lamp */
        0.0,                           /* RightDoorClosePBOperatingPanel5Lamp */
        0.0,                           /* WFLTestPBLamp */
        0.0,                           /* SaloonDoorCloseIndicator */
        0.0,                           /* ParkBrakeOnPBLamp */
        0.0,                           /* ParkBrakeOffPBLamp */
        0.0,                           /* LineVoltageIndicator */
        0.0,                           /* LeftDoorOpenPBOperatingPanel2Lamp */
        0.0,                           /* LeftDoorClosePBOperatingPanel2Lamp */
        0.0,                           /* PantoUpPBLamp */
        0.0,                           /* PantoDownPBLamp */
        0.0,                           /* LIMPHomePBLamp */
        0.0,                           /* PowerOFFPBLamp */
        0.0,                           /* CallOnLightPBLamp */
        0.0,                           /* APSFaultIndicator */
        0.0,                           /* PowerFaultIndicator */
        0.0,                           /* EmergencyBrakeIndicator */
        0.0,                           /* VCBTripIndicator */
        0.0,                           /* OtherCabOccupiedIndicator */
        0.0,                           /* HVACFaultIndicator */
        0.0,                           /* ROSPBLamp */
        0.0,                           /* UTOPBLamp */
        0.0,                           /* ATOStartPBLamp */
        0.0,                           /* EBResetPBLamp */
        0.0,                           /* AuxModuleON */
        0.0,                           /* LeftDoorOpenPB1OperatingPanel2Lamp */
        0.0,                           /* RightDoorOpenPB1OperatingPanel5Lamp */
        0.0,                           /* LeftDoor1LEDIndicator */
        0.0,                           /* LeftDoor2LEDIndicator */
        0.0,                           /* LeftDoor3LEDIndicator */
        0.0,                           /* LeftDoor4LEDIndicator */
        0.0,                           /* RightDoor1LEDIndicator */
        0.0,                           /* RightDoor2LEDIndicator */
        0.0,                           /* RightDoor3LEDIndicator */
        0.0,                           /* RightDoor4LEDIndicator */
        0.0,                           /* WiperPositionLeft */
        0.0,                           /* WiperPositionCenter */
        0.0,                           /* WiperPositionRight */
        0.0                            /* WiperWash */
      },                               /* OutputControlStates */

      {
        false,                         /* TCUPowerAvailable */
        false,                         /* MotorPowerAvailable */
        false,                         /* ForwardDirection */
        false,                         /* ReverseDirection */
        false,                         /* TBCTraction */
        false,                         /* TBCNotBraking */
        false,                         /* TractionSafe */
        false,                         /* NoEmergencyBrake */
        false,                         /* VCBStatus */
        false,                         /* ContactorsFailure */
        0.0                            /* CIIsolated */
      },                               /* Traction */

      {
        false,                         /* BCUPower */
        false,                         /* TBCTraction */
        false,                         /* TBCNotBraking */
        false,                         /* NoEB */
        false                          /* DeadmanVigilance */
      },                               /* Braking */

      {
        false,                         /* TCMSPowerAvailable */
        false,                         /* HMIPower */
        false,                         /* CabActive */
        false,                         /* ForwardDirection */
        false,                         /* ReverseDirection */
        false,                         /* TractionOn */
        false,                         /* BrakeOn */
        false,                         /* TractionSafe */
        false,                         /* AllRightDoorsClosed */
        false,                         /* AllLeftDoorsClosed */
        false,                         /* ServiceBrakesReleased */
        false,                         /* ParkBrakesReleased */
        false,                         /* ParkBrakeApplication */
        false,                         /* ServiceBrakeApplication */
        false,                         /* PantoLowered */
        false,                         /* PantoRaised */
        false,                         /* PantoPowerDetected */
        false,                         /* ZeroSpeed */
        0.0,                           /* Speedometer */
        false,                         /* VCBState */
        false,                         /* APSKContactorState */
        false,                         /* APSAKContactorState */
        0.0,                           /* FilterVoltage */
        false,                         /* APS1Status */
        false,                         /* APS2Status */
        false,                         /* BCG1Status */
        false,                         /* BCG2Status */
        0.0,                           /* BCGOutputVoltage */
        0.0,                           /* BatteryVoltage */
        0.0,                           /* BatteryCurrent */
        0.0,                           /* BatteryTemperature */
        0.0,                           /* BCG1OutputCurrent */
        0.0,                           /* BCG2OutputCurrent */
        false,                         /* NoBrakeTrainLine */
        false,                         /* MotorTrainLine */
        false,                         /* NoFSB1Line */
        false,                         /* NoFSB2Line */
        false,                         /* NoEB1Line */
        false,                         /* NoEB2Line */
        0.0,                           /* LineVoltage */
        false,                         /* NoEB */
        0.0,                           /* APS1OutputVoltage */
        0.0,                           /* APS2OutputVoltage */
        false,                         /* HLSwitchStatus */
        0.0,                           /* MarkerAndTailLight */
        false,                         /* TCMS_FL_Status */
        false,                         /* TCMS_CallOn_Status */
        0.0,                           /* UTOOrRMLight */
        false,                         /* PADPBStatus */
        false,                         /* PADRStatus */
        0.0,                           /* TPOR_ON */
        false,                         /* TSDR_ON */
        0.0,                           /* PowerONPBPressed */
        false,                         /* PowerOFFPBPressed */
        false,                         /* LeftDoorEnable */
        false,                         /* RightDoorEnable */
        false,                         /* LeftHoldDoorClose */
        false,                         /* RightHoldDoorClose */
        false,                         /* LimpHomeMode */
        false,                         /* FwdRevTrainLineMismatchMessage */
        false,                         /* LowMRPressureFaultMessage */
        false,                         /* BCUPower */
        false,                         /* APS1Fault */
        false,                         /* APS2Fault */
        false,                         /* APS1Isolated */
        false,                         /* APS2Isolated */
        0.0,                           /* SaloonLightGroupStatus1 */
        0.0,                           /* SaloonLightGroupStatus2 */
        0.0,                           /* WFLStatus */
        0.0,                           /* WFLOilLevelStatus */
        0.0,                           /* WFLPump1Status */
        0.0,                           /* WFLPump2Status */
        0.0,                           /* WFLFailure */
        false,                         /* BatteryIsolationContactor */
        false,                         /* TrainControlContactor */
        false,                         /* MainCompressor */
        false,                         /* AuxCompressor */
        0.0,                           /* HVAC1Status */
        0.0,                           /* HVAC1SetPointTemperature */
        0.0,                           /* HVAC1IntTemperature */
        0.0,                           /* HVAC1ExtTemperature */
        false,                         /* HVAC1Faulty */
        false,                         /* HVAC1Isolated */
        0.0,                           /* HVAC2Status */
        0.0,                           /* HVAC2SetPointTemperature */
        0.0,                           /* HVAC2IntTemperature */
        0.0,                           /* HVAC2ExtTemperature */
        false,                         /* HVAC2Faulty */
        false,                         /* HVAC2Isolated */
        false,                         /* PECStatus */
        false,                         /* EBbyNonCabEnabled */
        false,                         /* EBbyMC */
        false,                         /* EBbyBrakeLoop */
        false,                         /* EBbyDeadMan */
        false,                         /* NoLineVoltage */
        false,                         /* D1Power */
        false,                         /* EBbyCC */
        false,                         /* EBdueToATCZeroSpeed */

        {
          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
        ,                              /* HVACFaults */
        false,                         /* ADDCOSStatus */
        false,                         /* ORDCOSStatus */
        false,                         /* MRIsolation */
        false,                         /* MCBPAGroup */
        false,                         /* MCB110VDCGroup */
        false,                         /* MCBLightGroup */
        false,                         /* MCBLightSaloonGroup */
        false,                         /* MCBDoorGroup */
        false,                         /* MCBBrakeGroup */
        false,                         /* MCBAPSGroup */
        false,                         /* MCBTCMSGroup */
        false,                         /* MCBSignallingGroup */
        false,                         /* VCBTripCommand */
        false,                         /* CECBTripped */
        false,                         /* UCCBTripped */
        false,                         /* PANCBTripped */
        false,                         /* ELCB1Tripped */
        false,                         /* ELCB2Tripped */
        false,                         /* ILCB1Tripped */
        false,                         /* ILCB2Tripped */
        false,                         /* APSCBTripped */
        false,                         /* FDUFailure */
        false,                         /* InternalFireAlarmTLActive */
        false,                         /* SmokeAlarmCABArea */
        false,                         /* HeatAlarmEDB */
        false,                         /* FDUStatus */
        false,                         /* SFARStatus */
        false,                         /* UFARStatus */
        false,                         /* BUVDR_Active */
        false,                         /* CMCActivationFault */
        false,                         /* CMCDeactivationFault */
        0.0,                           /* UW_VCB */
        0.0,                           /* PantoIsolated */
        0.0,                           /* VCBIsolated */
        0.0,                           /* PantoDownPBCmd */
        0.0,                           /* VCBTripByCI */
        0.0,                           /* CIIsolated */
        0.0,                           /* BCG1Fault */
        0.0,                           /* BCG2Fault */
        0.0,                           /* BCG1Isolated */
        0.0,                           /* BCG2Isolated */
        0.0,                           /* BCG1IsolationFailed */
        false,                         /* EBbyPB */
        0.0,                           /* VCBTripByAPS */
        false,                         /* MCDR */
        false,                         /* MCDRFaulty */
        false,                         /* ObstacleDetected */
        0.0,                           /* ODDFailure */
        false,                         /* MCBHVACGroupTripped */
        0.0,                           /* PANPSR */
        0.0,                           /* Key_Switch_Status */
        0.0,                           /* VCBI_ACOvercurrent */
        0.0,                           /* VCBI_KAKContactorCI */
        0.0,                           /* EmergencyDoorNotOpenStatus */
        0.0,                           /* DoorProvenLoopOK */
        0.0,                           /* BrakeLoopCBTripped */
        false,                         /* DeadmanBypassStatus */
        false,                         /* BLCOSwitchStatus */
        0.0                            /* WFLIsolated */
      },                               /* TCMS */

      {
        false,                         /* ParkBrakeApplicationValve */
        false,                         /* ParkBrakeRelease */
        false,                         /* PantographRaiseValve */
        false,                         /* MainCompressorMotorPower */
        false,                         /* AuxCompressorMotorPower */
        false,                         /* RemoteMagnetValve1 */
        false,                         /* RemoteMagnetValve2 */
        false,                         /* HornLow */
        false,                         /* HornHigh */
        false,                         /* RemoteHornIsolate */
        false                          /* VCBCloseCmd */
      },                               /* Pneumatics */

      {
        false,                         /* LeftDoorClose */
        false,                         /* RightDoorClose */
        false,                         /* LeftDoorOpen */
        false,                         /* RightDoorOpen */
        false,                         /* LeftDoorRelease */
        false,                         /* RightDoorRelease */
        false,                         /* ObstacleDetectionDisabled */
        false,                         /* ZeroSpeed */

        {
          false, false, false, false, false, false, false, false }
        ,                              /* DCUPower */
        false,                         /* DoorMotorPower */
        false,                         /* LeftDoorOpenCmdInLimpHome */
        false,                         /* RightDoorOpenCmdInLimpHome */
        false,                         /* LeftDoorEnable */
        false,                         /* RightDoorEnable */
        false,                         /* LeftHoldDoorClose */
        false,                         /* RightHoldDoorClose */
        false,                         /* EmerDoorLatched */
        false                          /* EmerDoorOpenFault */
      },                               /* Doors */

      {
        false,                         /* PantoUpCommand */
        false,                         /* PantoDownCommand */
        false,                         /* PantoControlPower */
        false,                         /* PantoMotorPower */
        false,                         /* PantoADDFault */
        false,                         /* PantoORDFault */
        false,                         /* PantoRaiseFailure */
        false                          /* PantoLoweringFailure */
      },                               /* Pantograph */

      {
        0.0,                           /* ATCPower */
        0.0,                           /* ATOStartPB */
        0.0,                           /* UTOStartPB */
        0.0,                           /* ATCSafetyBrakeResetPB */
        0.0,                           /* NotSafetyBrake */
        0.0,                           /* CabActive */
        0.0,                           /* UTOMode */
        0.0,                           /* TBCInFSB */
        0.0,                           /* RMFMode */
        0.0,                           /* DoorEnableBypass */
        0.0,                           /* TrainDoorClosedAndLocked */
        0.0,                           /* RMRMode */
        0.0,                           /* NoATCBypass */
        0.0,                           /* TrainIntegrity */
        0.0,                           /* DMIPower */
        0.0,                           /* ATOMode */
        0.0,                           /* ATBMode */
        0.0,                           /* ROSMode */
        0.0,                           /* ATPMode */
        0.0,                           /* EmergencyDoorNotOpen */
        0.0,                           /* WakeUpStatus */
        0.0,                           /* PassengerEmergencyAlarm */
        0.0,                           /* FireSmokeInd */
        0.0,                           /* MechanicalCoupling */
        0.0,                           /* ROSPB */
        0.0,                           /* UTBPB */
        0.0,                           /* LeftDoorOpenPB */
        0.0,                           /* RightDoorOpenPB */
        0.0,                           /* LeftDoorClosePB */
        0.0                            /* RightDoorClosePB */
      },                               /* SignalSys */

      {
        0.0,                           /* ElectricalCouplerState */
        0.0                            /* UncoupleCmd */
      },                               /* CouplingSystem */

      {
        false,                         /* VCBOpen */
        false,                         /* VCBClose */
        false,                         /* CompressorOn */
        false,                         /* WiperOn */
        false,                         /* DeadmanVigilance */
        false,                         /* FlasherLightSound */
        0.0                            /* ObstacleSoftCollision */
      },                               /* Audio */

      {
        false                          /* DeadmanRelay */
      },                               /* Scoring */

      {
        {
          0.0,                         /* PAPIS_CCTV_Power */
          0.0,                         /* DoorCloseAnnouncement */
          0.0,                         /* DoorOpen */
          0.0,                         /* DoorClose */
          0.0,                         /* EmergencyDoorOpen */
          0.0,                         /* CabActive */
          0.0,                         /* AllDoorClose */
          0.0,                         /* ZeroSpeed */
          0.0,                         /* PECUAlarmActive */
          0.0,                         /* Couple */
          0.0                          /* FrontObstacleDetected */
        }                              /* PAPIS */
      }                                /* MiscOutputs */
    },

    {
      false,                           /* TCMSPowerAvailable */
      false,                           /* HMIPower */
      false,                           /* CabActive */
      false,                           /* ForwardDirection */
      false,                           /* ReverseDirection */
      false,                           /* TractionOn */
      false,                           /* BrakeOn */
      false,                           /* TractionSafe */
      false,                           /* AllRightDoorsClosed */
      false,                           /* AllLeftDoorsClosed */
      false,                           /* ServiceBrakesReleased */
      false,                           /* ParkBrakesReleased */
      false,                           /* ParkBrakeApplication */
      false,                           /* ServiceBrakeApplication */
      false,                           /* PantoLowered */
      false,                           /* PantoRaised */
      false,                           /* PantoPowerDetected */
      false,                           /* ZeroSpeed */
      0.0,                             /* Speedometer */
      false,                           /* VCBState */
      false,                           /* APSKContactorState */
      false,                           /* APSAKContactorState */
      0.0,                             /* FilterVoltage */
      false,                           /* APS1Status */
      false,                           /* APS2Status */
      false,                           /* BCG1Status */
      false,                           /* BCG2Status */
      0.0,                             /* BCGOutputVoltage */
      0.0,                             /* BatteryVoltage */
      0.0,                             /* BatteryCurrent */
      0.0,                             /* BatteryTemperature */
      0.0,                             /* BCG1OutputCurrent */
      0.0,                             /* BCG2OutputCurrent */
      false,                           /* NoBrakeTrainLine */
      false,                           /* MotorTrainLine */
      false,                           /* NoFSB1Line */
      false,                           /* NoFSB2Line */
      false,                           /* NoEB1Line */
      false,                           /* NoEB2Line */
      0.0,                             /* LineVoltage */
      false,                           /* NoEB */
      0.0,                             /* APS1OutputVoltage */
      0.0,                             /* APS2OutputVoltage */
      false,                           /* HLSwitchStatus */
      0.0,                             /* MarkerAndTailLight */
      false,                           /* TCMS_FL_Status */
      false,                           /* TCMS_CallOn_Status */
      0.0,                             /* UTOOrRMLight */
      false,                           /* PADPBStatus */
      false,                           /* PADRStatus */
      0.0,                             /* TPOR_ON */
      false,                           /* TSDR_ON */
      0.0,                             /* PowerONPBPressed */
      false,                           /* PowerOFFPBPressed */
      false,                           /* LeftDoorEnable */
      false,                           /* RightDoorEnable */
      false,                           /* LeftHoldDoorClose */
      false,                           /* RightHoldDoorClose */
      false,                           /* LimpHomeMode */
      false,                           /* FwdRevTrainLineMismatchMessage */
      false,                           /* LowMRPressureFaultMessage */
      false,                           /* BCUPower */
      false,                           /* APS1Fault */
      false,                           /* APS2Fault */
      false,                           /* APS1Isolated */
      false,                           /* APS2Isolated */
      0.0,                             /* SaloonLightGroupStatus1 */
      0.0,                             /* SaloonLightGroupStatus2 */
      0.0,                             /* WFLStatus */
      0.0,                             /* WFLOilLevelStatus */
      0.0,                             /* WFLPump1Status */
      0.0,                             /* WFLPump2Status */
      0.0,                             /* WFLFailure */
      false,                           /* BatteryIsolationContactor */
      false,                           /* TrainControlContactor */
      false,                           /* MainCompressor */
      false,                           /* AuxCompressor */
      0.0,                             /* HVAC1Status */
      0.0,                             /* HVAC1SetPointTemperature */
      0.0,                             /* HVAC1IntTemperature */
      0.0,                             /* HVAC1ExtTemperature */
      false,                           /* HVAC1Faulty */
      false,                           /* HVAC1Isolated */
      0.0,                             /* HVAC2Status */
      0.0,                             /* HVAC2SetPointTemperature */
      0.0,                             /* HVAC2IntTemperature */
      0.0,                             /* HVAC2ExtTemperature */
      false,                           /* HVAC2Faulty */
      false,                           /* HVAC2Isolated */
      false,                           /* PECStatus */
      false,                           /* EBbyNonCabEnabled */
      false,                           /* EBbyMC */
      false,                           /* EBbyBrakeLoop */
      false,                           /* EBbyDeadMan */
      false,                           /* NoLineVoltage */
      false,                           /* D1Power */
      false,                           /* EBbyCC */
      false,                           /* EBdueToATCZeroSpeed */

      {
        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }
      ,                                /* HVACFaults */
      false,                           /* ADDCOSStatus */
      false,                           /* ORDCOSStatus */
      false,                           /* MRIsolation */
      false,                           /* MCBPAGroup */
      false,                           /* MCB110VDCGroup */
      false,                           /* MCBLightGroup */
      false,                           /* MCBLightSaloonGroup */
      false,                           /* MCBDoorGroup */
      false,                           /* MCBBrakeGroup */
      false,                           /* MCBAPSGroup */
      false,                           /* MCBTCMSGroup */
      false,                           /* MCBSignallingGroup */
      false,                           /* VCBTripCommand */
      false,                           /* CECBTripped */
      false,                           /* UCCBTripped */
      false,                           /* PANCBTripped */
      false,                           /* ELCB1Tripped */
      false,                           /* ELCB2Tripped */
      false,                           /* ILCB1Tripped */
      false,                           /* ILCB2Tripped */
      false,                           /* APSCBTripped */
      false,                           /* FDUFailure */
      false,                           /* InternalFireAlarmTLActive */
      false,                           /* SmokeAlarmCABArea */
      false,                           /* HeatAlarmEDB */
      false,                           /* FDUStatus */
      false,                           /* SFARStatus */
      false,                           /* UFARStatus */
      false,                           /* BUVDR_Active */
      false,                           /* CMCActivationFault */
      false,                           /* CMCDeactivationFault */
      0.0,                             /* UW_VCB */
      0.0,                             /* PantoIsolated */
      0.0,                             /* VCBIsolated */
      0.0,                             /* PantoDownPBCmd */
      0.0,                             /* VCBTripByCI */
      0.0,                             /* CIIsolated */
      0.0,                             /* BCG1Fault */
      0.0,                             /* BCG2Fault */
      0.0,                             /* BCG1Isolated */
      0.0,                             /* BCG2Isolated */
      0.0,                             /* BCG1IsolationFailed */
      false,                           /* EBbyPB */
      0.0,                             /* VCBTripByAPS */
      false,                           /* MCDR */
      false,                           /* MCDRFaulty */
      false,                           /* ObstacleDetected */
      0.0,                             /* ODDFailure */
      false,                           /* MCBHVACGroupTripped */
      0.0,                             /* PANPSR */
      0.0,                             /* Key_Switch_Status */
      0.0,                             /* VCBI_ACOvercurrent */
      0.0,                             /* VCBI_KAKContactorCI */
      0.0,                             /* EmergencyDoorNotOpenStatus */
      0.0,                             /* DoorProvenLoopOK */
      0.0,                             /* BrakeLoopCBTripped */
      false,                           /* DeadmanBypassStatus */
      false,                           /* BLCOSwitchStatus */
      0.0                              /* WFLIsolated */
    },

    {
      0.0,                             /* VCBClosePBLamp */
      0.0,                             /* VCBOpenPBLamp */
      0.0,                             /* AllDoorsClosedLight */
      0.0,                             /* EmergencyBrakePBLight */
      0.0,                             /* ParkBrakeApplyPBLight */
      0.0,                             /* BatteryVoltageGauge */
      0.0,                             /* OverheadLineVoltageGauge */
      0.0,                             /* FloodLight */
      0.0,                             /* FlasherLight */
      0.0,                             /* UTOOrRMLight */
      0.0,                             /* MarkerOrTailLight */
      0.0,                             /* HeadLight */
      0.0,                             /* SignallingLights */
      0.0,                             /* IdentificationLights */
      0.0,                             /* Speedometer */
      0.0,                             /* WiperPosition */
      0.0,                             /* HornPBLamp */
      0.0,                             /* LeftDoorClosePBOperatingPanel1Lamp */
      0.0,                             /* LeftDoorOpenPBOperatingPanel1Lamp */
      0.0,                             /* RightDoorOpenPBOperatingPanel1Lamp */
      0.0,                             /* RightDoorClosePBOperatingPanel1Lamp */
      0.0,                             /* CabMainLight */
      0.0,                             /* CabConsoleLight */
      0.0,                             /* DoorCloseAnnouncementLamp */
      0.0,                             /* LampTestPBLamp */
      0.0,                             /* UncouplePBLamp */
      0.0,                             /* FlasherLightPBLamp */
      0.0,                             /* FloodLightPBLamp */
      0.0,                             /* BatteryResetPBLamp */
      0.0,                             /* RightDoorOpenPBOperatingPanel5Lamp */
      0.0,                             /* RightDoorClosePBOperatingPanel5Lamp */
      0.0,                             /* WFLTestPBLamp */
      0.0,                             /* SaloonDoorCloseIndicator */
      0.0,                             /* ParkBrakeOnPBLamp */
      0.0,                             /* ParkBrakeOffPBLamp */
      0.0,                             /* LineVoltageIndicator */
      0.0,                             /* LeftDoorOpenPBOperatingPanel2Lamp */
      0.0,                             /* LeftDoorClosePBOperatingPanel2Lamp */
      0.0,                             /* PantoUpPBLamp */
      0.0,                             /* PantoDownPBLamp */
      0.0,                             /* LIMPHomePBLamp */
      0.0,                             /* PowerOFFPBLamp */
      0.0,                             /* CallOnLightPBLamp */
      0.0,                             /* APSFaultIndicator */
      0.0,                             /* PowerFaultIndicator */
      0.0,                             /* EmergencyBrakeIndicator */
      0.0,                             /* VCBTripIndicator */
      0.0,                             /* OtherCabOccupiedIndicator */
      0.0,                             /* HVACFaultIndicator */
      0.0,                             /* ROSPBLamp */
      0.0,                             /* UTOPBLamp */
      0.0,                             /* ATOStartPBLamp */
      0.0,                             /* EBResetPBLamp */
      0.0,                             /* AuxModuleON */
      0.0,                             /* LeftDoorOpenPB1OperatingPanel2Lamp */
      0.0,                             /* RightDoorOpenPB1OperatingPanel5Lamp */
      0.0,                             /* LeftDoor1LEDIndicator */
      0.0,                             /* LeftDoor2LEDIndicator */
      0.0,                             /* LeftDoor3LEDIndicator */
      0.0,                             /* LeftDoor4LEDIndicator */
      0.0,                             /* RightDoor1LEDIndicator */
      0.0,                             /* RightDoor2LEDIndicator */
      0.0,                             /* RightDoor3LEDIndicator */
      0.0,                             /* RightDoor4LEDIndicator */
      0.0,                             /* WiperPositionLeft */
      0.0,                             /* WiperPositionCenter */
      0.0,                             /* WiperPositionRight */
      0.0                              /* WiperWash */
    },

    {
      0.0,                             /* VCBClosePBLamp */
      0.0,                             /* VCBOpenPBLamp */
      0.0,                             /* AllDoorsClosedLight */
      0.0,                             /* EmergencyBrakePBLight */
      0.0,                             /* ParkBrakeApplyPBLight */
      0.0,                             /* BatteryVoltageGauge */
      0.0,                             /* OverheadLineVoltageGauge */
      0.0,                             /* FloodLight */
      0.0,                             /* FlasherLight */
      0.0,                             /* UTOOrRMLight */
      0.0,                             /* MarkerOrTailLight */
      0.0,                             /* HeadLight */
      0.0,                             /* SignallingLights */
      0.0,                             /* IdentificationLights */
      0.0,                             /* Speedometer */
      0.0,                             /* WiperPosition */
      0.0,                             /* HornPBLamp */
      0.0,                             /* LeftDoorClosePBOperatingPanel1Lamp */
      0.0,                             /* LeftDoorOpenPBOperatingPanel1Lamp */
      0.0,                             /* RightDoorOpenPBOperatingPanel1Lamp */
      0.0,                             /* RightDoorClosePBOperatingPanel1Lamp */
      0.0,                             /* CabMainLight */
      0.0,                             /* CabConsoleLight */
      0.0,                             /* DoorCloseAnnouncementLamp */
      0.0,                             /* LampTestPBLamp */
      0.0,                             /* UncouplePBLamp */
      0.0,                             /* FlasherLightPBLamp */
      0.0,                             /* FloodLightPBLamp */
      0.0,                             /* BatteryResetPBLamp */
      0.0,                             /* RightDoorOpenPBOperatingPanel5Lamp */
      0.0,                             /* RightDoorClosePBOperatingPanel5Lamp */
      0.0,                             /* WFLTestPBLamp */
      0.0,                             /* SaloonDoorCloseIndicator */
      0.0,                             /* ParkBrakeOnPBLamp */
      0.0,                             /* ParkBrakeOffPBLamp */
      0.0,                             /* LineVoltageIndicator */
      0.0,                             /* LeftDoorOpenPBOperatingPanel2Lamp */
      0.0,                             /* LeftDoorClosePBOperatingPanel2Lamp */
      0.0,                             /* PantoUpPBLamp */
      0.0,                             /* PantoDownPBLamp */
      0.0,                             /* LIMPHomePBLamp */
      0.0,                             /* PowerOFFPBLamp */
      0.0,                             /* CallOnLightPBLamp */
      0.0,                             /* APSFaultIndicator */
      0.0,                             /* PowerFaultIndicator */
      0.0,                             /* EmergencyBrakeIndicator */
      0.0,                             /* VCBTripIndicator */
      0.0,                             /* OtherCabOccupiedIndicator */
      0.0,                             /* HVACFaultIndicator */
      0.0,                             /* ROSPBLamp */
      0.0,                             /* UTOPBLamp */
      0.0,                             /* ATOStartPBLamp */
      0.0,                             /* EBResetPBLamp */
      0.0,                             /* AuxModuleON */
      0.0,                             /* LeftDoorOpenPB1OperatingPanel2Lamp */
      0.0,                             /* RightDoorOpenPB1OperatingPanel5Lamp */
      0.0,                             /* LeftDoor1LEDIndicator */
      0.0,                             /* LeftDoor2LEDIndicator */
      0.0,                             /* LeftDoor3LEDIndicator */
      0.0,                             /* LeftDoor4LEDIndicator */
      0.0,                             /* RightDoor1LEDIndicator */
      0.0,                             /* RightDoor2LEDIndicator */
      0.0,                             /* RightDoor3LEDIndicator */
      0.0,                             /* RightDoor4LEDIndicator */
      0.0,                             /* WiperPositionLeft */
      0.0,                             /* WiperPositionCenter */
      0.0,                             /* WiperPositionRight */
      0.0                              /* WiperWash */
    },

    {
      0.0,                             /* TW_TLPC1 */
      0.0,                             /* TW22502 */
      0.0,                             /* TW_UncoupleSignal */
      0.0,                             /* TW_TLGC1 */
      0.0,                             /* TW25102 */
      0.0,                             /* TW25103 */
      0.0,                             /* TW26201 */
      0.0,                             /* TDI_110VDC */
      0.0,                             /* TW31203 */
      0.0,                             /* TW51204 */
      0.0,                             /* TW51206 */
      0.0,                             /* TW_ZeroSpeed */
      0.0,                             /* TW81201 */
      0.0,                             /* TW81203 */
      0.0,                             /* TWPantoDNCmd */
      0.0,                             /* TW99102 */
      0.0,                             /* TW99103 */
      0.0,                             /* TW99104 */
      0.0,                             /* TW99105 */
      0.0,                             /* TW_LHPBR */
      0.0,                             /* TW_PADR */
      0.0,                             /* TW_CC_TrainWakeup */
      0.0,                             /* TW41701 */
      0.0,                             /* TW41704 */
      0.0,                             /* TW41A04 */
      0.0,                             /* TW_ATOState */
      0.0,                             /* TWNotBraking */
      0.0,                             /* TWMotoring */
      0.0,                             /* TWNotFSB */
      0.0,                             /* TWCabASelected */
      0.0,                             /* TWCabAKeySwitchON */
      0.0,                             /* TWCabBSelected */
      0.0,                             /* TWCabBKeySwitchON */
      0.0,                             /* TW31101 */
      0.0,                             /* TW31101V */
      0.0,                             /* TW31102 */
      0.0,                             /* TW31103 */
      0.0,                             /* TW22212 */
      0.0,                             /* TW11105 */
      0.0,                             /* TW_TSDR */
      0.0,                             /* TW_TLGC3 */
      0.0,                             /* TW_TLGC2 */
      0.0,                             /* TW_TLGC9 */
      0.0,                             /* TW_TLGC10 */
      0.0,                             /* TW_TLGC11 */
      0.0,                             /* TW_SaloonFire */
      0.0,                             /* TW_Integrity */
      0.0,                             /* TW22204 */
      0.0,                             /* TW_VCBTripByCI */
      0.0,                             /* TW_APSFault */
      0.0,                             /* TW_VCBTripByAPS */
      0.0,                             /* TW_LDISRR */
      0.0,                             /* TW_LDISLR */
      0.0                              /* TW_11104 */
    },

    {
      0.0,                             /* ATCPower */
      0.0,                             /* ATOStartPB */
      0.0,                             /* UTOStartPB */
      0.0,                             /* ATCSafetyBrakeResetPB */
      0.0,                             /* NotSafetyBrake */
      0.0,                             /* CabActive */
      0.0,                             /* UTOMode */
      0.0,                             /* TBCInFSB */
      0.0,                             /* RMFMode */
      0.0,                             /* DoorEnableBypass */
      0.0,                             /* TrainDoorClosedAndLocked */
      0.0,                             /* RMRMode */
      0.0,                             /* NoATCBypass */
      0.0,                             /* TrainIntegrity */
      0.0,                             /* DMIPower */
      0.0,                             /* ATOMode */
      0.0,                             /* ATBMode */
      0.0,                             /* ROSMode */
      0.0,                             /* ATPMode */
      0.0,                             /* EmergencyDoorNotOpen */
      0.0,                             /* WakeUpStatus */
      0.0,                             /* PassengerEmergencyAlarm */
      0.0,                             /* FireSmokeInd */
      0.0,                             /* MechanicalCoupling */
      0.0,                             /* ROSPB */
      0.0,                             /* UTBPB */
      0.0,                             /* LeftDoorOpenPB */
      0.0,                             /* RightDoorOpenPB */
      0.0,                             /* LeftDoorClosePB */
      0.0                              /* RightDoorClosePB */
    },

    {
      0.0,                             /* UW11104 */
      0.0,                             /* UW26101 */
      0.0,                             /* UW33101 */
      0.0,                             /* LW32101_02_03V */
      0.0,                             /* UW_TPOR */
      0.0,                             /* UW_BCGPower */
      0.0,                             /* UW_VCB */
      0.0,                             /* UW_TCU_KStatus */
      0.0,                             /* UW_TCU_AKStatus */
      0.0,                             /* KContactorState */
      0.0,                             /* AKContactorState */
      0.0,                             /* APSPower */
      0.0,                             /* Contactor_Fault */
      0.0,                             /* UW_DC110VLowFault */
      0.0,                             /* UW_VCBTrip */
      0.0,                             /* UW_PADR */
      0.0,                             /* UW_BUVDR */
      0.0,                             /* UW_PantoDown */
      0.0,                             /* UW_ACOvercurrent */
      0.0,                             /* UW_KAKContactorCI */
      0.0,                             /* UW_VCBTripByCI */
      0.0,                             /* UW_APSFault */
      0.0,                             /* UW_VCBTripByAPS */
      0.0                              /* UW_TSDR */
    },

    {
      0.0,                             /* TWForward */
      0.0,                             /* TWReverse */
      0.0,                             /* TW_LeftDoorClose */
      0.0,                             /* TW_RightDoorClose */
      0.0,                             /* TW_LeftDoorOpen */
      0.0,                             /* TW_RightDoorOpen */
      0.0,                             /* TW81114 */
      0.0,                             /* TW81115 */
      0.0,                             /* TW_LDE */
      0.0,                             /* TW_RDE */
      0.0,                             /* TW_LHDC */
      0.0,                             /* TW_RHDC */
      0.0,                             /* TW_LDO_LH */
      0.0                              /* TW_RDO_LH */
    },

    {
      {
        0.0,                           /* PAPIS_CCTV_Power */
        0.0,                           /* DoorCloseAnnouncement */
        0.0,                           /* DoorOpen */
        0.0,                           /* DoorClose */
        0.0,                           /* EmergencyDoorOpen */
        0.0,                           /* CabActive */
        0.0,                           /* AllDoorClose */
        0.0,                           /* ZeroSpeed */
        0.0,                           /* PECUAlarmActive */
        0.0,                           /* Couple */
        0.0                            /* FrontObstacleDetected */
      }                                /* PAPIS */
    },

    {
      false,                           /* LeftDoorClose */
      false,                           /* RightDoorClose */
      false,                           /* LeftDoorOpen */
      false,                           /* RightDoorOpen */
      false,                           /* LeftDoorRelease */
      false,                           /* RightDoorRelease */
      false,                           /* ObstacleDetectionDisabled */
      false,                           /* ZeroSpeed */

      {
        false, false, false, false, false, false, false, false }
      ,                                /* DCUPower */
      false,                           /* DoorMotorPower */
      false,                           /* LeftDoorOpenCmdInLimpHome */
      false,                           /* RightDoorOpenCmdInLimpHome */
      false,                           /* LeftDoorEnable */
      false,                           /* RightDoorEnable */
      false,                           /* LeftHoldDoorClose */
      false,                           /* RightHoldDoorClose */
      false,                           /* EmerDoorLatched */
      false                            /* EmerDoorOpenFault */
    },

    {
      false,                           /* TCUPowerAvailable */
      false,                           /* MotorPowerAvailable */
      false,                           /* ForwardDirection */
      false,                           /* ReverseDirection */
      false,                           /* TBCTraction */
      false,                           /* TBCNotBraking */
      false,                           /* TractionSafe */
      false,                           /* NoEmergencyBrake */
      false,                           /* VCBStatus */
      false,                           /* ContactorsFailure */
      0.0                              /* CIIsolated */
    },

    {
      false,                           /* VCBOpen */
      false,                           /* VCBClose */
      false,                           /* CompressorOn */
      false,                           /* WiperOn */
      false,                           /* DeadmanVigilance */
      false,                           /* FlasherLightSound */
      0.0                              /* ObstacleSoftCollision */
    },

    {
      0.0,                             /* ElectricalCouplerState */
      0.0                              /* UncoupleCmd */
    },

    {
      false,                           /* ParkBrakeApplicationValve */
      false,                           /* ParkBrakeRelease */
      false,                           /* PantographRaiseValve */
      false,                           /* MainCompressorMotorPower */
      false,                           /* AuxCompressorMotorPower */
      false,                           /* RemoteMagnetValve1 */
      false,                           /* RemoteMagnetValve2 */
      false,                           /* HornLow */
      false,                           /* HornHigh */
      false,                           /* RemoteHornIsolate */
      false                            /* VCBCloseCmd */
    },

    {
      0.0,                             /* TWCouplingForward */
      0.0                              /* TWCouplingReturn */
    },

    {
      0.0,                             /* TW_TLGC3 */
      0.0                              /* Dummy */
    },

    {
      false,                           /* BCUPower */
      false,                           /* TBCTraction */
      false,                           /* TBCNotBraking */
      false,                           /* NoEB */
      false                            /* DeadmanVigilance */
    },

    {
      false,                           /* PantoUpCommand */
      false,                           /* PantoDownCommand */
      false,                           /* PantoControlPower */
      false,                           /* PantoMotorPower */
      false,                           /* PantoADDFault */
      false,                           /* PantoORDFault */
      false,                           /* PantoRaiseFailure */
      false                            /* PantoLoweringFailure */
    },

    {
      false                            /* DeadmanRelay */
    },
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.0,
    2.0,
    1.0,
    0.0,
    2.0,
    1.0,
    0.0,
    2.0,
    1.0,
    0.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    -1.0,
    27.0,
    -1.0,
    25.0,
    -1.0,
    24.0,
    -1.0,
    27.0,
    -1.0,
    25.0,
    -1.0,
    24.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.16,
    2.2204460492503131E-16,
    0.0,
    0.5,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    1.0,
    0.5,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.0,
    0.0,
    1.0,
    0.0,
    0.5,
    0.0,
    1.0,
    0.0,
    0.5,
    1.0,
    0.5,
    2.0,
    0.0,
    2.0,
    2.0,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    81.0,
    0.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    1.0,
    0.0,
    0.0,
    -0.0060999999999999995,
    0.0060999999999999995,
    0.0,
    0.8,
    0.0,
    0.0,
    0.05,
    124.0,
    80.0,
    1.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    1.0,
    0.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    1.0,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.5,
    1.0,
    0.0,
    0.5,
    1.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.0,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.05,
    0.0,
    1.0,
    5.0,
    50.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.05,
    0.0,
    1.0,
    1.0,
    50.0,
    0.0,
    0.05,
    0.0,
    1.0,
    1.0,
    50.0,
    0.0,
    0.0,
    0.0,
    0.5,
    1.0,
    1.0,
    0.5,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    1.0,
    0.5,
    0.5,
    0.0,
    0.5,
    1.0,
    0.0,
    1.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    -1.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    1.0,
    0.5,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    1.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    1.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    1.0,
    0.5,
    1.0,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    1.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    1.0,
    0.5,
    1.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.05,
    0.0,
    -1.0,
    850.0,
    0.638,
    0.0,
    0.0,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    1.0,
    4.0,
    0.0,
    0.5,
    5.0,
    0.0,
    0.0,
    4.0,
    0.0,
    0.5,
    5.0,
    0.0,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.05,
    0.0,
    0.05,
    0.0,
    1.0,
    0.0,

    { 0.0, 0.00098663578586422052, 0.003942649342761062, 0.0088563746356556949,
      0.015708419435684462, 0.024471741852423234, 0.035111757055874326,
      0.047586473766990267, 0.061846659978068208, 0.077836037248992462,
      0.095491502812526274, 0.11474337861210537, 0.13551568628929422,
      0.15772644703565569, 0.18128800512565518, 0.20610737385376343,
      0.23208660251050173, 0.25912316294914245, 0.28711035421746367,
      0.315937723657661, 0.34549150281252627, 0.37565505641757257,
      0.4063093427071377, 0.43733338321784787, 0.46860474023534326, 0.5,
      0.53139525976465674, 0.56266661678215224, 0.59369065729286241,
      0.62434494358242731, 0.65450849718747373, 0.684062276342339,
      0.71288964578253644, 0.74087683705085772, 0.76791339748949849,
      0.79389262614623657, 0.81871199487434487, 0.84227355296434436,
      0.86448431371070567, 0.88525662138789452, 0.90450849718747373,
      0.92216396275100754, 0.93815334002193174, 0.95241352623300979,
      0.96488824294412567, 0.97552825814757682, 0.98429158056431554,
      0.99114362536434442, 0.99605735065723888, 0.99901336421413578, 1.0,
      0.99901336421413578, 0.99605735065723888, 0.99114362536434431,
      0.98429158056431554, 0.97552825814757671, 0.96488824294412567,
      0.95241352623300979, 0.93815334002193174, 0.92216396275100765,
      0.90450849718747373, 0.88525662138789463, 0.86448431371070567,
      0.84227355296434436, 0.81871199487434476, 0.7938926261462369,
      0.76791339748949849, 0.740876837050858, 0.71288964578253644,
      0.68406227634233929, 0.65450849718747373, 0.62434494358242765,
      0.5936906572928623, 0.56266661678215224, 0.53139525976465651,
      0.50000000000000011, 0.46860474023534354, 0.43733338321784787,
      0.40630934270713781, 0.37565505641757246, 0.34549150281252639,
      0.31593772365766082, 0.28711035421746367, 0.2591231629491425,
      0.232086602510502, 0.20610737385376349, 0.18128800512565535,
      0.15772644703565564, 0.13551568628929433, 0.11474337861210532,
      0.09549150281252633, 0.077836037248992351, 0.061846659978068208,
      0.047586473766990323, 0.035111757055874437, 0.024471741852423234,
      0.015708419435684517, 0.00885637463565564, 0.0039426493427611176,
      0.00098663578586422052, 0.0 },

    { 0.0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12,
      0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24,
      0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.33, 0.34,
      0.35000000000000003, 0.36, 0.37, 0.38, 0.39, 0.4, 0.41000000000000003,
      0.42, 0.43, 0.44, 0.45, 0.46, 0.47000000000000003, 0.48, 0.49, 0.5, 0.51,
      0.52, 0.53, 0.54, 0.55, 0.56, 0.57000000000000006, 0.58000000000000007,
      0.59, 0.6, 0.61, 0.62, 0.63, 0.64, 0.64999999999999991,
      0.65999999999999992, 0.66999999999999993, 0.67999999999999994, 0.69, 0.7,
      0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.78, 0.79, 0.8, 0.81,
      0.82000000000000006, 0.83, 0.84, 0.85, 0.86, 0.87, 0.88, 0.89, 0.9, 0.91,
      0.92, 0.92999999999999994, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99, 1.0 },
    0.0,
    0.0,
    0.05,
    0.0,
    0.05,
    0.0,
    1.0,
    0.0,

    { 0.0, 0.00098663578586422052, 0.003942649342761062, 0.0088563746356556949,
      0.015708419435684462, 0.024471741852423234, 0.035111757055874326,
      0.047586473766990267, 0.061846659978068208, 0.077836037248992462,
      0.095491502812526274, 0.11474337861210537, 0.13551568628929422,
      0.15772644703565569, 0.18128800512565518, 0.20610737385376343,
      0.23208660251050173, 0.25912316294914245, 0.28711035421746367,
      0.315937723657661, 0.34549150281252627, 0.37565505641757257,
      0.4063093427071377, 0.43733338321784787, 0.46860474023534326, 0.5,
      0.53139525976465674, 0.56266661678215224, 0.59369065729286241,
      0.62434494358242731, 0.65450849718747373, 0.684062276342339,
      0.71288964578253644, 0.74087683705085772, 0.76791339748949849,
      0.79389262614623657, 0.81871199487434487, 0.84227355296434436,
      0.86448431371070567, 0.88525662138789452, 0.90450849718747373,
      0.92216396275100754, 0.93815334002193174, 0.95241352623300979,
      0.96488824294412567, 0.97552825814757682, 0.98429158056431554,
      0.99114362536434442, 0.99605735065723888, 0.99901336421413578, 1.0,
      0.99901336421413578, 0.99605735065723888, 0.99114362536434431,
      0.98429158056431554, 0.97552825814757671, 0.96488824294412567,
      0.95241352623300979, 0.93815334002193174, 0.92216396275100765,
      0.90450849718747373, 0.88525662138789463, 0.86448431371070567,
      0.84227355296434436, 0.81871199487434476, 0.7938926261462369,
      0.76791339748949849, 0.740876837050858, 0.71288964578253644,
      0.68406227634233929, 0.65450849718747373, 0.62434494358242765,
      0.5936906572928623, 0.56266661678215224, 0.53139525976465651,
      0.50000000000000011, 0.46860474023534354, 0.43733338321784787,
      0.40630934270713781, 0.37565505641757246, 0.34549150281252639,
      0.31593772365766082, 0.28711035421746367, 0.2591231629491425,
      0.232086602510502, 0.20610737385376349, 0.18128800512565535,
      0.15772644703565564, 0.13551568628929433, 0.11474337861210532,
      0.09549150281252633, 0.077836037248992351, 0.061846659978068208,
      0.047586473766990323, 0.035111757055874437, 0.024471741852423234,
      0.015708419435684517, 0.00885637463565564, 0.0039426493427611176,
      0.00098663578586422052, 0.0 },

    { 0.0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12,
      0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24,
      0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.33, 0.34,
      0.35000000000000003, 0.36, 0.37, 0.38, 0.39, 0.4, 0.41000000000000003,
      0.42, 0.43, 0.44, 0.45, 0.46, 0.47000000000000003, 0.48, 0.49, 0.5, 0.51,
      0.52, 0.53, 0.54, 0.55, 0.56, 0.57000000000000006, 0.58000000000000007,
      0.59, 0.6, 0.61, 0.62, 0.63, 0.64, 0.64999999999999991,
      0.65999999999999992, 0.66999999999999993, 0.67999999999999994, 0.69, 0.7,
      0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.78, 0.79, 0.8, 0.81,
      0.82000000000000006, 0.83, 0.84, 0.85, 0.86, 0.87, 0.88, 0.89, 0.9, 0.91,
      0.92, 0.92999999999999994, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99, 1.0 },
    0.0,
    0.0,
    0.05,
    0.0,
    0.05,
    0.0,
    1.0,
    0.0,

    { 0.0, 0.00098663578586422052, 0.003942649342761062, 0.0088563746356556949,
      0.015708419435684462, 0.024471741852423234, 0.035111757055874326,
      0.047586473766990267, 0.061846659978068208, 0.077836037248992462,
      0.095491502812526274, 0.11474337861210537, 0.13551568628929422,
      0.15772644703565569, 0.18128800512565518, 0.20610737385376343,
      0.23208660251050173, 0.25912316294914245, 0.28711035421746367,
      0.315937723657661, 0.34549150281252627, 0.37565505641757257,
      0.4063093427071377, 0.43733338321784787, 0.46860474023534326, 0.5,
      0.53139525976465674, 0.56266661678215224, 0.59369065729286241,
      0.62434494358242731, 0.65450849718747373, 0.684062276342339,
      0.71288964578253644, 0.74087683705085772, 0.76791339748949849,
      0.79389262614623657, 0.81871199487434487, 0.84227355296434436,
      0.86448431371070567, 0.88525662138789452, 0.90450849718747373,
      0.92216396275100754, 0.93815334002193174, 0.95241352623300979,
      0.96488824294412567, 0.97552825814757682, 0.98429158056431554,
      0.99114362536434442, 0.99605735065723888, 0.99901336421413578, 1.0,
      0.99901336421413578, 0.99605735065723888, 0.99114362536434431,
      0.98429158056431554, 0.97552825814757671, 0.96488824294412567,
      0.95241352623300979, 0.93815334002193174, 0.92216396275100765,
      0.90450849718747373, 0.88525662138789463, 0.86448431371070567,
      0.84227355296434436, 0.81871199487434476, 0.7938926261462369,
      0.76791339748949849, 0.740876837050858, 0.71288964578253644,
      0.68406227634233929, 0.65450849718747373, 0.62434494358242765,
      0.5936906572928623, 0.56266661678215224, 0.53139525976465651,
      0.50000000000000011, 0.46860474023534354, 0.43733338321784787,
      0.40630934270713781, 0.37565505641757246, 0.34549150281252639,
      0.31593772365766082, 0.28711035421746367, 0.2591231629491425,
      0.232086602510502, 0.20610737385376349, 0.18128800512565535,
      0.15772644703565564, 0.13551568628929433, 0.11474337861210532,
      0.09549150281252633, 0.077836037248992351, 0.061846659978068208,
      0.047586473766990323, 0.035111757055874437, 0.024471741852423234,
      0.015708419435684517, 0.00885637463565564, 0.0039426493427611176,
      0.00098663578586422052, 0.0 },

    { 0.0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12,
      0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24,
      0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.33, 0.34,
      0.35000000000000003, 0.36, 0.37, 0.38, 0.39, 0.4, 0.41000000000000003,
      0.42, 0.43, 0.44, 0.45, 0.46, 0.47000000000000003, 0.48, 0.49, 0.5, 0.51,
      0.52, 0.53, 0.54, 0.55, 0.56, 0.57000000000000006, 0.58000000000000007,
      0.59, 0.6, 0.61, 0.62, 0.63, 0.64, 0.64999999999999991,
      0.65999999999999992, 0.66999999999999993, 0.67999999999999994, 0.69, 0.7,
      0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.78, 0.79, 0.8, 0.81,
      0.82000000000000006, 0.83, 0.84, 0.85, 0.86, 0.87, 0.88, 0.89, 0.9, 0.91,
      0.92, 0.92999999999999994, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99, 1.0 },
    1.0,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    1.0,
    0.5,
    0.5,
    0.0,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    1.0,
    0.5,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    1.0,
    1.0,
    0.5,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    1.0,
    0.5,
    1.0,
    0.5,
    0.5,
    1.0,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.5,
    0.0,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    1.0,
    0.5,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    1.0,
    0.5,
    1.0,
    0.5,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    0.5,
    1.0,
    1.0,
    0.5,
    1.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.0,
    0.5,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    1.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0.0,
    0.5,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,

    { 1, 0, 0, 0, 0 },

    { 1, 0, 0, 0, 0 },

    { 1, 1, 1, 0, 0 },
    0,

    { 0, 0, 0, 0, 1 },

    { 0, 1, 0, 0, 0 },

    { 0, 1, 0, 0, 0 },

    { 0, 0, 1, 0, 0 },

    { 0, 1, 0, 0, 0 },
    0,

    { 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0 },

    { 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0 },

    { 1, 0, 1, 0 },

    { 1, 0, 1, 0 },

    { 1, 0, 1, 0 },

    { 1, 0, 1, 0 },

    { 1, 0, 1, 0 },

    { 1, 1, 0, 0 },

    { 1, 1, 0, 0 },

    { 1, 1, 0, 0 },

    { 1, 1, 0, 0 },

    { 1, 1, 0, 0 },

    { 1, 0, 0, 1 },

    { 1, 0, 0, 1 },

    { 1, 0, 0, 1 },

    { 1, 0, 0, 1 },

    { 1, 0, 0, 1 },
    1,
    128U,

    /* Start of '<S16>/If Action Subsystem1' */
    {
      0.0
    }
    ,

    /* End of '<S16>/If Action Subsystem1' */

    /* Start of '<S16>/If Action Subsystem' */
    {
      23341.0,
      0.5,
      0.0,
      0.31415926535897931,
      0.015707317311820675,
      0.99987663248166059,
      -0.015707317311820675,
      0.99987663248166059,
      0.0,
      1.0
    }
    ,

    /* End of '<S16>/If Action Subsystem' */

    /* Start of '<S14>/TimerOnDelay NoInit' */
    {
      0.0,
      0.05,
      0.0,
      0.0
    }
    ,

    /* End of '<S14>/TimerOnDelay NoInit' */

    /* Start of '<S15>/BICK_Delay' */
    {
      1.0,
      0.0,
      -1.0,
      0.0,
      1.0,
      0.05,
      1.0,
      0.0
    }
    ,

    /* End of '<S15>/BICK_Delay' */

    /* Start of '<S15>/TimerOffDelay NoInit' */
    {
      1.0,
      0.0,
      -1.0,
      0.0,
      1.0,
      0.05,
      1.0,
      0.0
    }
    ,

    /* End of '<S15>/TimerOffDelay NoInit' */

    /* Start of '<S84>/TimerOnDelay NoInit2' */
    {
      0.0,
      0.05,
      0.0,
      0.0
    }
    ,

    /* End of '<S84>/TimerOnDelay NoInit2' */

    /* Start of '<S84>/TimerOnDelay NoInit3' */
    {
      0.0,
      0.05,
      0.0,
      0.0
    }
    ,

    /* End of '<S84>/TimerOnDelay NoInit3' */

    /* Start of '<S220>/If Action Subsystem1' */
    {
      0.0
    }
    ,

    /* End of '<S220>/If Action Subsystem1' */

    /* Start of '<S220>/If Action Subsystem' */
    {
      23341.0,
      0.5,
      0.0,
      0.31415926535897931,
      0.015707317311820675,
      0.99987663248166059,
      -0.015707317311820675,
      0.99987663248166059,
      0.0,
      1.0
    }
    ,

    /* End of '<S220>/If Action Subsystem' */

    /* Start of '<S322>/TimerOffDelay NoInit' */
    {
      1.0,
      0.0,
      -1.0,
      0.0,
      1.0,
      0.05,
      1.0,
      0.0
    }
    ,

    /* End of '<S322>/TimerOffDelay NoInit' */

    /* Start of '<S797>/TimerOnDelay NoInit' */
    {
      0.0,
      0.05,
      0.0,
      0.0
    }
    ,

    /* End of '<S797>/TimerOnDelay NoInit' */

    /* Start of '<S835>/TimerOnDelay NoInit' */
    {
      0.0,
      0.05,
      0.0,
      0.0
    }
    ,

    /* End of '<S835>/TimerOnDelay NoInit' */

    /* Start of '<S1085>/TimerOffDelay NoInit' */
    {
      1.0,
      0.0,
      -1.0,
      0.0,
      1.0,
      0.05,
      1.0,
      0.0
    }
    ,

    /* End of '<S1085>/TimerOffDelay NoInit' */

    /* Start of '<S1336>/TimerOnDelay NoInit' */
    {
      0.0,
      0.05,
      0.0,
      0.0
    }
    /* End of '<S1336>/TimerOnDelay NoInit' */
  }
  /* End of '<S1>/CoreSubsys' */
};

/*
 * System initialize for atomic system:
 *    '<S1336>/TimerOnDelay NoInit'
 *    '<S835>/TimerOnDelay NoInit'
 *    '<S797>/TimerOnDelay NoInit'
 *    '<S84>/TimerOnDelay NoInit3'
 *    '<S84>/TimerOnDelay NoInit2'
 *    '<S14>/TimerOnDelay NoInit'
 */
void ElectricalSystem_TimerOnDelayNoInit_Init
  (DW_TimerOnDelayNoInit_ElectricalSystem_T *localDW,
   P_TimerOnDelayNoInit_ElectricalSystem_T *localP)
{
  /* InitializeConditions for DiscreteIntegrator: '<S1337>/Timer' */
  localDW->Timer_DSTATE = localP->Timer_IC;
  localDW->Timer_PrevResetState = 0;
}

/*
 * System reset for atomic system:
 *    '<S1336>/TimerOnDelay NoInit'
 *    '<S835>/TimerOnDelay NoInit'
 *    '<S797>/TimerOnDelay NoInit'
 *    '<S84>/TimerOnDelay NoInit3'
 *    '<S84>/TimerOnDelay NoInit2'
 *    '<S14>/TimerOnDelay NoInit'
 */
void ElectricalSystem_TimerOnDelayNoInit_Reset
  (DW_TimerOnDelayNoInit_ElectricalSystem_T *localDW,
   P_TimerOnDelayNoInit_ElectricalSystem_T *localP)
{
  /* InitializeConditions for DiscreteIntegrator: '<S1337>/Timer' */
  localDW->Timer_DSTATE = localP->Timer_IC;
  localDW->Timer_PrevResetState = 0;
}

/*
 * Start for atomic system:
 *    '<S1336>/TimerOnDelay NoInit'
 *    '<S835>/TimerOnDelay NoInit'
 *    '<S797>/TimerOnDelay NoInit'
 *    '<S84>/TimerOnDelay NoInit3'
 *    '<S84>/TimerOnDelay NoInit2'
 *    '<S14>/TimerOnDelay NoInit'
 */
void ElectricalSystem_TimerOnDelayNoInit_Start
  (B_TimerOnDelayNoInit_ElectricalSystem_T *localB,
   DW_TimerOnDelayNoInit_ElectricalSystem_T *localDW)
{
  localDW->Timer_DSTATE = 0.0;
  localB->Compare = false;
}

/*
 * Output and update for atomic system:
 *    '<S1336>/TimerOnDelay NoInit'
 *    '<S835>/TimerOnDelay NoInit'
 *    '<S797>/TimerOnDelay NoInit'
 *    '<S84>/TimerOnDelay NoInit3'
 *    '<S84>/TimerOnDelay NoInit2'
 *    '<S14>/TimerOnDelay NoInit'
 */
void ElectricalSystem_TimerOnDelayNoInit(boolean_T rtu_In,
  B_TimerOnDelayNoInit_ElectricalSystem_T *localB,
  DW_TimerOnDelayNoInit_ElectricalSystem_T *localDW,
  P_TimerOnDelayNoInit_ElectricalSystem_T *localP, real_T
  rtp_UpperSaturationLimit)
{
  /* local block i/o variables */
  boolean_T rtb_LogicalOperator_h0v;
  int32_T rtb_Timer_o2;
  real_T Timer_o1;

  /* Logic: '<S1337>/Logical Operator' */
  rtb_LogicalOperator_h0v = !rtu_In;

  /* DiscreteIntegrator: '<S1337>/Timer' incorporates:
   *  DataTypeConversion: '<S1337>/Data Type Conversion'
   */
  if (rtb_LogicalOperator_h0v || (localDW->Timer_PrevResetState != 0)) {
    localDW->Timer_DSTATE = localP->Timer_IC;
  }

  Timer_o1 = localP->Timer_gainval * static_cast<real_T>(rtu_In) +
    localDW->Timer_DSTATE;
  if (Timer_o1 >= rtp_UpperSaturationLimit) {
    Timer_o1 = rtp_UpperSaturationLimit;
    rtb_Timer_o2 = 1;
  } else if (Timer_o1 <= localP->Timer_LowerSat) {
    Timer_o1 = localP->Timer_LowerSat;
    rtb_Timer_o2 = -1;
  } else {
    rtb_Timer_o2 = 0;
  }

  /* End of DiscreteIntegrator: '<S1337>/Timer' */

  /* RelationalOperator: '<S1338>/Compare' incorporates:
   *  Constant: '<S1338>/Constant'
   */
  localB->Compare = (rtb_Timer_o2 > localP->Constant_Value);

  /* Update for DiscreteIntegrator: '<S1337>/Timer' */
  localDW->Timer_DSTATE = Timer_o1;
  localDW->Timer_PrevResetState = static_cast<int8_T>(rtb_LogicalOperator_h0v);
}

/*
 * System initialize for atomic system:
 *    '<S1085>/TimerOffDelay NoInit'
 *    '<S322>/TimerOffDelay NoInit'
 *    '<S15>/TimerOffDelay NoInit'
 *    '<S15>/BICK_Delay'
 */
void ElectricalSystem_TimerOffDelayNoInit_Init
  (DW_TimerOffDelayNoInit_ElectricalSystem_T *localDW)
{
  /* InitializeConditions for DiscreteIntegrator: '<S1106>/Discrete-Time Integrator' */
  localDW->DiscreteTimeIntegrator_IC_LOADING = 1U;
  localDW->DiscreteTimeIntegrator_PrevResetState = 0;
}

/*
 * System reset for atomic system:
 *    '<S1085>/TimerOffDelay NoInit'
 *    '<S322>/TimerOffDelay NoInit'
 *    '<S15>/TimerOffDelay NoInit'
 *    '<S15>/BICK_Delay'
 */
void ElectricalSystem_TimerOffDelayNoInit_Reset
  (DW_TimerOffDelayNoInit_ElectricalSystem_T *localDW)
{
  /* InitializeConditions for DiscreteIntegrator: '<S1106>/Discrete-Time Integrator' */
  localDW->DiscreteTimeIntegrator_IC_LOADING = 1U;
  localDW->DiscreteTimeIntegrator_PrevResetState = 0;
}

/*
 * Start for atomic system:
 *    '<S1085>/TimerOffDelay NoInit'
 *    '<S322>/TimerOffDelay NoInit'
 *    '<S15>/TimerOffDelay NoInit'
 *    '<S15>/BICK_Delay'
 */
void ElectricalSystem_TimerOffDelayNoInit_Start
  (B_TimerOffDelayNoInit_ElectricalSystem_T *localB,
   DW_TimerOffDelayNoInit_ElectricalSystem_T *localDW)
{
  localDW->DiscreteTimeIntegrator_DSTATE = 0.0;
  localB->LogicalOperator1 = false;

  /* Start for InitialCondition: '<S1106>/IC' */
  localDW->IC_FirstOutputTime = true;
}

/*
 * Output and update for atomic system:
 *    '<S1085>/TimerOffDelay NoInit'
 *    '<S322>/TimerOffDelay NoInit'
 *    '<S15>/TimerOffDelay NoInit'
 *    '<S15>/BICK_Delay'
 */
void ElectricalSystem_TimerOffDelayNoInit(boolean_T rtu_In,
  B_TimerOffDelayNoInit_ElectricalSystem_T *localB,
  DW_TimerOffDelayNoInit_ElectricalSystem_T *localDW,
  P_TimerOffDelayNoInit_ElectricalSystem_T *localP)
{
  real_T rtb_DiscreteTimeIntegrator_o2;
  real_T DiscreteTimeIntegrator_o1;

  /* InitialCondition: '<S1106>/IC' incorporates:
   *  Constant: '<S1106>/Initialise'
   */
  if (localDW->IC_FirstOutputTime) {
    localDW->IC_FirstOutputTime = false;
    rtb_DiscreteTimeIntegrator_o2 = localP->IC_Value;
  } else {
    rtb_DiscreteTimeIntegrator_o2 = localP->Initialise_Value;
  }

  /* End of InitialCondition: '<S1106>/IC' */

  /* Switch: '<S1106>/Switch2' incorporates:
   *  Constant: '<S1106>/Initialise'
   *  Constant: '<S1106>/OffTime'
   */
  if (rtb_DiscreteTimeIntegrator_o2 != 0.0) {
    rtb_DiscreteTimeIntegrator_o2 = localP->Initialise_Value;
  } else {
    rtb_DiscreteTimeIntegrator_o2 = localP->OffTime_Value;
  }

  /* End of Switch: '<S1106>/Switch2' */

  /* DiscreteIntegrator: '<S1106>/Discrete-Time Integrator' incorporates:
   *  DataTypeConversion: '<S1106>/Data Type Conversion'
   *  Gain: '<S1106>/Gain'
   *  Logic: '<S1106>/Logical Operator'
   */
  if (localDW->DiscreteTimeIntegrator_IC_LOADING != 0) {
    localDW->DiscreteTimeIntegrator_DSTATE = rtb_DiscreteTimeIntegrator_o2;
    if (localDW->DiscreteTimeIntegrator_DSTATE >=
        localP->DiscreteTimeIntegrator_UpperSat) {
      localDW->DiscreteTimeIntegrator_DSTATE =
        localP->DiscreteTimeIntegrator_UpperSat;
    } else {
      if (localDW->DiscreteTimeIntegrator_DSTATE <=
          localP->DiscreteTimeIntegrator_LowerSat) {
        localDW->DiscreteTimeIntegrator_DSTATE =
          localP->DiscreteTimeIntegrator_LowerSat;
      }
    }
  }

  if (rtu_In || (localDW->DiscreteTimeIntegrator_PrevResetState != 0)) {
    localDW->DiscreteTimeIntegrator_DSTATE = rtb_DiscreteTimeIntegrator_o2;
    if (localDW->DiscreteTimeIntegrator_DSTATE >=
        localP->DiscreteTimeIntegrator_UpperSat) {
      localDW->DiscreteTimeIntegrator_DSTATE =
        localP->DiscreteTimeIntegrator_UpperSat;
    } else {
      if (localDW->DiscreteTimeIntegrator_DSTATE <=
          localP->DiscreteTimeIntegrator_LowerSat) {
        localDW->DiscreteTimeIntegrator_DSTATE =
          localP->DiscreteTimeIntegrator_LowerSat;
      }
    }
  }

  DiscreteTimeIntegrator_o1 = localP->Gain_Gain * static_cast<real_T>(!rtu_In) *
    localP->DiscreteTimeIntegrator_gainval +
    localDW->DiscreteTimeIntegrator_DSTATE;
  if (DiscreteTimeIntegrator_o1 >= localP->DiscreteTimeIntegrator_UpperSat) {
    DiscreteTimeIntegrator_o1 = localP->DiscreteTimeIntegrator_UpperSat;
    rtb_DiscreteTimeIntegrator_o2 = 1.0;
  } else if (DiscreteTimeIntegrator_o1 <=
             localP->DiscreteTimeIntegrator_LowerSat) {
    DiscreteTimeIntegrator_o1 = localP->DiscreteTimeIntegrator_LowerSat;
    rtb_DiscreteTimeIntegrator_o2 = -1.0;
  } else {
    rtb_DiscreteTimeIntegrator_o2 = 0.0;
  }

  /* End of DiscreteIntegrator: '<S1106>/Discrete-Time Integrator' */

  /* Logic: '<S1106>/Logical Operator1' incorporates:
   *  Constant: '<S1110>/Constant'
   *  RelationalOperator: '<S1110>/Compare'
   */
  localB->LogicalOperator1 = ((rtb_DiscreteTimeIntegrator_o2 >=
    localP->Constant_Value) || rtu_In);

  /* Update for DiscreteIntegrator: '<S1106>/Discrete-Time Integrator' */
  localDW->DiscreteTimeIntegrator_IC_LOADING = 0U;
  localDW->DiscreteTimeIntegrator_DSTATE = DiscreteTimeIntegrator_o1;
  localDW->DiscreteTimeIntegrator_PrevResetState = static_cast<int8_T>(rtu_In);
}

/*
 * Start for action system:
 *    '<S883>/If Action Subsystem'
 *    '<S883>/If Action Subsystem1'
 *    '<S883>/If Action Subsystem2'
 *    '<S882>/If Action Subsystem'
 *    '<S882>/If Action Subsystem1'
 *    '<S882>/If Action Subsystem2'
 */
void ElectricalSystem_IfActionSubsystem_Start(real_T *rty_Out1)
{
  *rty_Out1 = 0.0;
}

/*
 * Output and update for action system:
 *    '<S883>/If Action Subsystem'
 *    '<S883>/If Action Subsystem1'
 *    '<S883>/If Action Subsystem2'
 *    '<S882>/If Action Subsystem'
 *    '<S882>/If Action Subsystem1'
 *    '<S882>/If Action Subsystem2'
 */
void ElectricalSystem_IfActionSubsystem(real_T rtu_In1, real_T *rty_Out1)
{
  /* Inport: '<S916>/In1' */
  *rty_Out1 = rtu_In1;
}

/*
 * System initialize for action system:
 *    '<S220>/If Action Subsystem'
 *    '<S16>/If Action Subsystem'
 */
void ElectricalSystem_IfActionSubsystem_Init
  (DW_IfActionSubsystem_ElectricalSystem_p_T *localDW,
   P_IfActionSubsystem_ElectricalSystem_i_T *localP)
{
  uint32_T tseed;
  int32_T r;
  int32_T t;
  real_T tmp;

  /* InitializeConditions for RandomNumber: '<S227>/White Noise' */
  tmp = floor(localP->BandLimitedWhiteNoise_seed);
  if (rtIsNaN(tmp) || rtIsInf(tmp)) {
    tmp = 0.0;
  } else {
    tmp = fmod(tmp, 4.294967296E+9);
  }

  tseed = tmp < 0.0 ? static_cast<uint32_T>(-static_cast<int32_T>
    (static_cast<uint32_T>(-tmp))) : static_cast<uint32_T>(tmp);
  r = static_cast<int32_T>((tseed >> 16U));
  t = static_cast<int32_T>((tseed & 32768U));
  tseed = ((((tseed - (static_cast<uint32_T>(r) << 16U)) + t) << 16U) + t) + r;
  if (tseed < 1U) {
    tseed = 1144108930U;
  } else {
    if (tseed > 2147483646U) {
      tseed = 2147483646U;
    }
  }

  localDW->RandSeed = tseed;
  localDW->NextOutput = rt_nrand_Upu32_Yd_f_pw_snf(&localDW->RandSeed) *
    localP->WhiteNoise_StdDev + localP->WhiteNoise_Mean;

  /* End of InitializeConditions for RandomNumber: '<S227>/White Noise' */
}

/*
 * Enable for action system:
 *    '<S220>/If Action Subsystem'
 *    '<S16>/If Action Subsystem'
 */
void ElectricalSystem_IfActionSubsystem_Enable
  (DW_IfActionSubsystem_ElectricalSystem_p_T *localDW)
{
  /* Enable for Sin: '<S225>/Sine Wave' */
  localDW->systemEnable = 1;
}

/*
 * Start for action system:
 *    '<S220>/If Action Subsystem'
 *    '<S16>/If Action Subsystem'
 */
void ElectricalSystem_IfActionSubsystem_e_Start
  (DW_IfActionSubsystem_ElectricalSystem_p_T *localDW)
{
  localDW->lastSin = 0.0;
  localDW->lastCos = 0.0;
  localDW->NextOutput = 0.0;
}

/*
 * Output and update for action system:
 *    '<S220>/If Action Subsystem'
 *    '<S16>/If Action Subsystem'
 */
void ElectricalSystem_IfActionSubsystem_i(RT_MODEL_ElectricalSystem_T * const
  ElectricalSystem_M, real_T *rty_Out1,
  DW_IfActionSubsystem_ElectricalSystem_p_T *localDW,
  P_IfActionSubsystem_ElectricalSystem_i_T *localP, real_T rtp_Cov, real_T
  rtp_Value)
{
  real_T lastSin_tmp;

  /* Sin: '<S225>/Sine Wave' */
  if (localDW->systemEnable != 0) {
    lastSin_tmp = localP->SineWave_Freq * (( rtmGetClockTick0(ElectricalSystem_M)
      + rtmGetClockTickH0(ElectricalSystem_M)*4294967296.0 ) * 0.05);
    localDW->lastSin = sin(lastSin_tmp);
    localDW->lastCos = cos(lastSin_tmp);
    localDW->systemEnable = 0;
  }

  /* Sum: '<S225>/Add' incorporates:
   *  Constant: '<S225>/Constant'
   *  Gain: '<S227>/Output'
   *  RandomNumber: '<S227>/White Noise'
   *  Sin: '<S225>/Sine Wave'
   */
  *rty_Out1 = ((((localDW->lastSin * localP->SineWave_PCos + localDW->lastCos *
                  localP->SineWave_PSin) * localP->SineWave_HCos +
                 (localDW->lastCos * localP->SineWave_PCos - localDW->lastSin *
                  localP->SineWave_PSin) * localP->SineWave_Hsin) *
                localP->SineWave_Amp + localP->SineWave_Bias) + sqrt(rtp_Cov) /
               0.22360679774997896 * localDW->NextOutput) + rtp_Value;

  /* Update for Sin: '<S225>/Sine Wave' */
  lastSin_tmp = localDW->lastSin;
  localDW->lastSin = localDW->lastSin * localP->SineWave_HCos + localDW->lastCos
    * localP->SineWave_Hsin;
  localDW->lastCos = localDW->lastCos * localP->SineWave_HCos - lastSin_tmp *
    localP->SineWave_Hsin;

  /* Update for RandomNumber: '<S227>/White Noise' */
  localDW->NextOutput = rt_nrand_Upu32_Yd_f_pw_snf(&localDW->RandSeed) *
    localP->WhiteNoise_StdDev + localP->WhiteNoise_Mean;
}

/*
 * Output and update for action system:
 *    '<S220>/If Action Subsystem1'
 *    '<S16>/If Action Subsystem1'
 */
void ElectricalSystem_IfActionSubsystem1(real_T *rty_Out1,
  P_IfActionSubsystem1_ElectricalSystem_T *localP)
{
  /* SignalConversion generated from: '<S226>/Out1' incorporates:
   *  Constant: '<S226>/Constant'
   */
  *rty_Out1 = localP->Constant_Value;
}

/*
 * Output and update for atomic system:
 *    '<S1352>/Orientation Swap'
 *    '<S1353>/Orientation Swap'
 *    '<S1377>/Orientation Swap'
 *    '<S1378>/Orientation Swap'
 *    '<S1391>/Orientation Swap'
 *    '<S1392>/Orientation Swap'
 *    '<S1405>/Orientation Swap'
 *    '<S1406>/Orientation Swap'
 *    '<S1419>/Orientation Swap'
 *    '<S1420>/Orientation Swap'
 *    ...
 */
void ElectricalSystem_OrientationSwap(const real_T rtu_s1[8], const real_T
  rtu_s2[8], const real_T rtu_orientation[8],
  B_OrientationSwap_ElectricalSystem_T *localB)
{
  int32_T i;
  for (i = 0; i < 8; i++) {
    if (rtu_orientation[i] > 1.5) {
      localB->w1[i] = rtu_s2[i];
      localB->w2[i] = rtu_s1[i];
    } else {
      localB->w1[i] = rtu_s1[i];
      localB->w2[i] = rtu_s2[i];
    }
  }
}

/*
 * Start for atomic system:
 *    '<S1358>/Enumerated Voltages'
 *    '<S1362>/Enumerated Voltages'
 *    '<S1383>/Enumerated Voltages'
 *    '<S1387>/Enumerated Voltages'
 *    '<S1397>/Enumerated Voltages'
 *    '<S1401>/Enumerated Voltages'
 *    '<S1411>/Enumerated Voltages'
 *    '<S1415>/Enumerated Voltages'
 *    '<S1425>/Enumerated Voltages'
 *    '<S1429>/Enumerated Voltages'
 *    ...
 */
void ElectricalSystem_EnumeratedVoltages_Start
  (B_EnumeratedVoltages_ElectricalSystem_T *localB)
{
  memset(&localB->enum_volt[0], 0, sizeof(real_T) << 3U);
}

/*
 * Output and update for atomic system:
 *    '<S1358>/Enumerated Voltages'
 *    '<S1362>/Enumerated Voltages'
 *    '<S1383>/Enumerated Voltages'
 *    '<S1387>/Enumerated Voltages'
 *    '<S1397>/Enumerated Voltages'
 *    '<S1401>/Enumerated Voltages'
 *    '<S1411>/Enumerated Voltages'
 *    '<S1415>/Enumerated Voltages'
 *    '<S1425>/Enumerated Voltages'
 *    '<S1429>/Enumerated Voltages'
 *    ...
 */
void ElectricalSystem_EnumeratedVoltages(const boolean_T rtu_connection[8],
  B_EnumeratedVoltages_ElectricalSystem_T *localB)
{
  int32_T i;
  memset(&localB->enum_volt[0], 0, sizeof(real_T) << 3U);
  localB->enum_volt[0] = 1.0;
  for (i = 0; i < 7; i++) {
    if (!rtu_connection[i + 1]) {
      localB->enum_volt[i + 1] = localB->enum_volt[i] + 1.0;
    } else {
      localB->enum_volt[i + 1] = localB->enum_volt[i];
    }
  }
}

/*
 * Output and update for atomic system:
 *    '<S1359>/TrainWireMax'
 *    '<S1363>/TrainWireMax'
 *    '<S1384>/TrainWireMax'
 *    '<S1388>/TrainWireMax'
 *    '<S1398>/TrainWireMax'
 *    '<S1402>/TrainWireMax'
 *    '<S1412>/TrainWireMax'
 *    '<S1416>/TrainWireMax'
 *    '<S1426>/TrainWireMax'
 *    '<S1430>/TrainWireMax'
 *    ...
 */
void ElectricalSystem_TrainWireMax(const real_T rtu_s[8], const real_T
  rtu_enum_volt[8], B_TrainWireMax_ElectricalSystem_T *localB)
{
  real_T w_values[8];
  boolean_T enum_volt_in_range[8];
  real_T ex;
  int32_T idx;
  int32_T k;
  boolean_T exitg1;
  if (!rtIsNaN(rtu_s[0])) {
    idx = 1;
  } else {
    idx = 0;
    k = 2;
    exitg1 = false;
    while ((!exitg1) && (k < 9)) {
      if (!rtIsNaN(rtu_s[k - 1])) {
        idx = k;
        exitg1 = true;
      } else {
        k++;
      }
    }
  }

  if (idx == 0) {
    ex = rtu_s[0];
  } else {
    ex = rtu_s[idx - 1];
    while (idx + 1 < 9) {
      if (ex > rtu_s[idx]) {
        ex = rtu_s[idx];
      }

      idx++;
    }
  }

  for (idx = 0; idx < 8; idx++) {
    w_values[idx] = ex;
    enum_volt_in_range[idx] = ((rtu_enum_volt[idx] > 0.0) && (rtu_enum_volt[idx]
      <= 8.0));
  }

  for (idx = 0; idx < 8; idx++) {
    if (enum_volt_in_range[idx]) {
      k = static_cast<int32_T>(rtu_enum_volt[idx]) - 1;
      if (rtu_s[idx] > w_values[k]) {
        w_values[k] = rtu_s[idx];
      }
    }

    localB->w[idx] = 0.0;
  }

  for (idx = 0; idx < 8; idx++) {
    if (enum_volt_in_range[idx]) {
      localB->w[idx] = w_values[static_cast<int32_T>(rtu_enum_volt[idx]) - 1];
    }
  }
}

/*
 * Start for iterator system:
 *    '<S1475>/TrainWires'
 *    '<S1485>/TrainWires'
 */
void ElectricalSystem_TrainWires_Start(int32_T NumIters,
  B_TrainWires_ElectricalSystem_T localB[54])
{
  /* local scratch DWork variables */
  int32_T ForEach_itr;
  for (ForEach_itr = 0; ForEach_itr < NumIters; ForEach_itr++) {
    /* Start for MATLAB Function: '<S1481>/Enumerated Voltages' */
    ElectricalSystem_EnumeratedVoltages_Start(&localB[ForEach_itr].
      CoreSubsys.sf_EnumeratedVoltages);
  }
}

/*
 * Output and update for iterator system:
 *    '<S1475>/TrainWires'
 *    '<S1485>/TrainWires'
 */
void ElectricalSystem_TrainWires(int32_T NumIters, const real_T rtu_wires[432],
  const boolean_T rtu_connection[8], real_T rty_wires_s[432],
  B_TrainWires_ElectricalSystem_T localB[54])
{
  /* local scratch DWork variables */
  int32_T ForEach_itr;
  real_T w_values[8];
  boolean_T enum_volt_in_range[8];
  real_T ex;
  int32_T idx;
  int32_T k;
  real_T rtb_wires_s_CoreSubsysCanOut[8];
  int32_T tmp;
  boolean_T exitg1;

  /* Outputs for Iterator SubSystem: '<S1475>/TrainWires' incorporates:
   *  ForEach: '<S1478>/For Each'
   */
  for (ForEach_itr = 0; ForEach_itr < NumIters; ForEach_itr++) {
    /* MATLAB Function: '<S1481>/Enumerated Voltages' */
    ElectricalSystem_EnumeratedVoltages(rtu_connection, &localB[ForEach_itr].
      CoreSubsys.sf_EnumeratedVoltages);

    /* MATLAB Function: '<S1482>/TrainWireMax' incorporates:
     *  ForEachSliceSelector generated from: '<S1478>/wires'
     */
    if (!rtIsNaN(rtu_wires[ForEach_itr])) {
      idx = 1;
    } else {
      idx = 0;
      k = 2;
      exitg1 = false;
      while ((!exitg1) && (k < 9)) {
        if (!rtIsNaN(rtu_wires[(k - 1) * NumIters + ForEach_itr])) {
          idx = k;
          exitg1 = true;
        } else {
          k++;
        }
      }
    }

    if (idx == 0) {
      ex = rtu_wires[ForEach_itr];
    } else {
      ex = rtu_wires[(idx - 1) * NumIters + ForEach_itr];
      while (idx + 1 < 9) {
        k = idx * NumIters + ForEach_itr;
        if (ex > rtu_wires[k]) {
          ex = rtu_wires[k];
        }

        idx++;
      }
    }

    for (k = 0; k < 8; k++) {
      w_values[k] = ex;
    }

    for (idx = 0; idx < 8; idx++) {
      enum_volt_in_range[idx] = ((localB[ForEach_itr].
        CoreSubsys.sf_EnumeratedVoltages.enum_volt[idx] > 0.0) &&
        (localB[ForEach_itr].CoreSubsys.sf_EnumeratedVoltages.enum_volt[idx] <=
         8.0));
    }

    for (idx = 0; idx < 8; idx++) {
      if (enum_volt_in_range[idx]) {
        k = idx * NumIters + ForEach_itr;
        tmp = static_cast<int32_T>(localB[ForEach_itr].
          CoreSubsys.sf_EnumeratedVoltages.enum_volt[idx]) - 1;
        if (rtu_wires[k] > w_values[tmp]) {
          w_values[tmp] = rtu_wires[k];
        }
      }
    }

    memset(&rtb_wires_s_CoreSubsysCanOut[0], 0, sizeof(real_T) << 3U);
    for (idx = 0; idx < 8; idx++) {
      if (enum_volt_in_range[idx]) {
        rtb_wires_s_CoreSubsysCanOut[idx] = w_values[static_cast<int32_T>
          (localB[ForEach_itr].CoreSubsys.sf_EnumeratedVoltages.enum_volt[idx])
          - 1];
      }
    }

    /* End of MATLAB Function: '<S1482>/TrainWireMax' */

    /* ForEachSliceAssignment generated from: '<S1478>/wires_s' */
    for (idx = 0; idx < 8; idx++) {
      rty_wires_s[idx * NumIters + ForEach_itr] =
        rtb_wires_s_CoreSubsysCanOut[idx];
    }
  }

  /* End of Outputs for SubSystem: '<S1475>/TrainWires' */
}

/* System initialize for referenced model: 'ElectricalSystem' */
void ElectricalSystem_Init(B_ElectricalSystem_c_T *localB,
  DW_ElectricalSystem_f_T *localDW)
{
  /* local scratch DWork variables */
  int32_T ForEach_itr_h;
  int32_T i;

  /* InitializeConditions for UnitDelay: '<Root>/Unit Delay' */
  for (i = 0; i < 8; i++) {
    localDW->UnitDelay_DSTATE[i] = ElectricalSystem_P.UnitDelay_InitialCondition;
  }

  /* End of InitializeConditions for UnitDelay: '<Root>/Unit Delay' */

  /* SystemInitialize for Iterator SubSystem: '<Root>/Model (Per Car)' */
  for (ForEach_itr_h = 0; ForEach_itr_h < 8; ForEach_itr_h++) {
    /* InitializeConditions for UnitDelay: '<S826>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S823>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ki =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_k;

    /* InitializeConditions for UnitDelay: '<S869>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dw =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_a;

    /* InitializeConditions for UnitDelay: '<S824>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b =
      ElectricalSystem_P.CoreSubsys.RelayWrite3_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S25>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_of =
      ElectricalSystem_P.CoreSubsys.BF1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S26>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ov =
      ElectricalSystem_P.CoreSubsys.BIC_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S30>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_g =
      ElectricalSystem_P.CoreSubsys.BICK1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S38>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_d =
      ElectricalSystem_P.CoreSubsys.BRR2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S40>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_n =
      ElectricalSystem_P.CoreSubsys.BVMR1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S68>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_g;

    /* InitializeConditions for UnitDelay: '<S69>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ft =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_o;

    /* InitializeConditions for UnitDelay: '<S70>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gd =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_d;

    /* InitializeConditions for UnitDelay: '<S71>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_on =
      ElectricalSystem_P.CoreSubsys.TCC_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S74>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f =
      ElectricalSystem_P.CoreSubsys.TSDDR_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S15>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dg =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_o;

    /* InitializeConditions for UnitDelay: '<S35>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_k =
      ElectricalSystem_P.CoreSubsys.BIS4_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S64>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_i =
      ElectricalSystem_P.CoreSubsys.PSK_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S15>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_j =
      ElectricalSystem_P.CoreSubsys.UnitDelay1_InitialCondition_p;

    /* InitializeConditions for UnitDelay: '<S134>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l0 =
      ElectricalSystem_P.CoreSubsys.LeftSideDoorsClosed1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S135>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cu =
      ElectricalSystem_P.CoreSubsys.LeftSideDoorsClosed2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S155>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_np =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_d;

    /* InitializeConditions for UnitDelay: '<S156>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gx =
      ElectricalSystem_P.CoreSubsys.RelayWrite21_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S158>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dwg =
      ElectricalSystem_P.CoreSubsys.RelayWrite4_InitialCondition_l;

    /* InitializeConditions for UnitDelay: '<S159>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b4 =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition_o;

    /* InitializeConditions for UnitDelay: '<S160>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_p =
      ElectricalSystem_P.CoreSubsys.RelayWrite6_InitialCondition_a;

    /* InitializeConditions for UnitDelay: '<S161>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cc =
      ElectricalSystem_P.CoreSubsys.RelayWrite7_InitialCondition_j;

    /* InitializeConditions for UnitDelay: '<S163>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gu =
      ElectricalSystem_P.CoreSubsys.RightSideDoorsClosed1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S164>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ic =
      ElectricalSystem_P.CoreSubsys.RightSideDoorsClosed2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S174>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m =
      ElectricalSystem_P.CoreSubsys.TDCLR_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S403>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ob =
      ElectricalSystem_P.CoreSubsys.CAR3_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S406>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gg =
      ElectricalSystem_P.CoreSubsys.CAR6_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S407>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jz =
      ElectricalSystem_P.CoreSubsys.CAR7_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S396>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mo =
      ElectricalSystem_P.CoreSubsys.CAR1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S402>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mx =
      ElectricalSystem_P.CoreSubsys.CAR2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1170>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_kk =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_h;

    /* InitializeConditions for UnitDelay: '<S1171>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_pk =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_b;

    /* InitializeConditions for UnitDelay: '<S1175>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_du =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition_f;

    /* InitializeConditions for UnitDelay: '<S1173>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c1 =
      ElectricalSystem_P.CoreSubsys.RelayWrite3_InitialCondition_n;

    /* InitializeConditions for UnitDelay: '<S1174>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bly =
      ElectricalSystem_P.CoreSubsys.RelayWrite4_InitialCondition_m;

    /* InitializeConditions for UnitDelay: '<S84>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ce =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_ou;

    /* InitializeConditions for UnitDelay: '<S674>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cc1 =
      ElectricalSystem_P.CoreSubsys.RelayWrite9_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S673>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bt =
      ElectricalSystem_P.CoreSubsys.RelayWrite8_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S408>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f5 =
      ElectricalSystem_P.CoreSubsys.CAR8_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1186>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c2 =
      ElectricalSystem_P.CoreSubsys.ZVIR1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1187>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_h =
      ElectricalSystem_P.CoreSubsys.ZVIR2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S669>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bi =
      ElectricalSystem_P.CoreSubsys.RelayWrite18_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S611>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_lu =
      ElectricalSystem_P.CoreSubsys.ParkBrakeReleased_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S399>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_pn =
      ElectricalSystem_P.CoreSubsys.CAR13_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S401>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ph =
      ElectricalSystem_P.CoreSubsys.CAR15_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S474>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bl =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S903>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iu =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition_i;

    /* InitializeConditions for UnitDelay: '<S871>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_ks =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit_d;

    /* InitializeConditions for Memory: '<S906>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition;

    /* InitializeConditions for UnitDelay: '<S873>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_n =
      ElectricalSystem_P.CoreSubsys.DetectIncrease_vinit_d;

    /* InitializeConditions for UnitDelay: '<S902>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c =
      ElectricalSystem_P.CoreSubsys.RelayWrite4_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S872>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_lq =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit_i;

    /* InitializeConditions for Memory: '<S907>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_f =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition;

    /* InitializeConditions for UnitDelay: '<S874>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_m0 =
      ElectricalSystem_P.CoreSubsys.DetectIncrease1_vinit;

    /* InitializeConditions for UnitDelay: '<S900>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_om =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_c;

    /* InitializeConditions for UnitDelay: '<S901>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_im =
      ElectricalSystem_P.CoreSubsys.RelayWrite3_InitialCondition_k;

    /* InitializeConditions for UnitDelay: '<S876>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE =
      ElectricalSystem_P.CoreSubsys.DetectIncrease3_vinit;

    /* InitializeConditions for Memory: '<S909>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_p =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority3_initial_condition;

    /* InitializeConditions for UnitDelay: '<S877>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_m =
      ElectricalSystem_P.CoreSubsys.DetectIncrease4_vinit;

    /* InitializeConditions for Memory: '<S910>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_e =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority4_initial_condition;

    /* InitializeConditions for UnitDelay: '<S878>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_k =
      ElectricalSystem_P.CoreSubsys.DetectIncrease5_vinit;

    /* InitializeConditions for Memory: '<S911>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_d =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority5_initial_condition;

    /* InitializeConditions for UnitDelay: '<S287>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_d1 =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_d;

    /* InitializeConditions for UnitDelay: '<S288>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m1 =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_g;

    /* InitializeConditions for UnitDelay: '<S289>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_no =
      ElectricalSystem_P.CoreSubsys.RelayWrite10_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S290>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_a =
      ElectricalSystem_P.CoreSubsys.RelayWrite11_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S291>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bll =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_o;

    /* InitializeConditions for UnitDelay: '<S292>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bo =
      ElectricalSystem_P.CoreSubsys.RelayWrite3_InitialCondition_h;

    /* InitializeConditions for UnitDelay: '<S293>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nn =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition_k;

    /* InitializeConditions for UnitDelay: '<S294>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c3 =
      ElectricalSystem_P.CoreSubsys.RelayWrite7_InitialCondition_d;

    /* InitializeConditions for UnitDelay: '<S295>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_kt =
      ElectricalSystem_P.CoreSubsys.RelayWrite9_InitialCondition_o;

    /* InitializeConditions for UnitDelay: '<S397>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ke =
      ElectricalSystem_P.CoreSubsys.CAR10_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S662>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nk =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_a;

    /* InitializeConditions for DiscreteIntegrator: '<S300>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE =
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_IC;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState = 2;

    /* InitializeConditions for UnitDelay: '<S429>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ol =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_go;

    /* InitializeConditions for UnitDelay: '<S670>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m5 =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_l;

    /* InitializeConditions for UnitDelay: '<S665>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_og =
      ElectricalSystem_P.CoreSubsys.RelayWrite14_InitialCondition;

    /* InitializeConditions for DiscreteIntegrator: '<S301>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_k =
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_IC_l;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_d =
      2;

    /* InitializeConditions for UnitDelay: '<S1176>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gs =
      ElectricalSystem_P.CoreSubsys.RelayWrite7_InitialCondition_e;

    /* InitializeConditions for DiscreteIntegrator: '<S302>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_m =
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_IC_m;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_g =
      2;

    /* InitializeConditions for UnitDelay: '<S345>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_pw =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_gv;

    /* InitializeConditions for UnitDelay: '<S346>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hj =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_oc;

    /* InitializeConditions for UnitDelay: '<S353>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_k4 =
      ElectricalSystem_P.CoreSubsys.StartMainCompressor1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S316>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_h5 =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_n;

    /* InitializeConditions for UnitDelay: '<S333>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_o2 =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit_o;

    /* InitializeConditions for UnitDelay: '<S334>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_p =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit;

    /* InitializeConditions for Memory: '<S347>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_j =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_c;

    /* InitializeConditions for Memory: '<S348>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_m =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition_j;

    /* InitializeConditions for UnitDelay: '<S364>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_f =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit;

    /* InitializeConditions for UnitDelay: '<S365>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_c =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit_j;

    /* InitializeConditions for Memory: '<S368>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_jt =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_k;

    /* InitializeConditions for Memory: '<S369>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_jq =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition_b;

    /* InitializeConditions for UnitDelay: '<S374>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_kd =
      ElectricalSystem_P.CoreSubsys.BLPR_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S388>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_la =
      ElectricalSystem_P.CoreSubsys.MRPTractionCutout1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S404>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bm =
      ElectricalSystem_P.CoreSubsys.CAR4_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S405>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_n1 =
      ElectricalSystem_P.CoreSubsys.CAR5_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S845>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_p2 =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_k0;

    /* InitializeConditions for UnitDelay: '<S390>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_oa =
      ElectricalSystem_P.CoreSubsys.TCR_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S398>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fi =
      ElectricalSystem_P.CoreSubsys.CAR11_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S400>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iv =
      ElectricalSystem_P.CoreSubsys.CAR14_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S409>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jy =
      ElectricalSystem_P.CoreSubsys.CAR9_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S416>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ho =
      ElectricalSystem_P.CoreSubsys.KSON_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1111>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iut =
      ElectricalSystem_P.CoreSubsys.CC_CSR1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S430>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nh =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_ou;

    /* InitializeConditions for UnitDelay: '<S447>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gp =
      ElectricalSystem_P.CoreSubsys.EB5_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S449>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dux =
      ElectricalSystem_P.CoreSubsys.EBLR1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S472>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_db =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_a3;

    /* InitializeConditions for UnitDelay: '<S473>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fx =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S475>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dl =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition_c;

    /* InitializeConditions for UnitDelay: '<S322>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jd =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_f;

    /* InitializeConditions for UnitDelay: '<S1139>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l0p =
      ElectricalSystem_P.CoreSubsys.EBRD1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S661>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m0 =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_g0;

    /* InitializeConditions for UnitDelay: '<S671>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dk =
      ElectricalSystem_P.CoreSubsys.RelayWrite3_InitialCondition_ks;

    /* InitializeConditions for UnitDelay: '<S664>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jb =
      ElectricalSystem_P.CoreSubsys.RelayWrite12_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S445>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_b =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit_n;

    /* InitializeConditions for Memory: '<S478>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_l =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_ca;

    /* InitializeConditions for UnitDelay: '<S1177>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f2 =
      ElectricalSystem_P.CoreSubsys.RelayWrite8_InitialCondition_j;

    /* InitializeConditions for Memory: '<S582>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_a =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority2_initial_condition;

    /* InitializeConditions for UnitDelay: '<S792>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cj =
      ElectricalSystem_P.CoreSubsys.VCBWrite_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S536>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_l =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit_js;

    /* InitializeConditions for UnitDelay: '<S537>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_li =
      ElectricalSystem_P.CoreSubsys.DetectDecrease2_vinit;

    /* InitializeConditions for UnitDelay: '<S323>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_g3 =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_b;

    /* InitializeConditions for Memory: '<S581>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_i =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition_e;

    /* InitializeConditions for Memory: '<S583>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_g =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority3_initial_condition_o;

    /* InitializeConditions for Memory: '<S614>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_o =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_l;

    /* InitializeConditions for UnitDelay: '<S663>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_npl =
      ElectricalSystem_P.CoreSubsys.RelayWrite10_InitialCondition_j;

    /* InitializeConditions for UnitDelay: '<S666>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bh =
      ElectricalSystem_P.CoreSubsys.RelayWrite15_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S667>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aq =
      ElectricalSystem_P.CoreSubsys.RelayWrite16_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S668>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bu =
      ElectricalSystem_P.CoreSubsys.RelayWrite17_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S672>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fg =
      ElectricalSystem_P.CoreSubsys.RelayWrite4_InitialCondition_f;

    /* InitializeConditions for UnitDelay: '<S1172>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fse =
      ElectricalSystem_P.CoreSubsys.RelayWrite24_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S704>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_o =
      ElectricalSystem_P.CoreSubsys.DetectIncrease_vinit;

    /* InitializeConditions for Memory: '<S709>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_ox =
      ElectricalSystem_P.CoreSubsys.SRLatchSetPriority_initial_condition;

    /* InitializeConditions for UnitDelay: '<S705>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_dd =
      ElectricalSystem_P.CoreSubsys.DetectIncrease1_vinit_p;

    /* InitializeConditions for UnitDelay: '<S1131>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gxr =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_j;

    /* InitializeConditions for UnitDelay: '<S1132>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aw =
      ElectricalSystem_P.CoreSubsys.RelayWrite20_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1133>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nj =
      ElectricalSystem_P.CoreSubsys.RelayWrite22_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1134>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0 =
      ElectricalSystem_P.CoreSubsys.RelayWrite23_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1188>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_d0 =
      ElectricalSystem_P.CoreSubsys.ZVIR3_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1169>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jdy =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_ad;

    /* InitializeConditions for UnitDelay: '<S793>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ey =
      ElectricalSystem_P.CoreSubsys.VCBWrite1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S825>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m2 =
      ElectricalSystem_P.CoreSubsys.RelayWrite4_InitialCondition_c;

    /* InitializeConditions for Memory: '<S790>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_h =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_i;

    /* InitializeConditions for UnitDelay: '<S821>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dy =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_g5;

    /* InitializeConditions for UnitDelay: '<S822>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hk =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_dl;

    /* InitializeConditions for UnitDelay: '<S798>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gj =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_lt;

    /* InitializeConditions for Memory: '<S828>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_aj =
      ElectricalSystem_P.CoreSubsys.AKState_initial_condition;

    /* InitializeConditions for DiscreteIntegrator: '<S798>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_p =
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_IC_n;

    /* InitializeConditions for Memory: '<S829>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_b =
      ElectricalSystem_P.CoreSubsys.AKState1_initial_condition;

    /* InitializeConditions for UnitDelay: '<S844>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ed =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_k;

    /* InitializeConditions for UnitDelay: '<S861>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ku =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_c;

    /* InitializeConditions for Memory: '<S862>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_c =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_iz;

    /* InitializeConditions for UnitDelay: '<S853>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_e =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit_f;

    /* InitializeConditions for UnitDelay: '<S854>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_mg =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit_h;

    /* InitializeConditions for UnitDelay: '<S870>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_o =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_n;

    /* InitializeConditions for UnitDelay: '<S898>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0o =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_dx;

    /* InitializeConditions for UnitDelay: '<S899>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jt =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_hv;

    /* InitializeConditions for UnitDelay: '<S904>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b3 =
      ElectricalSystem_P.CoreSubsys.RelayWrite6_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S905>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ch =
      ElectricalSystem_P.CoreSubsys.RelayWrite7_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S875>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_h =
      ElectricalSystem_P.CoreSubsys.DetectIncrease2_vinit;

    /* InitializeConditions for UnitDelay: '<S924>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_d =
      ElectricalSystem_P.CoreSubsys.DetectIncrease3_vinit_e;

    /* InitializeConditions for Memory: '<S929>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_js =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority3_initial_condition_m;

    /* InitializeConditions for UnitDelay: '<S922>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_or =
      ElectricalSystem_P.CoreSubsys.DetectIncrease1_vinit_pe;

    /* InitializeConditions for Memory: '<S927>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_jx =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition_g;

    /* InitializeConditions for Memory: '<S908>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_mt =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority2_initial_condition_f;

    /* InitializeConditions for UnitDelay: '<S923>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_lb =
      ElectricalSystem_P.CoreSubsys.DetectIncrease2_vinit_h;

    /* InitializeConditions for Memory: '<S928>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_fv =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority2_initial_condition_n;

    /* InitializeConditions for UnitDelay: '<S985>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE =
      ElectricalSystem_P.CoreSubsys.UnitDelay1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S985>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cp =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_h;

    /* InitializeConditions for DiscreteIntegrator: '<S985>/Timer' */
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE =
      ElectricalSystem_P.CoreSubsys.Timer_IC;
    localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState = 2;

    /* InitializeConditions for DiscreteIntegrator: '<S985>/X Position' */
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE =
      ElectricalSystem_P.CoreSubsys.XPosition_IC;
    localDW->CoreSubsys[ForEach_itr_h].XPosition_PrevResetState = 2;

    /* InitializeConditions for UnitDelay: '<S986>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_c =
      ElectricalSystem_P.CoreSubsys.UnitDelay1_InitialCondition_m;

    /* InitializeConditions for UnitDelay: '<S986>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_e =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_p;

    /* InitializeConditions for DiscreteIntegrator: '<S986>/Timer' */
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE_c =
      ElectricalSystem_P.CoreSubsys.Timer_IC_c;
    localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_f = 2;

    /* InitializeConditions for DiscreteIntegrator: '<S986>/X Position' */
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h =
      ElectricalSystem_P.CoreSubsys.XPosition_IC_k;
    localDW->CoreSubsys[ForEach_itr_h].XPosition_PrevResetState_p = 2;

    /* InitializeConditions for UnitDelay: '<S987>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_o =
      ElectricalSystem_P.CoreSubsys.UnitDelay1_InitialCondition_f;

    /* InitializeConditions for UnitDelay: '<S987>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fs =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_l;

    /* InitializeConditions for DiscreteIntegrator: '<S987>/Timer' */
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE_a =
      ElectricalSystem_P.CoreSubsys.Timer_IC_i;
    localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_fb = 2;

    /* InitializeConditions for DiscreteIntegrator: '<S987>/X Position' */
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p =
      ElectricalSystem_P.CoreSubsys.XPosition_IC_n;
    localDW->CoreSubsys[ForEach_itr_h].XPosition_PrevResetState_h = 2;

    /* InitializeConditions for UnitDelay: '<S1105>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fm =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1178>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hc =
      ElectricalSystem_P.CoreSubsys.RelayWrite9_InitialCondition_f;

    /* InitializeConditions for UnitDelay: '<S1299>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_j =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit_p;

    /* InitializeConditions for Memory: '<S1317>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_mf =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition_m;

    /* InitializeConditions for UnitDelay: '<S1334>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_cu =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit_dt;

    /* SystemInitialize for Atomic SubSystem: '<S14>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Init(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit_h, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_h);

    /* End of SystemInitialize for SubSystem: '<S14>/TimerOnDelay NoInit' */

    /* SystemInitialize for IfAction SubSystem: '<S16>/If Action Subsystem' */
    ElectricalSystem_IfActionSubsystem_Init(&localDW->CoreSubsys[ForEach_itr_h].
      IfActionSubsystem_b, &ElectricalSystem_P.CoreSubsys.IfActionSubsystem_b);

    /* End of SystemInitialize for SubSystem: '<S16>/If Action Subsystem' */

    /* SystemInitialize for Enabled SubSystem: '<S15>/Battery' */
    /* InitializeConditions for DiscreteIntegrator: '<S41>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_IC_LOADING = 1U;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_k =
      2;

    /* InitializeConditions for UnitDelay: '<S41>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_j =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition;

    /* SystemInitialize for SignalConversion generated from: '<S41>/BatteryTemp' */
    localB->CoreSubsys[ForEach_itr_h].OutportBufferForBatteryTemp =
      localB->CoreSubsys[ForEach_itr_h].BatteryTemp;

    /* SystemInitialize for Outport: '<S41>/BatteryV' */
    localB->CoreSubsys[ForEach_itr_h].u2Q01 =
      ElectricalSystem_P.CoreSubsys.BatteryV_Y0;

    /* End of SystemInitialize for SubSystem: '<S15>/Battery' */

    /* SystemInitialize for Atomic SubSystem: '<S15>/BICK_Delay' */
    ElectricalSystem_TimerOffDelayNoInit_Init(&localDW->CoreSubsys[ForEach_itr_h]
      .BICK_Delay);

    /* End of SystemInitialize for SubSystem: '<S15>/BICK_Delay' */

    /* SystemInitialize for Atomic SubSystem: '<S15>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit_Init(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOffDelayNoInit_b);

    /* End of SystemInitialize for SubSystem: '<S15>/TimerOffDelay NoInit' */

    /* SystemInitialize for Atomic SubSystem: '<S84>/TimerOnDelay NoInit2' */
    ElectricalSystem_TimerOnDelayNoInit_Init(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit2, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit2);

    /* End of SystemInitialize for SubSystem: '<S84>/TimerOnDelay NoInit2' */

    /* SystemInitialize for Atomic SubSystem: '<S84>/TimerOnDelay NoInit3' */
    ElectricalSystem_TimerOnDelayNoInit_Init(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit3, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit3);

    /* End of SystemInitialize for SubSystem: '<S84>/TimerOnDelay NoInit3' */

    /* SystemInitialize for IfAction SubSystem: '<S220>/If Action Subsystem' */
    ElectricalSystem_IfActionSubsystem_Init(&localDW->CoreSubsys[ForEach_itr_h].
      IfActionSubsystem_i, &ElectricalSystem_P.CoreSubsys.IfActionSubsystem_i);

    /* End of SystemInitialize for SubSystem: '<S220>/If Action Subsystem' */

    /* SystemInitialize for Atomic SubSystem: '<S322>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit_Init(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOffDelayNoInit_j);

    /* End of SystemInitialize for SubSystem: '<S322>/TimerOffDelay NoInit' */

    /* SystemInitialize for Atomic SubSystem: '<S797>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Init(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit_j, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_j);

    /* End of SystemInitialize for SubSystem: '<S797>/TimerOnDelay NoInit' */

    /* SystemInitialize for Atomic SubSystem: '<S835>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Init(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit_f, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_f);

    /* End of SystemInitialize for SubSystem: '<S835>/TimerOnDelay NoInit' */

    /* SystemInitialize for Merge: '<S882>/Merge' */
    localB->CoreSubsys[ForEach_itr_h].HVAC1Status =
      ElectricalSystem_P.CoreSubsys.Merge_InitialOutput;

    /* SystemInitialize for Merge: '<S883>/Merge' */
    localB->CoreSubsys[ForEach_itr_h].HVAC2Status =
      ElectricalSystem_P.CoreSubsys.Merge_InitialOutput_l;

    /* SystemInitialize for Atomic SubSystem: '<S1085>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit_Init(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOffDelayNoInit);

    /* End of SystemInitialize for SubSystem: '<S1085>/TimerOffDelay NoInit' */

    /* SystemInitialize for Atomic SubSystem: '<S1336>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Init(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit);

    /* End of SystemInitialize for SubSystem: '<S1336>/TimerOnDelay NoInit' */
  }

  /* End of SystemInitialize for SubSystem: '<Root>/Model (Per Car)' */
}

/* System reset for referenced model: 'ElectricalSystem' */
void ElectricalSystem_Reset(DW_ElectricalSystem_f_T *localDW)
{
  /* local scratch DWork variables */
  int32_T ForEach_itr_h;
  int32_T i;

  /* InitializeConditions for UnitDelay: '<Root>/Unit Delay' */
  for (i = 0; i < 8; i++) {
    localDW->UnitDelay_DSTATE[i] = ElectricalSystem_P.UnitDelay_InitialCondition;
  }

  /* End of InitializeConditions for UnitDelay: '<Root>/Unit Delay' */

  /* SystemReset for Iterator SubSystem: '<Root>/Model (Per Car)' */
  for (ForEach_itr_h = 0; ForEach_itr_h < 8; ForEach_itr_h++) {
    /* InitializeConditions for UnitDelay: '<S826>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S823>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ki =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_k;

    /* InitializeConditions for UnitDelay: '<S869>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dw =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_a;

    /* InitializeConditions for UnitDelay: '<S824>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b =
      ElectricalSystem_P.CoreSubsys.RelayWrite3_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S25>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_of =
      ElectricalSystem_P.CoreSubsys.BF1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S26>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ov =
      ElectricalSystem_P.CoreSubsys.BIC_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S30>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_g =
      ElectricalSystem_P.CoreSubsys.BICK1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S38>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_d =
      ElectricalSystem_P.CoreSubsys.BRR2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S40>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_n =
      ElectricalSystem_P.CoreSubsys.BVMR1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S68>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_g;

    /* InitializeConditions for UnitDelay: '<S69>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ft =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_o;

    /* InitializeConditions for UnitDelay: '<S70>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gd =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_d;

    /* InitializeConditions for UnitDelay: '<S71>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_on =
      ElectricalSystem_P.CoreSubsys.TCC_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S74>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f =
      ElectricalSystem_P.CoreSubsys.TSDDR_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S15>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dg =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_o;

    /* InitializeConditions for UnitDelay: '<S35>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_k =
      ElectricalSystem_P.CoreSubsys.BIS4_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S64>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_i =
      ElectricalSystem_P.CoreSubsys.PSK_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S15>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_j =
      ElectricalSystem_P.CoreSubsys.UnitDelay1_InitialCondition_p;

    /* InitializeConditions for UnitDelay: '<S134>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l0 =
      ElectricalSystem_P.CoreSubsys.LeftSideDoorsClosed1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S135>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cu =
      ElectricalSystem_P.CoreSubsys.LeftSideDoorsClosed2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S155>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_np =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_d;

    /* InitializeConditions for UnitDelay: '<S156>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gx =
      ElectricalSystem_P.CoreSubsys.RelayWrite21_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S158>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dwg =
      ElectricalSystem_P.CoreSubsys.RelayWrite4_InitialCondition_l;

    /* InitializeConditions for UnitDelay: '<S159>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b4 =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition_o;

    /* InitializeConditions for UnitDelay: '<S160>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_p =
      ElectricalSystem_P.CoreSubsys.RelayWrite6_InitialCondition_a;

    /* InitializeConditions for UnitDelay: '<S161>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cc =
      ElectricalSystem_P.CoreSubsys.RelayWrite7_InitialCondition_j;

    /* InitializeConditions for UnitDelay: '<S163>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gu =
      ElectricalSystem_P.CoreSubsys.RightSideDoorsClosed1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S164>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ic =
      ElectricalSystem_P.CoreSubsys.RightSideDoorsClosed2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S174>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m =
      ElectricalSystem_P.CoreSubsys.TDCLR_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S403>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ob =
      ElectricalSystem_P.CoreSubsys.CAR3_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S406>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gg =
      ElectricalSystem_P.CoreSubsys.CAR6_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S407>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jz =
      ElectricalSystem_P.CoreSubsys.CAR7_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S396>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mo =
      ElectricalSystem_P.CoreSubsys.CAR1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S402>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mx =
      ElectricalSystem_P.CoreSubsys.CAR2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1170>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_kk =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_h;

    /* InitializeConditions for UnitDelay: '<S1171>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_pk =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_b;

    /* InitializeConditions for UnitDelay: '<S1175>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_du =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition_f;

    /* InitializeConditions for UnitDelay: '<S1173>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c1 =
      ElectricalSystem_P.CoreSubsys.RelayWrite3_InitialCondition_n;

    /* InitializeConditions for UnitDelay: '<S1174>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bly =
      ElectricalSystem_P.CoreSubsys.RelayWrite4_InitialCondition_m;

    /* InitializeConditions for UnitDelay: '<S84>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ce =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_ou;

    /* InitializeConditions for UnitDelay: '<S674>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cc1 =
      ElectricalSystem_P.CoreSubsys.RelayWrite9_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S673>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bt =
      ElectricalSystem_P.CoreSubsys.RelayWrite8_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S408>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f5 =
      ElectricalSystem_P.CoreSubsys.CAR8_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1186>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c2 =
      ElectricalSystem_P.CoreSubsys.ZVIR1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1187>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_h =
      ElectricalSystem_P.CoreSubsys.ZVIR2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S669>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bi =
      ElectricalSystem_P.CoreSubsys.RelayWrite18_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S611>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_lu =
      ElectricalSystem_P.CoreSubsys.ParkBrakeReleased_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S399>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_pn =
      ElectricalSystem_P.CoreSubsys.CAR13_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S401>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ph =
      ElectricalSystem_P.CoreSubsys.CAR15_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S474>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bl =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S903>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iu =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition_i;

    /* InitializeConditions for UnitDelay: '<S871>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_ks =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit_d;

    /* InitializeConditions for Memory: '<S906>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition;

    /* InitializeConditions for UnitDelay: '<S873>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_n =
      ElectricalSystem_P.CoreSubsys.DetectIncrease_vinit_d;

    /* InitializeConditions for UnitDelay: '<S902>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c =
      ElectricalSystem_P.CoreSubsys.RelayWrite4_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S872>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_lq =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit_i;

    /* InitializeConditions for Memory: '<S907>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_f =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition;

    /* InitializeConditions for UnitDelay: '<S874>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_m0 =
      ElectricalSystem_P.CoreSubsys.DetectIncrease1_vinit;

    /* InitializeConditions for UnitDelay: '<S900>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_om =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_c;

    /* InitializeConditions for UnitDelay: '<S901>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_im =
      ElectricalSystem_P.CoreSubsys.RelayWrite3_InitialCondition_k;

    /* InitializeConditions for UnitDelay: '<S876>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE =
      ElectricalSystem_P.CoreSubsys.DetectIncrease3_vinit;

    /* InitializeConditions for Memory: '<S909>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_p =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority3_initial_condition;

    /* InitializeConditions for UnitDelay: '<S877>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_m =
      ElectricalSystem_P.CoreSubsys.DetectIncrease4_vinit;

    /* InitializeConditions for Memory: '<S910>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_e =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority4_initial_condition;

    /* InitializeConditions for UnitDelay: '<S878>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_k =
      ElectricalSystem_P.CoreSubsys.DetectIncrease5_vinit;

    /* InitializeConditions for Memory: '<S911>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_d =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority5_initial_condition;

    /* InitializeConditions for UnitDelay: '<S287>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_d1 =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_d;

    /* InitializeConditions for UnitDelay: '<S288>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m1 =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_g;

    /* InitializeConditions for UnitDelay: '<S289>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_no =
      ElectricalSystem_P.CoreSubsys.RelayWrite10_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S290>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_a =
      ElectricalSystem_P.CoreSubsys.RelayWrite11_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S291>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bll =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_o;

    /* InitializeConditions for UnitDelay: '<S292>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bo =
      ElectricalSystem_P.CoreSubsys.RelayWrite3_InitialCondition_h;

    /* InitializeConditions for UnitDelay: '<S293>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nn =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition_k;

    /* InitializeConditions for UnitDelay: '<S294>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c3 =
      ElectricalSystem_P.CoreSubsys.RelayWrite7_InitialCondition_d;

    /* InitializeConditions for UnitDelay: '<S295>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_kt =
      ElectricalSystem_P.CoreSubsys.RelayWrite9_InitialCondition_o;

    /* InitializeConditions for UnitDelay: '<S397>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ke =
      ElectricalSystem_P.CoreSubsys.CAR10_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S662>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nk =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_a;

    /* InitializeConditions for DiscreteIntegrator: '<S300>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE =
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_IC;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState = 2;

    /* InitializeConditions for UnitDelay: '<S429>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ol =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_go;

    /* InitializeConditions for UnitDelay: '<S670>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m5 =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_l;

    /* InitializeConditions for UnitDelay: '<S665>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_og =
      ElectricalSystem_P.CoreSubsys.RelayWrite14_InitialCondition;

    /* InitializeConditions for DiscreteIntegrator: '<S301>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_k =
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_IC_l;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_d =
      2;

    /* InitializeConditions for UnitDelay: '<S1176>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gs =
      ElectricalSystem_P.CoreSubsys.RelayWrite7_InitialCondition_e;

    /* InitializeConditions for DiscreteIntegrator: '<S302>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_m =
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_IC_m;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_g =
      2;

    /* InitializeConditions for UnitDelay: '<S345>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_pw =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_gv;

    /* InitializeConditions for UnitDelay: '<S346>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hj =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_oc;

    /* InitializeConditions for UnitDelay: '<S353>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_k4 =
      ElectricalSystem_P.CoreSubsys.StartMainCompressor1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S316>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_h5 =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_n;

    /* InitializeConditions for UnitDelay: '<S333>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_o2 =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit_o;

    /* InitializeConditions for UnitDelay: '<S334>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_p =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit;

    /* InitializeConditions for Memory: '<S347>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_j =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_c;

    /* InitializeConditions for Memory: '<S348>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_m =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition_j;

    /* InitializeConditions for UnitDelay: '<S364>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_f =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit;

    /* InitializeConditions for UnitDelay: '<S365>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_c =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit_j;

    /* InitializeConditions for Memory: '<S368>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_jt =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_k;

    /* InitializeConditions for Memory: '<S369>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_jq =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition_b;

    /* InitializeConditions for UnitDelay: '<S374>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_kd =
      ElectricalSystem_P.CoreSubsys.BLPR_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S388>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_la =
      ElectricalSystem_P.CoreSubsys.MRPTractionCutout1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S404>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bm =
      ElectricalSystem_P.CoreSubsys.CAR4_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S405>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_n1 =
      ElectricalSystem_P.CoreSubsys.CAR5_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S845>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_p2 =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_k0;

    /* InitializeConditions for UnitDelay: '<S390>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_oa =
      ElectricalSystem_P.CoreSubsys.TCR_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S398>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fi =
      ElectricalSystem_P.CoreSubsys.CAR11_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S400>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iv =
      ElectricalSystem_P.CoreSubsys.CAR14_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S409>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jy =
      ElectricalSystem_P.CoreSubsys.CAR9_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S416>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ho =
      ElectricalSystem_P.CoreSubsys.KSON_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1111>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iut =
      ElectricalSystem_P.CoreSubsys.CC_CSR1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S430>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nh =
      ElectricalSystem_P.CoreSubsys.RelayWrite2_InitialCondition_ou;

    /* InitializeConditions for UnitDelay: '<S447>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gp =
      ElectricalSystem_P.CoreSubsys.EB5_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S449>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dux =
      ElectricalSystem_P.CoreSubsys.EBLR1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S472>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_db =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_a3;

    /* InitializeConditions for UnitDelay: '<S473>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fx =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S475>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dl =
      ElectricalSystem_P.CoreSubsys.RelayWrite5_InitialCondition_c;

    /* InitializeConditions for UnitDelay: '<S322>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jd =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_f;

    /* InitializeConditions for UnitDelay: '<S1139>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l0p =
      ElectricalSystem_P.CoreSubsys.EBRD1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S661>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m0 =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_g0;

    /* InitializeConditions for UnitDelay: '<S671>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dk =
      ElectricalSystem_P.CoreSubsys.RelayWrite3_InitialCondition_ks;

    /* InitializeConditions for UnitDelay: '<S664>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jb =
      ElectricalSystem_P.CoreSubsys.RelayWrite12_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S445>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_b =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit_n;

    /* InitializeConditions for Memory: '<S478>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_l =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_ca;

    /* InitializeConditions for UnitDelay: '<S1177>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f2 =
      ElectricalSystem_P.CoreSubsys.RelayWrite8_InitialCondition_j;

    /* InitializeConditions for Memory: '<S582>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_a =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority2_initial_condition;

    /* InitializeConditions for UnitDelay: '<S792>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cj =
      ElectricalSystem_P.CoreSubsys.VCBWrite_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S536>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_l =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit_js;

    /* InitializeConditions for UnitDelay: '<S537>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_li =
      ElectricalSystem_P.CoreSubsys.DetectDecrease2_vinit;

    /* InitializeConditions for UnitDelay: '<S323>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_g3 =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_b;

    /* InitializeConditions for Memory: '<S581>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_i =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition_e;

    /* InitializeConditions for Memory: '<S583>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_g =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority3_initial_condition_o;

    /* InitializeConditions for Memory: '<S614>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_o =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_l;

    /* InitializeConditions for UnitDelay: '<S663>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_npl =
      ElectricalSystem_P.CoreSubsys.RelayWrite10_InitialCondition_j;

    /* InitializeConditions for UnitDelay: '<S666>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bh =
      ElectricalSystem_P.CoreSubsys.RelayWrite15_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S667>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aq =
      ElectricalSystem_P.CoreSubsys.RelayWrite16_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S668>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bu =
      ElectricalSystem_P.CoreSubsys.RelayWrite17_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S672>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fg =
      ElectricalSystem_P.CoreSubsys.RelayWrite4_InitialCondition_f;

    /* InitializeConditions for UnitDelay: '<S1172>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fse =
      ElectricalSystem_P.CoreSubsys.RelayWrite24_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S704>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_o =
      ElectricalSystem_P.CoreSubsys.DetectIncrease_vinit;

    /* InitializeConditions for Memory: '<S709>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_ox =
      ElectricalSystem_P.CoreSubsys.SRLatchSetPriority_initial_condition;

    /* InitializeConditions for UnitDelay: '<S705>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_dd =
      ElectricalSystem_P.CoreSubsys.DetectIncrease1_vinit_p;

    /* InitializeConditions for UnitDelay: '<S1131>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gxr =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_j;

    /* InitializeConditions for UnitDelay: '<S1132>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aw =
      ElectricalSystem_P.CoreSubsys.RelayWrite20_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1133>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nj =
      ElectricalSystem_P.CoreSubsys.RelayWrite22_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1134>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0 =
      ElectricalSystem_P.CoreSubsys.RelayWrite23_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1188>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_d0 =
      ElectricalSystem_P.CoreSubsys.ZVIR3_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1169>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jdy =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_ad;

    /* InitializeConditions for UnitDelay: '<S793>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ey =
      ElectricalSystem_P.CoreSubsys.VCBWrite1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S825>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m2 =
      ElectricalSystem_P.CoreSubsys.RelayWrite4_InitialCondition_c;

    /* InitializeConditions for Memory: '<S790>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_h =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_i;

    /* InitializeConditions for UnitDelay: '<S821>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dy =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_g5;

    /* InitializeConditions for UnitDelay: '<S822>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hk =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_dl;

    /* InitializeConditions for UnitDelay: '<S798>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gj =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_lt;

    /* InitializeConditions for Memory: '<S828>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_aj =
      ElectricalSystem_P.CoreSubsys.AKState_initial_condition;

    /* InitializeConditions for DiscreteIntegrator: '<S798>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_p =
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_IC_n;

    /* InitializeConditions for Memory: '<S829>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_b =
      ElectricalSystem_P.CoreSubsys.AKState1_initial_condition;

    /* InitializeConditions for UnitDelay: '<S844>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ed =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_k;

    /* InitializeConditions for UnitDelay: '<S861>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ku =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_c;

    /* InitializeConditions for Memory: '<S862>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_c =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority_initial_condition_iz;

    /* InitializeConditions for UnitDelay: '<S853>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_e =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit_f;

    /* InitializeConditions for UnitDelay: '<S854>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_mg =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit_h;

    /* InitializeConditions for UnitDelay: '<S870>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_o =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_n;

    /* InitializeConditions for UnitDelay: '<S898>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0o =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition_dx;

    /* InitializeConditions for UnitDelay: '<S899>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jt =
      ElectricalSystem_P.CoreSubsys.RelayWrite1_InitialCondition_hv;

    /* InitializeConditions for UnitDelay: '<S904>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b3 =
      ElectricalSystem_P.CoreSubsys.RelayWrite6_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S905>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ch =
      ElectricalSystem_P.CoreSubsys.RelayWrite7_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S875>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_h =
      ElectricalSystem_P.CoreSubsys.DetectIncrease2_vinit;

    /* InitializeConditions for UnitDelay: '<S924>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_d =
      ElectricalSystem_P.CoreSubsys.DetectIncrease3_vinit_e;

    /* InitializeConditions for Memory: '<S929>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_js =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority3_initial_condition_m;

    /* InitializeConditions for UnitDelay: '<S922>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_or =
      ElectricalSystem_P.CoreSubsys.DetectIncrease1_vinit_pe;

    /* InitializeConditions for Memory: '<S927>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_jx =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition_g;

    /* InitializeConditions for Memory: '<S908>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_mt =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority2_initial_condition_f;

    /* InitializeConditions for UnitDelay: '<S923>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_lb =
      ElectricalSystem_P.CoreSubsys.DetectIncrease2_vinit_h;

    /* InitializeConditions for Memory: '<S928>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_fv =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority2_initial_condition_n;

    /* InitializeConditions for UnitDelay: '<S985>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE =
      ElectricalSystem_P.CoreSubsys.UnitDelay1_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S985>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cp =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_h;

    /* InitializeConditions for DiscreteIntegrator: '<S985>/Timer' */
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE =
      ElectricalSystem_P.CoreSubsys.Timer_IC;
    localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState = 2;

    /* InitializeConditions for DiscreteIntegrator: '<S985>/X Position' */
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE =
      ElectricalSystem_P.CoreSubsys.XPosition_IC;
    localDW->CoreSubsys[ForEach_itr_h].XPosition_PrevResetState = 2;

    /* InitializeConditions for UnitDelay: '<S986>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_c =
      ElectricalSystem_P.CoreSubsys.UnitDelay1_InitialCondition_m;

    /* InitializeConditions for UnitDelay: '<S986>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_e =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_p;

    /* InitializeConditions for DiscreteIntegrator: '<S986>/Timer' */
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE_c =
      ElectricalSystem_P.CoreSubsys.Timer_IC_c;
    localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_f = 2;

    /* InitializeConditions for DiscreteIntegrator: '<S986>/X Position' */
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h =
      ElectricalSystem_P.CoreSubsys.XPosition_IC_k;
    localDW->CoreSubsys[ForEach_itr_h].XPosition_PrevResetState_p = 2;

    /* InitializeConditions for UnitDelay: '<S987>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_o =
      ElectricalSystem_P.CoreSubsys.UnitDelay1_InitialCondition_f;

    /* InitializeConditions for UnitDelay: '<S987>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fs =
      ElectricalSystem_P.CoreSubsys.UnitDelay_InitialCondition_l;

    /* InitializeConditions for DiscreteIntegrator: '<S987>/Timer' */
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE_a =
      ElectricalSystem_P.CoreSubsys.Timer_IC_i;
    localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_fb = 2;

    /* InitializeConditions for DiscreteIntegrator: '<S987>/X Position' */
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p =
      ElectricalSystem_P.CoreSubsys.XPosition_IC_n;
    localDW->CoreSubsys[ForEach_itr_h].XPosition_PrevResetState_h = 2;

    /* InitializeConditions for UnitDelay: '<S1105>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fm =
      ElectricalSystem_P.CoreSubsys.RelayWrite_InitialCondition;

    /* InitializeConditions for UnitDelay: '<S1178>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hc =
      ElectricalSystem_P.CoreSubsys.RelayWrite9_InitialCondition_f;

    /* InitializeConditions for UnitDelay: '<S1299>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_j =
      ElectricalSystem_P.CoreSubsys.DetectDecrease1_vinit_p;

    /* InitializeConditions for Memory: '<S1317>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_mf =
      ElectricalSystem_P.CoreSubsys.SRLatchResetPriority1_initial_condition_m;

    /* InitializeConditions for UnitDelay: '<S1334>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_cu =
      ElectricalSystem_P.CoreSubsys.DetectDecrease_vinit_dt;

    /* SystemReset for Atomic SubSystem: '<S14>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Reset(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit_h, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_h);

    /* End of SystemReset for SubSystem: '<S14>/TimerOnDelay NoInit' */

    /* SystemReset for Atomic SubSystem: '<S15>/BICK_Delay' */
    ElectricalSystem_TimerOffDelayNoInit_Reset(&localDW->
      CoreSubsys[ForEach_itr_h].BICK_Delay);

    /* End of SystemReset for SubSystem: '<S15>/BICK_Delay' */

    /* SystemReset for Atomic SubSystem: '<S15>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit_Reset(&localDW->
      CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit_b);

    /* End of SystemReset for SubSystem: '<S15>/TimerOffDelay NoInit' */

    /* SystemReset for Atomic SubSystem: '<S84>/TimerOnDelay NoInit2' */
    ElectricalSystem_TimerOnDelayNoInit_Reset(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit2, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit2);

    /* End of SystemReset for SubSystem: '<S84>/TimerOnDelay NoInit2' */

    /* SystemReset for Atomic SubSystem: '<S84>/TimerOnDelay NoInit3' */
    ElectricalSystem_TimerOnDelayNoInit_Reset(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit3, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit3);

    /* End of SystemReset for SubSystem: '<S84>/TimerOnDelay NoInit3' */

    /* SystemReset for Atomic SubSystem: '<S322>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit_Reset(&localDW->
      CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit_j);

    /* End of SystemReset for SubSystem: '<S322>/TimerOffDelay NoInit' */

    /* SystemReset for Atomic SubSystem: '<S797>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Reset(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit_j, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_j);

    /* End of SystemReset for SubSystem: '<S797>/TimerOnDelay NoInit' */

    /* SystemReset for Atomic SubSystem: '<S835>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Reset(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit_f, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_f);

    /* End of SystemReset for SubSystem: '<S835>/TimerOnDelay NoInit' */

    /* SystemReset for Atomic SubSystem: '<S1085>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit_Reset(&localDW->
      CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit);

    /* End of SystemReset for SubSystem: '<S1085>/TimerOffDelay NoInit' */

    /* SystemReset for Atomic SubSystem: '<S1336>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Reset(&localDW->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit, &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit);

    /* End of SystemReset for SubSystem: '<S1336>/TimerOnDelay NoInit' */
  }

  /* End of SystemReset for SubSystem: '<Root>/Model (Per Car)' */
}

/* Start for referenced model: 'ElectricalSystem' */
void ElectricalSystem_Start(B_ElectricalSystem_c_T *localB,
  DW_ElectricalSystem_f_T *localDW)
{
  /* local scratch DWork variables */
  int32_T ForEach_itr_h;

  /* Start for Iterator SubSystem: '<Root>/Model (Per Car)' */
  for (ForEach_itr_h = 0; ForEach_itr_h < 8; ForEach_itr_h++) {
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_d = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dg = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_k = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_i = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bl = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iu = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_im = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_m = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_k = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_k = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_m = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_p = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_f = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_c = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fx = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dl = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cj = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_l = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_li = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_o = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_p = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_e = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_o = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b3 = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ch = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_h = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_d = 0.0;
    localB->CoreSubsys[ForEach_itr_h].HVAC1Status = 0.0;
    localB->CoreSubsys[ForEach_itr_h].HVAC2Status = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cp = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_c = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_e = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE_c = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_o = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fs = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE_a = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fm = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_j = 0.0;

    /* Start for Atomic SubSystem: '<S14>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Start(&localB->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit_h, &localDW->CoreSubsys[ForEach_itr_h].
      TimerOnDelayNoInit_h);

    /* End of Start for SubSystem: '<S14>/TimerOnDelay NoInit' */

    /* Start for If: '<S16>/If' */
    localDW->CoreSubsys[ForEach_itr_h].If_ActiveSubsystem = -1;

    /* Start for IfAction SubSystem: '<S16>/If Action Subsystem' */
    ElectricalSystem_IfActionSubsystem_e_Start(&localDW->
      CoreSubsys[ForEach_itr_h].IfActionSubsystem_b);

    /* End of Start for SubSystem: '<S16>/If Action Subsystem' */

    /* Start for Enabled SubSystem: '<S15>/Battery' */
    localB->CoreSubsys[ForEach_itr_h].OutportBufferForBatteryTemp = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g = 0.0;
    localB->CoreSubsys[ForEach_itr_h].u2Q01 = 0.0;
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_j = 0.0;

    /* Start for Constant: '<S41>/Battery Temp' */
    localB->CoreSubsys[ForEach_itr_h].BatteryTemp =
      ElectricalSystem_P.CoreSubsys.Battery_BattNomTemp;

    /* End of Start for SubSystem: '<S15>/Battery' */

    /* Start for Atomic SubSystem: '<S15>/BICK_Delay' */
    ElectricalSystem_TimerOffDelayNoInit_Start(&localB->CoreSubsys[ForEach_itr_h]
      .BICK_Delay, &localDW->CoreSubsys[ForEach_itr_h].BICK_Delay);

    /* End of Start for SubSystem: '<S15>/BICK_Delay' */

    /* Start for Atomic SubSystem: '<S15>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit_Start(&localB->CoreSubsys[ForEach_itr_h]
      .TimerOffDelayNoInit_b, &localDW->CoreSubsys[ForEach_itr_h].
      TimerOffDelayNoInit_b);

    /* End of Start for SubSystem: '<S15>/TimerOffDelay NoInit' */

    /* Start for Atomic SubSystem: '<S84>/TimerOnDelay NoInit2' */
    ElectricalSystem_TimerOnDelayNoInit_Start(&localB->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit2, &localDW->CoreSubsys[ForEach_itr_h].
      TimerOnDelayNoInit2);

    /* End of Start for SubSystem: '<S84>/TimerOnDelay NoInit2' */

    /* Start for Atomic SubSystem: '<S84>/TimerOnDelay NoInit3' */
    ElectricalSystem_TimerOnDelayNoInit_Start(&localB->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit3, &localDW->CoreSubsys[ForEach_itr_h].
      TimerOnDelayNoInit3);

    /* End of Start for SubSystem: '<S84>/TimerOnDelay NoInit3' */

    /* Start for If: '<S220>/If' */
    localDW->CoreSubsys[ForEach_itr_h].If_ActiveSubsystem_n = -1;

    /* Start for IfAction SubSystem: '<S220>/If Action Subsystem' */
    ElectricalSystem_IfActionSubsystem_e_Start(&localDW->
      CoreSubsys[ForEach_itr_h].IfActionSubsystem_i);

    /* End of Start for SubSystem: '<S220>/If Action Subsystem' */

    /* Start for Atomic SubSystem: '<S322>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit_Start(&localB->CoreSubsys[ForEach_itr_h]
      .TimerOffDelayNoInit_j, &localDW->CoreSubsys[ForEach_itr_h].
      TimerOffDelayNoInit_j);

    /* End of Start for SubSystem: '<S322>/TimerOffDelay NoInit' */

    /* Start for Atomic SubSystem: '<S797>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Start(&localB->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit_j, &localDW->CoreSubsys[ForEach_itr_h].
      TimerOnDelayNoInit_j);

    /* End of Start for SubSystem: '<S797>/TimerOnDelay NoInit' */

    /* Start for Atomic SubSystem: '<S835>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Start(&localB->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit_f, &localDW->CoreSubsys[ForEach_itr_h].
      TimerOnDelayNoInit_f);

    /* End of Start for SubSystem: '<S835>/TimerOnDelay NoInit' */

    /* Start for IfAction SubSystem: '<S882>/If Action Subsystem' */
    ElectricalSystem_IfActionSubsystem_Start(&localB->CoreSubsys[ForEach_itr_h].
      HVAC1Status);

    /* End of Start for SubSystem: '<S882>/If Action Subsystem' */

    /* Start for IfAction SubSystem: '<S882>/If Action Subsystem1' */
    ElectricalSystem_IfActionSubsystem_Start(&localB->CoreSubsys[ForEach_itr_h].
      HVAC1Status);

    /* End of Start for SubSystem: '<S882>/If Action Subsystem1' */

    /* Start for IfAction SubSystem: '<S882>/If Action Subsystem2' */
    ElectricalSystem_IfActionSubsystem_Start(&localB->CoreSubsys[ForEach_itr_h].
      HVAC1Status);

    /* End of Start for SubSystem: '<S882>/If Action Subsystem2' */

    /* Start for IfAction SubSystem: '<S883>/If Action Subsystem' */
    ElectricalSystem_IfActionSubsystem_Start(&localB->CoreSubsys[ForEach_itr_h].
      HVAC2Status);

    /* End of Start for SubSystem: '<S883>/If Action Subsystem' */

    /* Start for IfAction SubSystem: '<S883>/If Action Subsystem1' */
    ElectricalSystem_IfActionSubsystem_Start(&localB->CoreSubsys[ForEach_itr_h].
      HVAC2Status);

    /* End of Start for SubSystem: '<S883>/If Action Subsystem1' */

    /* Start for IfAction SubSystem: '<S883>/If Action Subsystem2' */
    ElectricalSystem_IfActionSubsystem_Start(&localB->CoreSubsys[ForEach_itr_h].
      HVAC2Status);

    /* End of Start for SubSystem: '<S883>/If Action Subsystem2' */

    /* Start for Atomic SubSystem: '<S1085>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit_Start(&localB->CoreSubsys[ForEach_itr_h]
      .TimerOffDelayNoInit, &localDW->CoreSubsys[ForEach_itr_h].
      TimerOffDelayNoInit);

    /* End of Start for SubSystem: '<S1085>/TimerOffDelay NoInit' */

    /* Start for Atomic SubSystem: '<S1336>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit_Start(&localB->CoreSubsys[ForEach_itr_h]
      .TimerOnDelayNoInit, &localDW->CoreSubsys[ForEach_itr_h].
      TimerOnDelayNoInit);

    /* End of Start for SubSystem: '<S1336>/TimerOnDelay NoInit' */
  }

  /* End of Start for SubSystem: '<Root>/Model (Per Car)' */

  /* Start for Atomic SubSystem: '<Root>/WireLogic' */
  /* Start for MATLAB Function: '<S1358>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages);

  /* Start for MATLAB Function: '<S1362>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_h);

  /* Start for MATLAB Function: '<S1383>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_g);

  /* Start for MATLAB Function: '<S1387>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_f);

  /* Start for MATLAB Function: '<S1397>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_o);

  /* Start for MATLAB Function: '<S1401>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_k);

  /* Start for MATLAB Function: '<S1411>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_kp);

  /* Start for MATLAB Function: '<S1415>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_e);

  /* Start for MATLAB Function: '<S1425>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_hg);

  /* Start for MATLAB Function: '<S1429>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_gb);

  /* Start for MATLAB Function: '<S1439>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_p);

  /* Start for MATLAB Function: '<S1443>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_kl);

  /* Start for MATLAB Function: '<S1453>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_oe);

  /* Start for MATLAB Function: '<S1457>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_ga);

  /* Start for MATLAB Function: '<S1467>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_k2);

  /* Start for MATLAB Function: '<S1471>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages_Start(&localB->sf_EnumeratedVoltages_a);

  /* Start for Iterator SubSystem: '<S1475>/TrainWires' */
  ElectricalSystem_TrainWires_Start(54, localB->TrainWires);

  /* End of Start for SubSystem: '<S1475>/TrainWires' */

  /* Start for Iterator SubSystem: '<S1485>/TrainWires' */
  ElectricalSystem_TrainWires_Start(24, localB->TrainWires_l);

  /* End of Start for SubSystem: '<S1485>/TrainWires' */
  /* End of Start for SubSystem: '<Root>/WireLogic' */
}

/* Output and update for referenced model: 'ElectricalSystem' */
void ElectricalSystem(RT_MODEL_ElectricalSystem_T * const ElectricalSystem_M,
                      const BD_CommonTrain_Cfg_Vehicle rtu_CommonVehicleConfig[8],
                      const BD_ElectricalSystem_Cfg_Vehicle
                      rtu_ElectricalVehicleConfig[8], const
                      BD_ElectricalSystem_In_Vehicle
                      rtu_ElectricalSystemVehicleInputs[8], const
                      BD_ElectricalSystem_In_Faults rtu_Faults[8],
                      BD_ElectricalSystem_Out_Vehicle
                      rty_ElectricalSystemVehicleOutputs[8],
                      BD_ElectricalSystem_Wires rty_TrainWireOutput[8],
                      B_ElectricalSystem_c_T *localB, DW_ElectricalSystem_f_T
                      *localDW, const BD_ElectricalSystem_Prm
                      *rtp_Prm_ElectricalSystem)
{
  /* local block i/o variables */
  BD_ElectricalSystem_In_Vehicle
    rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0;
  BD_ElectricalSystem_In_Faults rtb_ImpSel_InsertedFor_Faults_at_outport_0;
  real_T rtb_ImpAsg_InsertedFor_Orientation_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[192];
  real_T rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[192];
  real_T rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[432];
  real_T rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[432];
  real_T rtb_ImpAsg_InsertedFor_TW_RightDoorOpen_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TW_RightDoorClose_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TW_RHDC_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TW_RDO_LH_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TW_RDE_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TW_LeftDoorOpen_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TW_LeftDoorClose_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TW_LHDC_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TW_LDO_LH_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TW_LDE_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TWReverse_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TWForward_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TW81115_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TW81114_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TWCouplingReturn_at_inport_0[8];
  real_T rtb_ImpAsg_InsertedFor_TWCouplingForward_at_inport_0[8];
  real_T rtb_DataTypeConversion7;
  real_T rtb_DataTypeConversion7_i;
  real_T rtb_DataTypeConversion7_ie;
  real_T rtb_DataTypeConversion1_e;
  real_T rtb_DataTypeConversion1_n;
  real_T rtb_DataTypeConversion1_p;
  real_T rtb_Merge;
  real_T rtb_Merge_a;
  boolean_T rtb_ImpAsg_InsertedFor_UnitConnection_at_inport_0[8];
  boolean_T rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0[8];
  boolean_T rtb_ImpAsg_InsertedFor_CoupledCabsConnection_at_inport_0[8];
  boolean_T rtb_APSPower;
  boolean_T rtb_Switch_gf;
  boolean_T rtb_Switch_h1;
  boolean_T rtb_OR6;
  boolean_T rtb_OR9;
  boolean_T rtb_Switch_ly;
  boolean_T rtb_NOT_i1;
  boolean_T rtb_Switch_aj;
  boolean_T rtb_ResetCycle;
  boolean_T rtb_ResetCycle_k;
  boolean_T rtb_ResetCycle_i;
  boolean_T rtb_Switch_je;

  /* local scratch DWork variables */
  int32_T ForEach_itr;
  int32_T ForEach_itr_g;
  int32_T ForEach_itr_d;
  int32_T ForEach_itr_p;
  int32_T ForEach_itr_d4;
  int32_T ForEach_itr_gv;
  int32_T ForEach_itr_c;
  int32_T ForEach_itr_b;
  int32_T ForEach_itr_e;
  int32_T ForEach_itr_bb;
  int32_T ForEach_itr_n;
  int32_T ForEach_itr_o;
  int32_T ForEach_itr_h;
  int32_T ForEach_itr_gs;
  boolean_T rtb_ImpAsg_InsertedFor_HasPanto_at_inport_0[8];
  int8_T rtb_ImpAsg_InsertedFor_TW22204_at_inport_0[8];
  BD_ElectricalSystem_Wires_UnitWires
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[8];
  BD_ElectricalSystem_Wires_TrainWires
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[8];
  BD_ElectricalSystem_Wires_OrientationWires
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[8];
  BD_ElectricalSystem_Wires_MiscWires
    rtb_ImpAsg_InsertedFor_MiscWireSources_at_inport_0[8];
  BD_ElectricalSystem_Wires_CoupledCabsWires
    rtb_ImpAsg_InsertedFor_CoupledCabsWireSources_at_inport_0[8];
  int8_T rtAction;
  boolean_T rtb_LogicalOperator6_l;
  real_T rtb_Switch_jyc;
  boolean_T rtb_LogicalOperator;
  boolean_T rtb_UnitDelay1;
  boolean_T rtb_TW_TSDR;
  boolean_T rtb_OR8_f;
  boolean_T rtb_LogicalOperator_kp;
  boolean_T rtb_OR1;
  boolean_T rtb_LogicalOperator1_dl;
  boolean_T rtb_OR20;
  boolean_T rtb_AllDoorsClosedLight;
  boolean_T rtb_OR7;
  boolean_T rtb_NOT4;
  boolean_T rtb_NOT5;
  boolean_T rtb_Switch_a0;
  boolean_T rtb_Switch_ij;
  boolean_T rtb_OR11;
  boolean_T rtb_Switch_f;
  boolean_T rtb_Switch_hqb;
  boolean_T rtb_Switch_kb2;
  int32_T rtb_ExtSmokeDetectedinHVAC;
  int32_T rtb_SupplyFanTripped;
  boolean_T rtb_LogicalOperator23;
  boolean_T rtb_Switch_eu;
  boolean_T rtb_LogicalOperator40_kv;
  boolean_T rtb_LogicalOperator40_nd;
  boolean_T rtb_LogicalOperator40_eo;
  boolean_T rtb_LogicalOperator40_dp;
  boolean_T rtb_Switch_jqt;
  real_T diff;
  real_T ratio;
  uint32_T numCycles;
  real_T rtb_PulseGenerator;
  boolean_T rtb_Switch_bf;
  boolean_T rtb_OR10;
  boolean_T rtb_OR11_l;
  boolean_T rtb_OR12_k;
  boolean_T rtb_Switch_mqr;
  boolean_T rtb_Switch_awy;
  boolean_T rtb_Switch_imq;
  boolean_T rtb_Switch_am;
  boolean_T rtb_Switch_jxy;
  boolean_T rtb_Switch_di;
  boolean_T rtb_Switch_jy;
  real_T rtb_PulseGenerator_o;
  boolean_T rtb_Switch_ag5;
  boolean_T rtb_Switch_abq;
  boolean_T rtb_OR2_o;
  boolean_T rtb_LogicalOperator2;
  boolean_T rtb_AND_i;
  boolean_T rtb_LogicalOperator_ks;
  boolean_T rtb_OR13_c;
  boolean_T rtb_Switch_pb;
  boolean_T rtb_EBDueToCC;
  boolean_T rtb_EBbyPB;
  boolean_T rtb_Switch_mk;
  boolean_T rtb_Switch_k2;
  boolean_T rtb_LogicalOperator40_i;
  boolean_T rtb_Switch_gh;
  boolean_T rtb_Switch_gy;
  boolean_T rtb_Switch_k0;
  boolean_T rtb_Switch_hfn;
  boolean_T rtb_Switch_d2;
  boolean_T rtb_Switch_fe;
  boolean_T rtb_Switch_ee;
  boolean_T rtb_DG1182;
  boolean_T rtb_LogicalOperator3;
  boolean_T rtb_LogicalOperator40_k;
  boolean_T rtb_Switch_fr4;
  real_T rtb_Switch_enl;
  boolean_T rtb_Switch_gft;
  boolean_T rtb_Switch_fl;
  boolean_T rtb_Switch_put;
  boolean_T rtb_LogicalOperator40_l;
  boolean_T rtb_Switch_et;
  boolean_T rtb_OR1_d;
  boolean_T rtb_NOT_o;
  boolean_T rtb_OR5_h;
  boolean_T rtb_OR4_n;
  boolean_T rtb_Switch_i0;
  boolean_T rtb_Switch_lj5;
  boolean_T rtb_BRAKING_TLFC7;
  boolean_T rtb_OR3_l;
  boolean_T rtb_Switch_lzx;
  boolean_T rtb_Switch_b1wm;
  boolean_T rtb_LogicalOperator39_gn;
  boolean_T rtb_OR5_g;
  boolean_T rtb_Switch_h50;
  boolean_T rtb_LogicalOperator1_nts;
  boolean_T rtb_OR6_a;
  boolean_T rtb_Switch_ej;
  boolean_T rtb_AND1_c;
  boolean_T rtb_Switch_ke;
  boolean_T rtb_Switch_cxh;
  boolean_T rtb_Switch_kn;
  boolean_T rtb_LogicalOperator_dj;
  boolean_T rtb_Switch_gu4;
  real_T rtb_Switch1_ft;
  boolean_T rtb_AND_dy;
  real_T rtb_Switch_fza;
  boolean_T rtb_LogicalOperator1_fh;
  boolean_T rtb_LogicalOperator3_o;
  boolean_T rtb_ObstacleDetected;
  boolean_T rtb_Switch_esg;
  boolean_T rtb_LogicalOperator40_e3;
  boolean_T rtb_Switch_oi;
  boolean_T rtb_Switch_ll;
  boolean_T rtb_FDUHealthStatus;
  boolean_T rtb_LogicalOperator40_jv;
  boolean_T rtb_AND1_f;
  boolean_T rtb_HeatAlarmEDB;
  boolean_T rtb_LogicalOperator40_bi;
  boolean_T rtb_Switch_cbo;
  boolean_T rtb_Switch_h2r;
  boolean_T rtb_Switch_be1;
  boolean_T rtb_LogicalOperator40_p;
  boolean_T rtb_SmokeAlarmCABArea;
  boolean_T rtb_InternalFireAlarmTLActive;
  boolean_T rtb_LogicalOperator40_k4;
  boolean_T rtb_Switch_bas;
  boolean_T rtb_DataTypeConversion11_i;
  boolean_T rtb_Switch_aw;
  boolean_T rtb_Switch_lxd;
  boolean_T rtb_DMIPower;
  boolean_T rtb_AND3_f;
  boolean_T rtb_AND3_m1;
  boolean_T rtb_AND3_d;
  boolean_T rtb_AND3_n;
  boolean_T rtb_XOR_j5;
  boolean_T rtb_Switch_hr;
  boolean_T rtb_AND3_jm;
  boolean_T rtb_AND3_a;
  boolean_T rtb_AND3_cq;
  boolean_T rtb_XOR_nn;
  boolean_T rtb_AND3_e0;
  boolean_T rtb_AND3_l;
  boolean_T rtb_AND3_o3;
  boolean_T rtb_AND3_k;
  boolean_T rtb_LogicalOperator_h2;
  boolean_T rtb_Switch_f20;
  boolean_T rtb_LogicalOperator5_ld;
  boolean_T rtb_DataTypeConversion13;
  boolean_T rtb_LogicalOperator40_ab;
  real_T rtb_Switch_VCBClosePBLamp;
  real_T rtb_Switch_VCBOpenPBLamp;
  real_T rtb_Switch_AllDoorsClosedLight;
  real_T rtb_Switch_ParkBrakeApplyPBLight;
  real_T rtb_Switch_OverheadLineVoltageGauge;
  real_T rtb_Switch_FloodLight;
  real_T rtb_Switch_FlasherLight;
  real_T rtb_Switch_UTOOrRMLight;
  real_T rtb_Switch_MarkerOrTailLight;
  real_T rtb_Switch_HeadLight;
  real_T rtb_Switch_SignallingLights;
  real_T rtb_Switch_IdentificationLights;
  real_T rtb_Switch_Speedometer;
  real_T rtb_Switch_WiperPosition;
  real_T rtb_Switch_HornPBLamp;
  real_T rtb_Switch_LeftDoorClosePBOperatingPanel1Lamp;
  real_T rtb_Switch_LeftDoorOpenPBOperatingPanel1Lamp;
  real_T rtb_Switch_RightDoorOpenPBOperatingPanel1Lamp;
  real_T rtb_Switch_RightDoorClosePBOperatingPanel1Lamp;
  real_T rtb_Switch_CabMainLight;
  real_T rtb_Switch_CabConsoleLight;
  real_T rtb_Switch_DoorCloseAnnouncementLamp;
  real_T rtb_Switch_LampTestPBLamp;
  real_T rtb_Switch_UncouplePBLamp;
  real_T rtb_Switch_FlasherLightPBLamp;
  real_T rtb_Switch_FloodLightPBLamp;
  real_T rtb_Switch_BatteryResetPBLamp;
  real_T rtb_Switch_RightDoorOpenPBOperatingPanel5Lamp;
  real_T rtb_Switch_RightDoorClosePBOperatingPanel5Lamp;
  real_T rtb_Switch_WFLTestPBLamp;
  real_T rtb_Switch_SaloonDoorCloseIndicator;
  real_T rtb_Switch_ParkBrakeOnPBLamp;
  real_T rtb_Switch_ParkBrakeOffPBLamp;
  real_T rtb_Switch_LineVoltageIndicator;
  real_T rtb_Switch_LeftDoorOpenPBOperatingPanel2Lamp;
  real_T rtb_Switch_LeftDoorClosePBOperatingPanel2Lamp;
  real_T rtb_Switch_PantoUpPBLamp;
  real_T rtb_Switch_PantoDownPBLamp;
  real_T rtb_Switch_LIMPHomePBLamp;
  real_T rtb_Switch_PowerOFFPBLamp;
  real_T rtb_Switch_CallOnLightPBLamp;
  real_T rtb_Switch_APSFaultIndicator;
  real_T rtb_Switch_PowerFaultIndicator;
  real_T rtb_Switch_EmergencyBrakeIndicator;
  real_T rtb_Switch_VCBTripIndicator;
  real_T rtb_Switch_OtherCabOccupiedIndicator;
  real_T rtb_Switch_HVACFaultIndicator;
  real_T rtb_Switch_ROSPBLamp;
  real_T rtb_Switch_UTOPBLamp;
  real_T rtb_Switch_ATOStartPBLamp;
  real_T rtb_Switch_AuxModuleON;
  real_T rtb_Switch_LeftDoorOpenPB1OperatingPanel2Lamp;
  real_T rtb_Switch_RightDoorOpenPB1OperatingPanel5Lamp;
  real_T rtb_Switch_LeftDoor1LEDIndicator;
  real_T rtb_Switch_LeftDoor2LEDIndicator;
  real_T rtb_Switch_LeftDoor3LEDIndicator;
  real_T rtb_Switch_LeftDoor4LEDIndicator;
  real_T rtb_Switch_RightDoor1LEDIndicator;
  real_T rtb_Switch_RightDoor2LEDIndicator;
  real_T rtb_Switch_RightDoor3LEDIndicator;
  real_T rtb_Switch_RightDoor4LEDIndicator;
  real_T rtb_Switch_WiperPositionLeft;
  real_T rtb_Switch_WiperPositionCenter;
  real_T rtb_Switch_WiperPositionRight;
  real_T rtb_Switch_WiperWash;
  boolean_T rtb_Switch_fz;
  boolean_T rtb_DataTypeConversion8_m;
  real_T rtb_MatchedYPosition_k;
  boolean_T rtb_DataTypeConversion4_i;
  boolean_T rtb_DataTypeConversion6_o;
  boolean_T rtb_Switch_dm3;
  real_T rtb_Switch2_g;
  boolean_T rtb_Switch_lvy;
  boolean_T rtb_Switch_pqr;
  real_T rtb_Switch3;
  real_T rtb_Switch4_n;
  real_T rtb_Switch5_g;
  boolean_T rtb_Switch_mtn;
  boolean_T rtb_Switch_mg;
  boolean_T rtb_Switch_iw;
  boolean_T rtb_Switch_oe;
  boolean_T rtb_DataTypeConversion12;
  boolean_T rtb_DCUPower[8];
  boolean_T rtb_ImpAsg_InsertedFor_Out1_at_inport_0_d[8];
  boolean_T rtb_Switch_gsu;
  boolean_T rtb_Switch_ai2;
  boolean_T rtb_Switch_mfe;
  boolean_T rtb_Switch_bq;
  boolean_T rtb_Switch_eww;
  boolean_T rtb_w1;
  boolean_T rtb_Switch_ew0;
  boolean_T rtb_Switch_nkh;
  boolean_T rtb_Switch_c3a;
  real_T rtb_Speed;
  real_T rtb_Speed_ec;
  real_T rtb_Speed_k;
  BD_ElectricalSystem_Wires_CoupledCabsWires
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0_f[8];
  real_T rtb_ImpAsg_InsertedFor_TW1_at_inport_0[8];
  BD_ElectricalSystem_Wires_MiscWires rtb_ImpAsg_InsertedFor_Out1_at_inport_0_p
    [8];
  BD_ElectricalSystem_Wires_OrientationWires
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[8];
  BD_ElectricalSystem_Wires_TrainWires
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[8];
  BD_ElectricalSystem_Wires_UnitWires
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[8];
  boolean_T rtb_Switch_o0;
  boolean_T rtb_Switch_d5;
  boolean_T rtb_Switch_mp;
  boolean_T rtb_Switch_gez;
  real_T rtb_Switch_g0z;
  boolean_T rtb_Switch_fp;
  boolean_T rtb_Switch_egb;
  boolean_T rtb_Switch_ggt;
  boolean_T rtb_Switch_h0m;
  boolean_T rtb_Switch_cx;
  boolean_T rtb_Switch_cq;
  boolean_T rtb_Switch_iu2;
  boolean_T rtb_Switch_e4;
  boolean_T rtb_Switch_io;
  boolean_T rtb_Switch_dgm;
  boolean_T rtb_Switch_ge;
  boolean_T rtb_Switch_it;
  boolean_T rtb_Switch_hy;
  boolean_T rtb_Switch_fvk;
  real_T rtb_Switch_dul;
  boolean_T rtb_Switch_n;
  boolean_T rtb_Switch_k2a;
  boolean_T rtb_Switch_bt;
  boolean_T rtb_Switch_hbz;
  boolean_T rtb_Switch_ko5;
  boolean_T rtb_Switch_ai;
  boolean_T rtb_Switch_ovx;
  boolean_T rtb_Switch_ni;
  boolean_T rtb_Switch_ngo;
  boolean_T rtb_Switch_nm;
  real_T rtb_Switch_m4;
  boolean_T rtb_Switch_lm;
  boolean_T rtb_Switch_nba;
  boolean_T rtb_Switch_fya;
  boolean_T rtb_Switch_ip;
  boolean_T rtb_Switch_ii;
  boolean_T rtb_Switch_l5d;
  boolean_T rtb_Switch_mhf;
  boolean_T rtb_Switch_og;
  boolean_T rtb_Switch_nw;
  boolean_T rtb_Switch_ou;
  boolean_T rtb_Switch_frj;
  boolean_T rtb_Switch_jrk;
  boolean_T rtb_Switch_n3;
  boolean_T rtb_Switch_noe;
  boolean_T rtb_Switch_omo;
  boolean_T rtb_Switch_pmn;
  real_T rtb_Switch_fir;
  boolean_T rtb_Switch_gbz;
  boolean_T rtb_Switch_hz;
  boolean_T rtb_Switch_jb;
  boolean_T rtb_Switch_jp;
  boolean_T rtb_Switch_fy;
  boolean_T rtb_Switch_bo;
  boolean_T rtb_Switch_h3q;
  boolean_T rtb_Switch_b0;
  boolean_T rtb_Switch_ocb;
  real_T rtb_Switch2;
  real_T rtb_Switch2_m;
  real_T rtb_Switch2_a;
  real_T rtb_Switch_os;
  boolean_T rtb_Switch_li;
  boolean_T rtb_Switch_ecu;
  boolean_T rtb_Switch_gi2;
  boolean_T rtb_Switch_f1;
  boolean_T rtb_Switch_dk;
  boolean_T rtb_Switch_jc;
  boolean_T rtb_Switch_ib1;
  boolean_T rtb_Switch_jk;
  boolean_T rtb_Switch_emj;
  boolean_T rtb_Switch_cz;
  boolean_T rtb_Switch_eto;
  boolean_T rtb_Switch_lx;
  boolean_T rtb_Switch_hq;
  boolean_T rtb_Switch_mbi;
  boolean_T rtb_Switch_ddv;
  boolean_T rtb_Switch_h4n;
  real_T rtb_Switch_e25;
  real_T DiscreteTimeIntegrator_c;
  int8_T tmpForInput_tmp[7];
  int32_T i;
  boolean_T rtb_Logic_idx_0;
  boolean_T rtb_Switch_gmd_idx_1;
  boolean_T rtb_Switch_gmd_idx_0;
  boolean_T tmp;
  real_T rtu_ElectricalVehicleConfig_0;
  boolean_T tmp_0;
  boolean_T tmp_1;
  boolean_T tmp_2;
  boolean_T tmp_3;
  boolean_T tmp_4;
  boolean_T tmp_5;
  boolean_T tmp_6;
  boolean_T tmp_7;
  boolean_T tmp_8;
  boolean_T tmp_9;
  boolean_T tmp_a;
  boolean_T tmp_b;
  boolean_T tmp_c;
  boolean_T tmp_d;
  boolean_T tmp_e;
  boolean_T rtb_LogicalOperator40_b_tmp;
  boolean_T rtb_Switch_hg_tmp;

  /* UnitDelay: '<Root>/Unit Delay' */
  memcpy(&localB->UnitDelay[0], &localDW->UnitDelay_DSTATE[0], sizeof
         (BD_ElectricalSystem_Wires) << 3U);

  /* Outputs for Iterator SubSystem: '<Root>/Model (Per Car)' incorporates:
   *  ForEach: '<S1>/For Each'
   */
  for (ForEach_itr_h = 0; ForEach_itr_h < 8; ForEach_itr_h++) {
    /* ForEachSliceSelector generated from: '<S1>/ElectricalSystemInputs' */
    rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0 =
      rtu_ElectricalSystemVehicleInputs[ForEach_itr_h];

    /* ForEachSliceSelector generated from: '<S1>/Faults' */
    rtb_ImpSel_InsertedFor_Faults_at_outport_0 = rtu_Faults[ForEach_itr_h];

    /* Switch: '<S809>/Switch' incorporates:
     *  Constant: '<S809>/Constant'
     *  Constant: '<S830>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S809>/Logical Operator'
     *  Logic: '<S809>/Logical Operator1'
     *  Logic: '<S809>/Logical Operator2'
     *  RelationalOperator: '<S830>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ek >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fb) {
      rtb_Switch_o0 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.APSCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const)));
    } else {
      rtb_Switch_o0 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.APSCB
                        == ElectricalSystem_P.CoreSubsys.CompareToConstant_const));
    }

    /* End of Switch: '<S809>/Switch' */

    /* Switch: '<S813>/Switch' incorporates:
     *  Constant: '<S813>/Constant'
     *  Logic: '<S813>/Logical Operator'
     *  Logic: '<S813>/Logical Operator1'
     *  Logic: '<S813>/Logical Operator2'
     *  UnitDelay: '<S826>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_no) {
      rtb_Switch_d5 = (rtb_Switch_o0 && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE != 0.0)));
    } else {
      rtb_Switch_d5 = (rtb_Switch_o0 && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE != 0.0));
    }

    /* End of Switch: '<S813>/Switch' */

    /* Switch: '<S817>/Switch' incorporates:
     *  Constant: '<S817>/Constant'
     *  Logic: '<S817>/Logical Operator'
     *  Logic: '<S817>/Logical Operator1'
     *  Logic: '<S817>/Logical Operator2'
     *  UnitDelay: '<S823>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_j) {
      rtb_Switch_o0 = (rtb_Switch_d5 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ki));
    } else {
      rtb_Switch_o0 = (rtb_Switch_d5 && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_ki);
    }

    /* End of Switch: '<S817>/Switch' */

    /* Switch: '<S800>/Switch' incorporates:
     *  Constant: '<S800>/Constant'
     *  Logic: '<S800>/Logical Operator'
     *  Logic: '<S800>/Logical Operator1'
     *  Logic: '<S800>/Logical Operator2'
     *  UnitDelay: '<S869>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_na >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_b) {
      rtb_Switch_d5 = (rtb_Switch_d5 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_dw));
    } else {
      rtb_Switch_d5 = (rtb_Switch_d5 && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_dw);
    }

    /* End of Switch: '<S800>/Switch' */

    /* Switch: '<S818>/Switch' incorporates:
     *  Constant: '<S818>/Constant'
     *  Logic: '<S818>/Logical Operator'
     *  Logic: '<S818>/Logical Operator1'
     *  Logic: '<S818>/Logical Operator2'
     *  UnitDelay: '<S824>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bs >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_p1) {
      rtb_Switch_d5 = (rtb_Switch_d5 && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_b != 0.0)));
    } else {
      rtb_Switch_d5 = (rtb_Switch_d5 && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_b != 0.0));
    }

    /* End of Switch: '<S818>/Switch' */

    /* Logic: '<S797>/Logical Operator' */
    rtb_APSPower = (rtb_Switch_o0 || rtb_Switch_d5);

    /* Outputs for Atomic SubSystem: '<S14>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit(rtb_APSPower, &localB->
      CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit_h, &localDW->
      CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit_h,
      &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_h,
      ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_UpperSaturationLimit);

    /* End of Outputs for SubSystem: '<S14>/TimerOnDelay NoInit' */

    /* If: '<S16>/If' */
    if (localB->CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit_h.Compare) {
      rtAction = 0;
      if (0 != localDW->CoreSubsys[ForEach_itr_h].If_ActiveSubsystem) {
        /* Enable for IfAction SubSystem: '<S16>/If Action Subsystem' incorporates:
         *  ActionPort: '<S18>/Action Port'
         */
        /* Enable for If: '<S16>/If' */
        ElectricalSystem_IfActionSubsystem_Enable(&localDW->
          CoreSubsys[ForEach_itr_h].IfActionSubsystem_b);

        /* End of Enable for SubSystem: '<S16>/If Action Subsystem' */
      }

      /* Outputs for IfAction SubSystem: '<S16>/If Action Subsystem' incorporates:
       *  ActionPort: '<S18>/Action Port'
       */
      ElectricalSystem_IfActionSubsystem_i((RT_MODEL_ElectricalSystem_T * const )
        ElectricalSystem_M, &rtb_Merge, &localDW->CoreSubsys[ForEach_itr_h].
        IfActionSubsystem_b, &ElectricalSystem_P.CoreSubsys.IfActionSubsystem_b,
        ElectricalSystem_P.CoreSubsys.GenerateVoltage1_Cov,
        ElectricalSystem_P.CoreSubsys.GenerateVoltage1_Value);

      /* End of Outputs for SubSystem: '<S16>/If Action Subsystem' */
    } else {
      rtAction = 1;

      /* Outputs for IfAction SubSystem: '<S16>/If Action Subsystem1' incorporates:
       *  ActionPort: '<S19>/Action Port'
       */
      ElectricalSystem_IfActionSubsystem1(&rtb_Merge,
        &ElectricalSystem_P.CoreSubsys.IfActionSubsystem1_c);

      /* End of Outputs for SubSystem: '<S16>/If Action Subsystem1' */
    }

    localDW->CoreSubsys[ForEach_itr_h].If_ActiveSubsystem = rtAction;

    /* End of If: '<S16>/If' */

    /* Switch: '<S61>/Switch' incorporates:
     *  Constant: '<S61>/Constant'
     *  Constant: '<S82>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S61>/Logical Operator'
     *  Logic: '<S61>/Logical Operator1'
     *  Logic: '<S61>/Logical Operator2'
     *  RelationalOperator: '<S82>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ez) {
      rtb_Switch_mp = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.POCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_o)));
    } else {
      rtb_Switch_mp = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.POCB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_o));
    }

    /* End of Switch: '<S61>/Switch' */

    /* Switch: '<S22>/Switch' incorporates:
     *  Constant: '<S22>/Constant'
     *  Logic: '<S22>/Logical Operator'
     *  Logic: '<S22>/Logical Operator1'
     *  Logic: '<S22>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pe >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lh) {
      rtb_Switch_gez = (rtb_Switch_mp &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerONPB
                           != 0.0)));
    } else {
      rtb_Switch_gez = (rtb_Switch_mp &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerONPB
                         != 0.0));
    }

    /* End of Switch: '<S22>/Switch' */

    /* Switch: '<S63>/Switch' incorporates:
     *  Constant: '<S63>/Constant'
     *  Logic: '<S63>/Logical Operator'
     *  Logic: '<S63>/Logical Operator1'
     *  Logic: '<S63>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_d5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_oz) {
      rtb_Switch_gez = (rtb_Switch_gez &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerOFFPB
                           != 0.0)));
    } else {
      rtb_Switch_gez = (rtb_Switch_gez &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerOFFPB
                         != 0.0));
    }

    /* End of Switch: '<S63>/Switch' */

    /* Switch: '<S23>/Switch' incorporates:
     *  Constant: '<S23>/Constant'
     *  Logic: '<S23>/Logical Operator'
     *  Logic: '<S23>/Logical Operator1'
     *  Logic: '<S23>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_c1) {
      rtb_Switch_gez = (rtb_Switch_gez &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LIMPHomePB
                           != 0.0)));
    } else {
      rtb_Switch_gez = (rtb_Switch_gez &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LIMPHomePB
                         != 0.0));
    }

    /* End of Switch: '<S23>/Switch' */

    /* Logic: '<S7>/Logical Operator' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    rtb_LogicalOperator6_l = (rtu_ElectricalVehicleConfig[ForEach_itr_h].IsM1 ||
      rtu_ElectricalVehicleConfig[ForEach_itr_h].IsM2 ||
      rtu_ElectricalVehicleConfig[ForEach_itr_h].IsM3);

    /* Switch: '<S55>/Switch' incorporates:
     *  Constant: '<S15>/Constant'
     *  Constant: '<S50>/Constant'
     *  Constant: '<S55>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Switch: '<S50>/Switch'
     */
    if (rtb_LogicalOperator6_l) {
      rtb_Switch_jyc = localB->UnitDelay[ForEach_itr_h].UnitWires.UW33101;
      rtb_Switch_dul = ElectricalSystem_P.CoreSubsys.Constant_Value_b5;
    } else {
      rtb_Switch_jyc = ElectricalSystem_P.CoreSubsys.Constant_Value_bx;
      rtb_Switch_dul = ElectricalSystem_P.CoreSubsys.Constant_Value_fj;
    }

    /* End of Switch: '<S55>/Switch' */

    /* Outputs for Enabled SubSystem: '<S15>/Battery' incorporates:
     *  EnablePort: '<S41>/Enable'
     */
    if (rtb_Switch_dul > 0.0) {
      /* Constant: '<S41>/Battery Temp' */
      localB->CoreSubsys[ForEach_itr_h].BatteryTemp =
        ElectricalSystem_P.CoreSubsys.Battery_BattNomTemp;

      /* SignalConversion generated from: '<S41>/BatteryTemp' */
      localB->CoreSubsys[ForEach_itr_h].OutportBufferForBatteryTemp =
        localB->CoreSubsys[ForEach_itr_h].BatteryTemp;

      /* Switch: '<S41>/Switch' incorporates:
       *  Constant: '<S41>/Nominal V'
       *  Gain: '<S41>/Gain'
       */
      if (rtb_ImpSel_InsertedFor_Faults_at_outport_0.LowBatteryVoltageAlarm >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_e) {
        rtb_Switch_g0z = ElectricalSystem_P.CoreSubsys.Gain_Gain_g *
          rtp_Prm_ElectricalSystem->BatteryVoltage;
      } else {
        rtb_Switch_g0z = rtp_Prm_ElectricalSystem->BatteryVoltage;
      }

      /* End of Switch: '<S41>/Switch' */

      /* DiscreteIntegrator: '<S41>/Discrete-Time Integrator' */
      if (localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_IC_LOADING
          != 0) {
        localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g =
          rtb_Switch_g0z;
        if (localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g >=
            ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_UpperSat) {
          localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g =
            ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_UpperSat;
        } else {
          if (localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g
              <= ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_LowerSat)
          {
            localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g =
              ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_LowerSat;
          }
        }
      }

      if ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.LowBatteryVoltageAlarm >
           0.0) && (localDW->CoreSubsys[ForEach_itr_h].
                    DiscreteTimeIntegrator_PrevResetState_k <= 0)) {
        localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g =
          rtb_Switch_g0z;
        if (localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g >=
            ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_UpperSat) {
          localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g =
            ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_UpperSat;
        } else {
          if (localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g
              <= ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_LowerSat)
          {
            localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g =
              ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_LowerSat;
          }
        }
      }

      if (localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g >=
          ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_UpperSat) {
        localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g =
          ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_UpperSat;
      } else {
        if (localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g <=
            ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_LowerSat) {
          localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g =
            ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_LowerSat;
        }
      }

      /* Gain: '<S41>/32-Q01' incorporates:
       *  DiscreteIntegrator: '<S41>/Discrete-Time Integrator'
       */
      localB->CoreSubsys[ForEach_itr_h].u2Q01 =
        ElectricalSystem_P.CoreSubsys.u2Q01_Gain * localDW->
        CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g;

      /* Switch: '<S41>/Switch2' incorporates:
       *  Constant: '<S15>/32-Q01'
       */
      if (ElectricalSystem_P.CoreSubsys.u2Q01_Value >
          ElectricalSystem_P.CoreSubsys.Switch2_Threshold) {
        /* Switch: '<S41>/Switch1' incorporates:
         *  DataTypeConversion: '<S41>/Data Type Conversion3'
         *  Gain: '<S41>/ChargingRate V//min'
         *  Gain: '<S41>/DrainRate V//min'
         *  RelationalOperator: '<S41>/Relational Operator'
         *  UnitDelay: '<S41>/Unit Delay'
         */
        if (rtb_Switch_jyc > ElectricalSystem_P.CoreSubsys.Switch1_Threshold) {
          rtb_Switch_jyc *= ElectricalSystem_P.CoreSubsys.ChargingRateVmin_Gain;
        } else {
          /* Gain: '<S15>/Gain' */
          rtb_Switch_jyc *= rtp_Prm_ElectricalSystem->BatteryVoltage;

          /* MinMax: '<S15>/Max' incorporates:
           *  UnitDelay: '<S15>/Unit Delay'
           */
          if ((!(rtb_Switch_jyc > localDW->CoreSubsys[ForEach_itr_h].
                 UnitDelay_DSTATE_dg)) && (!rtIsNaN(localDW->
                CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dg))) {
            rtb_Switch_jyc = localDW->CoreSubsys[ForEach_itr_h].
              UnitDelay_DSTATE_dg;
          }

          /* End of MinMax: '<S15>/Max' */
          rtb_Switch_jyc = static_cast<real_T>((rtb_Switch_jyc ==
            localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_j)) *
            ElectricalSystem_P.CoreSubsys.DrainRateVmin_Gain;
        }

        /* End of Switch: '<S41>/Switch1' */
      } else {
        rtb_Switch_jyc = ElectricalSystem_P.CoreSubsys.u2Q01_Value;
      }

      /* End of Switch: '<S41>/Switch2' */

      /* Update for DiscreteIntegrator: '<S41>/Discrete-Time Integrator' */
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_IC_LOADING = 0U;
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g +=
        ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_gainval *
        rtb_Switch_jyc;
      if (localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g >=
          ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_UpperSat) {
        localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g =
          ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_UpperSat;
      } else {
        if (localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g <=
            ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_LowerSat) {
          localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_g =
            ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_LowerSat;
        }
      }

      if (rtb_ImpSel_InsertedFor_Faults_at_outport_0.LowBatteryVoltageAlarm >
          0.0) {
        localDW->CoreSubsys[ForEach_itr_h].
          DiscreteTimeIntegrator_PrevResetState_k = 1;
      } else if
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.LowBatteryVoltageAlarm <
           0.0) {
        localDW->CoreSubsys[ForEach_itr_h].
          DiscreteTimeIntegrator_PrevResetState_k = -1;
      } else if
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.LowBatteryVoltageAlarm ==
           0.0) {
        localDW->CoreSubsys[ForEach_itr_h].
          DiscreteTimeIntegrator_PrevResetState_k = 0;
      } else {
        localDW->CoreSubsys[ForEach_itr_h].
          DiscreteTimeIntegrator_PrevResetState_k = 2;
      }

      /* End of Update for DiscreteIntegrator: '<S41>/Discrete-Time Integrator' */

      /* Update for UnitDelay: '<S41>/Unit Delay' */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_j = localB->
        CoreSubsys[ForEach_itr_h].u2Q01;
    }

    /* End of Outputs for SubSystem: '<S15>/Battery' */

    /* Switch: '<S34>/Switch' incorporates:
     *  Constant: '<S34>/Constant'
     *  Constant: '<S45>/Constant'
     *  Logic: '<S34>/Logical Operator'
     *  Logic: '<S34>/Logical Operator1'
     *  Logic: '<S34>/Logical Operator2'
     *  RelationalOperator: '<S45>/Compare'
     *  UnitDelay: '<S35>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bw) {
      rtb_Switch_fp = ((localB->CoreSubsys[ForEach_itr_h].u2Q01 >= 0.8 *
                        rtp_Prm_ElectricalSystem->BatteryVoltage) &&
                       (!(localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_k
                          != 0.0)));
    } else {
      rtb_Switch_fp = ((localB->CoreSubsys[ForEach_itr_h].u2Q01 >= 0.8 *
                        rtp_Prm_ElectricalSystem->BatteryVoltage) &&
                       (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_k !=
                        0.0));
    }

    /* End of Switch: '<S34>/Switch' */

    /* Switch: '<S47>/Switch' incorporates:
     *  Constant: '<S47>/Constant'
     *  Logic: '<S47>/Logical Operator'
     *  Logic: '<S47>/Logical Operator1'
     *  Logic: '<S47>/Logical Operator2'
     *  UnitDelay: '<S25>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ct >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dd) {
      rtb_Switch_fp = (rtb_Switch_fp && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_of));
    } else {
      rtb_Switch_fp = (rtb_Switch_fp && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_of);
    }

    /* End of Switch: '<S47>/Switch' */

    /* Switch: '<S24>/Switch' incorporates:
     *  Constant: '<S24>/Constant'
     *  Constant: '<S79>/Constant'
     *  Logic: '<S24>/Logical Operator'
     *  Logic: '<S24>/Logical Operator1'
     *  Logic: '<S24>/Logical Operator2'
     *  RelationalOperator: '<S79>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lu >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ie) {
      rtb_Switch_egb = (rtb_Switch_fp &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BCBCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_f)));
    } else {
      rtb_Switch_egb = (rtb_Switch_fp &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BCBCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_f));
    }

    /* End of Switch: '<S24>/Switch' */

    /* Switch: '<S27>/Switch' incorporates:
     *  Constant: '<S27>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S27>/Logical Operator'
     *  Logic: '<S27>/Logical Operator1'
     *  Logic: '<S27>/Logical Operator2'
     *  UnitDelay: '<S26>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mn >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_h) {
      rtb_Switch_ew0 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                         0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ov));
    } else {
      rtb_Switch_ew0 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                         0.0) && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_ov);
    }

    /* End of Switch: '<S27>/Switch' */

    /* Switch: '<S43>/Switch' incorporates:
     *  Constant: '<S43>/Constant'
     *  Logic: '<S43>/Logical Operator'
     *  Logic: '<S43>/Logical Operator1'
     *  Logic: '<S43>/Logical Operator2'
     *  UnitDelay: '<S38>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ph >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_di) {
      rtb_Switch_egb = (rtb_Switch_egb && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_d != 0.0)));
    } else {
      rtb_Switch_egb = (rtb_Switch_egb && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_d != 0.0));
    }

    /* End of Switch: '<S43>/Switch' */

    /* Switch: '<S75>/Switch' incorporates:
     *  Constant: '<S75>/Constant'
     *  Logic: '<S75>/Logical Operator'
     *  Logic: '<S75>/Logical Operator1'
     *  Logic: '<S75>/Logical Operator2'
     *  UnitDelay: '<S74>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_prv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_oq) {
      rtb_Switch_ggt = (rtb_Switch_egb && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_f != 0.0)));
    } else {
      rtb_Switch_ggt = (rtb_Switch_egb && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_f != 0.0));
    }

    /* End of Switch: '<S75>/Switch' */

    /* Switch: '<S73>/Switch' incorporates:
     *  Constant: '<S73>/Constant'
     *  Logic: '<S73>/Logical Operator'
     *  Logic: '<S73>/Logical Operator1'
     *  Logic: '<S73>/Logical Operator2'
     *  UnitDelay: '<S68>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_il >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gx) {
      rtb_Switch_egb = (rtb_Switch_ggt && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_l));
    } else {
      rtb_Switch_egb = (rtb_Switch_ggt && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_l);
    }

    /* End of Switch: '<S73>/Switch' */

    /* Switch: '<S39>/Switch' incorporates:
     *  Constant: '<S39>/Constant'
     *  Logic: '<S39>/Logical Operator'
     *  Logic: '<S39>/Logical Operator1'
     *  Logic: '<S39>/Logical Operator2'
     *  UnitDelay: '<S40>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_f2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_by) {
      rtb_Switch_ggt = (rtb_Switch_ggt && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_n));
    } else {
      rtb_Switch_ggt = (rtb_Switch_ggt && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_n);
    }

    /* End of Switch: '<S39>/Switch' */

    /* Switch: '<S32>/Switch' incorporates:
     *  Constant: '<S32>/Constant'
     *  Logic: '<S32>/Logical Operator'
     *  Logic: '<S32>/Logical Operator1'
     *  Logic: '<S32>/Logical Operator2'
     *  UnitDelay: '<S30>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fwp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gf) {
      rtb_Switch_dgm = (rtb_Switch_ggt && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_g));
    } else {
      rtb_Switch_dgm = (rtb_Switch_ggt && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_g);
    }

    /* End of Switch: '<S32>/Switch' */

    /* Switch: '<S66>/Switch' incorporates:
     *  Constant: '<S66>/Constant'
     *  Logic: '<S66>/Logical Operator'
     *  Logic: '<S66>/Logical Operator1'
     *  Logic: '<S66>/Logical Operator2'
     *  UnitDelay: '<S64>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_div) {
      tmp = (rtb_Switch_ggt && (!(localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_i != 0.0)));
    } else {
      tmp = (rtb_Switch_ggt && (localDW->CoreSubsys[ForEach_itr_h].
              UnitDelay_DSTATE_i != 0.0));
    }

    /* End of Switch: '<S66>/Switch' */

    /* Logic: '<S15>/Logical Operator1' */
    rtb_Switch_ggt = (rtb_Switch_egb || rtb_Switch_dgm || tmp);

    /* Switch: '<S65>/Switch' incorporates:
     *  Constant: '<S65>/Constant'
     *  Logic: '<S65>/Logical Operator'
     *  Logic: '<S65>/Logical Operator1'
     *  Logic: '<S65>/Logical Operator2'
     *  UnitDelay: '<S64>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ln >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bs) {
      rtb_Switch_h0m = (rtb_Switch_ggt && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_i != 0.0)));
    } else {
      rtb_Switch_h0m = (rtb_Switch_ggt && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_i != 0.0));
    }

    /* End of Switch: '<S65>/Switch' */

    /* Switch: '<S28>/Switch' incorporates:
     *  Constant: '<S28>/Constant'
     *  Logic: '<S28>/Logical Operator'
     *  Logic: '<S28>/Logical Operator1'
     *  Logic: '<S28>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fdf >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fv) {
      rtb_Switch_dm3 = (rtb_Switch_h0m &&
                        (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.BICContactorActivationFault
                           != 0.0)));
    } else {
      rtb_Switch_dm3 = (rtb_Switch_h0m &&
                        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.BICContactorActivationFault
                         != 0.0));
    }

    /* End of Switch: '<S28>/Switch' */

    /* Switch: '<S54>/Switch' incorporates:
     *  Constant: '<S54>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtb_LogicalOperator6_l) {
      rtb_Switch_jyc = localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102;
    } else {
      rtb_Switch_jyc = ElectricalSystem_P.CoreSubsys.Constant_Value_nj;
    }

    /* End of Switch: '<S54>/Switch' */

    /* Logic: '<S320>/Logical Operator' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    rtb_LogicalOperator = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW_TLPC1
      != 0.0) || (localB->UnitDelay[ForEach_itr_h].TrainWires.TW_CC_TrainWakeup
                  != 0.0));

    /* Switch: '<S78>/Switch' incorporates:
     *  Constant: '<S78>/Constant'
     *  Logic: '<S78>/Logical Operator'
     *  Logic: '<S78>/Logical Operator1'
     *  Logic: '<S78>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ck >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hp) {
      rtb_Switch_egb = ((rtb_Switch_jyc != 0.0) && (!rtb_LogicalOperator));
    } else {
      rtb_Switch_egb = ((rtb_Switch_jyc != 0.0) && rtb_LogicalOperator);
    }

    /* End of Switch: '<S78>/Switch' */

    /* Switch: '<S42>/Switch' incorporates:
     *  Constant: '<S42>/Constant'
     *  Logic: '<S42>/Logical Operator'
     *  Logic: '<S42>/Logical Operator1'
     *  Logic: '<S42>/Logical Operator2'
     *  UnitDelay: '<S38>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_d2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_du) {
      rtb_Switch_egb = (rtb_Switch_egb && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_d != 0.0)));
    } else {
      rtb_Switch_egb = (rtb_Switch_egb && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_d != 0.0));
    }

    /* End of Switch: '<S42>/Switch' */

    /* Switch: '<S29>/Switch' incorporates:
     *  Constant: '<S29>/Constant'
     *  Logic: '<S29>/Logical Operator'
     *  Logic: '<S29>/Logical Operator1'
     *  Logic: '<S29>/Logical Operator2'
     *  UnitDelay: '<S30>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_i0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lq) {
      rtb_Switch_gf = (rtb_Switch_egb && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_g));
    } else {
      rtb_Switch_gf = (rtb_Switch_egb && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_g);
    }

    /* End of Switch: '<S29>/Switch' */

    /* Switch: '<S31>/Switch' incorporates:
     *  Constant: '<S31>/Constant'
     *  Logic: '<S31>/Logical Operator'
     *  Logic: '<S31>/Logical Operator1'
     *  Logic: '<S31>/Logical Operator2'
     *  Switch: '<S57>/Switch'
     *  UnitDelay: '<S30>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hf >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ng) {
      /* Switch: '<S57>/Switch' incorporates:
       *  Constant: '<S57>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      if (rtb_LogicalOperator6_l) {
        rtb_Switch_dul = localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101;
      } else {
        rtb_Switch_dul = ElectricalSystem_P.CoreSubsys.Constant_Value_m0;
      }

      rtb_Switch_h1 = ((rtb_Switch_dul != 0.0) && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_g));
    } else {
      if (rtb_LogicalOperator6_l) {
        /* Switch: '<S57>/Switch' incorporates:
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         */
        rtb_Switch_dul = localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101;
      } else {
        /* Switch: '<S57>/Switch' incorporates:
         *  Constant: '<S57>/Constant'
         */
        rtb_Switch_dul = ElectricalSystem_P.CoreSubsys.Constant_Value_m0;
      }

      rtb_Switch_h1 = ((rtb_Switch_dul != 0.0) && localDW->
                       CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_g);
    }

    /* End of Switch: '<S31>/Switch' */

    /* Outputs for Atomic SubSystem: '<S15>/BICK_Delay' */
    ElectricalSystem_TimerOffDelayNoInit(rtb_Switch_h1, &localB->
      CoreSubsys[ForEach_itr_h].BICK_Delay, &localDW->CoreSubsys[ForEach_itr_h].
      BICK_Delay, &ElectricalSystem_P.CoreSubsys.BICK_Delay);

    /* End of Outputs for SubSystem: '<S15>/BICK_Delay' */

    /* Switch: '<S37>/Switch' incorporates:
     *  Constant: '<S37>/Constant'
     *  Logic: '<S37>/Logical Operator'
     *  Logic: '<S37>/Logical Operator1'
     *  Logic: '<S37>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pi >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_k) {
      rtb_Switch_egb = (rtb_Switch_mp &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BatteryResetPB
                           != 0.0)));
    } else {
      rtb_Switch_egb = (rtb_Switch_mp &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BatteryResetPB
                         != 0.0));
    }

    /* End of Switch: '<S37>/Switch' */

    /* Switch: '<S49>/Switch' */
    if (rtb_LogicalOperator6_l) {
      /* Update for UnitDelay: '<S74>/Unit Delay' */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f =
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMS_TSDDR;
    } else {
      /* Update for UnitDelay: '<S74>/Unit Delay' incorporates:
       *  Constant: '<S49>/Constant'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f =
        ElectricalSystem_P.CoreSubsys.Constant_Value_bd;
    }

    /* End of Switch: '<S49>/Switch' */

    /* Switch: '<S76>/Switch' incorporates:
     *  Constant: '<S76>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S76>/Logical Operator'
     *  Logic: '<S76>/Logical Operator1'
     *  Logic: '<S76>/Logical Operator2'
     *  Switch: '<S51>/Switch'
     *  UnitDelay: '<S69>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ma >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_a) {
      /* Switch: '<S51>/Switch' incorporates:
       *  Constant: '<S51>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (!rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
        rtb_Switch_mp = ElectricalSystem_P.CoreSubsys.Constant_Value_g0f;
      }

      rtb_Switch_mp = (rtb_Switch_mp && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ft));
    } else {
      if (!rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
        /* Switch: '<S51>/Switch' incorporates:
         *  Constant: '<S51>/Constant'
         */
        rtb_Switch_mp = ElectricalSystem_P.CoreSubsys.Constant_Value_g0f;
      }

      rtb_Switch_mp = (rtb_Switch_mp && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_ft);
    }

    /* End of Switch: '<S76>/Switch' */

    /* Switch: '<S546>/Switch' incorporates:
     *  Constant: '<S546>/Constant'
     *  Constant: '<S589>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S546>/Logical Operator'
     *  Logic: '<S546>/Logical Operator1'
     *  Logic: '<S546>/Logical Operator2'
     *  RelationalOperator: '<S589>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dus) {
      rtb_Switch_cx = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PANCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_d)));
    } else {
      rtb_Switch_cx = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PANCB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_d));
    }

    /* End of Switch: '<S546>/Switch' */

    /* Switch: '<S575>/Switch' incorporates:
     *  Constant: '<S575>/Constant'
     *  Logic: '<S575>/Logical Operator'
     *  Logic: '<S575>/Logical Operator1'
     *  Logic: '<S575>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ik >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hc) {
      rtb_Switch_cq = (rtb_Switch_cx &&
                       (!rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.PS3));
    } else {
      rtb_Switch_cq = (rtb_Switch_cx &&
                       rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.PS3);
    }

    /* End of Switch: '<S575>/Switch' */

    /* Switch: '<S62>/Switch' incorporates:
     *  Constant: '<S62>/Constant'
     *  Logic: '<S62>/Logical Operator'
     *  Logic: '<S62>/Logical Operator1'
     *  Logic: '<S62>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_njc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jg) {
      rtb_Switch_dgm = (rtb_Switch_mp && (!rtb_Switch_cq));
    } else {
      rtb_Switch_dgm = (rtb_Switch_mp && rtb_Switch_cq);
    }

    /* End of Switch: '<S62>/Switch' */

    /* Switch: '<S53>/Switch' incorporates:
     *  Constant: '<S213>/Constant'
     *  Constant: '<S53>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  RelationalOperator: '<S213>/Compare'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].UnitID ==
        ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_nu) {
      rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW99103;
    } else {
      rtu_ElectricalVehicleConfig_0 =
        ElectricalSystem_P.CoreSubsys.Constant_Value_fc;
    }

    /* End of Switch: '<S53>/Switch' */

    /* Switch: '<S52>/Switch' incorporates:
     *  Constant: '<S212>/Constant'
     *  Constant: '<S52>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  RelationalOperator: '<S212>/Compare'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].UnitID ==
        ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_d2) {
      rtb_Switch_dul = localB->UnitDelay[ForEach_itr_h].TrainWires.TW99104;
    } else {
      rtb_Switch_dul = ElectricalSystem_P.CoreSubsys.Constant_Value_ed;
    }

    /* End of Switch: '<S52>/Switch' */

    /* Switch: '<S48>/Switch' incorporates:
     *  Constant: '<S211>/Constant'
     *  Constant: '<S48>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  RelationalOperator: '<S211>/Compare'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].UnitID ==
        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_a32) {
      rtb_PulseGenerator = localB->UnitDelay[ForEach_itr_h].TrainWires.TW99105;
    } else {
      rtb_PulseGenerator = ElectricalSystem_P.CoreSubsys.Constant_Value_ob;
    }

    /* End of Switch: '<S48>/Switch' */

    /* Logic: '<S15>/Logical Operator4' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S15>/Logical Operator5'
     */
    rtb_Switch_mp =
      (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMS_TPOR
       || ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW99102 != 0.0) ||
           (rtu_ElectricalVehicleConfig_0 != 0.0) || (rtb_Switch_dul != 0.0) ||
           (rtb_PulseGenerator != 0.0)));

    /* Logic: '<S15>/Logical Operator6' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S15>/Logical Operator2'
     */
    rtb_TW_TSDR = (rtb_Switch_dgm ||
                   rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMS_TSDR
                   || (localB->UnitDelay[ForEach_itr_h].TrainWires.TW_TSDR !=
                       0.0));

    /* Switch: '<S72>/Switch' incorporates:
     *  Constant: '<S72>/Constant'
     *  Logic: '<S72>/Logical Operator'
     *  Logic: '<S72>/Logical Operator1'
     *  Logic: '<S72>/Logical Operator2'
     *  UnitDelay: '<S71>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_f51 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nd) {
      tmp = ((rtb_Switch_jyc != 0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
              UnitDelay_DSTATE_on));
    } else {
      tmp = ((rtb_Switch_jyc != 0.0) && localDW->CoreSubsys[ForEach_itr_h].
             UnitDelay_DSTATE_on);
    }

    /* End of Switch: '<S72>/Switch' */

    /* Switch: '<S67>/Switch' incorporates:
     *  Constant: '<S67>/Constant'
     *  Logic: '<S67>/Logical Operator'
     *  Logic: '<S67>/Logical Operator1'
     *  Logic: '<S67>/Logical Operator2'
     *  UnitDelay: '<S64>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fg >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kb) {
      tmp_0 = ((rtb_Switch_jyc != 0.0) && (!(localDW->CoreSubsys[ForEach_itr_h].
                 UnitDelay_DSTATE_i != 0.0)));
    } else {
      tmp_0 = ((rtb_Switch_jyc != 0.0) && (localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_i != 0.0));
    }

    /* End of Switch: '<S67>/Switch' */

    /* Switch: '<S59>/Switch' incorporates:
     *  Constant: '<S59>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S15>/Logical Operator3'
     */
    if (rtb_LogicalOperator6_l) {
      rtb_UnitDelay1 = ((localB->UnitDelay[ForEach_itr_h].
                         UnitWires.UW_DC110VLowFault != 0.0) ||
                        (localB->UnitDelay[ForEach_itr_h].UnitWires.UW_BUVDR !=
                         0.0));
    } else {
      rtb_UnitDelay1 = ElectricalSystem_P.CoreSubsys.Constant_Value_n4;
    }

    /* End of Switch: '<S59>/Switch' */

    /* Switch: '<S15>/Switch' incorporates:
     *  Constant: '<S15>/Constant1'
     */
    if (rtb_UnitDelay1) {
      rtb_Switch_jyc = ElectricalSystem_P.CoreSubsys.Constant1_Value_i;
    } else {
      rtb_Switch_jyc = localB->CoreSubsys[ForEach_itr_h].u2Q01;
    }

    /* End of Switch: '<S15>/Switch' */

    /* Outputs for Atomic SubSystem: '<S15>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit(rtb_Switch_gf, &localB->
      CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit_b, &localDW->
      CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit_b,
      &ElectricalSystem_P.CoreSubsys.TimerOffDelayNoInit_b);

    /* End of Outputs for SubSystem: '<S15>/TimerOffDelay NoInit' */

    /* Switch: '<S143>/Switch' incorporates:
     *  Constant: '<S143>/Constant'
     *  Constant: '<S188>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S143>/Logical Operator'
     *  Logic: '<S143>/Logical Operator1'
     *  Logic: '<S143>/Logical Operator2'
     *  RelationalOperator: '<S188>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hx) {
      rtb_Switch_iu2 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EDCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_h)));
    } else {
      rtb_Switch_iu2 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EDCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_h));
    }

    /* End of Switch: '<S143>/Switch' */

    /* Switch: '<S120>/Switch' incorporates:
     *  Constant: '<S120>/Constant'
     *  Logic: '<S120>/Logical Operator'
     *  Logic: '<S120>/Logical Operator1'
     *  Logic: '<S120>/Logical Operator2'
     *  UnitDelay: '<S155>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_j4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dx) {
      rtb_Switch_dgm = (rtb_Switch_iu2 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_np));
    } else {
      rtb_Switch_dgm = (rtb_Switch_iu2 && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_np);
    }

    /* End of Switch: '<S120>/Switch' */

    /* Logic: '<S84>/AND' incorporates:
     *  Logic: '<S84>/NOT'
     *  Logic: '<S84>/OR14'
     */
    rtb_UnitDelay1 = (rtb_Switch_dgm &&
                      ((!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.CCDetectedEmerDoorOpen
                          != 0.0)) &&
                       (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.EmerDoorNotOpenRelayDeactivated
                          != 0.0))));

    /* Switch: '<S149>/Switch' incorporates:
     *  Constant: '<S149>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S149>/Logical Operator'
     *  Logic: '<S149>/Logical Operator1'
     *  Logic: '<S149>/Logical Operator2'
     *  UnitDelay: '<S403>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_os >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dh) {
      rtb_Switch_e4 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ob));
    } else {
      rtb_Switch_e4 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_ob);
    }

    /* End of Switch: '<S149>/Switch' */

    /* Switch: '<S150>/Switch' incorporates:
     *  Constant: '<S150>/Constant'
     *  Logic: '<S150>/Logical Operator'
     *  Logic: '<S150>/Logical Operator1'
     *  Logic: '<S150>/Logical Operator2'
     *  UnitDelay: '<S134>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mg) {
      rtb_Switch_e4 = (rtb_Switch_e4 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_l0));
    } else {
      rtb_Switch_e4 = (rtb_Switch_e4 && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_l0);
    }

    /* End of Switch: '<S150>/Switch' */

    /* Switch: '<S151>/Switch' incorporates:
     *  Constant: '<S151>/Constant'
     *  Logic: '<S151>/Logical Operator'
     *  Logic: '<S151>/Logical Operator1'
     *  Logic: '<S151>/Logical Operator2'
     *  UnitDelay: '<S163>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_e1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fi) {
      rtb_Switch_e4 = (rtb_Switch_e4 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_gu));
    } else {
      rtb_Switch_e4 = (rtb_Switch_e4 && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_gu);
    }

    /* End of Switch: '<S151>/Switch' */

    /* Switch: '<S130>/Switch' incorporates:
     *  Constant: '<S130>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* Switch: '<S140>/Switch' incorporates:
       *  Constant: '<S140>/Constant'
       *  Constant: '<S185>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S140>/Logical Operator'
       *  Logic: '<S140>/Logical Operator1'
       *  Logic: '<S140>/Logical Operator2'
       *  RelationalOperator: '<S185>/Compare'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_nz >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_mh) {
        rtb_LogicalOperator_kp = ((localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31101 != 0.0) &&
          (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DLCB
             == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_k)));
      } else {
        rtb_LogicalOperator_kp = ((localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31101 != 0.0) &&
          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DLCB
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_k));
      }

      /* End of Switch: '<S140>/Switch' */
    } else {
      rtb_LogicalOperator_kp = ElectricalSystem_P.CoreSubsys.Constant_Value_bot;
    }

    /* End of Switch: '<S130>/Switch' */

    /* Switch: '<S94>/Switch' incorporates:
     *  Constant: '<S94>/Constant'
     *  Logic: '<S94>/Logical Operator'
     *  Logic: '<S94>/Logical Operator1'
     *  Logic: '<S94>/Logical Operator2'
     *  UnitDelay: '<S406>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fy >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nu) {
      rtb_OR8_f = (rtb_LogicalOperator_kp && (!localDW->CoreSubsys[ForEach_itr_h]
        .UnitDelay_DSTATE_gg));
    } else {
      rtb_OR8_f = (rtb_LogicalOperator_kp && localDW->CoreSubsys[ForEach_itr_h].
                   UnitDelay_DSTATE_gg);
    }

    /* End of Switch: '<S94>/Switch' */

    /* Switch: '<S95>/Switch' incorporates:
     *  Constant: '<S95>/Constant'
     *  Logic: '<S95>/Logical Operator'
     *  Logic: '<S95>/Logical Operator1'
     *  Logic: '<S95>/Logical Operator2'
     *  UnitDelay: '<S407>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gfx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ox) {
      rtb_LogicalOperator_kp = (rtb_LogicalOperator_kp && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jz));
    } else {
      rtb_LogicalOperator_kp = (rtb_LogicalOperator_kp && localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jz);
    }

    /* End of Switch: '<S95>/Switch' */

    /* Logic: '<S84>/OR1' */
    rtb_OR1 = (rtb_OR8_f || rtb_LogicalOperator_kp);

    /* Switch: '<S131>/Switch' incorporates:
     *  Constant: '<S131>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* Switch: '<S141>/Switch' incorporates:
       *  Constant: '<S141>/Constant'
       *  Constant: '<S186>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S141>/Logical Operator'
       *  Logic: '<S141>/Logical Operator1'
       *  Logic: '<S141>/Logical Operator2'
       *  RelationalOperator: '<S186>/Compare'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_bv >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_dt) {
        rtb_Switch_io = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                          0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DRCB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_j)));
      } else {
        rtb_Switch_io = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                          0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DRCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_j));
      }

      /* End of Switch: '<S141>/Switch' */
    } else {
      rtb_Switch_io = ElectricalSystem_P.CoreSubsys.Constant_Value_ec1;
    }

    /* End of Switch: '<S131>/Switch' */

    /* Switch: '<S90>/Switch' incorporates:
     *  Constant: '<S90>/Constant'
     *  Logic: '<S90>/Logical Operator'
     *  Logic: '<S90>/Logical Operator1'
     *  Logic: '<S90>/Logical Operator2'
     *  UnitDelay: '<S396>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_al) {
      rtb_Switch_dgm = (rtb_Switch_io && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_mo));
    } else {
      rtb_Switch_dgm = (rtb_Switch_io && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_mo);
    }

    /* End of Switch: '<S90>/Switch' */

    /* Switch: '<S92>/Switch' incorporates:
     *  Constant: '<S92>/Constant'
     *  Logic: '<S92>/Logical Operator'
     *  Logic: '<S92>/Logical Operator1'
     *  Logic: '<S92>/Logical Operator2'
     *  UnitDelay: '<S402>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cj >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hxy) {
      tmp_1 = (rtb_Switch_io && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_mx));
    } else {
      tmp_1 = (rtb_Switch_io && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_mx);
    }

    /* End of Switch: '<S92>/Switch' */

    /* Logic: '<S84>/OR20' */
    rtb_OR20 = (rtb_Switch_dgm || tmp_1);

    /* Switch: '<S93>/Switch' incorporates:
     *  Constant: '<S93>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S93>/Logical Operator'
     *  Logic: '<S93>/Logical Operator1'
     *  Logic: '<S93>/Logical Operator2'
     *  UnitDelay: '<S396>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_eke >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kx) {
      rtb_Switch_dgm = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_mo));
    } else {
      rtb_Switch_dgm = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_mo);
    }

    /* End of Switch: '<S93>/Switch' */

    /* Switch: '<S171>/Switch' incorporates:
     *  Constant: '<S171>/Constant'
     *  Constant: '<S190>/Constant'
     *  Logic: '<S171>/Logical Operator'
     *  Logic: '<S171>/Logical Operator1'
     *  Logic: '<S171>/Logical Operator2'
     *  RelationalOperator: '<S190>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ig >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kxp) {
      rtb_Switch_ge = (rtb_OR1 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_e)));
    } else {
      rtb_Switch_ge = (rtb_OR1 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_e));
    }

    /* End of Switch: '<S171>/Switch' */

    /* Switch: '<S115>/Switch' incorporates:
     *  Constant: '<S115>/Constant'
     *  Logic: '<S115>/Logical Operator'
     *  Logic: '<S115>/Logical Operator1'
     *  Logic: '<S115>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gc) {
      rtb_AllDoorsClosedLight = (rtb_Switch_ge &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPB1OperatingPanel2
           != 0.0)));
    } else {
      rtb_AllDoorsClosedLight = (rtb_Switch_ge &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPB1OperatingPanel2
         != 0.0));
    }

    /* End of Switch: '<S115>/Switch' */

    /* Switch: '<S116>/Switch' incorporates:
     *  Constant: '<S116>/Constant'
     *  Logic: '<S116>/Logical Operator'
     *  Logic: '<S116>/Logical Operator1'
     *  Logic: '<S116>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_o4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kj) {
      rtb_Switch_ge = (rtb_Switch_ge &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPB1OperatingPanel2
                          != 0.0)));
    } else {
      rtb_Switch_ge = (rtb_Switch_ge &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPB1OperatingPanel2
                        != 0.0));
    }

    /* End of Switch: '<S116>/Switch' */

    /* Logic: '<S84>/OR7' */
    rtb_OR7 = (rtb_AllDoorsClosedLight || rtb_Switch_ge);

    /* Switch: '<S117>/Switch' incorporates:
     *  Constant: '<S117>/Constant'
     *  Logic: '<S117>/Logical Operator'
     *  Logic: '<S117>/Logical Operator1'
     *  Logic: '<S117>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ew >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_i0) {
      rtb_Switch_ge = (rtb_OR7 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPBOperatingPanel2
                          != 0.0)));
    } else {
      rtb_Switch_ge = (rtb_OR7 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPBOperatingPanel2
                        != 0.0));
    }

    /* End of Switch: '<S117>/Switch' */

    /* Switch: '<S107>/Switch' incorporates:
     *  Constant: '<S107>/Constant'
     *  Logic: '<S107>/Logical Operator'
     *  Logic: '<S107>/Logical Operator1'
     *  Logic: '<S107>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ay >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ifm) {
      rtb_AllDoorsClosedLight = (rtb_OR7 &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPBOperatingPanel2
           != 0.0)));
    } else {
      rtb_AllDoorsClosedLight = (rtb_OR7 &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPBOperatingPanel2
         != 0.0));
    }

    /* End of Switch: '<S107>/Switch' */

    /* Switch: '<S96>/Switch' incorporates:
     *  Constant: '<S96>/Constant'
     *  Logic: '<S84>/OR19'
     *  Logic: '<S96>/Logical Operator'
     *  Logic: '<S96>/Logical Operator1'
     *  Logic: '<S96>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jy) {
      rtb_Switch_ge = ((rtb_Switch_ge || rtb_AllDoorsClosedLight) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel1
                          != 0.0)));
    } else {
      rtb_Switch_ge = ((rtb_Switch_ge || rtb_AllDoorsClosedLight) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel1
                        != 0.0));
    }

    /* End of Switch: '<S96>/Switch' */

    /* Switch: '<S97>/Switch' incorporates:
     *  Constant: '<S97>/Constant'
     *  Logic: '<S97>/Logical Operator'
     *  Logic: '<S97>/Logical Operator1'
     *  Logic: '<S97>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ga >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fw) {
      rtb_Switch_kb2 = (rtb_Switch_ge &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel2
                           != 0.0)));
    } else {
      rtb_Switch_kb2 = (rtb_Switch_ge &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel2
                         != 0.0));
    }

    /* End of Switch: '<S97>/Switch' */

    /* Switch: '<S98>/Switch' incorporates:
     *  Constant: '<S98>/Constant'
     *  Logic: '<S98>/Logical Operator'
     *  Logic: '<S98>/Logical Operator1'
     *  Logic: '<S98>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_i2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eu) {
      rtb_Switch_ge = (rtb_Switch_dgm &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel1
                          != 0.0)));
    } else {
      rtb_Switch_ge = (rtb_Switch_dgm &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel1
                        != 0.0));
    }

    /* End of Switch: '<S98>/Switch' */

    /* Switch: '<S99>/Switch' incorporates:
     *  Constant: '<S99>/Constant'
     *  Logic: '<S99>/Logical Operator'
     *  Logic: '<S99>/Logical Operator1'
     *  Logic: '<S99>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_obz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fq) {
      rtb_AllDoorsClosedLight = (rtb_Switch_dgm &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel2
           != 0.0)));
    } else {
      rtb_AllDoorsClosedLight = (rtb_Switch_dgm &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel2
         != 0.0));
    }

    /* End of Switch: '<S99>/Switch' */

    /* Switch: '<S173>/Switch' incorporates:
     *  Constant: '<S173>/Constant'
     *  Constant: '<S192>/Constant'
     *  Logic: '<S173>/Logical Operator'
     *  Logic: '<S173>/Logical Operator1'
     *  Logic: '<S173>/Logical Operator2'
     *  RelationalOperator: '<S192>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_la1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_d5) {
      rtb_Switch_it = (rtb_OR20 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_gm)));
    } else {
      rtb_Switch_it = (rtb_OR20 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_gm));
    }

    /* End of Switch: '<S173>/Switch' */

    /* Switch: '<S111>/Switch' incorporates:
     *  Constant: '<S111>/Constant'
     *  Logic: '<S111>/Logical Operator'
     *  Logic: '<S111>/Logical Operator1'
     *  Logic: '<S111>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_es >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_io) {
      rtb_OR7 = (rtb_Switch_it &&
                 (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPB1OperatingPanel5
                    != 0.0)));
    } else {
      rtb_OR7 = (rtb_Switch_it &&
                 (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPB1OperatingPanel5
                  != 0.0));
    }

    /* End of Switch: '<S111>/Switch' */

    /* Switch: '<S112>/Switch' incorporates:
     *  Constant: '<S112>/Constant'
     *  Logic: '<S112>/Logical Operator'
     *  Logic: '<S112>/Logical Operator1'
     *  Logic: '<S112>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mi >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nw) {
      rtb_Switch_it = (rtb_Switch_it &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPB1OperatingPanel5
                          != 0.0)));
    } else {
      rtb_Switch_it = (rtb_Switch_it &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPB1OperatingPanel5
                        != 0.0));
    }

    /* End of Switch: '<S112>/Switch' */

    /* Logic: '<S84>/OR27' */
    rtb_OR7 = (rtb_OR7 || rtb_Switch_it);

    /* Switch: '<S113>/Switch' incorporates:
     *  Constant: '<S113>/Constant'
     *  Logic: '<S113>/Logical Operator'
     *  Logic: '<S113>/Logical Operator1'
     *  Logic: '<S113>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_f2h >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_a1) {
      rtb_Switch_it = (rtb_OR7 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPBOperatingPanel5
                          != 0.0)));
    } else {
      rtb_Switch_it = (rtb_OR7 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPBOperatingPanel5
                        != 0.0));
    }

    /* End of Switch: '<S113>/Switch' */

    /* Switch: '<S109>/Switch' incorporates:
     *  Constant: '<S109>/Constant'
     *  Logic: '<S109>/Logical Operator'
     *  Logic: '<S109>/Logical Operator1'
     *  Logic: '<S109>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fcv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nv) {
      rtb_OR7 = (rtb_OR7 &&
                 (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPBOperatingPanel5
                    != 0.0)));
    } else {
      rtb_OR7 = (rtb_OR7 &&
                 (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPBOperatingPanel5
                  != 0.0));
    }

    /* End of Switch: '<S109>/Switch' */

    /* Switch: '<S100>/Switch' incorporates:
     *  Constant: '<S100>/Constant'
     *  Logic: '<S100>/Logical Operator'
     *  Logic: '<S100>/Logical Operator1'
     *  Logic: '<S100>/Logical Operator2'
     *  Logic: '<S84>/OR22'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lj >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hpd) {
      rtb_OR7 = ((rtb_Switch_it || rtb_OR7) &&
                 (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel1
                    != 0.0)));
    } else {
      rtb_OR7 = ((rtb_Switch_it || rtb_OR7) &&
                 (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel1
                  != 0.0));
    }

    /* End of Switch: '<S100>/Switch' */

    /* Switch: '<S101>/Switch' incorporates:
     *  Constant: '<S101>/Constant'
     *  Logic: '<S101>/Logical Operator'
     *  Logic: '<S101>/Logical Operator1'
     *  Logic: '<S101>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_f5c >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_n1) {
      rtb_Switch_hqb = (rtb_OR7 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel5
                           != 0.0)));
    } else {
      rtb_Switch_hqb = (rtb_OR7 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel5
                         != 0.0));
    }

    /* End of Switch: '<S101>/Switch' */

    /* Switch: '<S102>/Switch' incorporates:
     *  Constant: '<S102>/Constant'
     *  Logic: '<S102>/Logical Operator'
     *  Logic: '<S102>/Logical Operator1'
     *  Logic: '<S102>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_d4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ga) {
      rtb_Switch_it = (rtb_Switch_dgm &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel1
                          != 0.0)));
    } else {
      rtb_Switch_it = (rtb_Switch_dgm &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel1
                        != 0.0));
    }

    /* End of Switch: '<S102>/Switch' */

    /* Switch: '<S103>/Switch' incorporates:
     *  Constant: '<S103>/Constant'
     *  Logic: '<S103>/Logical Operator'
     *  Logic: '<S103>/Logical Operator1'
     *  Logic: '<S103>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mu >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_oe) {
      rtb_OR7 = (rtb_Switch_dgm &&
                 (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel5
                    != 0.0)));
    } else {
      rtb_OR7 = (rtb_Switch_dgm &&
                 (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel5
                  != 0.0));
    }

    /* End of Switch: '<S103>/Switch' */

    /* Switch: '<S86>/Switch' incorporates:
     *  Constant: '<S179>/Constant'
     *  Constant: '<S86>/Constant'
     *  Logic: '<S86>/Logical Operator'
     *  Logic: '<S86>/Logical Operator1'
     *  Logic: '<S86>/Logical Operator2'
     *  RelationalOperator: '<S179>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_b2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cr) {
      rtb_Switch_dgm = (rtb_OR1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_oy)));
    } else {
      rtb_Switch_dgm = (rtb_OR1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_oy));
    }

    /* End of Switch: '<S86>/Switch' */

    /* Switch: '<S88>/Switch' incorporates:
     *  Constant: '<S181>/Constant'
     *  Constant: '<S88>/Constant'
     *  Logic: '<S88>/Logical Operator'
     *  Logic: '<S88>/Logical Operator1'
     *  Logic: '<S88>/Logical Operator2'
     *  RelationalOperator: '<S181>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_e1k >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ef) {
      tmp_1 = (rtb_OR1 &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ok)));
    } else {
      tmp_1 = (rtb_OR1 &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ok));
    }

    /* End of Switch: '<S88>/Switch' */

    /* Logic: '<S84>/OR5' */
    rtb_LogicalOperator_kp = (rtb_Switch_dgm || tmp_1);

    /* Switch: '<S106>/Switch' incorporates:
     *  Constant: '<S106>/Constant'
     *  Logic: '<S106>/Logical Operator'
     *  Logic: '<S106>/Logical Operator1'
     *  Logic: '<S106>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dy >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bs5) {
      rtb_OR8_f = (rtb_LogicalOperator_kp &&
                   (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPB1OperatingPanel2
                      != 0.0)));
    } else {
      rtb_OR8_f = (rtb_LogicalOperator_kp &&
                   (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPB1OperatingPanel2
                    != 0.0));
    }

    /* End of Switch: '<S106>/Switch' */

    /* Switch: '<S87>/Switch' incorporates:
     *  Constant: '<S180>/Constant'
     *  Constant: '<S87>/Constant'
     *  Logic: '<S87>/Logical Operator'
     *  Logic: '<S87>/Logical Operator1'
     *  Logic: '<S87>/Logical Operator2'
     *  RelationalOperator: '<S180>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mf >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_if) {
      rtb_Switch_dgm = (rtb_OR20 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_p)));
    } else {
      rtb_Switch_dgm = (rtb_OR20 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_p));
    }

    /* End of Switch: '<S87>/Switch' */

    /* Switch: '<S89>/Switch' incorporates:
     *  Constant: '<S182>/Constant'
     *  Constant: '<S89>/Constant'
     *  Logic: '<S89>/Logical Operator'
     *  Logic: '<S89>/Logical Operator1'
     *  Logic: '<S89>/Logical Operator2'
     *  RelationalOperator: '<S182>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_na) {
      tmp_1 = (rtb_OR20 &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fy)));
    } else {
      tmp_1 = (rtb_OR20 &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fy));
    }

    /* End of Switch: '<S89>/Switch' */

    /* Logic: '<S84>/OR26' */
    rtb_LogicalOperator1_dl = (rtb_Switch_dgm || tmp_1);

    /* Switch: '<S108>/Switch' incorporates:
     *  Constant: '<S108>/Constant'
     *  Logic: '<S108>/Logical Operator'
     *  Logic: '<S108>/Logical Operator1'
     *  Logic: '<S108>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_en >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nh) {
      rtb_Switch_io = (rtb_LogicalOperator1_dl &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPB1OperatingPanel5
                          != 0.0)));
    } else {
      rtb_Switch_io = (rtb_LogicalOperator1_dl &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPB1OperatingPanel5
                        != 0.0));
    }

    /* End of Switch: '<S108>/Switch' */

    /* Switch: '<S110>/Switch' incorporates:
     *  Constant: '<S110>/Constant'
     *  Logic: '<S110>/Logical Operator'
     *  Logic: '<S110>/Logical Operator1'
     *  Logic: '<S110>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_m1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_o1) {
      rtb_LogicalOperator1_dl = (rtb_LogicalOperator1_dl &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPBOperatingPanel1
           != 0.0)));
    } else {
      rtb_LogicalOperator1_dl = (rtb_LogicalOperator1_dl &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPBOperatingPanel1
         != 0.0));
    }

    /* End of Switch: '<S110>/Switch' */

    /* Switch: '<S114>/Switch' incorporates:
     *  Constant: '<S114>/Constant'
     *  Logic: '<S114>/Logical Operator'
     *  Logic: '<S114>/Logical Operator1'
     *  Logic: '<S114>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_b5g >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cl) {
      rtb_LogicalOperator_kp = (rtb_LogicalOperator_kp &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPBOperatingPanel1
           != 0.0)));
    } else {
      rtb_LogicalOperator_kp = (rtb_LogicalOperator_kp &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPBOperatingPanel1
         != 0.0));
    }

    /* End of Switch: '<S114>/Switch' */

    /* Switch: '<S168>/Switch' incorporates:
     *  Constant: '<S168>/Constant'
     *  Logic: '<S168>/Logical Operator'
     *  Logic: '<S168>/Logical Operator1'
     *  Logic: '<S168>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fsn >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ni) {
      rtb_Switch_hy = (rtb_OR20 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                          != 0.0)));
    } else {
      rtb_Switch_hy = (rtb_OR20 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                        != 0.0));
    }

    /* End of Switch: '<S168>/Switch' */

    /* Switch: '<S125>/Switch' incorporates:
     *  Constant: '<S125>/Constant'
     *  Constant: '<S183>/Constant'
     *  Logic: '<S125>/Logical Operator'
     *  Logic: '<S125>/Logical Operator1'
     *  Logic: '<S125>/Logical Operator2'
     *  RelationalOperator: '<S183>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lm >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fn) {
      rtb_Switch_hy = (rtb_Switch_hy &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HoldDoorCloseBS
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ei)));
    } else {
      rtb_Switch_hy = (rtb_Switch_hy &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HoldDoorCloseBS
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ei));
    }

    /* End of Switch: '<S125>/Switch' */

    /* Switch: '<S166>/Switch' incorporates:
     *  Constant: '<S166>/Constant'
     *  Logic: '<S166>/Logical Operator'
     *  Logic: '<S166>/Logical Operator1'
     *  Logic: '<S166>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_a2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_e2) {
      rtb_Switch_dgm = (rtb_OR1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                           != 0.0)));
    } else {
      rtb_Switch_dgm = (rtb_OR1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                         != 0.0));
    }

    /* End of Switch: '<S166>/Switch' */

    /* Switch: '<S126>/Switch' incorporates:
     *  Constant: '<S126>/Constant'
     *  Constant: '<S184>/Constant'
     *  Logic: '<S126>/Logical Operator'
     *  Logic: '<S126>/Logical Operator1'
     *  Logic: '<S126>/Logical Operator2'
     *  RelationalOperator: '<S184>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_h1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ce) {
      rtb_Switch_f = (rtb_Switch_dgm &&
                      (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HoldDoorCloseBS
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jk)));
    } else {
      rtb_Switch_f = (rtb_Switch_dgm &&
                      (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HoldDoorCloseBS
                       ==
                       ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jk));
    }

    /* End of Switch: '<S126>/Switch' */

    /* Switch: '<S129>/Switch' incorporates:
     *  Constant: '<S129>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* Switch: '<S142>/Switch' incorporates:
       *  Constant: '<S142>/Constant'
       *  Constant: '<S187>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S142>/Logical Operator'
       *  Logic: '<S142>/Logical Operator1'
       *  Logic: '<S142>/Logical Operator2'
       *  RelationalOperator: '<S187>/Compare'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_pn >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_do) {
        rtb_Switch_fvk = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101
                           != 0.0) &&
                          (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DPLCB
                             ==
                             ElectricalSystem_P.CoreSubsys.CompareToConstant_const_pz)));
      } else {
        rtb_Switch_fvk = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101
                           != 0.0) &&
                          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DPLCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_pz));
      }

      /* End of Switch: '<S142>/Switch' */
    } else {
      rtb_Switch_fvk = ElectricalSystem_P.CoreSubsys.Constant_Value_lgc;
    }

    /* End of Switch: '<S129>/Switch' */

    /* Logic: '<S84>/NOT4' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    rtb_NOT4 = !(localB->UnitDelay[ForEach_itr_h].TrainWires.TW_LDISRR != 0.0);

    /* Logic: '<S84>/NOT5' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    rtb_NOT5 = !(localB->UnitDelay[ForEach_itr_h].TrainWires.TW_LDISLR != 0.0);

    /* Switch: '<S152>/Switch' incorporates:
     *  Constant: '<S152>/Constant'
     *  Logic: '<S152>/Logical Operator'
     *  Logic: '<S152>/Logical Operator1'
     *  Logic: '<S152>/Logical Operator2'
     *  UnitDelay: '<S407>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_h1) {
      rtb_Switch_a0 = (rtb_Switch_fvk && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_jz));
    } else {
      rtb_Switch_a0 = (rtb_Switch_fvk && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_jz);
    }

    /* End of Switch: '<S152>/Switch' */

    /* Switch: '<S153>/Switch' incorporates:
     *  Constant: '<S153>/Constant'
     *  Logic: '<S153>/Logical Operator'
     *  Logic: '<S153>/Logical Operator1'
     *  Logic: '<S153>/Logical Operator2'
     *  UnitDelay: '<S408>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_et) {
      rtb_Switch_fvk = (rtb_Switch_fvk && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_f5));
    } else {
      rtb_Switch_fvk = (rtb_Switch_fvk && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_f5);
    }

    /* End of Switch: '<S153>/Switch' */

    /* Switch: '<S121>/Switch' incorporates:
     *  Constant: '<S121>/Constant'
     *  Logic: '<S121>/Logical Operator'
     *  Logic: '<S121>/Logical Operator1'
     *  Logic: '<S121>/Logical Operator2'
     *  UnitDelay: '<S1175>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gs) {
      tmp_1 = (rtb_Switch_iu2 && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_du));
    } else {
      tmp_1 = (rtb_Switch_iu2 && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_du);
    }

    /* End of Switch: '<S121>/Switch' */

    /* Switch: '<S136>/Switch' incorporates:
     *  Constant: '<S136>/Constant'
     *  Logic: '<S136>/Logical Operator'
     *  Logic: '<S136>/Logical Operator1'
     *  Logic: '<S136>/Logical Operator2'
     *  UnitDelay: '<S674>/Unit Delay'
     *  UnitDelay: '<S84>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_avx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ac) {
      tmp_2 = (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ce &&
               (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cc1));
    } else {
      tmp_2 = (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ce &&
               localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cc1);
    }

    /* End of Switch: '<S136>/Switch' */

    /* Switch: '<S148>/Switch' incorporates:
     *  Constant: '<S148>/Constant'
     *  Logic: '<S148>/Logical Operator'
     *  Logic: '<S148>/Logical Operator1'
     *  Logic: '<S148>/Logical Operator2'
     *  Logic: '<S84>/OR'
     *  UnitDelay: '<S161>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_li >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_e0) {
      rtb_Switch_fvk = ((rtb_Switch_a0 || rtb_Switch_fvk) &&
                        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cc));
    } else {
      rtb_Switch_fvk = ((rtb_Switch_a0 || rtb_Switch_fvk) && localDW->
                        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cc);
    }

    /* End of Switch: '<S148>/Switch' */

    /* Switch: '<S154>/Switch' incorporates:
     *  Constant: '<S154>/Constant'
     *  Logic: '<S154>/Logical Operator'
     *  Logic: '<S154>/Logical Operator1'
     *  Logic: '<S154>/Logical Operator2'
     *  UnitDelay: '<S174>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nom) {
      rtb_Switch_fvk = (rtb_Switch_fvk && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_m));
    } else {
      rtb_Switch_fvk = (rtb_Switch_fvk && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_m);
    }

    /* End of Switch: '<S154>/Switch' */

    /* Logic: '<S84>/OR11' */
    rtb_OR11 = rtb_Switch_fvk;

    /* Switch: '<S145>/Switch' incorporates:
     *  Constant: '<S145>/Constant'
     *  Logic: '<S145>/Logical Operator'
     *  Logic: '<S145>/Logical Operator1'
     *  Logic: '<S145>/Logical Operator2'
     *  Logic: '<S84>/OR11'
     *  UnitDelay: '<S134>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_op >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hpw) {
      rtb_Switch_fvk = (rtb_Switch_fvk && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_l0));
    } else {
      rtb_Switch_fvk = (rtb_Switch_fvk && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_l0);
    }

    /* End of Switch: '<S145>/Switch' */

    /* Switch: '<S144>/Switch' incorporates:
     *  Constant: '<S144>/Constant'
     *  Logic: '<S144>/Logical Operator'
     *  Logic: '<S144>/Logical Operator1'
     *  Logic: '<S144>/Logical Operator2'
     *  UnitDelay: '<S135>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ar >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mgy) {
      rtb_Switch_dgm = (rtb_OR11 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_cu));
    } else {
      rtb_Switch_dgm = (rtb_OR11 && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_cu);
    }

    /* End of Switch: '<S144>/Switch' */

    /* Logic: '<S84>/OR12' */
    rtb_OR11 = (rtb_Switch_fvk || rtb_Switch_dgm);

    /* Switch: '<S147>/Switch' incorporates:
     *  Constant: '<S147>/Constant'
     *  Logic: '<S147>/Logical Operator'
     *  Logic: '<S147>/Logical Operator1'
     *  Logic: '<S147>/Logical Operator2'
     *  UnitDelay: '<S163>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_e0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jq) {
      rtb_Switch_dgm = (rtb_OR11 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_gu));
    } else {
      rtb_Switch_dgm = (rtb_OR11 && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_gu);
    }

    /* End of Switch: '<S147>/Switch' */

    /* Switch: '<S146>/Switch' incorporates:
     *  Constant: '<S146>/Constant'
     *  Logic: '<S146>/Logical Operator'
     *  Logic: '<S146>/Logical Operator1'
     *  Logic: '<S146>/Logical Operator2'
     *  UnitDelay: '<S164>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bj) {
      rtb_Switch_fvk = (rtb_OR11 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ic));
    } else {
      rtb_Switch_fvk = (rtb_OR11 && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_ic);
    }

    /* End of Switch: '<S146>/Switch' */

    /* Logic: '<S84>/OR13' */
    rtb_OR11 = (rtb_Switch_dgm || rtb_Switch_fvk);

    /* Switch: '<S165>/Switch' incorporates:
     *  Constant: '<S165>/Constant'
     *  Logic: '<S165>/Logical Operator'
     *  Logic: '<S165>/Logical Operator1'
     *  Logic: '<S165>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ci >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_le) {
      rtb_Switch_a0 = (rtb_OR1 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                          != 0.0)));
    } else {
      rtb_Switch_a0 = (rtb_OR1 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                        != 0.0));
    }

    /* End of Switch: '<S165>/Switch' */

    /* Switch: '<S170>/Switch' incorporates:
     *  Constant: '<S170>/Constant'
     *  Constant: '<S189>/Constant'
     *  Logic: '<S170>/Logical Operator'
     *  Logic: '<S170>/Logical Operator1'
     *  Logic: '<S170>/Logical Operator2'
     *  RelationalOperator: '<S189>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_n1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fj) {
      rtb_Switch_a0 = (rtb_Switch_a0 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_du)));
    } else {
      rtb_Switch_a0 = (rtb_Switch_a0 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_du));
    }

    /* End of Switch: '<S170>/Switch' */

    /* Switch: '<S177>/Switch' incorporates:
     *  Constant: '<S177>/Constant'
     *  Logic: '<S177>/Logical Operator'
     *  Logic: '<S177>/Logical Operator1'
     *  Logic: '<S177>/Logical Operator2'
     *  UnitDelay: '<S1186>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ej) {
      rtb_Switch_dgm = (rtb_OR1 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_c2));
    } else {
      rtb_Switch_dgm = (rtb_OR1 && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_c2);
    }

    /* End of Switch: '<S177>/Switch' */

    /* Logic: '<S84>/OR3' */
    rtb_Switch_ij = (rtb_Switch_dgm || rtb_Switch_a0);

    /* Switch: '<S167>/Switch' incorporates:
     *  Constant: '<S167>/Constant'
     *  Logic: '<S167>/Logical Operator'
     *  Logic: '<S167>/Logical Operator1'
     *  Logic: '<S167>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dg >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_oc) {
      rtb_Switch_a0 = (rtb_OR20 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                          != 0.0)));
    } else {
      rtb_Switch_a0 = (rtb_OR20 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                        != 0.0));
    }

    /* End of Switch: '<S167>/Switch' */

    /* Switch: '<S172>/Switch' incorporates:
     *  Constant: '<S172>/Constant'
     *  Constant: '<S191>/Constant'
     *  Logic: '<S172>/Logical Operator'
     *  Logic: '<S172>/Logical Operator1'
     *  Logic: '<S172>/Logical Operator2'
     *  RelationalOperator: '<S191>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hs >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pp) {
      rtb_Switch_a0 = (rtb_Switch_a0 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_pz1)));
    } else {
      rtb_Switch_a0 = (rtb_Switch_a0 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_pz1));
    }

    /* End of Switch: '<S172>/Switch' */

    /* Switch: '<S178>/Switch' incorporates:
     *  Constant: '<S178>/Constant'
     *  Logic: '<S178>/Logical Operator'
     *  Logic: '<S178>/Logical Operator1'
     *  Logic: '<S178>/Logical Operator2'
     *  UnitDelay: '<S1187>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ps >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kbi) {
      rtb_Switch_fvk = (rtb_OR20 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_h));
    } else {
      rtb_Switch_fvk = (rtb_OR20 && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_h);
    }

    /* End of Switch: '<S178>/Switch' */

    /* Switch: '<S127>/Switch' incorporates:
     *  Constant: '<S127>/Constant'
     *  Logic: '<S127>/Logical Operator'
     *  Logic: '<S127>/Logical Operator1'
     *  Logic: '<S127>/Logical Operator2'
     *  UnitDelay: '<S1173>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_j3) {
      tmp_3 = (rtb_OR1 && (!localDW->CoreSubsys[ForEach_itr_h].
                           UnitDelay_DSTATE_c1));
    } else {
      tmp_3 = (rtb_OR1 && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c1);
    }

    /* End of Switch: '<S127>/Switch' */

    /* Switch: '<S128>/Switch' incorporates:
     *  Constant: '<S128>/Constant'
     *  Logic: '<S128>/Logical Operator'
     *  Logic: '<S128>/Logical Operator1'
     *  Logic: '<S128>/Logical Operator2'
     *  UnitDelay: '<S1174>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hij >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cg) {
      tmp_4 = (rtb_OR20 && (!localDW->CoreSubsys[ForEach_itr_h].
                            UnitDelay_DSTATE_bly));
    } else {
      tmp_4 = (rtb_OR20 && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_bly);
    }

    /* End of Switch: '<S128>/Switch' */

    /* Switch: '<S105>/Switch' incorporates:
     *  Constant: '<S105>/Constant'
     *  Logic: '<S105>/Logical Operator'
     *  Logic: '<S105>/Logical Operator1'
     *  Logic: '<S105>/Logical Operator2'
     *  UnitDelay: '<S1171>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ljg >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_b1) {
      tmp_5 = (rtb_OR20 && (!localDW->CoreSubsys[ForEach_itr_h].
                            UnitDelay_DSTATE_pk));
    } else {
      tmp_5 = (rtb_OR20 && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_pk);
    }

    /* End of Switch: '<S105>/Switch' */

    /* Switch: '<S139>/Switch' incorporates:
     *  Constant: '<S139>/Constant'
     *  Logic: '<S139>/Logical Operator'
     *  Logic: '<S139>/Logical Operator1'
     *  Logic: '<S139>/Logical Operator2'
     *  UnitDelay: '<S673>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mm >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dk) {
      tmp_6 = (rtb_OR20 && (!localDW->CoreSubsys[ForEach_itr_h].
                            UnitDelay_DSTATE_bt));
    } else {
      tmp_6 = (rtb_OR20 && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_bt);
    }

    /* End of Switch: '<S139>/Switch' */

    /* Logic: '<S84>/OR28' */
    rtb_Switch_io = (rtb_Switch_io || rtb_LogicalOperator1_dl || rtb_Switch_hqb);

    /* Switch: '<S104>/Switch' incorporates:
     *  Constant: '<S104>/Constant'
     *  Logic: '<S104>/Logical Operator'
     *  Logic: '<S104>/Logical Operator1'
     *  Logic: '<S104>/Logical Operator2'
     *  UnitDelay: '<S1170>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ch >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_a0) {
      tmp_7 = (rtb_OR1 && (!localDW->CoreSubsys[ForEach_itr_h].
                           UnitDelay_DSTATE_kk));
    } else {
      tmp_7 = (rtb_OR1 && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_kk);
    }

    /* End of Switch: '<S104>/Switch' */

    /* Switch: '<S138>/Switch' incorporates:
     *  Constant: '<S138>/Constant'
     *  Logic: '<S138>/Logical Operator'
     *  Logic: '<S138>/Logical Operator1'
     *  Logic: '<S138>/Logical Operator2'
     *  UnitDelay: '<S673>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_j0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jv) {
      tmp_8 = (rtb_OR1 && (!localDW->CoreSubsys[ForEach_itr_h].
                           UnitDelay_DSTATE_bt));
    } else {
      tmp_8 = (rtb_OR1 && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bt);
    }

    /* End of Switch: '<S138>/Switch' */

    /* Logic: '<S84>/OR6' */
    rtb_OR6 = (rtb_Switch_ge || rtb_Switch_f || rtb_AllDoorsClosedLight);

    /* Logic: '<S84>/OR8' */
    rtb_OR8_f = (rtb_OR8_f || rtb_LogicalOperator_kp || rtb_Switch_kb2);

    /* Logic: '<S84>/OR9' */
    rtb_OR9 = (rtb_Switch_it || rtb_Switch_hy || rtb_OR7);

    /* Switch: '<S169>/Switch' incorporates:
     *  Constant: '<S169>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_l5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ar) {
      /* Update for UnitDelay: '<S84>/Unit Delay' incorporates:
       *  Logic: '<S169>/Logical Operator1'
       *  Logic: '<S169>/Logical Operator2'
       *  UnitDelay: '<S669>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ce = (rtb_Switch_iu2 &&
        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bi));
    } else {
      /* Update for UnitDelay: '<S84>/Unit Delay' incorporates:
       *  Logic: '<S169>/Logical Operator'
       *  UnitDelay: '<S669>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ce = (rtb_Switch_iu2 &&
        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bi);
    }

    /* End of Switch: '<S169>/Switch' */

    /* Outputs for Atomic SubSystem: '<S84>/TimerOnDelay NoInit2' */
    ElectricalSystem_TimerOnDelayNoInit(rtb_OR6, &localB->
      CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit2, &localDW->
      CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit2,
      &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit2,
      ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit2_UpperSaturationLimit);

    /* End of Outputs for SubSystem: '<S84>/TimerOnDelay NoInit2' */

    /* Outputs for Atomic SubSystem: '<S84>/TimerOnDelay NoInit3' */
    ElectricalSystem_TimerOnDelayNoInit(rtb_OR9, &localB->
      CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit3, &localDW->
      CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit3,
      &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit3,
      ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit3_UpperSaturationLimit);

    /* End of Outputs for SubSystem: '<S84>/TimerOnDelay NoInit3' */

    /* Switch: '<S221>/Switch' incorporates:
     *  Constant: '<S221>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtb_Switch_g0z = localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101;
    } else {
      rtb_Switch_g0z = ElectricalSystem_P.CoreSubsys.Constant_Value_bk;
    }

    /* End of Switch: '<S221>/Switch' */

    /* Switch: '<S224>/Switch' incorporates:
     *  Constant: '<S224>/Constant'
     *  Constant: '<S228>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S224>/Logical Operator'
     *  Logic: '<S224>/Logical Operator1'
     *  Logic: '<S224>/Logical Operator2'
     *  RelationalOperator: '<S228>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_o0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_f5) {
      rtb_LogicalOperator1_dl = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW31101 != 0.0) &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LampTestPB
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_je)));
    } else {
      rtb_LogicalOperator1_dl = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW31101 != 0.0) &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LampTestPB
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_je));
    }

    /* End of Switch: '<S224>/Switch' */

    /* Switch: '<S219>/Switch' incorporates:
     *  Constant: '<S219>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S219>/Logical Operator'
     *  Logic: '<S219>/Logical Operator1'
     *  Logic: '<S219>/Logical Operator2'
     *  UnitDelay: '<S174>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hj >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ev) {
      rtb_Switch_dgm = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_m));
    } else {
      rtb_Switch_dgm = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_m);
    }

    /* End of Switch: '<S219>/Switch' */

    /* Logic: '<S214>/Logical Operator' */
    rtb_LogicalOperator_kp = (rtb_LogicalOperator1_dl || rtb_Switch_dgm);

    /* Switch: '<S222>/Switch' incorporates:
     *  Constant: '<S222>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
        UnitWires.UW11104;
    } else {
      rtu_ElectricalVehicleConfig_0 =
        ElectricalSystem_P.CoreSubsys.Constant_Value_ie;
    }

    /* End of Switch: '<S222>/Switch' */

    /* If: '<S220>/If' incorporates:
     *  Logic: '<S214>/AND'
     */
    if ((rtb_Switch_g0z != 0.0) && (rtu_ElectricalVehicleConfig_0 != 0.0)) {
      rtAction = 0;
      if (0 != localDW->CoreSubsys[ForEach_itr_h].If_ActiveSubsystem_n) {
        /* Enable for IfAction SubSystem: '<S220>/If Action Subsystem' incorporates:
         *  ActionPort: '<S225>/Action Port'
         */
        /* Enable for If: '<S220>/If' */
        ElectricalSystem_IfActionSubsystem_Enable(&localDW->
          CoreSubsys[ForEach_itr_h].IfActionSubsystem_i);

        /* End of Enable for SubSystem: '<S220>/If Action Subsystem' */
      }

      /* Outputs for IfAction SubSystem: '<S220>/If Action Subsystem' incorporates:
       *  ActionPort: '<S225>/Action Port'
       */
      ElectricalSystem_IfActionSubsystem_i((RT_MODEL_ElectricalSystem_T * const )
        ElectricalSystem_M, &rtb_Merge_a, &localDW->CoreSubsys[ForEach_itr_h].
        IfActionSubsystem_i, &ElectricalSystem_P.CoreSubsys.IfActionSubsystem_i,
        ElectricalSystem_P.CoreSubsys.GenerateVoltage_Cov,
        rtp_Prm_ElectricalSystem->OverheadLineVoltage);

      /* End of Outputs for SubSystem: '<S220>/If Action Subsystem' */
    } else {
      rtAction = 1;

      /* Outputs for IfAction SubSystem: '<S220>/If Action Subsystem1' incorporates:
       *  ActionPort: '<S226>/Action Port'
       */
      ElectricalSystem_IfActionSubsystem1(&rtb_Merge_a,
        &ElectricalSystem_P.CoreSubsys.IfActionSubsystem1_o);

      /* End of Outputs for SubSystem: '<S220>/If Action Subsystem1' */
    }

    localDW->CoreSubsys[ForEach_itr_h].If_ActiveSubsystem_n = rtAction;

    /* End of If: '<S220>/If' */

    /* Switch: '<S218>/Switch' incorporates:
     *  Constant: '<S218>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S218>/Logical Operator'
     *  Logic: '<S218>/Logical Operator1'
     *  Logic: '<S218>/Logical Operator2'
     *  UnitDelay: '<S611>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_efa >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_arx) {
      rtb_Switch_dgm = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_lu));
    } else {
      rtb_Switch_dgm = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_lu);
    }

    /* End of Switch: '<S218>/Switch' */

    /* Logic: '<S214>/Logical Operator1' */
    rtb_LogicalOperator1_dl = (rtb_LogicalOperator1_dl || rtb_Switch_dgm);

    /* Switch: '<S214>/Switch' */
    if (rtb_Switch_g0z > ElectricalSystem_P.CoreSubsys.Switch_Threshold_er) {
      /* Switch: '<S223>/Switch' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* BusAssignment: '<S1328>/Bus Assignment2' incorporates:
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         */
        rtb_Switch_g0z = localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101;
      } else {
        /* BusAssignment: '<S1328>/Bus Assignment2' incorporates:
         *  Constant: '<S223>/Constant'
         */
        rtb_Switch_g0z = ElectricalSystem_P.CoreSubsys.Constant_Value_p3;
      }

      /* End of Switch: '<S223>/Switch' */
    } else {
      /* BusAssignment: '<S1328>/Bus Assignment2' incorporates:
       *  Constant: '<S214>/Constant'
       */
      rtb_Switch_g0z = ElectricalSystem_P.CoreSubsys.Constant_Value_kvb;
    }

    /* End of Switch: '<S214>/Switch' */

    /* Switch: '<S244>/Switch' incorporates:
     *  Constant: '<S244>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S244>/Logical Operator'
     *  Logic: '<S244>/Logical Operator1'
     *  Logic: '<S244>/Logical Operator2'
     *  Switch: '<S234>/Switch'
     *  UnitDelay: '<S407>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mo >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kxw) {
      /* Switch: '<S234>/Switch' incorporates:
       *  Constant: '<S234>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31102;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_pdw;
      }

      rtb_OR1 = ((rtu_ElectricalVehicleConfig_0 != 0.0) && (!localDW->
                  CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jz));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S234>/Switch' incorporates:
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         */
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31102;
      } else {
        /* Switch: '<S234>/Switch' incorporates:
         *  Constant: '<S234>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_pdw;
      }

      rtb_OR1 = ((rtu_ElectricalVehicleConfig_0 != 0.0) && localDW->
                 CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jz);
    }

    /* End of Switch: '<S244>/Switch' */

    /* Switch: '<S229>/Switch' incorporates:
     *  Constant: '<S229>/Constant'
     *  Constant: '<S245>/Constant'
     *  Logic: '<S229>/Logical Operator'
     *  Logic: '<S229>/Logical Operator1'
     *  Logic: '<S229>/Logical Operator2'
     *  RelationalOperator: '<S245>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ak >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ff) {
      rtb_Switch_ge = (rtb_OR1 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CabConsolePB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_a)));
    } else {
      rtb_Switch_ge = (rtb_OR1 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CabConsolePB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_a));
    }

    /* End of Switch: '<S229>/Switch' */

    /* Switch: '<S230>/Switch' incorporates:
     *  Constant: '<S230>/Constant'
     *  Constant: '<S246>/Constant'
     *  Logic: '<S230>/Logical Operator'
     *  Logic: '<S230>/Logical Operator1'
     *  Logic: '<S230>/Logical Operator2'
     *  RelationalOperator: '<S246>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_k1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mn) {
      rtb_Switch_iu2 = (rtb_OR1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CabMainLightPB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_mx)));
    } else {
      rtb_Switch_iu2 = (rtb_OR1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CabMainLightPB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_mx));
    }

    /* End of Switch: '<S230>/Switch' */

    /* Switch: '<S231>/Switch' incorporates:
     *  Constant: '<S231>/Constant'
     *  Constant: '<S247>/Constant'
     *  Logic: '<S231>/Logical Operator'
     *  Logic: '<S231>/Logical Operator1'
     *  Logic: '<S231>/Logical Operator2'
     *  RelationalOperator: '<S247>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dn) {
      rtb_OR20 = (rtb_OR1 &&
                  (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HornPB
                     == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_b)));
    } else {
      rtb_OR20 = (rtb_OR1 &&
                  (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HornPB
                   == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_b));
    }

    /* End of Switch: '<S231>/Switch' */

    /* Switch: '<S240>/Switch' incorporates:
     *  Constant: '<S240>/Constant'
     *  Constant: '<S251>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S240>/Logical Operator'
     *  Logic: '<S240>/Logical Operator1'
     *  Logic: '<S240>/Logical Operator2'
     *  RelationalOperator: '<S251>/Compare'
     *  Switch: '<S232>/Switch'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_l1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bq) {
      /* Switch: '<S232>/Switch' incorporates:
       *  Constant: '<S232>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31101;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_nc;
      }

      rtb_OR1 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                 (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SSICB
                    == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_oku)));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S232>/Switch' incorporates:
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         */
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31101;
      } else {
        /* Switch: '<S232>/Switch' incorporates:
         *  Constant: '<S232>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_nc;
      }

      rtb_OR1 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                 (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SSICB
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_oku));
    }

    /* End of Switch: '<S240>/Switch' */

    /* Switch: '<S237>/Switch' incorporates:
     *  Constant: '<S237>/Constant'
     *  Constant: '<S248>/Constant'
     *  Logic: '<S237>/Logical Operator'
     *  Logic: '<S237>/Logical Operator1'
     *  Logic: '<S237>/Logical Operator2'
     *  RelationalOperator: '<S248>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_de >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gr) {
      rtb_AllDoorsClosedLight = (rtb_OR1 &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LampTestPB
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_n)));
    } else {
      rtb_AllDoorsClosedLight = (rtb_OR1 &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LampTestPB
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_n));
    }

    /* End of Switch: '<S237>/Switch' */

    /* Switch: '<S896>/Switch' incorporates:
     *  Constant: '<S896>/Constant'
     *  Constant: '<S921>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S896>/Logical Operator'
     *  Logic: '<S896>/Logical Operator1'
     *  Logic: '<S896>/Logical Operator2'
     *  RelationalOperator: '<S921>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bn) {
      rtb_OR7 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 != 0.0) &&
                 (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.AC1CB
                    == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dv)));
    } else {
      rtb_OR7 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 != 0.0) &&
                 (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.AC1CB
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dv));
    }

    /* End of Switch: '<S896>/Switch' */

    /* Switch: '<S897>/Switch' incorporates:
     *  Constant: '<S897>/Constant'
     *  Logic: '<S897>/Logical Operator'
     *  Logic: '<S897>/Logical Operator1'
     *  Logic: '<S897>/Logical Operator2'
     *  UnitDelay: '<S903>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hb1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_c54) {
      rtb_OR7 = (rtb_OR7 && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_iu != 0.0)));
    } else {
      rtb_OR7 = (rtb_OR7 && (localDW->CoreSubsys[ForEach_itr_h].
                  UnitDelay_DSTATE_iu != 0.0));
    }

    /* End of Switch: '<S897>/Switch' */

    /* Logic: '<S906>/Logical Operator40' incorporates:
     *  Logic: '<S906>/Logical Operator39'
     *  Logic: '<S906>/Logical Operator41'
     *  Memory: '<S906>/Memory'
     *  RelationalOperator: '<S871>/FixPt Relational Operator'
     *  RelationalOperator: '<S873>/FixPt Relational Operator'
     *  UnitDelay: '<S871>/Delay Input1'
     *  UnitDelay: '<S873>/Delay Input1'
     */
    rtb_Switch_it = (((static_cast<int32_T>(rtb_OR7) < static_cast<int32_T>
                       (localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_ks))
                      || localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput)
                     && (static_cast<int32_T>(rtb_OR7) <= static_cast<int32_T>
                         (localDW->CoreSubsys[ForEach_itr_h].
                          DelayInput1_DSTATE_n)));

    /* Switch: '<S912>/Switch' incorporates:
     *  Constant: '<S912>/Constant'
     *  Logic: '<S912>/Logical Operator'
     *  Logic: '<S912>/Logical Operator1'
     *  Logic: '<S912>/Logical Operator2'
     *  UnitDelay: '<S902>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_i4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_df) {
      rtb_Switch_eu = (rtb_OR7 && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_c != 0.0)));
    } else {
      rtb_Switch_eu = (rtb_OR7 && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_c != 0.0));
    }

    /* End of Switch: '<S912>/Switch' */

    /* Logic: '<S907>/Logical Operator40' incorporates:
     *  Logic: '<S907>/Logical Operator39'
     *  Logic: '<S907>/Logical Operator41'
     *  Memory: '<S907>/Memory'
     *  RelationalOperator: '<S872>/FixPt Relational Operator'
     *  RelationalOperator: '<S874>/FixPt Relational Operator'
     *  UnitDelay: '<S872>/Delay Input1'
     *  UnitDelay: '<S874>/Delay Input1'
     */
    rtb_LogicalOperator40_kv = (((static_cast<int32_T>(rtb_Switch_eu) <
      static_cast<int32_T>(localDW->CoreSubsys[ForEach_itr_h].
      DelayInput1_DSTATE_lq)) || localDW->CoreSubsys[ForEach_itr_h].
      Memory_PreviousInput_f) && (static_cast<int32_T>(rtb_Switch_eu) <=
      static_cast<int32_T>(localDW->CoreSubsys[ForEach_itr_h].
      DelayInput1_DSTATE_m0)));

    /* DataTypeConversion: '<S837>/Data Type Conversion10' incorporates:
     *  Logic: '<S837>/AND'
     *  Logic: '<S837>/NOT'
     */
    rtb_SupplyFanTripped = ((!rtb_Switch_it) && rtb_LogicalOperator40_kv);

    /* Switch: '<S894>/Switch' incorporates:
     *  Constant: '<S894>/Constant'
     *  Constant: '<S919>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S894>/Logical Operator'
     *  Logic: '<S894>/Logical Operator1'
     *  Logic: '<S894>/Logical Operator2'
     *  RelationalOperator: '<S919>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nan) {
      rtb_Switch_cbo = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SAC1CCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_mu)));
    } else {
      rtb_Switch_cbo = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SAC1CCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_mu));
    }

    /* End of Switch: '<S894>/Switch' */

    /* Switch: '<S880>/Switch' incorporates:
     *  Constant: '<S880>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jm >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_py) {
      /* DataTypeConversion: '<S837>/Data Type Conversion12' incorporates:
       *  Logic: '<S880>/Logical Operator1'
       *  Logic: '<S880>/Logical Operator2'
       *  UnitDelay: '<S900>/Unit Delay'
       */
      rtb_ExtSmokeDetectedinHVAC = (rtb_Switch_cbo && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_om));
    } else {
      /* DataTypeConversion: '<S837>/Data Type Conversion12' incorporates:
       *  Logic: '<S880>/Logical Operator'
       *  UnitDelay: '<S900>/Unit Delay'
       */
      rtb_ExtSmokeDetectedinHVAC = (rtb_Switch_cbo && localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_om);
    }

    /* End of Switch: '<S880>/Switch' */

    /* Switch: '<S879>/Switch' incorporates:
     *  Constant: '<S879>/Constant'
     *  Logic: '<S879>/Logical Operator'
     *  Logic: '<S879>/Logical Operator1'
     *  Logic: '<S879>/Logical Operator2'
     *  UnitDelay: '<S901>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ds) {
      rtb_LogicalOperator23 = (rtb_Switch_cbo && (!(localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_im != 0.0)));
    } else {
      rtb_LogicalOperator23 = (rtb_Switch_cbo && (localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_im != 0.0));
    }

    /* End of Switch: '<S879>/Switch' */

    /* Logic: '<S909>/Logical Operator40' incorporates:
     *  Logic: '<S837>/Logical Operator'
     *  Logic: '<S837>/Logical Operator1'
     *  Logic: '<S909>/Logical Operator39'
     *  Logic: '<S909>/Logical Operator41'
     *  Memory: '<S909>/Memory'
     *  RelationalOperator: '<S876>/FixPt Relational Operator'
     *  UnitDelay: '<S876>/Delay Input1'
     */
    rtb_LogicalOperator40_nd =
      ((((rtb_ImpSel_InsertedFor_Faults_at_outport_0.HVAC1FireMode >
          localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.HVAC1FireDetectorDisableVDUReq
            != 0.0))) || localDW->CoreSubsys[ForEach_itr_h].
        Memory_PreviousInput_p) &&
       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSResetHVAC1
          != 0.0)));

    /* Logic: '<S910>/Logical Operator40' incorporates:
     *  Logic: '<S910>/Logical Operator39'
     *  Logic: '<S910>/Logical Operator41'
     *  Memory: '<S910>/Memory'
     *  RelationalOperator: '<S877>/FixPt Relational Operator'
     *  UnitDelay: '<S877>/Delay Input1'
     */
    rtb_LogicalOperator40_eo =
      (((rtb_ImpSel_InsertedFor_Faults_at_outport_0.HVAC1ReducedMode >
         localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_m) ||
        localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_e) &&
       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSResetHVAC1
          != 0.0)));

    /* Logic: '<S911>/Logical Operator40' incorporates:
     *  Logic: '<S911>/Logical Operator39'
     *  Logic: '<S911>/Logical Operator41'
     *  Memory: '<S911>/Memory'
     *  RelationalOperator: '<S878>/FixPt Relational Operator'
     *  UnitDelay: '<S878>/Delay Input1'
     */
    rtb_LogicalOperator40_dp =
      (((rtb_ImpSel_InsertedFor_Faults_at_outport_0.HVAC1MajorFault >
         localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_k) ||
        localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_d) &&
       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSResetHVAC1
          != 0.0)));

    /* Logic: '<S837>/OR' incorporates:
     *  DataTypeConversion: '<S837>/Data Type Conversion11'
     *  DataTypeConversion: '<S837>/Data Type Conversion13'
     *  DataTypeConversion: '<S837>/Data Type Conversion14'
     *  DataTypeConversion: '<S837>/Data Type Conversion15'
     *  DataTypeConversion: '<S837>/Data Type Conversion16'
     */
    tmpForInput_tmp[0] = static_cast<int8_T>(rtb_Switch_it);
    tmpForInput_tmp[1] = static_cast<int8_T>(rtb_SupplyFanTripped);
    tmpForInput_tmp[2] = static_cast<int8_T>(rtb_ExtSmokeDetectedinHVAC);
    tmpForInput_tmp[3] = static_cast<int8_T>(rtb_LogicalOperator23);
    tmpForInput_tmp[4] = static_cast<int8_T>(rtb_LogicalOperator40_nd);
    tmpForInput_tmp[5] = static_cast<int8_T>(rtb_LogicalOperator40_eo);
    tmpForInput_tmp[6] = static_cast<int8_T>(rtb_LogicalOperator40_dp);
    rtb_Switch_dgm = rtb_Switch_it;
    for (i = 0; i < 6; i++) {
      rtb_Switch_dgm = (rtb_Switch_dgm || (tmpForInput_tmp[i + 1] != 0));
    }

    /* Switch: '<S253>/Switch' incorporates:
     *  Constant: '<S253>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtb_Switch_dul = localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102;
    } else {
      rtb_Switch_dul = ElectricalSystem_P.CoreSubsys.Constant_Value_mt;
    }

    /* End of Switch: '<S253>/Switch' */

    /* Switch: '<S282>/Switch' incorporates:
     *  Constant: '<S282>/Constant'
     *  Constant: '<S313>/Constant'
     *  Logic: '<S282>/Logical Operator'
     *  Logic: '<S282>/Logical Operator1'
     *  Logic: '<S282>/Logical Operator2'
     *  RelationalOperator: '<S313>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eg) {
      rtb_Switch_n = ((rtb_Switch_dul != 0.0) &&
                      (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HLCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_h1)));
    } else {
      rtb_Switch_n = ((rtb_Switch_dul != 0.0) &&
                      (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HLCB
                       ==
                       ElectricalSystem_P.CoreSubsys.CompareToConstant_const_h1));
    }

    /* End of Switch: '<S282>/Switch' */

    /* Switch: '<S283>/Switch' incorporates:
     *  Constant: '<S283>/Constant'
     *  Constant: '<S314>/Constant'
     *  Logic: '<S283>/Logical Operator'
     *  Logic: '<S283>/Logical Operator1'
     *  Logic: '<S283>/Logical Operator2'
     *  RelationalOperator: '<S314>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_opb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hg) {
      rtb_Switch_k2a = ((rtb_Switch_dul != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TLCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ko)));
    } else {
      rtb_Switch_k2a = ((rtb_Switch_dul != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TLCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ko));
    }

    /* End of Switch: '<S283>/Switch' */

    /* Switch: '<S262>/Switch' incorporates:
     *  Constant: '<S262>/Constant'
     *  Logic: '<S262>/Logical Operator'
     *  Logic: '<S262>/Logical Operator1'
     *  Logic: '<S262>/Logical Operator2'
     *  UnitDelay: '<S294>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fn >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_po) {
      rtb_Switch_bt = (rtb_Switch_k2a && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_c3));
    } else {
      rtb_Switch_bt = (rtb_Switch_k2a && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_c3);
    }

    /* End of Switch: '<S262>/Switch' */

    /* Switch: '<S284>/Switch' incorporates:
     *  Constant: '<S284>/Constant'
     *  Constant: '<S315>/Constant'
     *  Logic: '<S284>/Logical Operator'
     *  Logic: '<S284>/Logical Operator1'
     *  Logic: '<S284>/Logical Operator2'
     *  RelationalOperator: '<S315>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eid) {
      rtb_Switch_hbz = ((rtb_Switch_dul != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CELCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_f1)));
    } else {
      rtb_Switch_hbz = ((rtb_Switch_dul != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CELCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_f1));
    }

    /* End of Switch: '<S284>/Switch' */

    /* Switch: '<S256>/Switch' incorporates:
     *  Constant: '<S256>/Constant'
     *  Logic: '<S256>/Logical Operator'
     *  Logic: '<S256>/Logical Operator1'
     *  Logic: '<S256>/Logical Operator2'
     *  UnitDelay: '<S396>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_na5) {
      rtb_Switch_ko5 = (rtb_Switch_hbz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_mo));
    } else {
      rtb_Switch_ko5 = (rtb_Switch_hbz && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_mo);
    }

    /* End of Switch: '<S256>/Switch' */

    /* Switch: '<S257>/Switch' incorporates:
     *  Constant: '<S257>/Constant'
     *  Logic: '<S257>/Logical Operator'
     *  Logic: '<S257>/Logical Operator1'
     *  Logic: '<S257>/Logical Operator2'
     *  UnitDelay: '<S402>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_la1z >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_n1b) {
      rtb_Switch_ai = ((rtb_Switch_dul != 0.0) && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mx));
    } else {
      rtb_Switch_ai = ((rtb_Switch_dul != 0.0) && localDW->
                       CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mx);
    }

    /* End of Switch: '<S257>/Switch' */

    /* Switch: '<S258>/Switch' incorporates:
     *  Constant: '<S258>/Constant'
     *  Logic: '<S258>/Logical Operator'
     *  Logic: '<S258>/Logical Operator1'
     *  Logic: '<S258>/Logical Operator2'
     *  UnitDelay: '<S402>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jmb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_c2t) {
      rtb_Switch_ovx = (rtb_Switch_bt && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_mx));
    } else {
      rtb_Switch_ovx = (rtb_Switch_bt && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_mx);
    }

    /* End of Switch: '<S258>/Switch' */

    /* Switch: '<S261>/Switch' incorporates:
     *  Constant: '<S261>/Constant'
     *  Logic: '<S261>/Logical Operator'
     *  Logic: '<S261>/Logical Operator1'
     *  Logic: '<S261>/Logical Operator2'
     *  UnitDelay: '<S294>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hfp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_f2) {
      rtb_Switch_ni = (rtb_Switch_k2a && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_c3));
    } else {
      rtb_Switch_ni = (rtb_Switch_k2a && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_c3);
    }

    /* End of Switch: '<S261>/Switch' */

    /* Switch: '<S264>/Switch' incorporates:
     *  Constant: '<S264>/Constant'
     *  Constant: '<S305>/Constant'
     *  Logic: '<S264>/Logical Operator'
     *  Logic: '<S264>/Logical Operator1'
     *  Logic: '<S264>/Logical Operator2'
     *  RelationalOperator: '<S305>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_eq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lb) {
      rtb_Switch_ngo = (rtb_Switch_ai &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CallOnLightPB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_l)));
    } else {
      rtb_Switch_ngo = (rtb_Switch_ai &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CallOnLightPB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_l));
    }

    /* End of Switch: '<S264>/Switch' */

    /* Switch: '<S265>/Switch' incorporates:
     *  Constant: '<S265>/Constant'
     *  Constant: '<S306>/Constant'
     *  Logic: '<S265>/Logical Operator'
     *  Logic: '<S265>/Logical Operator1'
     *  Logic: '<S265>/Logical Operator2'
     *  RelationalOperator: '<S306>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_b3) {
      rtb_Switch_ai = ((rtb_Switch_dul != 0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CallOnLightPB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_eg)));
    } else {
      rtb_Switch_ai = ((rtb_Switch_dul != 0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CallOnLightPB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_eg));
    }

    /* End of Switch: '<S265>/Switch' */

    /* Switch: '<S268>/Switch' incorporates:
     *  Constant: '<S268>/Constant'
     *  Logic: '<S268>/Logical Operator'
     *  Logic: '<S268>/Logical Operator1'
     *  Logic: '<S268>/Logical Operator2'
     *  UnitDelay: '<S160>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_k3) {
      rtb_Switch_am = (rtb_Switch_hbz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_p));
    } else {
      rtb_Switch_am = (rtb_Switch_hbz && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_p);
    }

    /* End of Switch: '<S268>/Switch' */

    /* Switch: '<S270>/Switch' incorporates:
     *  Constant: '<S270>/Constant'
     *  Constant: '<S307>/Constant'
     *  Logic: '<S270>/Logical Operator'
     *  Logic: '<S270>/Logical Operator1'
     *  Logic: '<S270>/Logical Operator2'
     *  RelationalOperator: '<S307>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hw >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mi) {
      rtb_Switch_jxy = (rtb_Switch_ko5 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.FlasherLightPB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_g3)));
    } else {
      rtb_Switch_jxy = (rtb_Switch_ko5 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.FlasherLightPB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_g3));
    }

    /* End of Switch: '<S270>/Switch' */

    /* Switch: '<S271>/Switch' incorporates:
     *  Constant: '<S271>/Constant'
     *  Constant: '<S308>/Constant'
     *  Logic: '<S271>/Logical Operator'
     *  Logic: '<S271>/Logical Operator1'
     *  Logic: '<S271>/Logical Operator2'
     *  RelationalOperator: '<S308>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_aj >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fe) {
      rtb_Switch_ko5 = (rtb_Switch_hbz &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.FlasherLightPB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nn)));
    } else {
      rtb_Switch_ko5 = (rtb_Switch_hbz &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.FlasherLightPB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nn));
    }

    /* End of Switch: '<S271>/Switch' */

    /* Switch: '<S275>/Switch' incorporates:
     *  Constant: '<S275>/Constant'
     *  Constant: '<S310>/Constant'
     *  Logic: '<S275>/Logical Operator'
     *  Logic: '<S275>/Logical Operator1'
     *  Logic: '<S275>/Logical Operator2'
     *  RelationalOperator: '<S310>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_p0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pq) {
      rtb_Switch_fz = (rtb_Switch_hbz &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.FloodLightPB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hx)));
    } else {
      rtb_Switch_fz = (rtb_Switch_hbz &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.FloodLightPB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hx));
    }

    /* End of Switch: '<S275>/Switch' */

    /* Switch: '<S276>/Switch' incorporates:
     *  Constant: '<S276>/Constant'
     *  Logic: '<S276>/Logical Operator'
     *  Logic: '<S276>/Logical Operator1'
     *  Logic: '<S276>/Logical Operator2'
     *  UnitDelay: '<S662>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_a5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pc) {
      rtb_Switch_imq = (rtb_Switch_hbz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_nk));
    } else {
      rtb_Switch_imq = (rtb_Switch_hbz && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_nk);
    }

    /* End of Switch: '<S276>/Switch' */

    /* Switch: '<S299>/Switch' incorporates:
     *  Constant: '<S299>/Constant'
     *  Logic: '<S299>/Logical Operator'
     *  Logic: '<S299>/Logical Operator1'
     *  Logic: '<S299>/Logical Operator2'
     *  UnitDelay: '<S295>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bw >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_h3) {
      rtb_Switch_jqt = (rtb_Switch_ni && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_kt));
    } else {
      rtb_Switch_jqt = (rtb_Switch_ni && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_kt);
    }

    /* End of Switch: '<S299>/Switch' */

    /* DataTypeConversion: '<S300>/Data Type Conversion7' */
    rtb_DataTypeConversion7 = rtb_Switch_jqt;

    /* DiscreteIntegrator: '<S300>/Discrete-Time Integrator' */
    if (((rtb_DataTypeConversion7 > 0.0) && (localDW->CoreSubsys[ForEach_itr_h].
          DiscreteTimeIntegrator_PrevResetState <= 0)) ||
        ((rtb_DataTypeConversion7 <= 0.0) && (localDW->CoreSubsys[ForEach_itr_h]
          .DiscreteTimeIntegrator_PrevResetState == 1))) {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE =
        ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_IC;
    }

    /* Switch: '<S254>/Switch' incorporates:
     *  Constant: '<S254>/Constant'
     *  Logic: '<S254>/Logical Operator'
     *  Logic: '<S254>/Logical Operator1'
     *  Logic: '<S254>/Logical Operator2'
     *  UnitDelay: '<S396>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_l5w >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_a5) {
      tmp_9 = (rtb_Switch_n && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_mo));
    } else {
      tmp_9 = (rtb_Switch_n && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_mo);
    }

    /* End of Switch: '<S254>/Switch' */

    /* Switch: '<S260>/Switch' incorporates:
     *  Constant: '<S260>/Constant'
     *  Logic: '<S260>/Logical Operator'
     *  Logic: '<S260>/Logical Operator1'
     *  Logic: '<S260>/Logical Operator2'
     *  UnitDelay: '<S294>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ard >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ny) {
      tmp_a = (rtb_Switch_n && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_c3));
    } else {
      tmp_a = (rtb_Switch_n && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_c3);
    }

    /* End of Switch: '<S260>/Switch' */

    /* Logic: '<S252>/OR5' */
    rtb_Switch_bf = (tmp_9 || tmp_a);

    /* Switch: '<S277>/Switch' incorporates:
     *  Constant: '<S277>/Constant'
     *  Constant: '<S311>/Constant'
     *  Logic: '<S277>/Logical Operator'
     *  Logic: '<S277>/Logical Operator1'
     *  Logic: '<S277>/Logical Operator2'
     *  RelationalOperator: '<S311>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_l1f >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bu) {
      rtb_OR10 = (rtb_Switch_bf &&
                  (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HeadlightSwitch
                     == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jz)));
    } else {
      rtb_OR10 = (rtb_Switch_bf &&
                  (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HeadlightSwitch
                   == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jz));
    }

    /* End of Switch: '<S277>/Switch' */

    /* Switch: '<S278>/Switch' incorporates:
     *  Constant: '<S278>/Constant'
     *  Constant: '<S312>/Constant'
     *  Logic: '<S278>/Logical Operator'
     *  Logic: '<S278>/Logical Operator1'
     *  Logic: '<S278>/Logical Operator2'
     *  RelationalOperator: '<S312>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bi >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_niw) {
      rtb_Switch_ni = (rtb_Switch_bf &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HeadlightSwitch
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_c)));
    } else {
      rtb_Switch_ni = (rtb_Switch_bf &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HeadlightSwitch
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_c));
    }

    /* End of Switch: '<S278>/Switch' */

    /* Switch: '<S259>/Switch' incorporates:
     *  Constant: '<S259>/Constant'
     *  Logic: '<S259>/Logical Operator'
     *  Logic: '<S259>/Logical Operator1'
     *  Logic: '<S259>/Logical Operator2'
     *  UnitDelay: '<S396>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_aa >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hb) {
      tmp_9 = (rtb_Switch_n && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_mo));
    } else {
      tmp_9 = (rtb_Switch_n && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_mo);
    }

    /* End of Switch: '<S259>/Switch' */

    /* Logic: '<S252>/OR12' */
    rtb_OR12_k = (rtb_Switch_bf || tmp_9);

    /* Switch: '<S281>/Switch' incorporates:
     *  Constant: '<S281>/Constant'
     *  Logic: '<S281>/Logical Operator'
     *  Logic: '<S281>/Logical Operator1'
     *  Logic: '<S281>/Logical Operator2'
     *  UnitDelay: '<S429>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_d2c >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ks) {
      rtb_Switch_bf = (rtb_Switch_ngo && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ol));
    } else {
      rtb_Switch_bf = (rtb_Switch_ngo && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_ol);
    }

    /* End of Switch: '<S281>/Switch' */

    /* Switch: '<S263>/Switch' incorporates:
     *  Constant: '<S263>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_oq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fg) {
      /* Update for UnitDelay: '<S295>/Unit Delay' incorporates:
       *  Logic: '<S252>/NOT'
       *  Logic: '<S263>/Logical Operator1'
       *  UnitDelay: '<S294>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_kt = ((!rtb_Switch_hbz)
        || localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c3);
    } else {
      /* Update for UnitDelay: '<S295>/Unit Delay' incorporates:
       *  Logic: '<S252>/NOT'
       *  Logic: '<S263>/Logical Operator'
       *  UnitDelay: '<S294>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_kt = ((!rtb_Switch_hbz)
        || (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c3));
    }

    /* End of Switch: '<S263>/Switch' */

    /* Switch: '<S266>/Switch' incorporates:
     *  Constant: '<S266>/Constant'
     *  Logic: '<S266>/Logical Operator'
     *  Logic: '<S266>/Logical Operator1'
     *  Logic: '<S266>/Logical Operator2'
     *  UnitDelay: '<S158>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mmp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pyb) {
      tmp_9 = (rtb_Switch_n && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_dwg));
    } else {
      tmp_9 = (rtb_Switch_n && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_dwg);
    }

    /* End of Switch: '<S266>/Switch' */

    /* Switch: '<S279>/Switch' incorporates:
     *  Constant: '<S279>/Constant'
     *  Logic: '<S279>/Logical Operator'
     *  Logic: '<S279>/Logical Operator1'
     *  Logic: '<S279>/Logical Operator2'
     *  UnitDelay: '<S287>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bxm >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lk) {
      tmp_a = (rtb_OR12_k && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_d1));
    } else {
      tmp_a = (rtb_OR12_k && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_d1);
    }

    /* End of Switch: '<S279>/Switch' */

    /* Logic: '<S252>/OR1' incorporates:
     *  Logic: '<S252>/OR3'
     */
    rtb_Switch_ngo = (rtb_OR10 || (tmp_9 || tmp_a));

    /* Logic: '<S252>/OR10' */
    rtb_OR10 = (rtb_OR10 || rtb_Switch_ni);

    /* Switch: '<S296>/Switch' incorporates:
     *  Constant: '<S296>/Constant'
     *  Logic: '<S296>/Logical Operator'
     *  Logic: '<S296>/Logical Operator1'
     *  Logic: '<S296>/Logical Operator2'
     *  UnitDelay: '<S670>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_f5y) {
      rtb_Switch_awy = (rtb_Switch_hbz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_m5));
    } else {
      rtb_Switch_awy = (rtb_Switch_hbz && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_m5);
    }

    /* End of Switch: '<S296>/Switch' */

    /* Switch: '<S298>/Switch' incorporates:
     *  Constant: '<S298>/Constant'
     *  Logic: '<S298>/Logical Operator'
     *  Logic: '<S298>/Logical Operator1'
     *  Logic: '<S298>/Logical Operator2'
     *  UnitDelay: '<S665>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hww >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_h5) {
      rtb_Switch_mqr = (rtb_Switch_hbz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_og));
    } else {
      rtb_Switch_mqr = (rtb_Switch_hbz && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_og);
    }

    /* End of Switch: '<S298>/Switch' */

    /* Logic: '<S252>/OR11' */
    rtb_OR11_l = (rtb_Switch_awy || rtb_Switch_imq || rtb_Switch_am ||
                  rtb_Switch_mqr || rtb_Switch_jxy);

    /* Switch: '<S267>/Switch' incorporates:
     *  Constant: '<S267>/Constant'
     *  Logic: '<S267>/Logical Operator'
     *  Logic: '<S267>/Logical Operator1'
     *  Logic: '<S267>/Logical Operator2'
     *  UnitDelay: '<S160>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_g2) {
      tmp_9 = (rtb_Switch_hbz && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_p));
    } else {
      tmp_9 = (rtb_Switch_hbz && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_p);
    }

    /* End of Switch: '<S267>/Switch' */

    /* Switch: '<S273>/Switch' incorporates:
     *  Constant: '<S273>/Constant'
     *  Logic: '<S273>/Logical Operator'
     *  Logic: '<S273>/Logical Operator1'
     *  Logic: '<S273>/Logical Operator2'
     *  UnitDelay: '<S291>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_py >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jr) {
      tmp_a = (rtb_Switch_hbz && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_bll));
    } else {
      tmp_a = (rtb_Switch_hbz && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_bll);
    }

    /* End of Switch: '<S273>/Switch' */

    /* Switch: '<S274>/Switch' incorporates:
     *  Constant: '<S274>/Constant'
     *  Constant: '<S309>/Constant'
     *  Logic: '<S274>/Logical Operator'
     *  Logic: '<S274>/Logical Operator1'
     *  Logic: '<S274>/Logical Operator2'
     *  RelationalOperator: '<S309>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_le >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mc) {
      tmp_b = (rtb_Switch_hbz &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.FloodLightPB
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bp)));
    } else {
      tmp_b = (rtb_Switch_hbz &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.FloodLightPB
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bp));
    }

    /* End of Switch: '<S274>/Switch' */

    /* Switch: '<S272>/Switch' incorporates:
     *  Constant: '<S272>/Constant'
     *  Logic: '<S272>/Logical Operator'
     *  Logic: '<S272>/Logical Operator1'
     *  Logic: '<S272>/Logical Operator2'
     *  UnitDelay: '<S288>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_o2) {
      rtb_Switch_ee = (rtb_Switch_hbz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_m1));
    } else {
      rtb_Switch_ee = (rtb_Switch_hbz && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_m1);
    }

    /* End of Switch: '<S272>/Switch' */

    /* Logic: '<S252>/OR9' */
    rtb_Switch_mqr = (rtb_Switch_mqr || rtb_Switch_am || rtb_Switch_imq ||
                      rtb_Switch_awy || rtb_Switch_ee || rtb_Switch_jxy);

    /* Switch: '<S285>/Switch' incorporates:
     *  Constant: '<S285>/Constant'
     *  Logic: '<S285>/Logical Operator'
     *  Logic: '<S285>/Logical Operator1'
     *  Logic: '<S285>/Logical Operator2'
     *  UnitDelay: '<S289>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gn >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ir) {
      rtb_Switch_imq = ((rtb_Switch_dul != 0.0) && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_no));
    } else {
      rtb_Switch_imq = ((rtb_Switch_dul != 0.0) && localDW->
                        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_no);
    }

    /* End of Switch: '<S285>/Switch' */

    /* Switch: '<S297>/Switch' incorporates:
     *  Constant: '<S297>/Constant'
     *  Logic: '<S297>/Logical Operator'
     *  Logic: '<S297>/Logical Operator1'
     *  Logic: '<S297>/Logical Operator2'
     *  UnitDelay: '<S670>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_aw >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cc) {
      rtb_Switch_ee = (rtb_Switch_ovx && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_m5));
    } else {
      rtb_Switch_ee = (rtb_Switch_ovx && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_m5);
    }

    /* End of Switch: '<S297>/Switch' */

    /* Switch: '<S304>/Switch' incorporates:
     *  Constant: '<S304>/Constant'
     *  Logic: '<S304>/Logical Operator'
     *  Logic: '<S304>/Logical Operator1'
     *  Logic: '<S304>/Logical Operator2'
     *  UnitDelay: '<S293>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_l1k >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mv) {
      rtb_LogicalOperator40_b_tmp = (rtb_Switch_k2a && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nn));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_Switch_k2a && localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nn);
    }

    /* End of Switch: '<S304>/Switch' */

    /* Switch: '<S252>/Switch2' incorporates:
     *  Constant: '<S252>/White'
     *  Constant: '<S255>/Constant'
     *  Logic: '<S252>/OR7'
     *  Switch: '<S255>/Switch'
     */
    if (rtb_Switch_jqt || rtb_Switch_ee || rtb_LogicalOperator40_b_tmp) {
      rtb_PulseGenerator = ElectricalSystem_P.CoreSubsys.White_Value;
    } else {
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_bj >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_db) {
        /* Switch: '<S255>/Switch' incorporates:
         *  Logic: '<S255>/Logical Operator1'
         *  Logic: '<S255>/Logical Operator2'
         *  UnitDelay: '<S397>/Unit Delay'
         */
        rtb_Switch_ee = (rtb_Switch_bt && (!localDW->CoreSubsys[ForEach_itr_h].
          UnitDelay_DSTATE_ke));
      } else {
        /* Switch: '<S255>/Switch' incorporates:
         *  Logic: '<S255>/Logical Operator'
         *  UnitDelay: '<S397>/Unit Delay'
         */
        rtb_Switch_ee = (rtb_Switch_bt && localDW->CoreSubsys[ForEach_itr_h].
                         UnitDelay_DSTATE_ke);
      }

      /* Switch: '<S286>/Switch' incorporates:
       *  Constant: '<S286>/Constant'
       *  Logic: '<S286>/Logical Operator'
       *  Logic: '<S286>/Logical Operator1'
       *  Logic: '<S286>/Logical Operator2'
       *  UnitDelay: '<S292>/Unit Delay'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_la >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_o) {
        rtb_LogicalOperator40_b_tmp = (rtb_Switch_k2a && (!localDW->
          CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bo));
      } else {
        rtb_LogicalOperator40_b_tmp = (rtb_Switch_k2a && localDW->
          CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bo);
      }

      /* End of Switch: '<S286>/Switch' */

      /* Switch: '<S252>/Switch1' incorporates:
       *  Constant: '<S252>/No light1'
       *  Logic: '<S252>/OR6'
       */
      if (rtb_Switch_ee || rtb_LogicalOperator40_b_tmp) {
        /* Switch: '<S252>/Switch7' incorporates:
         *  Constant: '<S252>/Red'
         */
        rtb_PulseGenerator = ElectricalSystem_P.CoreSubsys.Red_Value;
      } else {
        rtb_PulseGenerator = ElectricalSystem_P.CoreSubsys.Nolight1_Value;
      }

      /* End of Switch: '<S252>/Switch1' */
    }

    /* End of Switch: '<S252>/Switch2' */

    /* Switch: '<S252>/Switch3' incorporates:
     *  Constant: '<S280>/Constant'
     *  Switch: '<S280>/Switch'
     */
    if (rtb_Switch_ngo) {
      /* BusAssignment: '<S1328>/Bus Assignment2' incorporates:
       *  Constant: '<S252>/High Beam'
       */
      rtb_Switch_HeadLight = ElectricalSystem_P.CoreSubsys.HighBeam_Value;
    } else {
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_oi >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_c5) {
        /* Switch: '<S280>/Switch' incorporates:
         *  Logic: '<S280>/Logical Operator1'
         *  Logic: '<S280>/Logical Operator2'
         *  UnitDelay: '<S290>/Unit Delay'
         */
        rtb_Switch_ee = (rtb_OR12_k && (!localDW->CoreSubsys[ForEach_itr_h].
          UnitDelay_DSTATE_a));
      } else {
        /* Switch: '<S280>/Switch' incorporates:
         *  Logic: '<S280>/Logical Operator'
         *  UnitDelay: '<S290>/Unit Delay'
         */
        rtb_Switch_ee = (rtb_OR12_k && localDW->CoreSubsys[ForEach_itr_h].
                         UnitDelay_DSTATE_a);
      }

      /* Switch: '<S269>/Switch' incorporates:
       *  Constant: '<S269>/Constant'
       *  Logic: '<S269>/Logical Operator'
       *  Logic: '<S269>/Logical Operator1'
       *  Logic: '<S269>/Logical Operator2'
       *  UnitDelay: '<S159>/Unit Delay'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_po >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_g) {
        rtb_LogicalOperator40_b_tmp = (rtb_Switch_n && (!localDW->
          CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b4));
      } else {
        rtb_LogicalOperator40_b_tmp = (rtb_Switch_n && localDW->
          CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b4);
      }

      /* End of Switch: '<S269>/Switch' */

      /* Switch: '<S252>/Switch4' incorporates:
       *  Logic: '<S252>/OR'
       *  Logic: '<S252>/OR8'
       */
      if (rtb_Switch_ni || (rtb_Switch_ee || rtb_LogicalOperator40_b_tmp)) {
        /* BusAssignment: '<S1328>/Bus Assignment2' incorporates:
         *  Constant: '<S252>/Low Beam'
         */
        rtb_Switch_HeadLight = ElectricalSystem_P.CoreSubsys.LowBeam_Value;
      } else {
        /* BusAssignment: '<S1328>/Bus Assignment2' incorporates:
         *  Constant: '<S252>/No light'
         */
        rtb_Switch_HeadLight = ElectricalSystem_P.CoreSubsys.Nolight_Value;
      }

      /* End of Switch: '<S252>/Switch4' */
    }

    /* End of Switch: '<S252>/Switch3' */

    /* DataTypeConversion: '<S301>/Data Type Conversion7' */
    rtb_DataTypeConversion7_i = rtb_Switch_imq;

    /* DiscreteIntegrator: '<S301>/Discrete-Time Integrator' */
    if (((rtb_DataTypeConversion7_i > 0.0) && (localDW->CoreSubsys[ForEach_itr_h]
          .DiscreteTimeIntegrator_PrevResetState_d <= 0)) ||
        ((rtb_DataTypeConversion7_i <= 0.0) && (localDW->
          CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_d == 1)))
    {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_k =
        ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_IC_l;
    }

    DiscreteTimeIntegrator_c =
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_gainval_e *
      rtb_DataTypeConversion7_i + localDW->CoreSubsys[ForEach_itr_h].
      DiscreteTimeIntegrator_DSTATE_k;

    /* End of DiscreteIntegrator: '<S301>/Discrete-Time Integrator' */

    /* DiscretePulseGenerator: '<S301>/Pulse Generator' */
    if (DiscreteTimeIntegrator_c >=
        ElectricalSystem_P.CoreSubsys.PulseGenerator_PhaseDelay_m) {
      diff = DiscreteTimeIntegrator_c -
        ElectricalSystem_P.CoreSubsys.PulseGenerator_PhaseDelay_m;
      ratio = diff / ElectricalSystem_P.CoreSubsys.PulseGenerator_Period_a;
      numCycles = static_cast<uint32_T>(floor(ratio));
      if (fabs(static_cast<real_T>((numCycles + 1U)) - ratio) < DBL_EPSILON *
          ratio) {
        numCycles++;
      }

      if (diff < ElectricalSystem_P.CoreSubsys.PulseGenerator_Duty_g / 100.0 *
          ElectricalSystem_P.CoreSubsys.PulseGenerator_Period_a +
          ElectricalSystem_P.CoreSubsys.PulseGenerator_Period_a *
          static_cast<real_T>(numCycles)) {
        rtb_PulseGenerator_o =
          ElectricalSystem_P.CoreSubsys.PulseGenerator_Amp_a;
      } else {
        rtb_PulseGenerator_o = 0.0;
      }
    } else {
      rtb_PulseGenerator_o = 0.0;
    }

    /* End of DiscretePulseGenerator: '<S301>/Pulse Generator' */

    /* Switch: '<S252>/Switch5' incorporates:
     *  Constant: '<S303>/Constant'
     *  Product: '<S301>/Product'
     *  Switch: '<S303>/Switch'
     */
    if (rtb_Switch_imq) {
      rtb_Switch_dul = rtb_DataTypeConversion7_i * rtb_PulseGenerator_o;
    } else {
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_oz >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_f) {
        /* Switch: '<S303>/Switch' incorporates:
         *  Logic: '<S303>/Logical Operator1'
         *  Logic: '<S303>/Logical Operator2'
         *  UnitDelay: '<S1176>/Unit Delay'
         */
        rtb_Switch_ee = ((rtb_Switch_dul != 0.0) && (!localDW->
          CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gs));
      } else {
        /* Switch: '<S303>/Switch' incorporates:
         *  Logic: '<S303>/Logical Operator'
         *  UnitDelay: '<S1176>/Unit Delay'
         */
        rtb_Switch_ee = ((rtb_Switch_dul != 0.0) && localDW->
                         CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gs);
      }

      /* Switch: '<S252>/Switch6' incorporates:
       *  Constant: '<S252>/No light2'
       *  Constant: '<S252>/On1'
       */
      if (rtb_Switch_ee) {
        rtb_Switch_dul = ElectricalSystem_P.CoreSubsys.On1_Value;
      } else {
        rtb_Switch_dul = ElectricalSystem_P.CoreSubsys.Nolight2_Value;
      }

      /* End of Switch: '<S252>/Switch6' */
    }

    /* End of Switch: '<S252>/Switch5' */

    /* DataTypeConversion: '<S302>/Data Type Conversion7' */
    rtb_DataTypeConversion7_ie = rtb_Switch_mqr;

    /* DiscreteIntegrator: '<S302>/Discrete-Time Integrator' */
    if (((rtb_DataTypeConversion7_ie > 0.0) && (localDW->
          CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_g <= 0))
        || ((rtb_DataTypeConversion7_ie <= 0.0) && (localDW->
          CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_g == 1)))
    {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_m =
        ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_IC_m;
    }

    rtb_PulseGenerator_o =
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_gainval_c *
      rtb_DataTypeConversion7_ie + localDW->CoreSubsys[ForEach_itr_h].
      DiscreteTimeIntegrator_DSTATE_m;

    /* End of DiscreteIntegrator: '<S302>/Discrete-Time Integrator' */

    /* DiscretePulseGenerator: '<S302>/Pulse Generator' */
    if (rtb_PulseGenerator_o >=
        ElectricalSystem_P.CoreSubsys.PulseGenerator_PhaseDelay_m1) {
      diff = rtb_PulseGenerator_o -
        ElectricalSystem_P.CoreSubsys.PulseGenerator_PhaseDelay_m1;
      ratio = diff / ElectricalSystem_P.CoreSubsys.PulseGenerator_Period_d;
      numCycles = static_cast<uint32_T>(floor(ratio));
      if (fabs(static_cast<real_T>((numCycles + 1U)) - ratio) < DBL_EPSILON *
          ratio) {
        numCycles++;
      }

      if (diff < ElectricalSystem_P.CoreSubsys.PulseGenerator_Duty_o / 100.0 *
          ElectricalSystem_P.CoreSubsys.PulseGenerator_Period_d +
          ElectricalSystem_P.CoreSubsys.PulseGenerator_Period_d *
          static_cast<real_T>(numCycles)) {
        diff = ElectricalSystem_P.CoreSubsys.PulseGenerator_Amp_l;
      } else {
        diff = 0.0;
      }
    } else {
      diff = 0.0;
    }

    /* End of DiscretePulseGenerator: '<S302>/Pulse Generator' */

    /* Product: '<S302>/Product' */
    diff *= rtb_DataTypeConversion7_ie;

    /* Switch: '<S217>/Switch' incorporates:
     *  Abs: '<S217>/Abs'
     *  Constant: '<S217>/Zero'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_k1) {
      ratio = fabs
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Dynamics.VehicleSpeed);
    } else {
      ratio = ElectricalSystem_P.CoreSubsys.Zero_Value;
    }

    /* End of Switch: '<S217>/Switch' */

    /* Switch: '<S336>/Switch' incorporates:
     *  Constant: '<S336>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  UnitDelay: '<S316>/Unit Delay'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPantoReservoir) {
      rtb_Switch_jc = localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_h5;
    } else {
      rtb_Switch_jc = ElectricalSystem_P.CoreSubsys.Constant_Value_ei;
    }

    /* End of Switch: '<S336>/Switch' */

    /* Logic: '<S316>/AND' incorporates:
     *  Logic: '<S316>/NOT'
     */
    rtb_Switch_imq = (rtb_Switch_jc &&
                      (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographRisingFailure
                         != 0.0)));

    /* Switch: '<S335>/Switch' incorporates:
     *  Constant: '<S335>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasMainCompressor) {
      /* Switch: '<S340>/Switch' incorporates:
       *  Constant: '<S340>/Constant'
       *  Constant: '<S356>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S340>/Logical Operator'
       *  Logic: '<S340>/Logical Operator1'
       *  Logic: '<S340>/Logical Operator2'
       *  RelationalOperator: '<S356>/Compare'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_ef >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_d) {
        rtb_Switch_am = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                          0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CMCCB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dk)));
      } else {
        rtb_Switch_am = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                          0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CMCCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dk));
      }

      /* End of Switch: '<S340>/Switch' */
    } else {
      rtb_Switch_am = ElectricalSystem_P.CoreSubsys.Constant_Value_pkq;
    }

    /* End of Switch: '<S335>/Switch' */

    /* Switch: '<S330>/Switch' incorporates:
     *  Constant: '<S330>/Constant'
     *  Logic: '<S330>/Logical Operator'
     *  Logic: '<S330>/Logical Operator1'
     *  Logic: '<S330>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ief) {
      rtb_Switch_ngo = (rtb_Switch_am &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MRIsolationCock
                           != 0.0)));
    } else {
      rtb_Switch_ngo = (rtb_Switch_am &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MRIsolationCock
                         != 0.0));
    }

    /* End of Switch: '<S330>/Switch' */

    /* Switch: '<S337>/Switch' incorporates:
     *  Constant: '<S337>/Constant'
     *  Logic: '<S337>/Logical Operator'
     *  Logic: '<S337>/Logical Operator1'
     *  Logic: '<S337>/Logical Operator2'
     *  UnitDelay: '<S346>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bm >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_m1) {
      rtb_Switch_n = (rtb_Switch_ngo && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_hj));
    } else {
      rtb_Switch_n = (rtb_Switch_ngo && localDW->CoreSubsys[ForEach_itr_h].
                      UnitDelay_DSTATE_hj);
    }

    /* End of Switch: '<S337>/Switch' */

    /* Switch: '<S350>/Switch' incorporates:
     *  Constant: '<S350>/Constant'
     *  Logic: '<S350>/Logical Operator'
     *  Logic: '<S350>/Logical Operator1'
     *  Logic: '<S350>/Logical Operator2'
     *  UnitDelay: '<S353>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_o3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kh) {
      rtb_Switch_ni =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.CMCContactorDeactivationFailure
          != 0.0) && (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_k4));
    } else {
      rtb_Switch_ni =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.CMCContactorDeactivationFailure
          != 0.0) && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_k4);
    }

    /* End of Switch: '<S350>/Switch' */

    /* Switch: '<S338>/Switch' incorporates:
     *  Constant: '<S338>/Constant'
     *  Logic: '<S338>/Logical Operator'
     *  Logic: '<S338>/Logical Operator1'
     *  Logic: '<S338>/Logical Operator2'
     *  UnitDelay: '<S346>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_aev >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dz) {
      rtb_Switch_jy = (rtb_Switch_ni && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_hj));
    } else {
      rtb_Switch_jy = (rtb_Switch_ni && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_hj);
    }

    /* End of Switch: '<S338>/Switch' */

    /* Switch: '<S339>/Switch' incorporates:
     *  Constant: '<S339>/Constant'
     *  Logic: '<S339>/Logical Operator'
     *  Logic: '<S339>/Logical Operator1'
     *  Logic: '<S339>/Logical Operator2'
     *  UnitDelay: '<S346>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_iw >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kss) {
      rtb_Switch_jxy =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.CMCContactorActivationFailure
          != 0.0) && (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hj));
    } else {
      rtb_Switch_jxy =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.CMCContactorActivationFailure
          != 0.0) && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hj);
    }

    /* End of Switch: '<S339>/Switch' */

    /* Switch: '<S341>/Switch' incorporates:
     *  Constant: '<S341>/Constant'
     *  Constant: '<S357>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S341>/Logical Operator'
     *  Logic: '<S341>/Logical Operator1'
     *  Logic: '<S341>/Logical Operator2'
     *  RelationalOperator: '<S357>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_iw4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_oo) {
      rtb_Switch_mqr = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CMCCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_oe)));
    } else {
      rtb_Switch_mqr = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CMCCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_oe));
    }

    /* End of Switch: '<S341>/Switch' */

    /* Switch: '<S342>/Switch' incorporates:
     *  Constant: '<S342>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S342>/Logical Operator'
     *  Logic: '<S342>/Logical Operator1'
     *  Logic: '<S342>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_d5s >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ezv) {
      rtb_Switch_ee = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) && (!rtb_Switch_imq));
    } else {
      rtb_Switch_ee = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) && rtb_Switch_imq);
    }

    /* End of Switch: '<S342>/Switch' */

    /* Switch: '<S354>/Switch' incorporates:
     *  Constant: '<S354>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S354>/Logical Operator'
     *  Logic: '<S354>/Logical Operator1'
     *  Logic: '<S354>/Logical Operator2'
     *  UnitDelay: '<S68>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nwk) {
      rtb_LogicalOperator40_b_tmp = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW31102 != 0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_l));
    } else {
      rtb_LogicalOperator40_b_tmp = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW31102 != 0.0) && localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_l);
    }

    /* End of Switch: '<S354>/Switch' */

    /* Logic: '<S316>/OR1' */
    rtb_Switch_bt = (rtb_Switch_ee || rtb_LogicalOperator40_b_tmp);

    /* Switch: '<S343>/Switch' incorporates:
     *  Constant: '<S343>/Constant'
     *  Logic: '<S343>/Logical Operator'
     *  Logic: '<S343>/Logical Operator1'
     *  Logic: '<S343>/Logical Operator2'
     *  UnitDelay: '<S345>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_l4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_md0) {
      rtb_Switch_am = (rtb_Switch_bt && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_pw));
    } else {
      rtb_Switch_am = (rtb_Switch_bt && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_pw);
    }

    /* End of Switch: '<S343>/Switch' */

    /* Switch: '<S332>/Switch' incorporates:
     *  Constant: '<S332>/Constant'
     *  Logic: '<S332>/Logical Operator'
     *  Logic: '<S332>/Logical Operator1'
     *  Logic: '<S332>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_el) {
      rtb_Switch_ee = (rtb_Switch_n &&
                       (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.CMCContactorActivationFailure
                          != 0.0)));
    } else {
      rtb_Switch_ee = (rtb_Switch_n &&
                       (rtb_ImpSel_InsertedFor_Faults_at_outport_0.CMCContactorActivationFailure
                        != 0.0));
    }

    /* End of Switch: '<S332>/Switch' */

    /* Logic: '<S316>/OR3' */
    rtb_Switch_ni = (rtb_Switch_ee || rtb_Switch_ni ||
                     (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSCompressorCmd
                      != 0.0));

    /* Switch: '<S344>/Switch' incorporates:
     *  Constant: '<S344>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S344>/Logical Operator'
     *  Logic: '<S344>/Logical Operator1'
     *  Logic: '<S344>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_od >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hbk) {
      rtb_Switch_di = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) && (!rtb_Switch_imq));
    } else {
      rtb_Switch_di = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) && rtb_Switch_imq);
    }

    /* End of Switch: '<S344>/Switch' */

    /* Logic: '<S347>/Logical Operator40' incorporates:
     *  Logic: '<S316>/AND1'
     *  Logic: '<S347>/Logical Operator39'
     *  Logic: '<S347>/Logical Operator41'
     *  Memory: '<S347>/Memory'
     *  RelationalOperator: '<S333>/FixPt Relational Operator'
     *  UnitDelay: '<S333>/Delay Input1'
     */
    rtb_Switch_k2a = ((((static_cast<int32_T>
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.MainReservoirPressureSwitch)
                         < static_cast<int32_T>(localDW->
      CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_o2)) &&
                        rtb_ImpSel_InsertedFor_Faults_at_outport_0.LowMRPressure)
                       || localDW->CoreSubsys[ForEach_itr_h].
                       Memory_PreviousInput_j) && (!rtb_Switch_n));

    /* Switch: '<S355>/Switch' incorporates:
     *  Constant: '<S355>/Constant'
     *  Logic: '<S355>/Logical Operator'
     *  Logic: '<S355>/Logical Operator1'
     *  Logic: '<S355>/Logical Operator2'
     *  UnitDelay: '<S68>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mg >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dxc) {
      rtb_Switch_ee =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographRisingFailure !=
          0.0) && (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l));
    } else {
      rtb_Switch_ee =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographRisingFailure !=
          0.0) && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l);
    }

    /* End of Switch: '<S355>/Switch' */

    /* Logic: '<S348>/Logical Operator40' incorporates:
     *  Logic: '<S348>/Logical Operator39'
     *  Logic: '<S348>/Logical Operator41'
     *  Memory: '<S348>/Memory'
     *  RelationalOperator: '<S334>/FixPt Relational Operator'
     *  UnitDelay: '<S334>/Delay Input1'
     */
    rtb_Switch_hbz = ((rtb_Switch_ee || localDW->CoreSubsys[ForEach_itr_h].
                       Memory_PreviousInput_m) &&
                      (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographRisingFailure
                         < localDW->CoreSubsys[ForEach_itr_h].
                         DelayInput1_DSTATE_p)));

    /* Switch: '<S349>/Switch' incorporates:
     *  Constant: '<S349>/Constant'
     *  Logic: '<S349>/Logical Operator'
     *  Logic: '<S349>/Logical Operator1'
     *  Logic: '<S349>/Logical Operator2'
     *  UnitDelay: '<S353>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ds >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pu) {
      rtb_Switch_imq = (rtb_Switch_mqr && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_k4));
    } else {
      rtb_Switch_imq = (rtb_Switch_mqr && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_k4);
    }

    /* End of Switch: '<S349>/Switch' */

    /* Switch: '<S352>/Switch' incorporates:
     *  Constant: '<S352>/Constant'
     *  Logic: '<S352>/Logical Operator'
     *  Logic: '<S352>/Logical Operator1'
     *  Logic: '<S352>/Logical Operator2'
     *  UnitDelay: '<S353>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ab >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ho) {
      rtb_Switch_ngo = (rtb_Switch_ngo && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_k4));
    } else {
      rtb_Switch_ngo = (rtb_Switch_ngo && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_k4);
    }

    /* End of Switch: '<S352>/Switch' */

    /* Switch: '<S359>/Switch' incorporates:
     *  Constant: '<S359>/Constant'
     *  Constant: '<S362>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S359>/Logical Operator'
     *  Logic: '<S359>/Logical Operator1'
     *  Logic: '<S359>/Logical Operator2'
     *  RelationalOperator: '<S362>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_id >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mic) {
      rtb_Switch_awy = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB1
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ml)));
    } else {
      rtb_Switch_awy = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB1
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ml));
    }

    /* End of Switch: '<S359>/Switch' */

    /* Switch: '<S358>/Switch' incorporates:
     *  Constant: '<S358>/Constant'
     *  Constant: '<S361>/Constant'
     *  Logic: '<S358>/Logical Operator'
     *  Logic: '<S358>/Logical Operator1'
     *  Logic: '<S358>/Logical Operator2'
     *  RelationalOperator: '<S361>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jml >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jyy) {
      rtb_Switch_awy = (rtb_Switch_awy &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB2
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_f0)));
    } else {
      rtb_Switch_awy = (rtb_Switch_awy &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB2
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_f0));
    }

    /* End of Switch: '<S358>/Switch' */

    /* Switch: '<S360>/Switch' incorporates:
     *  Constant: '<S360>/Constant'
     *  Constant: '<S363>/Constant'
     *  Logic: '<S360>/Logical Operator'
     *  Logic: '<S360>/Logical Operator1'
     *  Logic: '<S360>/Logical Operator2'
     *  RelationalOperator: '<S363>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_es) {
      rtb_Switch_awy = (rtb_Switch_awy &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB3
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_a3)));
    } else {
      rtb_Switch_awy = (rtb_Switch_awy &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB3
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_a3));
    }

    /* End of Switch: '<S360>/Switch' */

    /* Switch: '<S366>/Switch' incorporates:
     *  Constant: '<S366>/Constant'
     *  Logic: '<S366>/Logical Operator'
     *  Logic: '<S366>/Logical Operator1'
     *  Logic: '<S366>/Logical Operator2'
     *  UnitDelay: '<S474>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ix >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nt) {
      rtb_Switch_ee =
        ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.Bogie1IsolateVDUReq
          != 0.0) && (!(localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bl
                        != 0.0)));
    } else {
      rtb_Switch_ee =
        ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.Bogie1IsolateVDUReq
          != 0.0) && (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bl !=
                      0.0));
    }

    /* End of Switch: '<S366>/Switch' */

    /* Logic: '<S368>/Logical Operator40' incorporates:
     *  Logic: '<S368>/Logical Operator39'
     *  Logic: '<S368>/Logical Operator41'
     *  Memory: '<S368>/Memory'
     *  RelationalOperator: '<S364>/FixPt Relational Operator'
     *  UnitDelay: '<S364>/Delay Input1'
     */
    rtb_Switch_ovx = ((rtb_Switch_ee || localDW->CoreSubsys[ForEach_itr_h].
                       Memory_PreviousInput_jt) &&
                      (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.Bogie1IsolateVDUReq
                         < localDW->CoreSubsys[ForEach_itr_h].
                         DelayInput1_DSTATE_f)));

    /* Switch: '<S367>/Switch' incorporates:
     *  Constant: '<S367>/Constant'
     *  Logic: '<S367>/Logical Operator'
     *  Logic: '<S367>/Logical Operator1'
     *  Logic: '<S367>/Logical Operator2'
     *  UnitDelay: '<S474>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_he >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kz) {
      rtb_Switch_ee =
        ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.Bogie2IsolateVDUReq
          != 0.0) && (!(localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bl
                        != 0.0)));
    } else {
      rtb_Switch_ee =
        ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.Bogie2IsolateVDUReq
          != 0.0) && (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bl !=
                      0.0));
    }

    /* End of Switch: '<S367>/Switch' */

    /* Logic: '<S369>/Logical Operator40' incorporates:
     *  Logic: '<S369>/Logical Operator39'
     *  Logic: '<S369>/Logical Operator41'
     *  Memory: '<S369>/Memory'
     *  RelationalOperator: '<S365>/FixPt Relational Operator'
     *  UnitDelay: '<S365>/Delay Input1'
     */
    rtb_Switch_jqt = ((rtb_Switch_ee || localDW->CoreSubsys[ForEach_itr_h].
                       Memory_PreviousInput_jq) &&
                      (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.Bogie2IsolateVDUReq
                         < localDW->CoreSubsys[ForEach_itr_h].
                         DelayInput1_DSTATE_c)));

    /* Switch: '<S548>/Switch' incorporates:
     *  Constant: '<S548>/Constant'
     *  Constant: '<S591>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S548>/Logical Operator'
     *  Logic: '<S548>/Logical Operator1'
     *  Logic: '<S548>/Logical Operator2'
     *  RelationalOperator: '<S591>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kl) {
      rtb_Switch_mqr = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PADCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cz)));
    } else {
      rtb_Switch_mqr = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PADCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cz));
    }

    /* End of Switch: '<S548>/Switch' */

    /* Switch: '<S571>/Switch' incorporates:
     *  Constant: '<S571>/Constant'
     *  Logic: '<S571>/Logical Operator'
     *  Logic: '<S571>/Logical Operator1'
     *  Logic: '<S571>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pf >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_my) {
      rtb_Switch_nm = (rtb_Switch_mqr && (!rtb_Switch_cq));
    } else {
      rtb_Switch_nm = (rtb_Switch_mqr && rtb_Switch_cq);
    }

    /* End of Switch: '<S571>/Switch' */

    /* Switch: '<S572>/Switch' incorporates:
     *  Constant: '<S572>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S572>/Logical Operator'
     *  Logic: '<S572>/Logical Operator1'
     *  Logic: '<S572>/Logical Operator2'
     *  Switch: '<S538>/Switch'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_igw >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dtd) {
      /* Switch: '<S538>/Switch' incorporates:
       *  Constant: '<S538>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographDownForADDIntervention;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_g3;
      }

      rtb_Switch_mqr = (rtb_Switch_nm && (!(rtu_ElectricalVehicleConfig_0 != 0.0)));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
        /* Switch: '<S538>/Switch' */
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographDownForADDIntervention;
      } else {
        /* Switch: '<S538>/Switch' incorporates:
         *  Constant: '<S538>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_g3;
      }

      rtb_Switch_mqr = (rtb_Switch_nm && (rtu_ElectricalVehicleConfig_0 != 0.0));
    }

    /* End of Switch: '<S572>/Switch' */

    /* Switch: '<S528>/Switch' incorporates:
     *  Constant: '<S528>/Constant'
     *  Logic: '<S528>/Logical Operator'
     *  Logic: '<S528>/Logical Operator1'
     *  Logic: '<S528>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ccp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cy) {
      rtb_Switch_gft = (rtb_Switch_mqr &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ADDCOS
                           != 0.0)));
    } else {
      rtb_Switch_gft = (rtb_Switch_mqr &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ADDCOS
                         != 0.0));
    }

    /* End of Switch: '<S528>/Switch' */

    /* Switch: '<S372>/Switch' incorporates:
     *  Constant: '<S372>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S372>/Logical Operator'
     *  Logic: '<S372>/Logical Operator1'
     *  Logic: '<S372>/Logical Operator2'
     *  Switch: '<S370>/Switch'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fr) {
      /* Switch: '<S370>/Switch' incorporates:
       *  Constant: '<S370>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW_TLGC1;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_pd;
      }

      rtb_OR12_k = ((rtu_ElectricalVehicleConfig_0 != 0.0) && (!rtb_Switch_gft));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
        /* Switch: '<S370>/Switch' incorporates:
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         */
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW_TLGC1;
      } else {
        /* Switch: '<S370>/Switch' incorporates:
         *  Constant: '<S370>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_pd;
      }

      rtb_OR12_k = ((rtu_ElectricalVehicleConfig_0 != 0.0) && rtb_Switch_gft);
    }

    /* End of Switch: '<S372>/Switch' */

    /* Switch: '<S384>/Switch' incorporates:
     *  Constant: '<S384>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtb_Switch_m4 = localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101;
    } else {
      rtb_Switch_m4 = ElectricalSystem_P.CoreSubsys.Constant_Value_kv;
    }

    /* End of Switch: '<S384>/Switch' */

    /* Switch: '<S375>/Switch' incorporates:
     *  Constant: '<S375>/Constant'
     *  Logic: '<S375>/Logical Operator'
     *  Logic: '<S375>/Logical Operator1'
     *  Logic: '<S375>/Logical Operator2'
     *  UnitDelay: '<S403>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gu >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nue) {
      rtb_Switch_ee = ((rtb_Switch_m4 != 0.0) && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ob));
    } else {
      rtb_Switch_ee = ((rtb_Switch_m4 != 0.0) && localDW->
                       CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ob);
    }

    /* End of Switch: '<S375>/Switch' */

    /* Switch: '<S376>/Switch' incorporates:
     *  Constant: '<S376>/Constant'
     *  Logic: '<S376>/Logical Operator'
     *  Logic: '<S376>/Logical Operator1'
     *  Logic: '<S376>/Logical Operator2'
     *  UnitDelay: '<S404>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_oh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ia) {
      rtb_LogicalOperator40_b_tmp = ((rtb_Switch_m4 != 0.0) &&
        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bm));
    } else {
      rtb_LogicalOperator40_b_tmp = ((rtb_Switch_m4 != 0.0) &&
        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bm);
    }

    /* End of Switch: '<S376>/Switch' */

    /* Logic: '<S319>/OR' */
    rtb_Switch_mqr = (rtb_Switch_ee || rtb_LogicalOperator40_b_tmp);

    /* Switch: '<S377>/Switch' incorporates:
     *  Constant: '<S377>/Constant'
     *  Logic: '<S377>/Logical Operator'
     *  Logic: '<S377>/Logical Operator1'
     *  Logic: '<S377>/Logical Operator2'
     *  UnitDelay: '<S404>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pye >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hp1) {
      rtb_Switch_abq = (rtb_Switch_mqr && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_bm));
    } else {
      rtb_Switch_abq = (rtb_Switch_mqr && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_bm);
    }

    /* End of Switch: '<S377>/Switch' */

    /* Switch: '<S379>/Switch' incorporates:
     *  Constant: '<S379>/Constant'
     *  Logic: '<S379>/Logical Operator'
     *  Logic: '<S379>/Logical Operator1'
     *  Logic: '<S379>/Logical Operator2'
     *  UnitDelay: '<S405>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_d0) {
      rtb_Switch_abq = (rtb_Switch_abq && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_n1));
    } else {
      rtb_Switch_abq = (rtb_Switch_abq && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_n1);
    }

    /* End of Switch: '<S379>/Switch' */

    /* Switch: '<S385>/Switch' incorporates:
     *  Constant: '<S385>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW_TLGC2;
    } else {
      rtu_ElectricalVehicleConfig_0 =
        ElectricalSystem_P.CoreSubsys.Constant_Value_kq;
    }

    /* End of Switch: '<S385>/Switch' */

    /* Logic: '<S319>/OR1' */
    rtb_Switch_ag5 = (rtb_Switch_abq || (rtu_ElectricalVehicleConfig_0 != 0.0));

    /* Switch: '<S378>/Switch' incorporates:
     *  Constant: '<S378>/Constant'
     *  Logic: '<S378>/Logical Operator'
     *  Logic: '<S378>/Logical Operator1'
     *  Logic: '<S378>/Logical Operator2'
     *  UnitDelay: '<S404>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_k0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_be) {
      rtb_Switch_abq = (rtb_Switch_ag5 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_bm));
    } else {
      rtb_Switch_abq = (rtb_Switch_ag5 && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_bm);
    }

    /* End of Switch: '<S378>/Switch' */

    /* Switch: '<S380>/Switch' incorporates:
     *  Constant: '<S380>/Constant'
     *  Logic: '<S380>/Logical Operator'
     *  Logic: '<S380>/Logical Operator1'
     *  Logic: '<S380>/Logical Operator2'
     *  UnitDelay: '<S405>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ee >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_h0) {
      rtb_Switch_ag5 = (rtb_Switch_ag5 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_n1));
    } else {
      rtb_Switch_ag5 = (rtb_Switch_ag5 && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_n1);
    }

    /* End of Switch: '<S380>/Switch' */

    /* Switch: '<S389>/Switch' incorporates:
     *  Constant: '<S389>/Constant'
     *  Logic: '<S389>/Logical Operator'
     *  Logic: '<S389>/Logical Operator1'
     *  Logic: '<S389>/Logical Operator2'
     *  UnitDelay: '<S845>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ao >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_m2) {
      rtb_Switch_mqr = (rtb_Switch_mqr && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_p2));
    } else {
      rtb_Switch_mqr = (rtb_Switch_mqr && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_p2);
    }

    /* End of Switch: '<S389>/Switch' */

    /* Switch: '<S381>/Switch' incorporates:
     *  Constant: '<S381>/Constant'
     *  Logic: '<S381>/Logical Operator'
     *  Logic: '<S381>/Logical Operator1'
     *  Logic: '<S381>/Logical Operator2'
     *  UnitDelay: '<S161>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gck >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ap) {
      rtb_Switch_lm = (rtb_Switch_mqr && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_cc));
    } else {
      rtb_Switch_lm = (rtb_Switch_mqr && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_cc);
    }

    /* End of Switch: '<S381>/Switch' */

    /* Switch: '<S386>/Switch' incorporates:
     *  Constant: '<S386>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasMotor) {
      /* Switch: '<S392>/Switch' incorporates:
       *  Constant: '<S319>/Constant'
       *  Constant: '<S392>/Constant'
       *  Logic: '<S392>/Logical Operator'
       *  Logic: '<S392>/Logical Operator1'
       *  Logic: '<S392>/Logical Operator2'
       *  UnitDelay: '<S390>/Unit Delay'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_au >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_n) {
        rtb_Switch_mqr = ((ElectricalSystem_P.CoreSubsys.Constant_Value_chf !=
                           0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
          UnitDelay_DSTATE_oa));
      } else {
        rtb_Switch_mqr = ((ElectricalSystem_P.CoreSubsys.Constant_Value_chf !=
                           0.0) && localDW->CoreSubsys[ForEach_itr_h].
                          UnitDelay_DSTATE_oa);
      }

      /* End of Switch: '<S392>/Switch' */
    } else {
      rtb_Switch_mqr = ElectricalSystem_P.CoreSubsys.Constant_Value_ht;
    }

    /* End of Switch: '<S386>/Switch' */

    /* Switch: '<S387>/Switch' incorporates:
     *  Constant: '<S387>/Constant'
     *  Logic: '<S387>/Logical Operator'
     *  Logic: '<S387>/Logical Operator1'
     *  Logic: '<S387>/Logical Operator2'
     *  UnitDelay: '<S388>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nan >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_in) {
      rtb_Switch_lm = (rtb_Switch_lm && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_la));
    } else {
      rtb_Switch_lm = (rtb_Switch_lm && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_la);
    }

    /* End of Switch: '<S387>/Switch' */

    /* Logic: '<S319>/OR2' */
    rtb_OR2_o = (rtb_Switch_abq || rtb_Switch_ag5);

    /* Switch: '<S393>/Switch' incorporates:
     *  Constant: '<S393>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S393>/Logical Operator'
     *  Logic: '<S393>/Logical Operator1'
     *  Logic: '<S393>/Logical Operator2'
     *  UnitDelay: '<S388>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dy) {
      rtb_Switch_abq = ((localB->UnitDelay[ForEach_itr_h].MiscWires.TW_TLGC3 !=
                         0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_la));
    } else {
      rtb_Switch_abq = ((localB->UnitDelay[ForEach_itr_h].MiscWires.TW_TLGC3 !=
                         0.0) && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_la);
    }

    /* End of Switch: '<S393>/Switch' */

    /* Switch: '<S382>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasMotor) {
      /* Update for UnitDelay: '<S390>/Unit Delay' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S319>/Logical Operator'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_oa =
        !(localB->UnitDelay[ForEach_itr_h].TrainWires.TW22212 != 0.0);
    } else {
      /* Update for UnitDelay: '<S390>/Unit Delay' incorporates:
       *  Constant: '<S382>/Constant'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_oa =
        ElectricalSystem_P.CoreSubsys.Constant_Value_ip;
    }

    /* End of Switch: '<S382>/Switch' */

    /* Switch: '<S394>/Switch' incorporates:
     *  Constant: '<S394>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S394>/Logical Operator'
     *  Logic: '<S394>/Logical Operator1'
     *  Logic: '<S394>/Logical Operator2'
     *  Switch: '<S413>/Switch'
     *  UnitDelay: '<S396>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mgb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_g0) {
      /* Switch: '<S413>/Switch' incorporates:
       *  Constant: '<S413>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TWCabAKeySwitchON;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_ke;
      }

      rtb_Switch_nba = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mo));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S413>/Switch' incorporates:
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         */
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TWCabAKeySwitchON;
      } else {
        /* Switch: '<S413>/Switch' incorporates:
         *  Constant: '<S413>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_ke;
      }

      rtb_Switch_nba = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mo);
    }

    /* End of Switch: '<S394>/Switch' */

    /* Switch: '<S395>/Switch' incorporates:
     *  Constant: '<S395>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S395>/Logical Operator'
     *  Logic: '<S395>/Logical Operator1'
     *  Logic: '<S395>/Logical Operator2'
     *  Switch: '<S414>/Switch'
     *  UnitDelay: '<S396>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_if >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bv) {
      /* Switch: '<S414>/Switch' incorporates:
       *  Constant: '<S414>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TWCabASelected;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_k4p;
      }

      rtb_Switch_fya = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mo));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S414>/Switch' incorporates:
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         */
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TWCabASelected;
      } else {
        /* Switch: '<S414>/Switch' incorporates:
         *  Constant: '<S414>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_k4p;
      }

      rtb_Switch_fya = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mo);
    }

    /* End of Switch: '<S395>/Switch' */

    /* Switch: '<S412>/Switch' incorporates:
     *  Constant: '<S412>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* Switch: '<S424>/Switch' incorporates:
       *  Constant: '<S424>/Constant'
       *  Constant: '<S426>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S424>/Logical Operator'
       *  Logic: '<S424>/Logical Operator1'
       *  Logic: '<S424>/Logical Operator2'
       *  RelationalOperator: '<S426>/Compare'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_j3 >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_m) {
        rtb_Switch_ip = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CECB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bc)));
      } else {
        rtb_Switch_ip = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CECB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bc));
      }

      /* End of Switch: '<S424>/Switch' */
    } else {
      rtb_Switch_ip = ElectricalSystem_P.CoreSubsys.Constant_Value_fjr;
    }

    /* End of Switch: '<S412>/Switch' */

    /* Switch: '<S410>/Switch' incorporates:
     *  Constant: '<S410>/Constant'
     *  Logic: '<S410>/Logical Operator'
     *  Logic: '<S410>/Logical Operator1'
     *  Logic: '<S410>/Logical Operator2'
     *  UnitDelay: '<S1111>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_iou >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_oj) {
      rtb_Switch_ag5 = (rtb_Switch_ip && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_iut));
    } else {
      rtb_Switch_ag5 = (rtb_Switch_ip && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_iut);
    }

    /* End of Switch: '<S410>/Switch' */

    /* Switch: '<S423>/Switch' incorporates:
     *  Constant: '<S423>/Constant'
     *  Logic: '<S423>/Logical Operator'
     *  Logic: '<S423>/Logical Operator1'
     *  Logic: '<S423>/Logical Operator2'
     *  UnitDelay: '<S401>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_k3z >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hu) {
      rtb_Switch_ii = (rtb_Switch_ip && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ph));
    } else {
      rtb_Switch_ii = (rtb_Switch_ip && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_ph);
    }

    /* End of Switch: '<S423>/Switch' */

    /* Switch: '<S421>/Switch' incorporates:
     *  Constant: '<S421>/Constant'
     *  Logic: '<S421>/Logical Operator'
     *  Logic: '<S421>/Logical Operator1'
     *  Logic: '<S421>/Logical Operator2'
     *  UnitDelay: '<S416>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fr2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mo) {
      rtb_Switch_ii = (rtb_Switch_ii && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ho));
    } else {
      rtb_Switch_ii = (rtb_Switch_ii && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_ho);
    }

    /* End of Switch: '<S421>/Switch' */

    /* Switch: '<S418>/Switch' incorporates:
     *  Constant: '<S418>/Constant'
     *  Logic: '<S418>/Logical Operator'
     *  Logic: '<S418>/Logical Operator1'
     *  Logic: '<S418>/Logical Operator2'
     *  UnitDelay: '<S399>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bmj >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lg) {
      rtb_Switch_ii = (rtb_Switch_ii && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_pn));
    } else {
      rtb_Switch_ii = (rtb_Switch_ii && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_pn);
    }

    /* End of Switch: '<S418>/Switch' */

    /* Switch: '<S411>/Switch' incorporates:
     *  Constant: '<S411>/Constant'
     *  Logic: '<S411>/Logical Operator'
     *  Logic: '<S411>/Logical Operator1'
     *  Logic: '<S411>/Logical Operator2'
     *  UnitDelay: '<S1111>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_k3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ai) {
      rtb_Switch_ii = (rtb_Switch_ii && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_iut));
    } else {
      rtb_Switch_ii = (rtb_Switch_ii && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_iut);
    }

    /* End of Switch: '<S411>/Switch' */

    /* Switch: '<S415>/Switch' incorporates:
     *  Constant: '<S415>/Constant'
     *  Logic: '<S415>/Logical Operator'
     *  Logic: '<S415>/Logical Operator1'
     *  Logic: '<S415>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_m5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_aw) {
      rtb_Switch_l5d = (rtb_Switch_ip &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MasterKeySwitch
                           != 0.0)));
    } else {
      rtb_Switch_l5d = (rtb_Switch_ip &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MasterKeySwitch
                         != 0.0));
    }

    /* End of Switch: '<S415>/Switch' */

    /* Switch: '<S419>/Switch' incorporates:
     *  Constant: '<S419>/Constant'
     *  Logic: '<S419>/Logical Operator'
     *  Logic: '<S419>/Logical Operator1'
     *  Logic: '<S419>/Logical Operator2'
     *  UnitDelay: '<S399>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dyd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ffz) {
      rtb_Switch_mhf = (rtb_Switch_l5d && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_pn));
    } else {
      rtb_Switch_mhf = (rtb_Switch_l5d && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_pn);
    }

    /* End of Switch: '<S419>/Switch' */

    /* Switch: '<S420>/Switch' incorporates:
     *  Constant: '<S420>/Constant'
     *  Logic: '<S420>/Logical Operator'
     *  Logic: '<S420>/Logical Operator1'
     *  Logic: '<S420>/Logical Operator2'
     *  UnitDelay: '<S416>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_f10 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pm) {
      rtb_Switch_ip = (rtb_Switch_ip && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ho));
    } else {
      rtb_Switch_ip = (rtb_Switch_ip && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_ho);
    }

    /* End of Switch: '<S420>/Switch' */

    /* Switch: '<S422>/Switch' incorporates:
     *  Constant: '<S422>/Constant'
     *  Logic: '<S422>/Logical Operator'
     *  Logic: '<S422>/Logical Operator1'
     *  Logic: '<S422>/Logical Operator2'
     *  UnitDelay: '<S416>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bd) {
      rtb_Switch_l5d = (rtb_Switch_l5d && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ho));
    } else {
      rtb_Switch_l5d = (rtb_Switch_l5d && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_ho);
    }

    /* End of Switch: '<S422>/Switch' */

    /* Logic: '<S320>/Logical Operator2' */
    rtb_LogicalOperator2 = (rtb_Switch_l5d || rtb_Switch_ii);

    /* Switch: '<S428>/Switch' incorporates:
     *  Constant: '<S428>/Constant'
     *  Constant: '<S433>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S428>/Logical Operator'
     *  Logic: '<S428>/Logical Operator1'
     *  Logic: '<S428>/Logical Operator2'
     *  RelationalOperator: '<S433>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_eh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ip) {
      rtb_Switch_og = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.UCCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_j4)));
    } else {
      rtb_Switch_og = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.UCCB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_j4));
    }

    /* End of Switch: '<S428>/Switch' */

    /* Switch: '<S431>/Switch' incorporates:
     *  Constant: '<S431>/Constant'
     *  Logic: '<S431>/Logical Operator'
     *  Logic: '<S431>/Logical Operator1'
     *  Logic: '<S431>/Logical Operator2'
     *  UnitDelay: '<S430>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gi >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ps) {
      rtb_Switch_ii = (rtb_Switch_og && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_nh));
    } else {
      rtb_Switch_ii = (rtb_Switch_og && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_nh);
    }

    /* End of Switch: '<S431>/Switch' */

    /* Logic: '<S321>/AND' incorporates:
     *  Logic: '<S321>/NOT'
     */
    rtb_AND_i =
      ((!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.MechanicalCouplerRelayFault
          != 0.0)) && rtb_Switch_ii);

    /* Logic: '<S321>/AND1' */
    rtb_Switch_l5d = (rtb_Switch_ii &&
                      (rtb_ImpSel_InsertedFor_Faults_at_outport_0.MechanicalCouplerRelayFault
                       != 0.0));

    /* Switch: '<S432>/Switch' incorporates:
     *  Constant: '<S432>/Constant'
     *  Constant: '<S434>/Constant'
     *  Logic: '<S432>/Logical Operator'
     *  Logic: '<S432>/Logical Operator1'
     *  Logic: '<S432>/Logical Operator2'
     *  RelationalOperator: '<S434>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fc0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ntw) {
      rtb_Switch_ii = (rtb_Switch_og &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.UncouplePB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lk)));
    } else {
      rtb_Switch_ii = (rtb_Switch_og &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.UncouplePB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lk));
    }

    /* End of Switch: '<S432>/Switch' */

    /* Switch: '<S427>/Switch' incorporates:
     *  Constant: '<S427>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtb_Switch_gmd_idx_0 =
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Coupling.MechanicalCouplerState
        [0];
      rtb_Switch_gmd_idx_1 =
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Coupling.MechanicalCouplerState
        [1];
    } else {
      rtb_Switch_gmd_idx_0 = ElectricalSystem_P.CoreSubsys.Constant_Value_nvz;
      rtb_Switch_gmd_idx_1 = ElectricalSystem_P.CoreSubsys.Constant_Value_nvz;
    }

    /* End of Switch: '<S427>/Switch' */

    /* Switch: '<S469>/Switch' incorporates:
     *  Constant: '<S469>/Constant'
     *  Constant: '<S496>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S469>/Logical Operator'
     *  Logic: '<S469>/Logical Operator1'
     *  Logic: '<S469>/Logical Operator2'
     *  RelationalOperator: '<S496>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_o5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kf) {
      rtb_Switch_fe = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EBLR1CB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hc)));
    } else {
      rtb_Switch_fe = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EBLR1CB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hc));
    }

    /* End of Switch: '<S469>/Switch' */

    /* Switch: '<S439>/Switch' incorporates:
     *  Constant: '<S439>/Constant'
     *  Logic: '<S439>/Logical Operator'
     *  Logic: '<S439>/Logical Operator1'
     *  Logic: '<S439>/Logical Operator2'
     *  UnitDelay: '<S404>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dsr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bnu) {
      rtb_Switch_ee = (rtb_Switch_fe && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_bm));
    } else {
      rtb_Switch_ee = (rtb_Switch_fe && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_bm);
    }

    /* End of Switch: '<S439>/Switch' */

    /* Switch: '<S440>/Switch' incorporates:
     *  Constant: '<S440>/Constant'
     *  Logic: '<S440>/Logical Operator'
     *  Logic: '<S440>/Logical Operator1'
     *  Logic: '<S440>/Logical Operator2'
     *  UnitDelay: '<S405>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_p1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ea) {
      rtb_LogicalOperator40_b_tmp = (rtb_Switch_fe && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_n1));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_Switch_fe && localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_n1);
    }

    /* End of Switch: '<S440>/Switch' */

    /* Logic: '<S322>/OR5' */
    rtb_Switch_og = (rtb_Switch_ee || rtb_LogicalOperator40_b_tmp);

    /* Switch: '<S483>/Switch' incorporates:
     *  Constant: '<S483>/Constant'
     *  Logic: '<S483>/Logical Operator'
     *  Logic: '<S483>/Logical Operator1'
     *  Logic: '<S483>/Logical Operator2'
     *  UnitDelay: '<S1186>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pkk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eij) {
      rtb_Switch_pb = (rtb_Switch_og && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_c2));
    } else {
      rtb_Switch_pb = (rtb_Switch_og && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_c2);
    }

    /* End of Switch: '<S483>/Switch' */

    /* Switch: '<S448>/Switch' incorporates:
     *  Constant: '<S448>/Constant'
     *  Logic: '<S448>/Logical Operator'
     *  Logic: '<S448>/Logical Operator1'
     *  Logic: '<S448>/Logical Operator2'
     *  UnitDelay: '<S449>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ii >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_j4) {
      rtb_LogicalOperator_ks = (rtb_Switch_og && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dux));
    } else {
      rtb_LogicalOperator_ks = (rtb_Switch_og && localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dux);
    }

    /* End of Switch: '<S448>/Switch' */

    /* Switch: '<S461>/Switch' incorporates:
     *  Constant: '<S461>/Constant'
     *  Logic: '<S322>/OR6'
     *  Logic: '<S461>/Logical Operator'
     *  Logic: '<S461>/Logical Operator1'
     *  Logic: '<S461>/Logical Operator2'
     *  UnitDelay: '<S1139>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ki) {
      rtb_Switch_pb = ((rtb_Switch_pb || rtb_LogicalOperator_ks) &&
                       (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l0p));
    } else {
      rtb_Switch_pb = ((rtb_Switch_pb || rtb_LogicalOperator_ks) &&
                       localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l0p);
    }

    /* End of Switch: '<S461>/Switch' */

    /* Switch: '<S476>/Switch' incorporates:
     *  Constant: '<S476>/Constant'
     *  Constant: '<S511>/Constant'
     *  Logic: '<S476>/Logical Operator'
     *  Logic: '<S476>/Logical Operator1'
     *  Logic: '<S476>/Logical Operator2'
     *  RelationalOperator: '<S511>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mea >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_f50) {
      rtb_Switch_ly = (rtb_Switch_og &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dz)));
    } else {
      rtb_Switch_ly = (rtb_Switch_og &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dz));
    }

    /* End of Switch: '<S476>/Switch' */

    /* Outputs for Atomic SubSystem: '<S322>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit(rtb_Switch_ly, &localB->
      CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit_j, &localDW->
      CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit_j,
      &ElectricalSystem_P.CoreSubsys.TimerOffDelayNoInit_j);

    /* End of Outputs for SubSystem: '<S322>/TimerOffDelay NoInit' */

    /* Logic: '<S322>/OR7' */
    rtb_EBDueToCC = (rtb_Switch_pb || localB->CoreSubsys[ForEach_itr_h].
                     TimerOffDelayNoInit_j.LogicalOperator1);

    /* Switch: '<S466>/Switch' incorporates:
     *  Constant: '<S466>/Constant'
     *  Logic: '<S466>/Logical Operator'
     *  Logic: '<S466>/Logical Operator1'
     *  Logic: '<S466>/Logical Operator2'
     *  UnitDelay: '<S661>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kw >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mk) {
      rtb_Switch_ee = (rtb_EBDueToCC && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_m0));
    } else {
      rtb_Switch_ee = (rtb_EBDueToCC && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_m0);
    }

    /* End of Switch: '<S466>/Switch' */

    /* Switch: '<S467>/Switch' incorporates:
     *  Constant: '<S467>/Constant'
     *  Logic: '<S467>/Logical Operator'
     *  Logic: '<S467>/Logical Operator1'
     *  Logic: '<S467>/Logical Operator2'
     *  UnitDelay: '<S671>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_o1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_k1n) {
      rtb_LogicalOperator40_b_tmp = (rtb_EBDueToCC && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dk));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_EBDueToCC && localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dk);
    }

    /* End of Switch: '<S467>/Switch' */

    /* Logic: '<S322>/OR8' */
    rtb_EBDueToCC = (rtb_Switch_ee || rtb_LogicalOperator40_b_tmp);

    /* Switch: '<S452>/Switch' incorporates:
     *  Constant: '<S452>/Constant'
     *  Constant: '<S489>/Constant'
     *  Logic: '<S452>/Logical Operator'
     *  Logic: '<S452>/Logical Operator1'
     *  Logic: '<S452>/Logical Operator2'
     *  RelationalOperator: '<S489>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_is) {
      rtb_Switch_nw = (rtb_EBDueToCC &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyBrakePB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lf)));
    } else {
      rtb_Switch_nw = (rtb_EBDueToCC &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyBrakePB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lf));
    }

    /* End of Switch: '<S452>/Switch' */

    /* Switch: '<S453>/Switch' incorporates:
     *  Constant: '<S453>/Constant'
     *  Constant: '<S490>/Constant'
     *  Logic: '<S453>/Logical Operator'
     *  Logic: '<S453>/Logical Operator1'
     *  Logic: '<S453>/Logical Operator2'
     *  RelationalOperator: '<S490>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hbw >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mix) {
      rtb_Switch_ee = (rtb_Switch_nw &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyStopPB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fq)));
    } else {
      rtb_Switch_ee = (rtb_Switch_nw &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyStopPB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fq));
    }

    /* End of Switch: '<S453>/Switch' */

    /* Switch: '<S457>/Switch' incorporates:
     *  Constant: '<S457>/Constant'
     *  Constant: '<S494>/Constant'
     *  Logic: '<S457>/Logical Operator'
     *  Logic: '<S457>/Logical Operator1'
     *  Logic: '<S457>/Logical Operator2'
     *  RelationalOperator: '<S494>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ohb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_b11) {
      rtb_LogicalOperator40_b_tmp = (rtb_EBDueToCC &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyBrakePBBypass
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lo)));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_EBDueToCC &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyBrakePBBypass
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lo));
    }

    /* End of Switch: '<S457>/Switch' */

    /* Logic: '<S322>/OR9' */
    rtb_EBbyPB = (rtb_Switch_ee || rtb_LogicalOperator40_b_tmp);

    /* Switch: '<S480>/Switch' incorporates:
     *  Constant: '<S480>/Constant'
     *  Logic: '<S480>/Logical Operator'
     *  Logic: '<S480>/Logical Operator1'
     *  Logic: '<S480>/Logical Operator2'
     *  UnitDelay: '<S664>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fh0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bv2) {
      rtb_Switch_ee = (rtb_EBbyPB && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_jb));
    } else {
      rtb_Switch_ee = (rtb_EBbyPB && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_jb);
    }

    /* End of Switch: '<S480>/Switch' */

    /* Logic: '<S322>/OR10' incorporates:
     *  Constant: '<S470>/Constant'
     *  Constant: '<S470>/Mask'
     *  Constant: '<S497>/Constant'
     *  Constant: '<S498>/Constant'
     *  Constant: '<S499>/Constant'
     *  Constant: '<S500>/Constant'
     *  Constant: '<S501>/Constant'
     *  Constant: '<S502>/Constant'
     *  Constant: '<S503>/Constant'
     *  Logic: '<S470>/AND'
     *  Logic: '<S470>/AND1'
     *  Logic: '<S470>/AND2'
     *  Logic: '<S470>/AND3'
     *  Logic: '<S470>/OR'
     *  Logic: '<S470>/XOR'
     *  RelationalOperator: '<S497>/Compare'
     *  RelationalOperator: '<S498>/Compare'
     *  RelationalOperator: '<S499>/Compare'
     *  RelationalOperator: '<S500>/Compare'
     *  RelationalOperator: '<S501>/Compare'
     *  RelationalOperator: '<S502>/Compare'
     *  RelationalOperator: '<S503>/Compare'
     */
    rtb_EBDueToCC = ((rtb_EBbyPB && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           <= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fow) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           > ElectricalSystem_P.CoreSubsys.CompareToConstant1_const) &&
          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           < ElectricalSystem_P.CoreSubsys.CompareToConstant2_const) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value[3]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           > ElectricalSystem_P.CoreSubsys.CompareToConstant5_const) &&
          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           <= ElectricalSystem_P.CoreSubsys.CompareToConstant4_const) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value[4])) ^
        (ElectricalSystem_P.CoreSubsys.NotEB_NCContact != 0.0))))) ||
                     rtb_Switch_ee);

    /* Switch: '<S436>/Switch' incorporates:
     *  Constant: '<S436>/Constant'
     *  Logic: '<S436>/Logical Operator'
     *  Logic: '<S436>/Logical Operator1'
     *  Logic: '<S436>/Logical Operator2'
     *  UnitDelay: '<S374>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ic >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hoc) {
      rtb_EBbyPB = (rtb_EBDueToCC && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_kd));
    } else {
      rtb_EBbyPB = (rtb_EBDueToCC && localDW->CoreSubsys[ForEach_itr_h].
                    UnitDelay_DSTATE_kd);
    }

    /* End of Switch: '<S436>/Switch' */

    /* Switch: '<S435>/Switch' incorporates:
     *  Constant: '<S435>/Constant'
     *  Constant: '<S486>/Constant'
     *  Logic: '<S435>/Logical Operator'
     *  Logic: '<S435>/Logical Operator1'
     *  Logic: '<S435>/Logical Operator2'
     *  RelationalOperator: '<S486>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cw >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fp) {
      rtb_Switch_nw = (rtb_EBDueToCC &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BrakeLoopCutoutSS
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ju)));
    } else {
      rtb_Switch_nw = (rtb_EBDueToCC &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BrakeLoopCutoutSS
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ju));
    }

    /* End of Switch: '<S435>/Switch' */

    /* Switch: '<S437>/Switch' incorporates:
     *  Constant: '<S437>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S437>/Logical Operator'
     *  Logic: '<S437>/Logical Operator1'
     *  Logic: '<S437>/Logical Operator2'
     *  UnitDelay: '<S374>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pwx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nm) {
      rtb_EBDueToCC = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                        0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_kd));
    } else {
      rtb_EBDueToCC = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                        0.0) && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_kd);
    }

    /* End of Switch: '<S437>/Switch' */

    /* Switch: '<S446>/Switch' incorporates:
     *  Constant: '<S446>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S446>/Logical Operator'
     *  Logic: '<S446>/Logical Operator1'
     *  Logic: '<S446>/Logical Operator2'
     *  UnitDelay: '<S475>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bnb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cf) {
      rtb_Switch_k2 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                        0.0) && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_dl != 0.0)));
    } else {
      rtb_Switch_k2 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                        0.0) && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_dl != 0.0));
    }

    /* End of Switch: '<S446>/Switch' */

    /* Switch: '<S438>/Switch' incorporates:
     *  Constant: '<S438>/Constant'
     *  Logic: '<S438>/Logical Operator'
     *  Logic: '<S438>/Logical Operator1'
     *  Logic: '<S438>/Logical Operator2'
     *  UnitDelay: '<S404>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_n4) {
      rtb_Switch_k2 = (rtb_Switch_k2 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_bm));
    } else {
      rtb_Switch_k2 = (rtb_Switch_k2 && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_bm);
    }

    /* End of Switch: '<S438>/Switch' */

    /* Logic: '<S478>/Logical Operator40' incorporates:
     *  Logic: '<S322>/AND1'
     *  Logic: '<S322>/AND2'
     *  Logic: '<S478>/Logical Operator39'
     *  Logic: '<S478>/Logical Operator41'
     *  Memory: '<S478>/Memory'
     *  RelationalOperator: '<S445>/FixPt Relational Operator'
     *  UnitDelay: '<S322>/Unit Delay'
     *  UnitDelay: '<S445>/Delay Input1'
     */
    rtb_LogicalOperator40_i = ((rtb_EBbyPB || localDW->CoreSubsys[ForEach_itr_h]
      .Memory_PreviousInput_l) && ((static_cast<int32_T>(rtb_EBbyPB) >=
      static_cast<int32_T>(localDW->CoreSubsys[ForEach_itr_h].
      DelayInput1_DSTATE_b)) &&
      ((!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.EBNotReleased != 0.0)) || (
      !localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jd))));

    /* Switch: '<S441>/Switch' incorporates:
     *  Constant: '<S441>/Constant'
     *  Logic: '<S322>/OR11'
     *  Logic: '<S441>/Logical Operator'
     *  Logic: '<S441>/Logical Operator1'
     *  Logic: '<S441>/Logical Operator2'
     *  UnitDelay: '<S472>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_i5) {
      rtb_Switch_ou = ((rtb_Switch_nw || rtb_LogicalOperator40_i) &&
                       (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_db));
    } else {
      rtb_Switch_ou = ((rtb_Switch_nw || rtb_LogicalOperator40_i) &&
                       localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_db);
    }

    /* End of Switch: '<S441>/Switch' */

    /* Switch: '<S442>/Switch' incorporates:
     *  Constant: '<S442>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S442>/Logical Operator'
     *  Logic: '<S442>/Logical Operator1'
     *  Logic: '<S442>/Logical Operator2'
     *  UnitDelay: '<S472>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ioj >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_d2) {
      rtb_Switch_nw = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                        0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_db));
    } else {
      rtb_Switch_nw = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                        0.0) && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_db);
    }

    /* End of Switch: '<S442>/Switch' */

    /* Switch: '<S443>/Switch' incorporates:
     *  Constant: '<S443>/Constant'
     *  Constant: '<S487>/Constant'
     *  Logic: '<S443>/Logical Operator'
     *  Logic: '<S443>/Logical Operator1'
     *  Logic: '<S443>/Logical Operator2'
     *  RelationalOperator: '<S487>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fz) {
      rtb_Switch_mk = (rtb_Switch_fe &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DeadmanSafetyDevice
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ji)));
    } else {
      rtb_Switch_mk = (rtb_Switch_fe &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DeadmanSafetyDevice
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ji));
    }

    /* End of Switch: '<S443>/Switch' */

    /* Switch: '<S444>/Switch' incorporates:
     *  Constant: '<S444>/Constant'
     *  Constant: '<S488>/Constant'
     *  Logic: '<S444>/Logical Operator'
     *  Logic: '<S444>/Logical Operator1'
     *  Logic: '<S444>/Logical Operator2'
     *  RelationalOperator: '<S488>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_e0r >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ooo) {
      rtb_Switch_pb = (rtb_Switch_fe &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DeadmanBypassSwitch
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_eh)));
    } else {
      rtb_Switch_pb = (rtb_Switch_fe &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DeadmanBypassSwitch
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_eh));
    }

    /* End of Switch: '<S444>/Switch' */

    /* Switch: '<S450>/Switch' incorporates:
     *  Constant: '<S450>/Constant'
     *  Logic: '<S450>/Logical Operator'
     *  Logic: '<S450>/Logical Operator1'
     *  Logic: '<S450>/Logical Operator2'
     *  UnitDelay: '<S449>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_e2c) {
      rtb_OR13_c = (rtb_Switch_fe && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_dux));
    } else {
      rtb_OR13_c = (rtb_Switch_fe && localDW->CoreSubsys[ForEach_itr_h].
                    UnitDelay_DSTATE_dux);
    }

    /* End of Switch: '<S450>/Switch' */

    /* Switch: '<S451>/Switch' incorporates:
     *  Constant: '<S451>/Constant'
     *  Logic: '<S451>/Logical Operator'
     *  Logic: '<S451>/Logical Operator1'
     *  Logic: '<S451>/Logical Operator2'
     *  UnitDelay: '<S447>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dsd) {
      rtb_LogicalOperator_ks = (rtb_Switch_fe && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gp));
    } else {
      rtb_LogicalOperator_ks = (rtb_Switch_fe && localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gp);
    }

    /* End of Switch: '<S451>/Switch' */

    /* Switch: '<S456>/Switch' incorporates:
     *  Constant: '<S456>/Constant'
     *  Constant: '<S493>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S456>/Logical Operator'
     *  Logic: '<S456>/Logical Operator1'
     *  Logic: '<S456>/Logical Operator2'
     *  RelationalOperator: '<S493>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_i5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cg2) {
      rtb_Switch_frj = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyBrakePBBypass
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_i)));
    } else {
      rtb_Switch_frj = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyBrakePBBypass
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_i));
    }

    /* End of Switch: '<S456>/Switch' */

    /* Switch: '<S459>/Switch' incorporates:
     *  Constant: '<S459>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S459>/Logical Operator'
     *  Logic: '<S459>/Logical Operator1'
     *  Logic: '<S459>/Logical Operator2'
     *  UnitDelay: '<S473>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_b3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_h4) {
      rtb_Switch_nkh = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW22502 !=
                         0.0) && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_fx != 0.0)));
    } else {
      rtb_Switch_nkh = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW22502 !=
                         0.0) && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_fx != 0.0));
    }

    /* End of Switch: '<S459>/Switch' */

    /* Switch: '<S462>/Switch' incorporates:
     *  Constant: '<S462>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S462>/Logical Operator'
     *  Logic: '<S462>/Logical Operator1'
     *  Logic: '<S462>/Logical Operator2'
     *  UnitDelay: '<S1139>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_o3) {
      rtb_Switch_jrk = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                         0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_l0p));
    } else {
      rtb_Switch_jrk = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                         0.0) && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_l0p);
    }

    /* End of Switch: '<S462>/Switch' */

    /* Switch: '<S468>/Switch' incorporates:
     *  Constant: '<S468>/Constant'
     *  Constant: '<S495>/Constant'
     *  Logic: '<S468>/Logical Operator'
     *  Logic: '<S468>/Logical Operator1'
     *  Logic: '<S468>/Logical Operator2'
     *  RelationalOperator: '<S495>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_c5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dw) {
      rtb_Switch_ee = (rtb_Switch_fe &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_in)));
    } else {
      rtb_Switch_ee = (rtb_Switch_fe &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_in));
    }

    /* End of Switch: '<S468>/Switch' */

    /* Switch: '<S482>/Switch' incorporates:
     *  Constant: '<S482>/Constant'
     *  Logic: '<S482>/Logical Operator'
     *  Logic: '<S482>/Logical Operator1'
     *  Logic: '<S482>/Logical Operator2'
     *  UnitDelay: '<S1177>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_g3p >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ik) {
      rtb_Switch_k0 = (rtb_Switch_fe && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_f2));
    } else {
      rtb_Switch_k0 = (rtb_Switch_fe && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_f2);
    }

    /* End of Switch: '<S482>/Switch' */

    /* Switch: '<S484>/Switch' incorporates:
     *  Constant: '<S479>/Constant'
     *  Constant: '<S479>/Mask'
     *  Constant: '<S484>/Constant'
     *  Constant: '<S513>/Constant'
     *  Constant: '<S514>/Constant'
     *  Constant: '<S515>/Constant'
     *  Constant: '<S516>/Constant'
     *  Constant: '<S517>/Constant'
     *  Constant: '<S518>/Constant'
     *  Constant: '<S519>/Constant'
     *  Logic: '<S479>/AND'
     *  Logic: '<S479>/AND1'
     *  Logic: '<S479>/AND2'
     *  Logic: '<S479>/AND3'
     *  Logic: '<S479>/OR'
     *  Logic: '<S479>/XOR'
     *  Logic: '<S484>/Logical Operator'
     *  Logic: '<S484>/Logical Operator1'
     *  Logic: '<S484>/Logical Operator2'
     *  RelationalOperator: '<S513>/Compare'
     *  RelationalOperator: '<S514>/Compare'
     *  RelationalOperator: '<S515>/Compare'
     *  RelationalOperator: '<S516>/Compare'
     *  RelationalOperator: '<S517>/Compare'
     *  RelationalOperator: '<S518>/Compare'
     *  RelationalOperator: '<S519>/Compare'
     *  UnitDelay: '<S1186>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_p4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kfn) {
      rtb_Switch_fe = (rtb_Switch_fe && (static_cast<boolean_T>
        (((ElectricalSystem_P.CoreSubsys.TBC2_NCContact != 0.0) ^
          (((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             <= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_br) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_g[0]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_h) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_g[1]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             > ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_b) &&
            (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             < ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_p) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_g[2]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_l) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_g[3]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             > ElectricalSystem_P.CoreSubsys.CompareToConstant5_const_d) &&
            (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             <= ElectricalSystem_P.CoreSubsys.CompareToConstant4_const_b) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_g[4]))))) &&
                       (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c2));
    } else {
      rtb_Switch_fe = (rtb_Switch_fe && (static_cast<boolean_T>
        (((ElectricalSystem_P.CoreSubsys.TBC2_NCContact != 0.0) ^
          (((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             <= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_br) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_g[0]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_h) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_g[1]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             > ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_b) &&
            (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             < ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_p) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_g[2]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_l) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_g[3]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             > ElectricalSystem_P.CoreSubsys.CompareToConstant5_const_d) &&
            (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             <= ElectricalSystem_P.CoreSubsys.CompareToConstant4_const_b) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_g[4]))))) &&
                       localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c2);
    }

    /* End of Switch: '<S484>/Switch' */

    /* Logic: '<S322>/OR12' */
    rtb_DG1182 = (rtb_Switch_k0 || rtb_Switch_fe || rtb_Switch_mk ||
                  rtb_Switch_ee || rtb_Switch_pb);

    /* Logic: '<S322>/OR13' */
    rtb_OR13_c = (rtb_OR13_c || rtb_LogicalOperator_ks);

    /* Switch: '<S477>/Switch' incorporates:
     *  Constant: '<S477>/Constant'
     *  Constant: '<S512>/Constant'
     *  Logic: '<S477>/Logical Operator'
     *  Logic: '<S477>/Logical Operator1'
     *  Logic: '<S477>/Logical Operator2'
     *  RelationalOperator: '<S512>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jr2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fu) {
      rtb_Switch_fe = (rtb_Switch_jrk &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_el)));
    } else {
      rtb_Switch_fe = (rtb_Switch_jrk &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_el));
    }

    /* End of Switch: '<S477>/Switch' */

    /* Switch: '<S485>/Switch' incorporates:
     *  Constant: '<S485>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S485>/Logical Operator'
     *  Logic: '<S485>/Logical Operator1'
     *  Logic: '<S485>/Logical Operator2'
     *  UnitDelay: '<S1186>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_oqn >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mkv) {
      rtb_Switch_d2 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                        0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_c2));
    } else {
      rtb_Switch_d2 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                        0.0) && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_c2);
    }

    /* End of Switch: '<S485>/Switch' */

    /* Switch: '<S547>/Switch' incorporates:
     *  Constant: '<S547>/Constant'
     *  Constant: '<S590>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S547>/Logical Operator'
     *  Logic: '<S547>/Logical Operator1'
     *  Logic: '<S547>/Logical Operator2'
     *  RelationalOperator: '<S590>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hmm >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pk) {
      rtb_Switch_ee = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.POCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nb)));
    } else {
      rtb_Switch_ee = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                        0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.POCB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nb));
    }

    /* End of Switch: '<S547>/Switch' */

    /* Switch: '<S521>/Switch' incorporates:
     *  Constant: '<S521>/Constant'
     *  Logic: '<S521>/Logical Operator'
     *  Logic: '<S521>/Logical Operator1'
     *  Logic: '<S521>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bo >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_iv) {
      rtb_Switch_k0 = (rtb_Switch_ee &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantographDownPB
                          != 0.0)));
    } else {
      rtb_Switch_k0 = (rtb_Switch_ee &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantographDownPB
                        != 0.0));
    }

    /* End of Switch: '<S521>/Switch' */

    /* Switch: '<S532>/Switch' incorporates:
     *  Constant: '<S532>/Constant'
     *  Logic: '<S532>/Logical Operator'
     *  Logic: '<S532>/Logical Operator1'
     *  Logic: '<S532>/Logical Operator2'
     *  UnitDelay: '<S396>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ab5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nj) {
      rtb_Switch_n3 = (rtb_Switch_ee && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_mo));
    } else {
      rtb_Switch_n3 = (rtb_Switch_ee && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_mo);
    }

    /* End of Switch: '<S532>/Switch' */

    /* Switch: '<S522>/Switch' incorporates:
     *  Constant: '<S522>/Constant'
     *  Logic: '<S522>/Logical Operator'
     *  Logic: '<S522>/Logical Operator1'
     *  Logic: '<S522>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_f4) {
      rtb_Switch_gy = (rtb_Switch_n3 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerONPB
                          != 0.0)));
    } else {
      rtb_Switch_gy = (rtb_Switch_n3 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerONPB
                        != 0.0));
    }

    /* End of Switch: '<S522>/Switch' */

    /* Switch: '<S558>/Switch' incorporates:
     *  Constant: '<S558>/Constant'
     *  Logic: '<S558>/Logical Operator'
     *  Logic: '<S558>/Logical Operator1'
     *  Logic: '<S558>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fi >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_arxb) {
      rtb_Switch_gy = (rtb_Switch_gy &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerOFFPB
                          != 0.0)));
    } else {
      rtb_Switch_gy = (rtb_Switch_gy &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerOFFPB
                        != 0.0));
    }

    /* End of Switch: '<S558>/Switch' */

    /* Switch: '<S524>/Switch' incorporates:
     *  Constant: '<S524>/Constant'
     *  Logic: '<S524>/Logical Operator'
     *  Logic: '<S524>/Logical Operator1'
     *  Logic: '<S524>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_psa >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hxh) {
      rtb_Switch_noe = (rtb_Switch_gy &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LIMPHomePB
                           != 0.0)));
    } else {
      rtb_Switch_noe = (rtb_Switch_gy &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LIMPHomePB
                         != 0.0));
    }

    /* End of Switch: '<S524>/Switch' */

    /* Switch: '<S525>/Switch' incorporates:
     *  Constant: '<S525>/Constant'
     *  Logic: '<S525>/Logical Operator'
     *  Logic: '<S525>/Logical Operator1'
     *  Logic: '<S525>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_efy >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_iba) {
      rtb_Switch_gy = (rtb_Switch_n3 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerONPB
                          != 0.0)));
    } else {
      rtb_Switch_gy = (rtb_Switch_n3 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerONPB
                        != 0.0));
    }

    /* End of Switch: '<S525>/Switch' */

    /* Switch: '<S533>/Switch' incorporates:
     *  Constant: '<S533>/Constant'
     *  Logic: '<S533>/Logical Operator'
     *  Logic: '<S533>/Logical Operator1'
     *  Logic: '<S533>/Logical Operator2'
     *  UnitDelay: '<S396>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mml >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_efb) {
      rtb_Switch_ee = (rtb_Switch_ee && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_mo));
    } else {
      rtb_Switch_ee = (rtb_Switch_ee && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_mo);
    }

    /* End of Switch: '<S533>/Switch' */

    /* Switch: '<S526>/Switch' incorporates:
     *  Constant: '<S526>/Constant'
     *  Logic: '<S526>/Logical Operator'
     *  Logic: '<S526>/Logical Operator1'
     *  Logic: '<S526>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fqx) {
      rtb_Switch_gh = (rtb_Switch_ee &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LIMPHomePB
                          != 0.0)));
    } else {
      rtb_Switch_gh = (rtb_Switch_ee &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LIMPHomePB
                        != 0.0));
    }

    /* End of Switch: '<S526>/Switch' */

    /* Switch: '<S584>/Switch' incorporates:
     *  Constant: '<S584>/Constant'
     *  Logic: '<S584>/Logical Operator'
     *  Logic: '<S584>/Logical Operator1'
     *  Logic: '<S584>/Logical Operator2'
     *  UnitDelay: '<S68>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_am >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_o0o) {
      rtb_Switch_pb = (rtb_Switch_cx && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_l));
    } else {
      rtb_Switch_pb = (rtb_Switch_cx && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_l);
    }

    /* End of Switch: '<S584>/Switch' */

    /* Switch: '<S540>/Switch' incorporates:
     *  Constant: '<S540>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
      rtb_Switch_m4 =
        rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographDownForBUVDRIntervention;
    } else {
      rtb_Switch_m4 = ElectricalSystem_P.CoreSubsys.Constant_Value_an;
    }

    /* End of Switch: '<S540>/Switch' */

    /* Switch: '<S561>/Switch' incorporates:
     *  Constant: '<S561>/Constant'
     *  Logic: '<S561>/Logical Operator'
     *  Logic: '<S561>/Logical Operator1'
     *  Logic: '<S561>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_o5) {
      rtb_Switch_pb = (rtb_Switch_pb && (!(rtb_Switch_m4 != 0.0)));
    } else {
      rtb_Switch_pb = (rtb_Switch_pb && (rtb_Switch_m4 != 0.0));
    }

    /* End of Switch: '<S561>/Switch' */

    /* Logic: '<S323>/Logical Operator4' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    rtb_Switch_jrk = ((localB->UnitDelay[ForEach_itr_h].UnitWires.UW_PADR != 0.0)
                      || (localB->UnitDelay[ForEach_itr_h].TrainWires.TW_PADR !=
                          0.0) || (localB->UnitDelay[ForEach_itr_h].
      TrainWires.TWPantoDNCmd != 0.0));

    /* Switch: '<S542>/Switch' incorporates:
     *  Constant: '<S542>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S323>/Logical Operator10'
     *  Logic: '<S323>/Logical Operator9'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
      rtb_Switch_omo = (rtb_Switch_jrk &&
                        ((!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographLoweringFailure
                            != 0.0)) &&
                         (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographLoweringMissing
                            != 0.0))));
    } else {
      rtb_Switch_omo = ElectricalSystem_P.CoreSubsys.Constant_Value_f45;
    }

    /* End of Switch: '<S542>/Switch' */

    /* Switch: '<S576>/Switch' incorporates:
     *  Constant: '<S576>/Constant'
     *  Logic: '<S576>/Logical Operator'
     *  Logic: '<S576>/Logical Operator1'
     *  Logic: '<S576>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_g2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hl) {
      rtb_Switch_pb = (rtb_Switch_pb && (!rtb_Switch_omo));
    } else {
      rtb_Switch_pb = (rtb_Switch_pb && rtb_Switch_omo);
    }

    /* End of Switch: '<S576>/Switch' */

    /* Switch: '<S569>/Switch' incorporates:
     *  Constant: '<S569>/Constant'
     *  Logic: '<S569>/Logical Operator'
     *  Logic: '<S569>/Logical Operator1'
     *  Logic: '<S569>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_igwh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fjd) {
      rtb_Switch_fr4 =
        ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolatePanto
          != 0.0) && (!rtb_Switch_cq));
    } else {
      rtb_Switch_fr4 =
        ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolatePanto
          != 0.0) && rtb_Switch_cq);
    }

    /* End of Switch: '<S569>/Switch' */

    /* Switch: '<S573>/Switch' incorporates:
     *  Constant: '<S573>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S573>/Logical Operator'
     *  Logic: '<S573>/Logical Operator1'
     *  Logic: '<S573>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cm >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nta) {
      rtb_Switch_ee = (rtb_Switch_pb && (!(localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW_LHPBR != 0.0)));
    } else {
      rtb_Switch_ee = (rtb_Switch_pb && (localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW_LHPBR != 0.0));
    }

    /* End of Switch: '<S573>/Switch' */

    /* Switch: '<S541>/Switch' incorporates:
     *  Constant: '<S541>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
      /* Switch: '<S570>/Switch' incorporates:
       *  Constant: '<S570>/Constant'
       *  Logic: '<S323>/Logical Operator6'
       *  Logic: '<S323>/Logical Operator7'
       *  Logic: '<S570>/Logical Operator'
       *  Logic: '<S570>/Logical Operator1'
       *  Logic: '<S570>/Logical Operator2'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_hb >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_c) {
        rtb_Switch_jc =
          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.PantoMVSet
           &&
           ((!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographRisingInhibited
               != 0.0)) &&
            (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographRisingMissing
               != 0.0))) && (!rtb_Switch_fr4));
      } else {
        rtb_Switch_jc =
          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.PantoMVSet
           &&
           ((!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographRisingInhibited
               != 0.0)) &&
            (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographRisingMissing
               != 0.0))) && rtb_Switch_fr4);
      }

      /* End of Switch: '<S570>/Switch' */
    } else {
      rtb_Switch_jc = ElectricalSystem_P.CoreSubsys.Constant_Value_gnon;
    }

    /* End of Switch: '<S541>/Switch' */

    /* Switch: '<S563>/Switch' incorporates:
     *  Constant: '<S563>/Constant'
     *  Logic: '<S563>/Logical Operator'
     *  Logic: '<S563>/Logical Operator1'
     *  Logic: '<S563>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_h3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_de) {
      rtb_Switch_hfn = (rtb_Switch_cx && (!rtb_Switch_omo));
    } else {
      rtb_Switch_hfn = (rtb_Switch_cx && rtb_Switch_omo);
    }

    /* End of Switch: '<S563>/Switch' */

    /* Switch: '<S562>/Switch' incorporates:
     *  Constant: '<S562>/Constant'
     *  Logic: '<S562>/Logical Operator'
     *  Logic: '<S562>/Logical Operator1'
     *  Logic: '<S562>/Logical Operator2'
     *  UnitDelay: '<S70>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_g5j >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_m2g) {
      rtb_Switch_mk = (rtb_Switch_cx && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_gd));
    } else {
      rtb_Switch_mk = (rtb_Switch_cx && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_gd);
    }

    /* End of Switch: '<S562>/Switch' */

    /* Switch: '<S565>/Switch' incorporates:
     *  Constant: '<S565>/Constant'
     *  Logic: '<S565>/Logical Operator'
     *  Logic: '<S565>/Logical Operator1'
     *  Logic: '<S565>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fbh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_as) {
      rtb_Switch_pb = (rtb_Switch_cx && (!(rtb_Switch_m4 != 0.0)));
    } else {
      rtb_Switch_pb = (rtb_Switch_cx && (rtb_Switch_m4 != 0.0));
    }

    /* End of Switch: '<S565>/Switch' */

    /* Switch: '<S566>/Switch' incorporates:
     *  Constant: '<S566>/Constant'
     *  Logic: '<S323>/Logical Operator2'
     *  Logic: '<S566>/Logical Operator'
     *  Logic: '<S566>/Logical Operator1'
     *  Logic: '<S566>/Logical Operator2'
     *  UnitDelay: '<S792>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ow >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nc) {
      rtb_Switch_hfn = ((rtb_Switch_hfn || rtb_Switch_mk || rtb_Switch_pb) &&
                        (!(localDW->CoreSubsys[ForEach_itr_h].
                           UnitDelay_DSTATE_cj != 0.0)));
    } else {
      rtb_Switch_hfn = ((rtb_Switch_hfn || rtb_Switch_mk || rtb_Switch_pb) &&
                        (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cj
                         != 0.0));
    }

    /* End of Switch: '<S566>/Switch' */

    /* Switch: '<S549>/Switch' incorporates:
     *  Constant: '<S549>/Constant'
     *  Constant: '<S592>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S549>/Logical Operator'
     *  Logic: '<S549>/Logical Operator1'
     *  Logic: '<S549>/Logical Operator2'
     *  RelationalOperator: '<S592>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ods >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_g5) {
      rtb_LogicalOperator40_b_tmp = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW31102 != 0.0) &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PANCB
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_d5u)));
    } else {
      rtb_LogicalOperator40_b_tmp = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW31102 != 0.0) &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PANCB
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_d5u));
    }

    /* End of Switch: '<S549>/Switch' */

    /* Logic: '<S323>/Logical Operator3' */
    rtb_LogicalOperator3 = (rtb_Switch_hfn || rtb_LogicalOperator40_b_tmp);

    /* Logic: '<S582>/Logical Operator41' incorporates:
     *  Logic: '<S564>/Logical Operator2'
     *  Switch: '<S564>/Switch'
     */
    rtb_LogicalOperator40_b_tmp = !rtb_LogicalOperator3;

    /* Logic: '<S582>/Logical Operator40' incorporates:
     *  Logic: '<S323>/Logical Operator1'
     *  Logic: '<S582>/Logical Operator39'
     *  Logic: '<S582>/Logical Operator41'
     *  Memory: '<S582>/Memory'
     */
    rtb_LogicalOperator40_k = ((rtb_Switch_ee || rtb_Switch_jc ||
      localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_a) &&
      rtb_LogicalOperator40_b_tmp);

    /* Switch: '<S574>/Switch' incorporates:
     *  Constant: '<S574>/Constant'
     *  Logic: '<S574>/Logical Operator'
     *  Logic: '<S574>/Logical Operator1'
     *  Logic: '<S574>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lun >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jx) {
      rtb_Switch_pb = (rtb_Switch_cx && (!rtb_LogicalOperator40_k));
    } else {
      rtb_Switch_pb = (rtb_Switch_cx && rtb_LogicalOperator40_k);
    }

    /* End of Switch: '<S574>/Switch' */

    /* Switch: '<S530>/Switch' incorporates:
     *  Constant: '<S530>/Constant'
     *  Logic: '<S530>/Logical Operator'
     *  Logic: '<S530>/Logical Operator1'
     *  Logic: '<S530>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_el >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mk4) {
      rtb_Switch_pb = (rtb_Switch_pb &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ADDCOS
                          != 0.0)));
    } else {
      rtb_Switch_pb = (rtb_Switch_pb &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ADDCOS
                        != 0.0));
    }

    /* End of Switch: '<S530>/Switch' */

    /* Switch: '<S534>/Switch' incorporates:
     *  Constant: '<S534>/Constant'
     *  Constant: '<S588>/Constant'
     *  Logic: '<S534>/Logical Operator'
     *  Logic: '<S534>/Logical Operator1'
     *  Logic: '<S534>/Logical Operator2'
     *  RelationalOperator: '<S588>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hf) {
      rtb_Switch_hfn = (rtb_Switch_noe &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantoSelectorSw
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fk)));
    } else {
      rtb_Switch_hfn = (rtb_Switch_noe &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantoSelectorSw
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fk));
    }

    /* End of Switch: '<S534>/Switch' */

    /* Switch: '<S539>/Switch' incorporates:
     *  Constant: '<S539>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPantoReservoir) {
      rtb_Switch_enl = localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102;
    } else {
      rtb_Switch_enl = ElectricalSystem_P.CoreSubsys.Constant_Value_hm;
    }

    /* End of Switch: '<S539>/Switch' */

    /* Switch: '<S577>/Switch' incorporates:
     *  Constant: '<S577>/Constant'
     *  Logic: '<S577>/Logical Operator'
     *  Logic: '<S577>/Logical Operator1'
     *  Logic: '<S577>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_euk) {
      rtb_LogicalOperator_ks = (rtb_Switch_nm &&
        (!rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.PS2));
    } else {
      rtb_LogicalOperator_ks = (rtb_Switch_nm &&
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.PS2);
    }

    /* End of Switch: '<S577>/Switch' */

    /* Switch: '<S551>/Switch' incorporates:
     *  Constant: '<S551>/Constant'
     *  Logic: '<S551>/Logical Operator'
     *  Logic: '<S551>/Logical Operator1'
     *  Logic: '<S551>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_n1n >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mkr) {
      rtb_LogicalOperator_ks = (rtb_LogicalOperator_ks &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ORDCOS
           != 0.0)));
    } else {
      rtb_LogicalOperator_ks = (rtb_LogicalOperator_ks &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ORDCOS
         != 0.0));
    }

    /* End of Switch: '<S551>/Switch' */

    /* Logic: '<S323>/Logical Operator' */
    rtb_LogicalOperator_ks = (rtb_Switch_gft || rtb_LogicalOperator_ks);

    /* Switch: '<S543>/Switch' incorporates:
     *  Constant: '<S543>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
      rtb_Switch_jc =
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.PantoDownTripCmd;
    } else {
      rtb_Switch_jc = ElectricalSystem_P.CoreSubsys.Constant_Value_dh;
    }

    /* End of Switch: '<S543>/Switch' */

    /* Logic: '<S323>/Logical Operator8' incorporates:
     *  UnitDelay: '<S323>/Unit Delay'
     */
    rtb_Switch_gft = (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_g3 ||
                      rtb_Switch_jc);

    /* Switch: '<S553>/Switch' incorporates:
     *  Constant: '<S553>/Constant'
     *  Logic: '<S553>/Logical Operator'
     *  Logic: '<S553>/Logical Operator1'
     *  Logic: '<S553>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nm >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_l2) {
      rtb_Switch_pb = (rtb_Switch_pb &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ORDCOS
                          != 0.0)));
    } else {
      rtb_Switch_pb = (rtb_Switch_pb &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ORDCOS
                        != 0.0));
    }

    /* End of Switch: '<S553>/Switch' */

    /* Switch: '<S559>/Switch' incorporates:
     *  Constant: '<S559>/Constant'
     *  Logic: '<S559>/Logical Operator'
     *  Logic: '<S559>/Logical Operator1'
     *  Logic: '<S559>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_h10 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ea0) {
      rtb_Switch_n3 = (rtb_Switch_n3 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerOFFPB
                          != 0.0)));
    } else {
      rtb_Switch_n3 = (rtb_Switch_n3 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerOFFPB
                        != 0.0));
    }

    /* End of Switch: '<S559>/Switch' */

    /* Switch: '<S564>/Switch' incorporates:
     *  Constant: '<S564>/Constant'
     *  Logic: '<S564>/Logical Operator'
     *  Logic: '<S564>/Logical Operator1'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mbi >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jvc) {
      rtb_Switch_cx = (rtb_Switch_cx && rtb_LogicalOperator40_b_tmp);
    } else {
      rtb_Switch_cx = (rtb_Switch_cx && rtb_LogicalOperator3);
    }

    /* Switch: '<S578>/Switch' incorporates:
     *  Constant: '<S578>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ivw >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_at) {
      /* Update for UnitDelay: '<S323>/Unit Delay' incorporates:
       *  Logic: '<S578>/Logical Operator1'
       *  Logic: '<S578>/Logical Operator2'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_g3 = (rtb_Switch_nm &&
        (!rtb_Switch_omo));
    } else {
      /* Update for UnitDelay: '<S323>/Unit Delay' incorporates:
       *  Logic: '<S578>/Logical Operator'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_g3 = (rtb_Switch_nm &&
        rtb_Switch_omo);
    }

    /* End of Switch: '<S578>/Switch' */

    /* Logic: '<S581>/Logical Operator40' incorporates:
     *  Logic: '<S323>/Logical Operator11'
     *  Logic: '<S581>/Logical Operator39'
     *  Logic: '<S581>/Logical Operator41'
     *  Memory: '<S581>/Memory'
     *  RelationalOperator: '<S536>/FixPt Relational Operator'
     *  UnitDelay: '<S536>/Delay Input1'
     */
    rtb_Switch_nm = (((rtb_Switch_jrk &&
                       (rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographLoweringFailure
                        != 0.0)) || localDW->CoreSubsys[ForEach_itr_h].
                      Memory_PreviousInput_i) &&
                     (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographLoweringFailure
                        < localDW->CoreSubsys[ForEach_itr_h].
                        DelayInput1_DSTATE_l)));

    /* Switch: '<S568>/Switch' incorporates:
     *  Constant: '<S568>/Constant'
     *  Logic: '<S568>/Logical Operator'
     *  Logic: '<S568>/Logical Operator1'
     *  Logic: '<S568>/Logical Operator2'
     *  UnitDelay: '<S68>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_psd) {
      rtb_Switch_ee = ((rtb_Switch_m4 != 0.0) && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l));
    } else {
      rtb_Switch_ee = ((rtb_Switch_m4 != 0.0) && localDW->
                       CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l);
    }

    /* End of Switch: '<S568>/Switch' */

    /* Switch: '<S567>/Switch' incorporates:
     *  Constant: '<S567>/Constant'
     *  Logic: '<S567>/Logical Operator'
     *  Logic: '<S567>/Logical Operator1'
     *  Logic: '<S567>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cf >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hq) {
      rtb_LogicalOperator40_b_tmp = ((rtb_Switch_m4 != 0.0) && (!rtb_Switch_cq));
    } else {
      rtb_LogicalOperator40_b_tmp = ((rtb_Switch_m4 != 0.0) && rtb_Switch_cq);
    }

    /* End of Switch: '<S567>/Switch' */

    /* Logic: '<S583>/Logical Operator40' incorporates:
     *  Logic: '<S323>/Logical Operator5'
     *  Logic: '<S583>/Logical Operator39'
     *  Logic: '<S583>/Logical Operator41'
     *  Memory: '<S583>/Memory'
     *  RelationalOperator: '<S537>/FixPt Relational Operator'
     *  UnitDelay: '<S537>/Delay Input1'
     */
    rtb_LogicalOperator40_l = ((rtb_Switch_ee || rtb_LogicalOperator40_b_tmp ||
      localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_g) &&
      (!(rtb_Switch_m4 < localDW->CoreSubsys[ForEach_itr_h].
         DelayInput1_DSTATE_li)));

    /* Switch: '<S585>/Switch' incorporates:
     *  Constant: '<S585>/Constant'
     *  Constant: '<S593>/Constant'
     *  Logic: '<S585>/Logical Operator'
     *  Logic: '<S585>/Logical Operator1'
     *  Logic: '<S585>/Logical Operator2'
     *  RelationalOperator: '<S593>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hs) {
      rtb_Switch_put = (rtb_Switch_noe &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantoSelectorSw
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hu)));
    } else {
      rtb_Switch_put = (rtb_Switch_noe &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantoSelectorSw
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hu));
    }

    /* End of Switch: '<S585>/Switch' */

    /* Switch: '<S586>/Switch' incorporates:
     *  Constant: '<S586>/Constant'
     *  Constant: '<S594>/Constant'
     *  Logic: '<S586>/Logical Operator'
     *  Logic: '<S586>/Logical Operator1'
     *  Logic: '<S586>/Logical Operator2'
     *  RelationalOperator: '<S594>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ijq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dm) {
      rtb_Switch_fl = (rtb_Switch_noe &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantoSelectorSw
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_gi)));
    } else {
      rtb_Switch_fl = (rtb_Switch_noe &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantoSelectorSw
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_gi));
    }

    /* End of Switch: '<S586>/Switch' */

    /* Switch: '<S587>/Switch' incorporates:
     *  Constant: '<S587>/Constant'
     *  Constant: '<S595>/Constant'
     *  Logic: '<S587>/Logical Operator'
     *  Logic: '<S587>/Logical Operator1'
     *  Logic: '<S587>/Logical Operator2'
     *  RelationalOperator: '<S595>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_eo >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ale) {
      rtb_Switch_mk = (rtb_Switch_noe &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantoSelectorSw
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dg)));
    } else {
      rtb_Switch_mk = (rtb_Switch_noe &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantoSelectorSw
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dg));
    }

    /* End of Switch: '<S587>/Switch' */

    /* Switch: '<S608>/Switch' incorporates:
     *  Constant: '<S608>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S608>/Logical Operator'
     *  Logic: '<S608>/Logical Operator1'
     *  Logic: '<S608>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dp) {
      rtb_Switch_ee = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                        0.0) &&
                       (!rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ParkBrakeIsolationCock));
    } else {
      rtb_Switch_ee = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                        0.0) &&
                       rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ParkBrakeIsolationCock);
    }

    /* End of Switch: '<S608>/Switch' */

    /* Logic: '<S614>/Logical Operator41' incorporates:
     *  Logic: '<S1214>/NOT1'
     *  Logic: '<S324>/NOT'
     */
    rtb_Switch_hg_tmp =
      !rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.ParkBrakeApplied;

    /* Logic: '<S614>/Logical Operator40' incorporates:
     *  Logic: '<S614>/Logical Operator39'
     *  Logic: '<S614>/Logical Operator41'
     *  Memory: '<S614>/Memory'
     */
    rtb_Switch_noe = ((rtb_Switch_ee || localDW->CoreSubsys[ForEach_itr_h].
                       Memory_PreviousInput_o) && rtb_Switch_hg_tmp);

    /* Switch: '<S596>/Switch' incorporates:
     *  Constant: '<S596>/Constant'
     *  Logic: '<S596>/Logical Operator'
     *  Logic: '<S596>/Logical Operator1'
     *  Logic: '<S596>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_muc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hj) {
      rtb_Switch_pmn = (rtb_Switch_noe && (!rtb_Switch_hg_tmp));
    } else {
      rtb_Switch_pmn = (rtb_Switch_noe && rtb_Switch_hg_tmp);
    }

    /* End of Switch: '<S596>/Switch' */

    /* Switch: '<S597>/Switch' incorporates:
     *  Constant: '<S597>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S597>/Logical Operator'
     *  Logic: '<S597>/Logical Operator1'
     *  Logic: '<S597>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_np) {
      rtb_NOT_o = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW_TLGC11 != 0.0)
                   && (!rtb_Switch_hg_tmp));
    } else {
      rtb_NOT_o = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW_TLGC11 != 0.0)
                   && rtb_Switch_hg_tmp);
    }

    /* End of Switch: '<S597>/Switch' */

    /* Switch: '<S600>/Switch' incorporates:
     *  Constant: '<S600>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtb_Switch_fir = localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102;
    } else {
      rtb_Switch_fir = ElectricalSystem_P.CoreSubsys.Constant_Value_a4;
    }

    /* End of Switch: '<S600>/Switch' */

    /* Switch: '<S598>/Switch' incorporates:
     *  Constant: '<S598>/Constant'
     *  Logic: '<S598>/Logical Operator'
     *  Logic: '<S598>/Logical Operator1'
     *  Logic: '<S598>/Logical Operator2'
     *  UnitDelay: '<S396>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_moc) {
      rtb_Switch_gbz = ((rtb_Switch_fir != 0.0) && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mo));
    } else {
      rtb_Switch_gbz = ((rtb_Switch_fir != 0.0) && localDW->
                        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mo);
    }

    /* End of Switch: '<S598>/Switch' */

    /* Switch: '<S612>/Switch' incorporates:
     *  Constant: '<S612>/Constant'
     *  Logic: '<S612>/Logical Operator'
     *  Logic: '<S612>/Logical Operator1'
     *  Logic: '<S612>/Logical Operator2'
     *  UnitDelay: '<S400>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ptj) {
      rtb_Switch_ee = ((rtb_Switch_fir != 0.0) && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iv));
    } else {
      rtb_Switch_ee = ((rtb_Switch_fir != 0.0) && localDW->
                       CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iv);
    }

    /* End of Switch: '<S612>/Switch' */

    /* Switch: '<S613>/Switch' incorporates:
     *  Constant: '<S613>/Constant'
     *  Logic: '<S613>/Logical Operator'
     *  Logic: '<S613>/Logical Operator1'
     *  Logic: '<S613>/Logical Operator2'
     *  UnitDelay: '<S401>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_axl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jic) {
      rtb_LogicalOperator40_b_tmp = ((rtb_Switch_fir != 0.0) &&
        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ph));
    } else {
      rtb_LogicalOperator40_b_tmp = ((rtb_Switch_fir != 0.0) &&
        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ph);
    }

    /* End of Switch: '<S613>/Switch' */

    /* Logic: '<S324>/OR2' */
    rtb_OR1_d = (rtb_Switch_ee || rtb_LogicalOperator40_b_tmp || rtb_NOT_o);

    /* Switch: '<S602>/Switch' incorporates:
     *  Constant: '<S602>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S602>/Logical Operator'
     *  Logic: '<S602>/Logical Operator1'
     *  Logic: '<S602>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gt >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gh) {
      rtb_OR5_h = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 != 0.0) &&
                   (!rtb_Switch_pmn));
    } else {
      rtb_OR5_h = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 != 0.0) &&
                   rtb_Switch_pmn);
    }

    /* End of Switch: '<S602>/Switch' */

    /* Switch: '<S599>/Switch' incorporates:
     *  Constant: '<S599>/Constant'
     *  Logic: '<S599>/Logical Operator'
     *  Logic: '<S599>/Logical Operator1'
     *  Logic: '<S599>/Logical Operator2'
     *  UnitDelay: '<S397>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lz) {
      rtb_Switch_ee = (rtb_OR1_d && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ke));
    } else {
      rtb_Switch_ee = (rtb_OR1_d && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_ke);
    }

    /* End of Switch: '<S599>/Switch' */

    /* Switch: '<S606>/Switch' incorporates:
     *  Constant: '<S606>/Constant'
     *  Logic: '<S606>/Logical Operator'
     *  Logic: '<S606>/Logical Operator1'
     *  Logic: '<S606>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gcg) {
      rtb_Switch_et = (rtb_Switch_gbz &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ParkBrakeReleasePB
                          != 0.0)));
    } else {
      rtb_Switch_et = (rtb_Switch_gbz &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ParkBrakeReleasePB
                        != 0.0));
    }

    /* End of Switch: '<S606>/Switch' */

    /* Switch: '<S607>/Switch' incorporates:
     *  Constant: '<S607>/Constant'
     *  Logic: '<S607>/Logical Operator'
     *  Logic: '<S607>/Logical Operator1'
     *  Logic: '<S607>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_a0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hlc) {
      rtb_Switch_pmn = (rtb_Switch_gbz &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ParkBrakeReleasePB
                           != 0.0)));
    } else {
      rtb_Switch_pmn = (rtb_Switch_gbz &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ParkBrakeReleasePB
                         != 0.0));
    }

    /* End of Switch: '<S607>/Switch' */

    /* Switch: '<S609>/Switch' incorporates:
     *  Constant: '<S609>/Constant'
     *  Logic: '<S609>/Logical Operator'
     *  Logic: '<S609>/Logical Operator1'
     *  Logic: '<S609>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ilp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_j0) {
      rtb_DataTypeConversion8_m = (rtb_Switch_gbz &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ParkBrakeApplyPB
           != 0.0)));
    } else {
      rtb_DataTypeConversion8_m = (rtb_Switch_gbz &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ParkBrakeApplyPB
         != 0.0));
    }

    /* End of Switch: '<S609>/Switch' */

    /* Switch: '<S615>/Switch' incorporates:
     *  Constant: '<S615>/Constant'
     *  Constant: '<S616>/Constant'
     *  Logic: '<S615>/Logical Operator'
     *  Logic: '<S615>/Logical Operator1'
     *  Logic: '<S615>/Logical Operator2'
     *  RelationalOperator: '<S616>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_d3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_crn) {
      rtb_Switch_gbz = (rtb_Switch_gbz &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hr)));
    } else {
      rtb_Switch_gbz = (rtb_Switch_gbz &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hr));
    }

    /* End of Switch: '<S615>/Switch' */

    /* Switch: '<S610>/Switch' incorporates:
     *  Constant: '<S610>/Constant'
     *  Logic: '<S610>/Logical Operator'
     *  Logic: '<S610>/Logical Operator1'
     *  Logic: '<S610>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_esa) {
      rtb_Switch_gbz = (rtb_Switch_gbz &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ParkBrakeApplyPB
                           != 0.0)));
    } else {
      rtb_Switch_gbz = (rtb_Switch_gbz &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ParkBrakeApplyPB
                         != 0.0));
    }

    /* End of Switch: '<S610>/Switch' */

    /* Switch: '<S649>/Switch' incorporates:
     *  Constant: '<S649>/Constant'
     *  Constant: '<S697>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S649>/Logical Operator'
     *  Logic: '<S649>/Logical Operator1'
     *  Logic: '<S649>/Logical Operator2'
     *  RelationalOperator: '<S697>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ki >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bp) {
      rtb_Switch_hz = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TBCCB2
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_kb)));
    } else {
      rtb_Switch_hz = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TBCCB2
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_kb));
    }

    /* End of Switch: '<S649>/Switch' */

    /* Switch: '<S658>/Switch' incorporates:
     *  Constant: '<S658>/Constant'
     *  Logic: '<S658>/Logical Operator'
     *  Logic: '<S658>/Logical Operator1'
     *  Logic: '<S658>/Logical Operator2'
     *  UnitDelay: '<S1176>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ky >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hgz) {
      rtb_Switch_jb = (rtb_Switch_hz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_gs));
    } else {
      rtb_Switch_jb = (rtb_Switch_hz && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_gs);
    }

    /* End of Switch: '<S658>/Switch' */

    /* Switch: '<S639>/Switch' incorporates:
     *  Constant: '<S639>/Constant'
     *  Logic: '<S639>/Logical Operator'
     *  Logic: '<S639>/Logical Operator1'
     *  Logic: '<S639>/Logical Operator2'
     *  UnitDelay: '<S1172>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gj >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_j30) {
      rtb_LogicalOperator40_b_tmp = (rtb_Switch_jb && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fse));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_Switch_jb && localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fse);
    }

    /* End of Switch: '<S639>/Switch' */

    /* Switch: '<S624>/Switch' incorporates:
     *  Constant: '<S624>/Constant'
     *  Logic: '<S624>/Logical Operator'
     *  Logic: '<S624>/Logical Operator1'
     *  Logic: '<S624>/Logical Operator2'
     *  UnitDelay: '<S402>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_j5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kw) {
      tmp_c = (rtb_Switch_hz && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_mx));
    } else {
      tmp_c = (rtb_Switch_hz && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_mx);
    }

    /* End of Switch: '<S624>/Switch' */

    /* Switch: '<S625>/Switch' incorporates:
     *  Constant: '<S625>/Constant'
     *  Logic: '<S625>/Logical Operator'
     *  Logic: '<S625>/Logical Operator1'
     *  Logic: '<S625>/Logical Operator2'
     *  UnitDelay: '<S403>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_e5u >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ny3) {
      tmp_d = (rtb_Switch_hz && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_ob));
    } else {
      tmp_d = (rtb_Switch_hz && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_ob);
    }

    /* End of Switch: '<S625>/Switch' */

    /* Logic: '<S325>/OR1' */
    rtb_Switch_jb = (rtb_LogicalOperator40_b_tmp || tmp_c || tmp_d);

    /* Switch: '<S631>/Switch' incorporates:
     *  Constant: '<S631>/Constant'
     *  Logic: '<S631>/Logical Operator'
     *  Logic: '<S631>/Logical Operator1'
     *  Logic: '<S631>/Logical Operator2'
     *  UnitDelay: '<S475>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dkm >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_oxq) {
      rtb_LogicalOperator40_b_tmp = (rtb_Switch_jb && (!(localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dl != 0.0)));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_Switch_jb && (localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dl != 0.0));
    }

    /* End of Switch: '<S631>/Switch' */

    /* Switch: '<S632>/Switch' incorporates:
     *  Constant: '<S632>/Constant'
     *  Logic: '<S632>/Logical Operator'
     *  Logic: '<S632>/Logical Operator1'
     *  Logic: '<S632>/Logical Operator2'
     *  UnitDelay: '<S475>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_l0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pqy) {
      tmp_c = (rtb_Switch_jb && (!(localDW->CoreSubsys[ForEach_itr_h].
                 UnitDelay_DSTATE_dl != 0.0)));
    } else {
      tmp_c = (rtb_Switch_jb && (localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_dl != 0.0));
    }

    /* End of Switch: '<S632>/Switch' */

    /* Logic: '<S325>/OR3' */
    rtb_OR3_l = (rtb_LogicalOperator40_b_tmp || tmp_c);

    /* Switch: '<S640>/Switch' incorporates:
     *  Constant: '<S640>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtb_Switch_fir =
        rtb_ImpSel_InsertedFor_Faults_at_outport_0.FwdRevTrainLineMismatch;
    } else {
      rtb_Switch_fir = ElectricalSystem_P.CoreSubsys.Constant_Value_pry;
    }

    /* End of Switch: '<S640>/Switch' */

    /* Switch: '<S706>/Switch' incorporates:
     *  Constant: '<S706>/Constant'
     *  Logic: '<S706>/Logical Operator'
     *  Logic: '<S706>/Logical Operator1'
     *  Logic: '<S706>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_che >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dl) {
      rtb_Switch_b1wm = ((rtb_Switch_fir != 0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MasterKeySwitch
                            != 0.0)));
    } else {
      rtb_Switch_b1wm = ((rtb_Switch_fir != 0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MasterKeySwitch
                          != 0.0));
    }

    /* End of Switch: '<S706>/Switch' */

    /* Switch: '<S707>/Switch' incorporates:
     *  Constant: '<S707>/Constant'
     *  Constant: '<S710>/Constant'
     *  Logic: '<S707>/Logical Operator'
     *  Logic: '<S707>/Logical Operator1'
     *  Logic: '<S707>/Logical Operator2'
     *  RelationalOperator: '<S710>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gno >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_g4) {
      rtb_LogicalOperator40_b_tmp = ((rtb_Switch_fir != 0.0) &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_im)));
    } else {
      rtb_LogicalOperator40_b_tmp = ((rtb_Switch_fir != 0.0) &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_im));
    }

    /* End of Switch: '<S707>/Switch' */

    /* Logic: '<S709>/Logical Operator39' incorporates:
     *  Logic: '<S679>/AND1'
     *  Logic: '<S709>/Logical Operator40'
     *  Logic: '<S709>/Logical Operator41'
     *  Memory: '<S709>/Memory'
     *  RelationalOperator: '<S704>/FixPt Relational Operator'
     *  RelationalOperator: '<S705>/FixPt Relational Operator'
     *  UnitDelay: '<S704>/Delay Input1'
     *  UnitDelay: '<S705>/Delay Input1'
     */
    rtb_LogicalOperator39_gn = ((rtb_Switch_fir > localDW->
      CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_o) || (localDW->
      CoreSubsys[ForEach_itr_h].Memory_PreviousInput_ox && ((static_cast<int32_T>
      (rtb_Switch_b1wm) <= static_cast<int32_T>(localDW->
      CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_dd)) ||
      (!rtb_LogicalOperator40_b_tmp))));

    /* Switch: '<S708>/Switch' incorporates:
     *  Constant: '<S708>/Constant'
     *  Logic: '<S708>/Logical Operator'
     *  Logic: '<S708>/Logical Operator1'
     *  Logic: '<S708>/Logical Operator2'
     *  UnitDelay: '<S402>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hix >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_l0) {
      rtb_Switch_lzx = (rtb_LogicalOperator39_gn && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mx));
    } else {
      rtb_Switch_lzx = (rtb_LogicalOperator39_gn && localDW->
                        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mx);
    }

    /* End of Switch: '<S708>/Switch' */

    /* Switch: '<S617>/Switch' incorporates:
     *  Constant: '<S617>/Constant'
     *  Constant: '<S689>/Constant'
     *  Logic: '<S617>/Logical Operator'
     *  Logic: '<S617>/Logical Operator1'
     *  Logic: '<S617>/Logical Operator2'
     *  RelationalOperator: '<S689>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_e51 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_k1a) {
      rtb_LogicalOperator40_b_tmp = (rtb_OR3_l &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_oz)));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_OR3_l &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_oz));
    }

    /* End of Switch: '<S617>/Switch' */

    /* Switch: '<S650>/Switch' incorporates:
     *  Constant: '<S650>/Constant'
     *  Constant: '<S698>/Constant'
     *  Logic: '<S650>/Logical Operator'
     *  Logic: '<S650>/Logical Operator1'
     *  Logic: '<S650>/Logical Operator2'
     *  RelationalOperator: '<S698>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ov >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dv) {
      tmp_c = (rtb_OR3_l &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_c1)));
    } else {
      tmp_c = (rtb_OR3_l &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_c1));
    }

    /* End of Switch: '<S650>/Switch' */

    /* Logic: '<S325>/OR5' */
    rtb_OR5_g = (rtb_LogicalOperator40_b_tmp || tmp_c);

    /* Switch: '<S623>/Switch' incorporates:
     *  Constant: '<S623>/Constant'
     *  Logic: '<S623>/Logical Operator'
     *  Logic: '<S623>/Logical Operator1'
     *  Logic: '<S623>/Logical Operator2'
     *  UnitDelay: '<S397>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ok) {
      rtb_BRAKING_TLFC7 = (rtb_OR5_g && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ke));
    } else {
      rtb_BRAKING_TLFC7 = (rtb_OR5_g && localDW->CoreSubsys[ForEach_itr_h].
                           UnitDelay_DSTATE_ke);
    }

    /* End of Switch: '<S623>/Switch' */

    /* Switch: '<S621>/Switch' incorporates:
     *  Constant: '<S621>/Constant'
     *  Logic: '<S621>/Logical Operator'
     *  Logic: '<S621>/Logical Operator1'
     *  Logic: '<S621>/Logical Operator2'
     *  UnitDelay: '<S1131>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jfn >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_af) {
      rtb_BRAKING_TLFC7 = (rtb_BRAKING_TLFC7 && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gxr));
    } else {
      rtb_BRAKING_TLFC7 = (rtb_BRAKING_TLFC7 && localDW->
                           CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gxr);
    }

    /* End of Switch: '<S621>/Switch' */

    /* Switch: '<S622>/Switch' incorporates:
     *  Constant: '<S622>/Constant'
     *  Logic: '<S622>/Logical Operator'
     *  Logic: '<S622>/Logical Operator1'
     *  Logic: '<S622>/Logical Operator2'
     *  UnitDelay: '<S1132>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_n3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_i2) {
      rtb_Switch_i0 = (rtb_OR5_g && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_aw));
    } else {
      rtb_Switch_i0 = (rtb_OR5_g && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_aw);
    }

    /* End of Switch: '<S622>/Switch' */

    /* Switch: '<S626>/Switch' incorporates:
     *  Constant: '<S626>/Constant'
     *  Logic: '<S626>/Logical Operator'
     *  Logic: '<S626>/Logical Operator1'
     *  Logic: '<S626>/Logical Operator2'
     *  UnitDelay: '<S406>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ns >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ey) {
      rtb_Switch_jp = (rtb_Switch_hz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_gg));
    } else {
      rtb_Switch_jp = (rtb_Switch_hz && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_gg);
    }

    /* End of Switch: '<S626>/Switch' */

    /* Switch: '<S648>/Switch' incorporates:
     *  Constant: '<S648>/Constant'
     *  Constant: '<S696>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S648>/Logical Operator'
     *  Logic: '<S648>/Logical Operator1'
     *  Logic: '<S648>/Logical Operator2'
     *  RelationalOperator: '<S696>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bkl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_n0) {
      rtb_Switch_hz = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TBCCB1
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dn)));
    } else {
      rtb_Switch_hz = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TBCCB1
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dn));
    }

    /* End of Switch: '<S648>/Switch' */

    /* Switch: '<S627>/Switch' incorporates:
     *  Constant: '<S627>/Constant'
     *  Logic: '<S627>/Logical Operator'
     *  Logic: '<S627>/Logical Operator1'
     *  Logic: '<S627>/Logical Operator2'
     *  UnitDelay: '<S408>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gjj >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ejf) {
      rtb_OR5_g = (rtb_Switch_hz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_f5));
    } else {
      rtb_OR5_g = (rtb_Switch_hz && localDW->CoreSubsys[ForEach_itr_h].
                   UnitDelay_DSTATE_f5);
    }

    /* End of Switch: '<S627>/Switch' */

    /* Switch: '<S628>/Switch' incorporates:
     *  Constant: '<S628>/Constant'
     *  Logic: '<S628>/Logical Operator'
     *  Logic: '<S628>/Logical Operator1'
     *  Logic: '<S628>/Logical Operator2'
     *  UnitDelay: '<S409>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gi5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lmp) {
      rtb_AND1_c = (rtb_Switch_hz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_jy));
    } else {
      rtb_AND1_c = (rtb_Switch_hz && localDW->CoreSubsys[ForEach_itr_h].
                    UnitDelay_DSTATE_jy);
    }

    /* End of Switch: '<S628>/Switch' */

    /* Switch: '<S654>/Switch' incorporates:
     *  Constant: '<S654>/Constant'
     *  Constant: '<S700>/Constant'
     *  Logic: '<S654>/Logical Operator'
     *  Logic: '<S654>/Logical Operator1'
     *  Logic: '<S654>/Logical Operator2'
     *  RelationalOperator: '<S700>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kqx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mcx) {
      rtb_LogicalOperator40_b_tmp = (rtb_OR3_l &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_m5)));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_OR3_l &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_m5));
    }

    /* End of Switch: '<S654>/Switch' */

    /* Switch: '<S637>/Switch' incorporates:
     *  Constant: '<S637>/Constant'
     *  Constant: '<S695>/Constant'
     *  Logic: '<S637>/Logical Operator'
     *  Logic: '<S637>/Logical Operator1'
     *  Logic: '<S637>/Logical Operator2'
     *  RelationalOperator: '<S695>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bdn) {
      tmp_c = (rtb_OR3_l &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_l5)));
    } else {
      tmp_c = (rtb_OR3_l &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_l5));
    }

    /* End of Switch: '<S637>/Switch' */

    /* Switch: '<S620>/Switch' incorporates:
     *  Constant: '<S620>/Constant'
     *  Constant: '<S692>/Constant'
     *  Logic: '<S620>/Logical Operator'
     *  Logic: '<S620>/Logical Operator1'
     *  Logic: '<S620>/Logical Operator2'
     *  RelationalOperator: '<S692>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pz1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_k1z) {
      tmp_d = (rtb_OR3_l &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jue)));
    } else {
      tmp_d = (rtb_OR3_l &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jue));
    }

    /* End of Switch: '<S620>/Switch' */

    /* Logic: '<S325>/OR7' incorporates:
     *  Constant: '<S681>/Constant'
     *  Constant: '<S681>/Mask'
     *  Constant: '<S718>/Constant'
     *  Constant: '<S719>/Constant'
     *  Constant: '<S720>/Constant'
     *  Constant: '<S721>/Constant'
     *  Constant: '<S722>/Constant'
     *  Constant: '<S723>/Constant'
     *  Constant: '<S724>/Constant'
     *  Logic: '<S325>/OR6'
     *  Logic: '<S681>/AND'
     *  Logic: '<S681>/AND1'
     *  Logic: '<S681>/AND2'
     *  Logic: '<S681>/AND3'
     *  Logic: '<S681>/OR'
     *  Logic: '<S681>/XOR'
     *  RelationalOperator: '<S718>/Compare'
     *  RelationalOperator: '<S719>/Compare'
     *  RelationalOperator: '<S720>/Compare'
     *  RelationalOperator: '<S721>/Compare'
     *  RelationalOperator: '<S722>/Compare'
     *  RelationalOperator: '<S723>/Compare'
     *  RelationalOperator: '<S724>/Compare'
     */
    rtb_Switch_hz = (rtb_Switch_i0 || ((rtb_LogicalOperator40_b_tmp || tmp_c ||
      tmp_d) && (static_cast<boolean_T>
                 (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
                      <=
                      ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jp) &&
                     ElectricalSystem_P.CoreSubsys.Mask_Value_a[0]) ||
                    ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
                      ==
                      ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_h5)
                     && ElectricalSystem_P.CoreSubsys.Mask_Value_a[1]) ||
                    ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
                      > ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_o)
                     &&
                     (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
                      < ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_n)
                     && ElectricalSystem_P.CoreSubsys.Mask_Value_a[2]) ||
                    ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
                      ==
                      ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_n) &&
                     ElectricalSystem_P.CoreSubsys.Mask_Value_a[3]) ||
                    ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
                      > ElectricalSystem_P.CoreSubsys.CompareToConstant5_const_b)
                     &&
                     (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
                      <=
                      ElectricalSystem_P.CoreSubsys.CompareToConstant4_const_f) &&
                     ElectricalSystem_P.CoreSubsys.Mask_Value_a[4])) ^
                   (ElectricalSystem_P.CoreSubsys.TBC2_NCContact_l != 0.0))))));

    /* Switch: '<S652>/Switch' incorporates:
     *  Constant: '<S652>/Constant'
     *  Logic: '<S324>/OR3'
     *  Logic: '<S652>/Logical Operator'
     *  Logic: '<S652>/Logical Operator1'
     *  Logic: '<S652>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_aq4) {
      rtb_OR5_h = (rtb_Switch_hz &&
                   ((!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.ParkBrakeBypassVDUReq
                       != 0.0)) && (!rtb_OR5_h)));
    } else {
      rtb_OR5_h = (rtb_Switch_hz &&
                   ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.ParkBrakeBypassVDUReq
                     != 0.0) || rtb_OR5_h));
    }

    /* End of Switch: '<S652>/Switch' */

    /* Switch: '<S653>/Switch' incorporates:
     *  Constant: '<S653>/Constant'
     *  Logic: '<S324>/OR4'
     *  Logic: '<S653>/Logical Operator'
     *  Logic: '<S653>/Logical Operator1'
     *  Logic: '<S653>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pzu >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bg) {
      rtb_Switch_ee = (rtb_Switch_hz && ((!rtb_Switch_ee) &&
        (!rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMS_PBR)));
    } else {
      rtb_Switch_ee = (rtb_Switch_hz && (rtb_Switch_ee ||
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMS_PBR));
    }

    /* End of Switch: '<S653>/Switch' */

    /* Logic: '<S325>/OR8' */
    rtb_Switch_hz = (rtb_OR5_h || rtb_Switch_ee);

    /* Switch: '<S629>/Switch' incorporates:
     *  Constant: '<S629>/Constant'
     *  Constant: '<S693>/Constant'
     *  Logic: '<S629>/Logical Operator'
     *  Logic: '<S629>/Logical Operator1'
     *  Logic: '<S629>/Logical Operator2'
     *  RelationalOperator: '<S693>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_a2i >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kn) {
      rtb_Switch_ee = (rtb_Switch_hz &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DoorProvenLoopCutoutSw
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ey)));
    } else {
      rtb_Switch_ee = (rtb_Switch_hz &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DoorProvenLoopCutoutSw
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ey));
    }

    /* End of Switch: '<S629>/Switch' */

    /* Switch: '<S630>/Switch' incorporates:
     *  Constant: '<S630>/Constant'
     *  Logic: '<S630>/Logical Operator'
     *  Logic: '<S630>/Logical Operator1'
     *  Logic: '<S630>/Logical Operator2'
     *  UnitDelay: '<S156>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hp0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pb) {
      rtb_LogicalOperator40_b_tmp = (rtb_Switch_hz && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gx));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_Switch_hz && localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gx);
    }

    /* End of Switch: '<S630>/Switch' */

    /* Logic: '<S325>/OR9' */
    rtb_OR4_n = (rtb_Switch_ee || rtb_LogicalOperator40_b_tmp);

    /* Switch: '<S633>/Switch' incorporates:
     *  Constant: '<S633>/Constant'
     *  Logic: '<S633>/Logical Operator'
     *  Logic: '<S633>/Logical Operator1'
     *  Logic: '<S633>/Logical Operator2'
     *  UnitDelay: '<S1133>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_no >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cxy) {
      rtb_OR6_a = (rtb_OR4_n && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_nj));
    } else {
      rtb_OR6_a = (rtb_OR4_n && localDW->CoreSubsys[ForEach_itr_h].
                   UnitDelay_DSTATE_nj);
    }

    /* End of Switch: '<S633>/Switch' */

    /* Switch: '<S660>/Switch' incorporates:
     *  Constant: '<S660>/Constant'
     *  Logic: '<S660>/Logical Operator'
     *  Logic: '<S660>/Logical Operator1'
     *  Logic: '<S660>/Logical Operator2'
     *  UnitDelay: '<S1176>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pfo >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_klt) {
      rtb_OR5_h = (rtb_Switch_jb && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_gs));
    } else {
      rtb_OR5_h = (rtb_Switch_jb && localDW->CoreSubsys[ForEach_itr_h].
                   UnitDelay_DSTATE_gs);
    }

    /* End of Switch: '<S660>/Switch' */

    /* Switch: '<S641>/Switch' incorporates:
     *  Constant: '<S641>/Constant'
     *  Logic: '<S641>/Logical Operator'
     *  Logic: '<S641>/Logical Operator1'
     *  Logic: '<S641>/Logical Operator2'
     *  UnitDelay: '<S672>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_p2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cm) {
      rtb_Switch_ej = (rtb_Switch_jb && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_fg));
    } else {
      rtb_Switch_ej = (rtb_Switch_jb && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_fg);
    }

    /* End of Switch: '<S641>/Switch' */

    /* Switch: '<S634>/Switch' incorporates:
     *  Constant: '<S634>/Constant'
     *  Constant: '<S685>/Constant'
     *  Constant: '<S685>/Mask'
     *  Constant: '<S746>/Constant'
     *  Constant: '<S747>/Constant'
     *  Constant: '<S748>/Constant'
     *  Constant: '<S749>/Constant'
     *  Constant: '<S750>/Constant'
     *  Constant: '<S751>/Constant'
     *  Constant: '<S752>/Constant'
     *  Logic: '<S325>/OR2'
     *  Logic: '<S634>/Logical Operator'
     *  Logic: '<S634>/Logical Operator1'
     *  Logic: '<S634>/Logical Operator2'
     *  Logic: '<S685>/AND'
     *  Logic: '<S685>/AND1'
     *  Logic: '<S685>/AND2'
     *  Logic: '<S685>/AND3'
     *  Logic: '<S685>/OR'
     *  Logic: '<S685>/XOR'
     *  RelationalOperator: '<S746>/Compare'
     *  RelationalOperator: '<S747>/Compare'
     *  RelationalOperator: '<S748>/Compare'
     *  RelationalOperator: '<S749>/Compare'
     *  RelationalOperator: '<S750>/Compare'
     *  RelationalOperator: '<S751>/Compare'
     *  RelationalOperator: '<S752>/Compare'
     *  UnitDelay: '<S1133>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kq) {
      rtb_OR5_h = (((rtb_Switch_jb && (static_cast<boolean_T>
        (((ElectricalSystem_P.CoreSubsys.TBC6_NCContact != 0.0) ^
          (((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             <= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ki) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_m[0]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_m) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_m[1]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             > ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_l) &&
            (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             < ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_k) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_m[2]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_a) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_m[3]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             > ElectricalSystem_P.CoreSubsys.CompareToConstant5_const_bb) &&
            (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             <= ElectricalSystem_P.CoreSubsys.CompareToConstant4_const_g) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_m[4])))))) || rtb_OR5_h ||
                    rtb_Switch_ej) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_nj));
    } else {
      rtb_OR5_h = (((rtb_Switch_jb && (static_cast<boolean_T>
        (((ElectricalSystem_P.CoreSubsys.TBC6_NCContact != 0.0) ^
          (((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             <= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ki) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_m[0]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_m) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_m[1]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             > ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_l) &&
            (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             < ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_k) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_m[2]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_a) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_m[3]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             > ElectricalSystem_P.CoreSubsys.CompareToConstant5_const_bb) &&
            (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             <= ElectricalSystem_P.CoreSubsys.CompareToConstant4_const_g) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_m[4])))))) || rtb_OR5_h ||
                    rtb_Switch_ej) && localDW->CoreSubsys[ForEach_itr_h].
                   UnitDelay_DSTATE_nj);
    }

    /* End of Switch: '<S634>/Switch' */

    /* Logic: '<S325>/OR14' */
    rtb_Switch_i0 = (rtb_OR5_g || rtb_AND1_c);

    /* Switch: '<S659>/Switch' incorporates:
     *  Constant: '<S659>/Constant'
     *  Logic: '<S659>/Logical Operator'
     *  Logic: '<S659>/Logical Operator1'
     *  Logic: '<S659>/Logical Operator2'
     *  UnitDelay: '<S1176>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_idl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eiz) {
      rtb_Switch_ej = (rtb_Switch_i0 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_gs));
    } else {
      rtb_Switch_ej = (rtb_Switch_i0 && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_gs);
    }

    /* End of Switch: '<S659>/Switch' */

    /* Switch: '<S643>/Switch' incorporates:
     *  Constant: '<S643>/Constant'
     *  Logic: '<S643>/Logical Operator'
     *  Logic: '<S643>/Logical Operator1'
     *  Logic: '<S643>/Logical Operator2'
     *  UnitDelay: '<S672>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fsy >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kjc) {
      rtb_Switch_hz = (rtb_Switch_i0 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_fg));
    } else {
      rtb_Switch_hz = (rtb_Switch_i0 && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_fg);
    }

    /* End of Switch: '<S643>/Switch' */

    /* Switch: '<S635>/Switch' incorporates:
     *  Constant: '<S635>/Constant'
     *  Constant: '<S686>/Constant'
     *  Constant: '<S686>/Mask'
     *  Constant: '<S753>/Constant'
     *  Constant: '<S754>/Constant'
     *  Constant: '<S755>/Constant'
     *  Constant: '<S756>/Constant'
     *  Constant: '<S757>/Constant'
     *  Constant: '<S758>/Constant'
     *  Constant: '<S759>/Constant'
     *  Logic: '<S325>/OR15'
     *  Logic: '<S635>/Logical Operator'
     *  Logic: '<S635>/Logical Operator1'
     *  Logic: '<S635>/Logical Operator2'
     *  Logic: '<S686>/AND'
     *  Logic: '<S686>/AND1'
     *  Logic: '<S686>/AND2'
     *  Logic: '<S686>/AND3'
     *  Logic: '<S686>/OR'
     *  Logic: '<S686>/XOR'
     *  RelationalOperator: '<S753>/Compare'
     *  RelationalOperator: '<S754>/Compare'
     *  RelationalOperator: '<S755>/Compare'
     *  RelationalOperator: '<S756>/Compare'
     *  RelationalOperator: '<S757>/Compare'
     *  RelationalOperator: '<S758>/Compare'
     *  RelationalOperator: '<S759>/Compare'
     *  UnitDelay: '<S1134>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ly >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ae) {
      rtb_Switch_ej = ((rtb_Switch_ej || rtb_Switch_hz || (rtb_Switch_i0 && (
        static_cast<boolean_T>(((ElectricalSystem_P.CoreSubsys.TBC7_NCContact !=
        0.0) ^
        (((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           <= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_kt) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_l[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_l) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_l[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           > ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_h) &&
          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           < ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_a) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_l[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_i) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_l[3]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           > ElectricalSystem_P.CoreSubsys.CompareToConstant5_const_bf) &&
          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           <= ElectricalSystem_P.CoreSubsys.CompareToConstant4_const_bl) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_l[4]))))))) &&
                       (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0));
    } else {
      rtb_Switch_ej = ((rtb_Switch_ej || rtb_Switch_hz || (rtb_Switch_i0 && (
        static_cast<boolean_T>(((ElectricalSystem_P.CoreSubsys.TBC7_NCContact !=
        0.0) ^
        (((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           <= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_kt) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_l[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_l) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_l[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           > ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_h) &&
          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           < ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_a) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_l[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_i) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_l[3]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           > ElectricalSystem_P.CoreSubsys.CompareToConstant5_const_bf) &&
          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           <= ElectricalSystem_P.CoreSubsys.CompareToConstant4_const_bl) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_l[4]))))))) &&
                       localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0);
    }

    /* End of Switch: '<S635>/Switch' */

    /* Switch: '<S638>/Switch' incorporates:
     *  Constant: '<S638>/Constant'
     *  Logic: '<S638>/Logical Operator'
     *  Logic: '<S638>/Logical Operator1'
     *  Logic: '<S638>/Logical Operator2'
     *  UnitDelay: '<S1172>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_esb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ght) {
      rtb_LogicalOperator1_nts = (rtb_OR3_l && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fse));
    } else {
      rtb_LogicalOperator1_nts = (rtb_OR3_l && localDW->CoreSubsys[ForEach_itr_h]
        .UnitDelay_DSTATE_fse);
    }

    /* End of Switch: '<S638>/Switch' */

    /* Switch: '<S642>/Switch' incorporates:
     *  Constant: '<S642>/Constant'
     *  Logic: '<S642>/Logical Operator'
     *  Logic: '<S642>/Logical Operator1'
     *  Logic: '<S642>/Logical Operator2'
     *  UnitDelay: '<S672>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_i3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jm) {
      rtb_Switch_h50 = (rtb_OR3_l && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_fg));
    } else {
      rtb_Switch_h50 = (rtb_OR3_l && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_fg);
    }

    /* End of Switch: '<S642>/Switch' */

    /* Switch: '<S644>/Switch' incorporates:
     *  Constant: '<S644>/Constant'
     *  Logic: '<S644>/Logical Operator'
     *  Logic: '<S644>/Logical Operator1'
     *  Logic: '<S644>/Logical Operator2'
     *  UnitDelay: '<S663>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fu >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lmh) {
      rtb_AND1_c = (rtb_OR3_l && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_npl));
    } else {
      rtb_AND1_c = (rtb_OR3_l && localDW->CoreSubsys[ForEach_itr_h].
                    UnitDelay_DSTATE_npl);
    }

    /* End of Switch: '<S644>/Switch' */

    /* Switch: '<S645>/Switch' incorporates:
     *  Constant: '<S645>/Constant'
     *  Logic: '<S645>/Logical Operator'
     *  Logic: '<S645>/Logical Operator1'
     *  Logic: '<S645>/Logical Operator2'
     *  UnitDelay: '<S661>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ji >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ee) {
      rtb_OR5_g = (rtb_OR3_l && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_m0));
    } else {
      rtb_OR5_g = (rtb_OR3_l && localDW->CoreSubsys[ForEach_itr_h].
                   UnitDelay_DSTATE_m0);
    }

    /* End of Switch: '<S645>/Switch' */

    /* Switch: '<S688>/Switch' incorporates:
     *  Constant: '<S688>/Constant'
     *  Logic: '<S688>/Logical Operator'
     *  Logic: '<S688>/Logical Operator1'
     *  Logic: '<S688>/Logical Operator2'
     *  UnitDelay: '<S1188>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_oqc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nu1) {
      rtb_Switch_hz = (rtb_Switch_jp && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_d0));
    } else {
      rtb_Switch_hz = (rtb_Switch_jp && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_d0);
    }

    /* End of Switch: '<S688>/Switch' */

    /* Switch: '<S678>/Switch' incorporates:
     *  Constant: '<S678>/Constant'
     *  Logic: '<S678>/Logical Operator'
     *  Logic: '<S678>/Logical Operator1'
     *  Logic: '<S678>/Logical Operator2'
     *  UnitDelay: '<S673>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kj >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nag) {
      rtb_Switch_hz = (rtb_Switch_hz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_bt));
    } else {
      rtb_Switch_hz = (rtb_Switch_hz && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_bt);
    }

    /* End of Switch: '<S678>/Switch' */

    /* Switch: '<S676>/Switch' incorporates:
     *  Constant: '<S676>/Constant'
     *  Logic: '<S676>/Logical Operator'
     *  Logic: '<S676>/Logical Operator1'
     *  Logic: '<S676>/Logical Operator2'
     *  UnitDelay: '<S665>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_h3y >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dq) {
      rtb_OR4_n = (rtb_OR4_n && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_og));
    } else {
      rtb_OR4_n = (rtb_OR4_n && localDW->CoreSubsys[ForEach_itr_h].
                   UnitDelay_DSTATE_og);
    }

    /* End of Switch: '<S676>/Switch' */

    /* Switch: '<S687>/Switch' incorporates:
     *  Constant: '<S687>/Constant'
     *  Logic: '<S687>/Logical Operator'
     *  Logic: '<S687>/Logical Operator1'
     *  Logic: '<S687>/Logical Operator2'
     *  UnitDelay: '<S1169>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bhq) {
      rtb_Switch_ee = (rtb_OR6_a && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_jdy));
    } else {
      rtb_Switch_ee = (rtb_OR6_a && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_jdy);
    }

    /* End of Switch: '<S687>/Switch' */

    /* Logic: '<S325>/OR10' */
    rtb_OR4_n = (rtb_OR4_n || rtb_Switch_ee);

    /* Logic: '<S325>/OR11' incorporates:
     *  Constant: '<S680>/Constant'
     *  Constant: '<S680>/Mask'
     *  Constant: '<S711>/Constant'
     *  Constant: '<S712>/Constant'
     *  Constant: '<S713>/Constant'
     *  Constant: '<S714>/Constant'
     *  Constant: '<S715>/Constant'
     *  Constant: '<S716>/Constant'
     *  Constant: '<S717>/Constant'
     *  Logic: '<S680>/AND'
     *  Logic: '<S680>/AND1'
     *  Logic: '<S680>/AND2'
     *  Logic: '<S680>/AND3'
     *  Logic: '<S680>/OR'
     *  Logic: '<S680>/XOR'
     *  RelationalOperator: '<S711>/Compare'
     *  RelationalOperator: '<S712>/Compare'
     *  RelationalOperator: '<S713>/Compare'
     *  RelationalOperator: '<S714>/Compare'
     *  RelationalOperator: '<S715>/Compare'
     *  RelationalOperator: '<S716>/Compare'
     *  RelationalOperator: '<S717>/Compare'
     */
    rtb_BRAKING_TLFC7 = (rtb_BRAKING_TLFC7 || (rtb_OR3_l &&
      (static_cast<boolean_T>
       (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
            <= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_or) &&
           ElectricalSystem_P.CoreSubsys.Mask_Value_b[0]) ||
          ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
            == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_c) &&
           ElectricalSystem_P.CoreSubsys.Mask_Value_b[1]) ||
          ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
            > ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_m) &&
           (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
            < ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_i) &&
           ElectricalSystem_P.CoreSubsys.Mask_Value_b[2]) ||
          ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
            == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_b) &&
           ElectricalSystem_P.CoreSubsys.Mask_Value_b[3]) ||
          ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
            > ElectricalSystem_P.CoreSubsys.CompareToConstant5_const_o) &&
           (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
            <= ElectricalSystem_P.CoreSubsys.CompareToConstant4_const_gi) &&
           ElectricalSystem_P.CoreSubsys.Mask_Value_b[4])) ^
         (ElectricalSystem_P.CoreSubsys.TBC1_NCContact != 0.0))))));

    /* Switch: '<S646>/Switch' incorporates:
     *  Constant: '<S646>/Constant'
     *  Logic: '<S646>/Logical Operator'
     *  Logic: '<S646>/Logical Operator1'
     *  Logic: '<S646>/Logical Operator2'
     *  UnitDelay: '<S661>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_oeo) {
      rtb_Switch_ee = (rtb_Switch_hz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_m0));
    } else {
      rtb_Switch_ee = (rtb_Switch_hz && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_m0);
    }

    /* End of Switch: '<S646>/Switch' */

    /* Switch: '<S636>/Switch' incorporates:
     *  Constant: '<S636>/Constant'
     *  Constant: '<S694>/Constant'
     *  Logic: '<S636>/Logical Operator'
     *  Logic: '<S636>/Logical Operator1'
     *  Logic: '<S636>/Logical Operator2'
     *  RelationalOperator: '<S694>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kd) {
      rtb_LogicalOperator40_b_tmp = (rtb_OR3_l &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_okn)));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_OR3_l &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_okn));
    }

    /* End of Switch: '<S636>/Switch' */

    /* Logic: '<S325>/OR12' */
    rtb_Switch_jp = (rtb_Switch_ee || rtb_LogicalOperator40_b_tmp);

    /* Switch: '<S655>/Switch' incorporates:
     *  Constant: '<S655>/Constant'
     *  Constant: '<S701>/Constant'
     *  Logic: '<S655>/Logical Operator'
     *  Logic: '<S655>/Logical Operator1'
     *  Logic: '<S655>/Logical Operator2'
     *  RelationalOperator: '<S701>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gdp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cv) {
      rtb_OR6_a = (rtb_OR3_l &&
                   (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                      ==
                      ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ih)));
    } else {
      rtb_OR6_a = (rtb_OR3_l &&
                   (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                    == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ih));
    }

    /* End of Switch: '<S655>/Switch' */

    /* Switch: '<S647>/Switch' incorporates:
     *  Constant: '<S647>/Constant'
     *  Logic: '<S647>/Logical Operator'
     *  Logic: '<S647>/Logical Operator1'
     *  Logic: '<S647>/Logical Operator2'
     *  UnitDelay: '<S670>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_b2q >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eo) {
      rtb_Switch_ee = (rtb_Switch_hz && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_m5));
    } else {
      rtb_Switch_ee = (rtb_Switch_hz && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_m5);
    }

    /* End of Switch: '<S647>/Switch' */

    /* Switch: '<S656>/Switch' incorporates:
     *  Constant: '<S656>/Constant'
     *  Constant: '<S702>/Constant'
     *  Logic: '<S656>/Logical Operator'
     *  Logic: '<S656>/Logical Operator1'
     *  Logic: '<S656>/Logical Operator2'
     *  RelationalOperator: '<S702>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_oz4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gj) {
      rtb_LogicalOperator40_b_tmp = (rtb_OR3_l &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fk4)));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_OR3_l &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fk4));
    }

    /* End of Switch: '<S656>/Switch' */

    /* Logic: '<S325>/OR13' */
    rtb_OR3_l = (rtb_Switch_ee || rtb_OR6_a || rtb_LogicalOperator40_b_tmp);

    /* Logic: '<S325>/OR16' */
    rtb_OR5_h = (rtb_OR5_h || rtb_Switch_ej);

    /* MATLAB Function: '<S651>/Orientation Swap' incorporates:
     *  Bias: '<S325>/Add Constant1'
     *  DataTypeConversion: '<S325>/Data Type Conversion'
     *  Logic: '<S325>/OR4'
     */
    if (static_cast<real_T>(rtb_Switch_lzx) +
        ElectricalSystem_P.CoreSubsys.AddConstant1_Bias > 1.5) {
      rtb_w1 = (rtb_LogicalOperator1_nts || rtb_Switch_h50 || rtb_OR5_g ||
                rtb_AND1_c);
    } else {
      rtb_w1 = rtb_OR6_a;
      rtb_OR6_a = (rtb_LogicalOperator1_nts || rtb_Switch_h50 || rtb_OR5_g ||
                   rtb_AND1_c);
    }

    /* End of MATLAB Function: '<S651>/Orientation Swap' */

    /* Switch: '<S675>/Switch' incorporates:
     *  Constant: '<S675>/Constant'
     *  Logic: '<S675>/Logical Operator'
     *  Logic: '<S675>/Logical Operator1'
     *  Logic: '<S675>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kcq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ft) {
      rtb_LogicalOperator1_nts = (rtb_Switch_jb &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
           != 0.0)));
    } else {
      rtb_LogicalOperator1_nts = (rtb_Switch_jb &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
         != 0.0));
    }

    /* End of Switch: '<S675>/Switch' */

    /* Switch: '<S677>/Switch' incorporates:
     *  Constant: '<S677>/Constant'
     *  Constant: '<S703>/Constant'
     *  Logic: '<S677>/Logical Operator'
     *  Logic: '<S677>/Logical Operator1'
     *  Logic: '<S677>/Logical Operator2'
     *  RelationalOperator: '<S703>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jg >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_li) {
      rtb_Switch_fy = (rtb_Switch_jb &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lg)));
    } else {
      rtb_Switch_fy = (rtb_Switch_jb &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lg));
    }

    /* End of Switch: '<S677>/Switch' */

    /* Switch: '<S773>/Switch' incorporates:
     *  Constant: '<S773>/Constant'
     *  Constant: '<S794>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S773>/Logical Operator'
     *  Logic: '<S773>/Logical Operator1'
     *  Logic: '<S773>/Logical Operator2'
     *  RelationalOperator: '<S794>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_guu >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mhj) {
      rtb_Switch_lj5 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VCBCCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cb)));
    } else {
      rtb_Switch_lj5 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VCBCCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cb));
    }

    /* End of Switch: '<S773>/Switch' */

    /* Switch: '<S765>/Switch' incorporates:
     *  Constant: '<S765>/Constant'
     *  Logic: '<S765>/Logical Operator'
     *  Logic: '<S765>/Logical Operator1'
     *  Logic: '<S765>/Logical Operator2'
     *  UnitDelay: '<S403>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nb4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_g2a) {
      rtb_Switch_lj5 = (rtb_Switch_lj5 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ob));
    } else {
      rtb_Switch_lj5 = (rtb_Switch_lj5 && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_ob);
    }

    /* End of Switch: '<S765>/Switch' */

    /* Switch: '<S781>/Switch' incorporates:
     *  Constant: '<S781>/Constant'
     *  Logic: '<S781>/Logical Operator'
     *  Logic: '<S781>/Logical Operator1'
     *  Logic: '<S781>/Logical Operator2'
     *  UnitDelay: '<S792>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_o3n >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ipr) {
      rtb_Switch_gu4 =
        ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolateVCB
          != 0.0) && (!(localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cj
                        != 0.0)));
    } else {
      rtb_Switch_gu4 =
        ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolateVCB
          != 0.0) && (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cj !=
                      0.0));
    }

    /* End of Switch: '<S781>/Switch' */

    /* Switch: '<S772>/Switch' incorporates:
     *  Constant: '<S772>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
      /* Switch: '<S774>/Switch' incorporates:
       *  Constant: '<S774>/Constant'
       *  Constant: '<S795>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S774>/Logical Operator'
       *  Logic: '<S774>/Logical Operator1'
       *  Logic: '<S774>/Logical Operator2'
       *  RelationalOperator: '<S795>/Compare'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_gf >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_i) {
        rtb_OR5_g = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0)
                     &&
                     (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VCBCB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bph)));
      } else {
        rtb_OR5_g = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0)
                     &&
                     (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VCBCB
                      ==
                      ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bph));
      }

      /* End of Switch: '<S774>/Switch' */
    } else {
      rtb_OR5_g = ElectricalSystem_P.CoreSubsys.Constant_Value_mfq;
    }

    /* End of Switch: '<S772>/Switch' */

    /* Switch: '<S775>/Switch' incorporates:
     *  Constant: '<S775>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S775>/Logical Operator'
     *  Logic: '<S775>/Logical Operator1'
     *  Logic: '<S775>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_m15 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dhz) {
      rtb_Switch_ee = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW25103 !=
                        0.0) && (!rtb_Switch_cq));
    } else {
      rtb_Switch_ee = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW25103 !=
                        0.0) && rtb_Switch_cq);
    }

    /* End of Switch: '<S775>/Switch' */

    /* Switch: '<S784>/Switch' incorporates:
     *  Constant: '<S784>/Constant'
     *  Logic: '<S328>/Logical Operator9'
     *  Logic: '<S784>/Logical Operator'
     *  Logic: '<S784>/Logical Operator1'
     *  Logic: '<S784>/Logical Operator2'
     *  UnitDelay: '<S825>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mzt >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jgh) {
      rtb_Switch_ej = ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByCI
                        || (rtb_ImpSel_InsertedFor_Faults_at_outport_0.CIFailure
                            != 0.0) ||
                        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.OHLHighVoltageLevel3
                         != 0.0) ||
                        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.OHLLowVoltageLevel2
                         != 0.0) ||
                        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.LineConverterOverCurrentLevel2
                         != 0.0) ||
                        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.LineConverterIGBTFailure
                         != 0.0) ||
                        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.MainCircuitEarthFaultLevel2
                         != 0.0)) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_m2));
    } else {
      rtb_Switch_ej = ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByCI
                        || (rtb_ImpSel_InsertedFor_Faults_at_outport_0.CIFailure
                            != 0.0) ||
                        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.OHLHighVoltageLevel3
                         != 0.0) ||
                        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.OHLLowVoltageLevel2
                         != 0.0) ||
                        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.LineConverterOverCurrentLevel2
                         != 0.0) ||
                        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.LineConverterIGBTFailure
                         != 0.0) ||
                        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.MainCircuitEarthFaultLevel2
                         != 0.0)) && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_m2);
    }

    /* End of Switch: '<S784>/Switch' */

    /* Switch: '<S785>/Switch' incorporates:
     *  Constant: '<S785>/Constant'
     *  Logic: '<S328>/Logical Operator10'
     *  Logic: '<S785>/Logical Operator'
     *  Logic: '<S785>/Logical Operator1'
     *  Logic: '<S785>/Logical Operator2'
     *  UnitDelay: '<S823>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_or >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mr) {
      rtb_Switch_hz =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByAPS ||
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.TransformerOilTemperatureTooHigh
           != 0.0) ||
          rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByMTrProtection ||
          rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByACOvercurrent ||
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.TransformerOilLevelTooLow
           != 0.0)) && (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ki));
    } else {
      rtb_Switch_hz =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByAPS ||
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.TransformerOilTemperatureTooHigh
           != 0.0) ||
          rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByMTrProtection ||
          rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByACOvercurrent ||
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.TransformerOilLevelTooLow
           != 0.0)) && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ki);
    }

    /* End of Switch: '<S785>/Switch' */

    /* Switch: '<S776>/Switch' incorporates:
     *  Constant: '<S776>/Constant'
     *  Logic: '<S776>/Logical Operator'
     *  Logic: '<S776>/Logical Operator1'
     *  Logic: '<S776>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fa) {
      rtb_LogicalOperator40_b_tmp = (rtb_OR5_g && (!rtb_Switch_cq));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_OR5_g && rtb_Switch_cq);
    }

    /* End of Switch: '<S776>/Switch' */

    /* Switch: '<S791>/Switch' incorporates:
     *  Constant: '<S791>/Constant'
     *  Logic: '<S791>/Logical Operator'
     *  Logic: '<S791>/Logical Operator1'
     *  Logic: '<S791>/Logical Operator2'
     *  UnitDelay: '<S68>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nov >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ac2) {
      tmp_c = (rtb_OR5_g && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_l));
    } else {
      tmp_c = (rtb_OR5_g && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_l);
    }

    /* End of Switch: '<S791>/Switch' */

    /* Logic: '<S328>/Logical Operator5' */
    rtb_AND1_c = (rtb_LogicalOperator40_b_tmp || tmp_c);

    /* Switch: '<S783>/Switch' incorporates:
     *  Constant: '<S767>/Constant'
     *  Constant: '<S768>/Constant'
     *  Constant: '<S769>/Constant'
     *  Constant: '<S770>/Constant'
     *  Constant: '<S783>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S328>/Logical Operator'
     *  Logic: '<S328>/Logical Operator2'
     *  Logic: '<S328>/Logical Operator8'
     *  Logic: '<S328>/NOT2'
     *  Logic: '<S783>/Logical Operator'
     *  Logic: '<S783>/Logical Operator1'
     *  Logic: '<S783>/Logical Operator2'
     *  RelationalOperator: '<S767>/Compare'
     *  RelationalOperator: '<S768>/Compare'
     *  RelationalOperator: '<S769>/Compare'
     *  RelationalOperator: '<S770>/Compare'
     *  UnitDelay: '<S793>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fe >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fx) {
      rtb_LogicalOperator_dj =
        ((((!rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBMissingClosing) &&
           rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMS_VCBClose)
          || rtb_Switch_ee) && (localB->UnitDelay[ForEach_itr_h].
          UnitWires.UW_TCU_KStatus ==
          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_km) &&
         (localB->UnitDelay[ForEach_itr_h].UnitWires.UW_TCU_AKStatus ==
          ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_ga) &&
         (localB->UnitDelay[ForEach_itr_h].UnitWires.KContactorState ==
          ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_n2) &&
         (localB->UnitDelay[ForEach_itr_h].UnitWires.AKContactorState ==
          ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_h) &&
         (localB->UnitDelay[ForEach_itr_h].UnitWires.UW11104 != 0.0) &&
         (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ey));
    } else {
      rtb_LogicalOperator_dj =
        ((((!rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBMissingClosing) &&
           rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMS_VCBClose)
          || rtb_Switch_ee) && (localB->UnitDelay[ForEach_itr_h].
          UnitWires.UW_TCU_KStatus ==
          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_km) &&
         (localB->UnitDelay[ForEach_itr_h].UnitWires.UW_TCU_AKStatus ==
          ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_ga) &&
         (localB->UnitDelay[ForEach_itr_h].UnitWires.KContactorState ==
          ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_n2) &&
         (localB->UnitDelay[ForEach_itr_h].UnitWires.AKContactorState ==
          ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_h) &&
         (localB->UnitDelay[ForEach_itr_h].UnitWires.UW11104 != 0.0) &&
         localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ey);
    }

    /* End of Switch: '<S783>/Switch' */

    /* Switch: '<S787>/Switch' incorporates:
     *  Constant: '<S787>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S787>/Logical Operator'
     *  Logic: '<S787>/Logical Operator1'
     *  Logic: '<S787>/Logical Operator2'
     *  UnitDelay: '<S792>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_n3i >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_g20) {
      rtb_Switch_cxh = ((localB->UnitDelay[ForEach_itr_h].UnitWires.UW_VCBTrip
                         != 0.0) && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_cj != 0.0)));
    } else {
      rtb_Switch_cxh = ((localB->UnitDelay[ForEach_itr_h].UnitWires.UW_VCBTrip
                         != 0.0) && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_cj != 0.0));
    }

    /* End of Switch: '<S787>/Switch' */

    /* Switch: '<S788>/Switch' incorporates:
     *  Constant: '<S788>/Constant'
     *  Logic: '<S788>/Logical Operator'
     *  Logic: '<S788>/Logical Operator1'
     *  Logic: '<S788>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_f4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_de1) {
      rtb_Switch_ke = (rtb_Switch_lj5 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VCBClosePB
                          != 0.0)));
    } else {
      rtb_Switch_ke = (rtb_Switch_lj5 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VCBClosePB
                        != 0.0));
    }

    /* End of Switch: '<S788>/Switch' */

    /* Switch: '<S789>/Switch' incorporates:
     *  Constant: '<S789>/Constant'
     *  Logic: '<S789>/Logical Operator'
     *  Logic: '<S789>/Logical Operator1'
     *  Logic: '<S789>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bpr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eg1) {
      rtb_Switch_h50 = (rtb_Switch_lj5 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VCBOpenPB
                           != 0.0)));
    } else {
      rtb_Switch_h50 = (rtb_Switch_lj5 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VCBOpenPB
                         != 0.0));
    }

    /* End of Switch: '<S789>/Switch' */

    /* Switch: '<S777>/Switch' incorporates:
     *  Constant: '<S777>/Constant'
     *  Logic: '<S777>/Logical Operator'
     *  Logic: '<S777>/Logical Operator1'
     *  Logic: '<S777>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_f5h >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pn) {
      rtb_Switch_ee = (rtb_OR5_g && (!rtb_Switch_cq));
    } else {
      rtb_Switch_ee = (rtb_OR5_g && rtb_Switch_cq);
    }

    /* End of Switch: '<S777>/Switch' */

    /* Switch: '<S780>/Switch' incorporates:
     *  Constant: '<S780>/Constant'
     *  Logic: '<S780>/Logical Operator'
     *  Logic: '<S780>/Logical Operator1'
     *  Logic: '<S780>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_n1d >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_a4) {
      rtb_LogicalOperator40_b_tmp = (rtb_AND1_c && (!rtb_Switch_omo));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_AND1_c && rtb_Switch_omo);
    }

    /* End of Switch: '<S780>/Switch' */

    /* Switch: '<S779>/Switch' incorporates:
     *  Constant: '<S779>/Constant'
     *  Logic: '<S779>/Logical Operator'
     *  Logic: '<S779>/Logical Operator1'
     *  Logic: '<S779>/Logical Operator2'
     *  UnitDelay: '<S70>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_oa >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gxi) {
      tmp_c = (rtb_AND1_c && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_gd));
    } else {
      tmp_c = (rtb_AND1_c && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_gd);
    }

    /* End of Switch: '<S779>/Switch' */

    /* Switch: '<S782>/Switch' incorporates:
     *  Constant: '<S782>/Constant'
     *  Logic: '<S782>/Logical Operator'
     *  Logic: '<S782>/Logical Operator1'
     *  Logic: '<S782>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gg) {
      tmp_d = (rtb_AND1_c && (!(rtb_Switch_m4 != 0.0)));
    } else {
      tmp_d = (rtb_AND1_c && (rtb_Switch_m4 != 0.0));
    }

    /* End of Switch: '<S782>/Switch' */

    /* Switch: '<S771>/Switch' incorporates:
     *  Constant: '<S771>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
      rtb_Switch_jc =
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMS_VCBOpen;
    } else {
      rtb_Switch_jc = ElectricalSystem_P.CoreSubsys.Constant_Value_guq;
    }

    /* End of Switch: '<S771>/Switch' */

    /* Logic: '<S790>/Logical Operator40' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S328>/Logical Operator3'
     *  Logic: '<S328>/Logical Operator4'
     *  Logic: '<S328>/Logical Operator6'
     *  Logic: '<S328>/Logical Operator7'
     *  Logic: '<S328>/NOT1'
     *  Logic: '<S790>/Logical Operator39'
     *  Logic: '<S790>/Logical Operator41'
     *  Memory: '<S790>/Memory'
     */
    rtb_Switch_omo = ((rtb_LogicalOperator_dj || localDW->
                       CoreSubsys[ForEach_itr_h].Memory_PreviousInput_h) &&
                      ((!rtb_Switch_ee) && (!(localB->UnitDelay[ForEach_itr_h].
      TrainWires.TW25102 != 0.0)) && (((!rtb_LogicalOperator40_b_tmp) && (!tmp_c)
      && (!tmp_d) && (!(localB->UnitDelay[ForEach_itr_h].UnitWires.UW_VCBTrip !=
                        0.0)) && (!rtb_Switch_jc)) ||
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBMissingOpening)));

    /* RelationalOperator: '<S796>/Compare' incorporates:
     *  Abs: '<S329>/Abs'
     *  Constant: '<S796>/Constant'
     */
    rtb_LogicalOperator_dj = (fabs
      (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Dynamics.VehicleSpeed)
      <= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hf);

    /* Logic: '<S797>/Logical Operator5' */
    rtb_Switch_kn =
      ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.BCGGroup1Isolated != 0.0) ||
       rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolateBCG1);

    /* Logic: '<S797>/NOT' */
    rtb_NOT_i1 =
      !(rtb_ImpSel_InsertedFor_Faults_at_outport_0.BCGGroup1IsolationFailure !=
        0.0);

    /* Outputs for Atomic SubSystem: '<S797>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit(rtb_NOT_i1, &localB->
      CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit_j, &localDW->
      CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit_j,
      &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_j,
      ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_UpperSaturationLimit_d);

    /* End of Outputs for SubSystem: '<S797>/TimerOnDelay NoInit' */

    /* Logic: '<S797>/AND' */
    rtb_AND_dy = (rtb_Switch_kn && localB->CoreSubsys[ForEach_itr_h].
                  TimerOnDelayNoInit_j.Compare);

    /* Logic: '<S797>/AND1' */
    rtb_AND1_c = (rtb_Switch_kn &&
                  (rtb_ImpSel_InsertedFor_Faults_at_outport_0.BCGGroup1IsolationFailure
                   != 0.0));

    /* Switch: '<S804>/Switch' incorporates:
     *  Constant: '<S804>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
      rtb_Switch1_ft = localB->UnitDelay[ForEach_itr_h].UnitWires.UW_VCB;
    } else {
      rtb_Switch1_ft = ElectricalSystem_P.CoreSubsys.Constant_Value_f1d;
    }

    /* End of Switch: '<S804>/Switch' */

    /* Switch: '<S807>/Switch' incorporates:
     *  Constant: '<S807>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
      rtb_Switch_fza = localB->UnitDelay[ForEach_itr_h].
        UnitWires.Contactor_Fault;
    } else {
      rtb_Switch_fza = ElectricalSystem_P.CoreSubsys.Constant_Value_fw;
    }

    /* End of Switch: '<S807>/Switch' */

    /* CombinatorialLogic: '<S828>/Logic' incorporates:
     *  DataTypeConversion: '<S798>/Data Type Conversion'
     *  Logic: '<S798>/Logical Operator1'
     *  Memory: '<S828>/Memory'
     *  UnitDelay: '<S798>/Unit Delay'
     */
    rtb_Logic_idx_0 = ElectricalSystem_P.CoreSubsys.Logic_table
      [(((static_cast<uint32_T>((rtb_Switch1_ft != 0.0)) << 1) +
         ((rtb_Switch_fza != 0.0) || localDW->CoreSubsys[ForEach_itr_h].
          UnitDelay_DSTATE_gj)) << 1) + localDW->CoreSubsys[ForEach_itr_h].
      Memory_PreviousInput_aj];

    /* Switch: '<S798>/Switch' incorporates:
     *  Constant: '<S798>/RC_AK'
     *  Constant: '<S798>/RC_K'
     *  Logic: '<S798>/Logical Operator3'
     *  UnitDelay: '<S798>/Unit Delay'
     */
    if ((rtb_Switch1_ft != 0.0) && localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_gj) {
      rtb_Switch2_g = ElectricalSystem_P.CoreSubsys.RC_K_Value;
    } else {
      rtb_Switch2_g = ElectricalSystem_P.CoreSubsys.RC_AK_Value;
    }

    /* End of Switch: '<S798>/Switch' */

    /* CombinatorialLogic: '<S829>/Logic' incorporates:
     *  Constant: '<S798>/Constant1'
     *  Constant: '<S798>/Link_Voltage'
     *  DiscreteIntegrator: '<S798>/Discrete-Time Integrator'
     *  Gain: '<S798>/Multiply'
     *  Gain: '<S798>/Multiply1'
     *  Logic: '<S798>/Logical Operator'
     *  Logic: '<S798>/Logical Operator2'
     *  Math: '<S798>/Exp'
     *  Memory: '<S829>/Memory'
     *  Product: '<S798>/Product'
     *  Product: '<S798>/Product1'
     *  RelationalOperator: '<S798>/Relational Operator'
     *  Sum: '<S798>/Add'
     *
     * About '<S798>/Exp':
     *  Operator: exp
     */
    numCycles = (((static_cast<uint32_T>
                   (((ElectricalSystem_P.CoreSubsys.Constant1_Value_n3 - exp
                      (localDW->CoreSubsys[ForEach_itr_h].
                       DiscreteTimeIntegrator_DSTATE_p / rtb_Switch2_g *
                       ElectricalSystem_P.CoreSubsys.Multiply1_Gain)) *
                     ElectricalSystem_P.CoreSubsys.Link_Voltage_Value >=
                     ElectricalSystem_P.CoreSubsys.Multiply_Gain *
                     ElectricalSystem_P.CoreSubsys.Link_Voltage_Value)) << 1) +
                  ((!(rtb_Switch1_ft != 0.0)) || (rtb_Switch_fza != 0.0))) << 1)
      + localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_b;

    /* Switch: '<S802>/Switch' incorporates:
     *  Constant: '<S799>/Constant'
     *  Constant: '<S802>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  RelationalOperator: '<S799>/Compare'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
      rtb_Switch_kn =
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pantograph.LineVoltageDetected
         >= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_i2);
    } else {
      rtb_Switch_kn = ElectricalSystem_P.CoreSubsys.Constant_Value_mh;
    }

    /* End of Switch: '<S802>/Switch' */

    /* Switch: '<S816>/Switch' incorporates:
     *  Constant: '<S816>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S816>/Logical Operator'
     *  Logic: '<S816>/Logical Operator1'
     *  Logic: '<S816>/Logical Operator2'
     *  UnitDelay: '<S826>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kt >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pg) {
      rtb_OR5_g = ((localB->UnitDelay[ForEach_itr_h].UnitWires.UW_BCGPower !=
                    0.0) && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE != 0.0)));
    } else {
      rtb_OR5_g = ((localB->UnitDelay[ForEach_itr_h].UnitWires.UW_BCGPower !=
                    0.0) && (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE
        != 0.0));
    }

    /* End of Switch: '<S816>/Switch' */

    /* Switch: '<S805>/Switch' incorporates:
     *  Constant: '<S805>/Constant'
     *  Constant: '<S806>/Constant'
     *  Switch: '<S806>/Switch'
     */
    if (rtb_LogicalOperator6_l) {
      rtb_Switch_bo = rtb_OR5_g;
      rtb_Switch_h3q = rtb_OR5_g;
    } else {
      rtb_Switch_bo = ElectricalSystem_P.CoreSubsys.Constant_Value_ku;
      rtb_Switch_h3q = ElectricalSystem_P.CoreSubsys.Constant_Value_dn;
    }

    /* End of Switch: '<S805>/Switch' */

    /* Logic: '<S797>/Logical Operator1' */
    rtb_LogicalOperator1_fh =
      ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolateCI
        != 0.0) || (rtb_ImpSel_InsertedFor_Faults_at_outport_0.CIIsolated != 0.0));

    /* Logic: '<S797>/Logical Operator2' */
    rtb_OR5_g = ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.DC110VLowVoltage !=
                  0.0) ||
                 (rtb_ImpSel_InsertedFor_Faults_at_outport_0.CIMicroprocessorAbnormal
                  != 0.0) ||
                 (rtb_ImpSel_InsertedFor_Faults_at_outport_0.CILocalCommunicationFailure
                  != 0.0) ||
                 (rtb_ImpSel_InsertedFor_Faults_at_outport_0.OverTemperatureOfConverterPowerUnit
                  != 0.0));

    /* Logic: '<S797>/Logical Operator3' */
    rtb_LogicalOperator3_o =
      ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.APSGroup1Isolated != 0.0) ||
       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolateAPS1
        != 0.0));

    /* Switch: '<S811>/Switch' incorporates:
     *  Constant: '<S811>/Constant'
     *  Logic: '<S797>/Logical Operator7'
     *  Logic: '<S811>/Logical Operator'
     *  Logic: '<S811>/Logical Operator1'
     *  Logic: '<S811>/Logical Operator2'
     *  UnitDelay: '<S823>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fn0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_az) {
      rtb_Switch_lj5 =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByAPS ||
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.APSGroup1Failure != 0.0)) &&
         (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ki));
    } else {
      rtb_Switch_lj5 =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByAPS ||
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.APSGroup1Failure != 0.0)) &&
         localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ki);
    }

    /* End of Switch: '<S811>/Switch' */

    /* Switch: '<S819>/Switch' incorporates:
     *  Constant: '<S797>/Group2'
     *  Constant: '<S819>/Constant'
     *  Logic: '<S797>/Logical Operator8'
     *  Logic: '<S819>/Logical Operator'
     *  Logic: '<S819>/Logical Operator1'
     *  Logic: '<S819>/Logical Operator2'
     *  UnitDelay: '<S824>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_it >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_awe) {
      rtb_Switch_i0 =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByAPS ||
          (ElectricalSystem_P.CoreSubsys.Group2_Value != 0.0)) &&
         (!(localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b != 0.0)));
    } else {
      rtb_Switch_i0 =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.VCBOpenedByAPS ||
          (ElectricalSystem_P.CoreSubsys.Group2_Value != 0.0)) &&
         (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b != 0.0));
    }

    /* End of Switch: '<S819>/Switch' */

    /* Logic: '<S797>/Logical Operator6' */
    rtb_LogicalOperator6_l = (rtb_Switch_lj5 || rtb_Switch_i0);

    /* Switch: '<S810>/Switch' incorporates:
     *  Constant: '<S810>/Constant'
     *  Constant: '<S831>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S810>/Logical Operator'
     *  Logic: '<S810>/Logical Operator1'
     *  Logic: '<S810>/Logical Operator2'
     *  RelationalOperator: '<S831>/Compare'
     *  Switch: '<S808>/Switch'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mrb) {
      /* Switch: '<S808>/Switch' incorporates:
       *  Constant: '<S808>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31102;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_bq;
      }

      rtb_Switch_c3a = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BCGCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fv)));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
        /* Switch: '<S808>/Switch' incorporates:
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         */
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31102;
      } else {
        /* Switch: '<S808>/Switch' incorporates:
         *  Constant: '<S808>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_bq;
      }

      rtb_Switch_c3a = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BCGCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fv));
    }

    /* End of Switch: '<S810>/Switch' */

    /* Switch: '<S812>/Switch' incorporates:
     *  Constant: '<S797>/Group2BCG'
     *  Constant: '<S812>/Constant'
     *  Logic: '<S812>/Logical Operator'
     *  Logic: '<S812>/Logical Operator1'
     *  Logic: '<S812>/Logical Operator2'
     *  UnitDelay: '<S822>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_eof >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_h4u) {
      rtb_Switch_oe = ((ElectricalSystem_P.CoreSubsys.Group2BCG_Value != 0.0) &&
                       (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hk));
    } else {
      rtb_Switch_oe = ((ElectricalSystem_P.CoreSubsys.Group2BCG_Value != 0.0) &&
                       localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hk);
    }

    /* End of Switch: '<S812>/Switch' */

    /* Switch: '<S814>/Switch' incorporates:
     *  Constant: '<S814>/Constant'
     *  Logic: '<S814>/Logical Operator'
     *  Logic: '<S814>/Logical Operator1'
     *  Logic: '<S814>/Logical Operator2'
     *  UnitDelay: '<S821>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lo >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_j1) {
      rtb_Switch_h3q = (rtb_Switch_h3q && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_dy));
    } else {
      rtb_Switch_h3q = (rtb_Switch_h3q && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_dy);
    }

    /* End of Switch: '<S814>/Switch' */

    /* Switch: '<S815>/Switch' incorporates:
     *  Constant: '<S815>/Constant'
     *  Logic: '<S815>/Logical Operator'
     *  Logic: '<S815>/Logical Operator1'
     *  Logic: '<S815>/Logical Operator2'
     *  UnitDelay: '<S822>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_d5h >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kg) {
      rtb_Switch_bo = (rtb_Switch_bo && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_hk));
    } else {
      rtb_Switch_bo = (rtb_Switch_bo && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_hk);
    }

    /* End of Switch: '<S815>/Switch' */

    /* Switch: '<S820>/Switch' incorporates:
     *  Constant: '<S820>/Constant'
     *  Logic: '<S820>/Logical Operator'
     *  Logic: '<S820>/Logical Operator1'
     *  Logic: '<S820>/Logical Operator2'
     *  UnitDelay: '<S821>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ilpf >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ojm) {
      rtb_Switch_iw =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.BCGGroup1Failure != 0.0) &&
         (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dy));
    } else {
      rtb_Switch_iw =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.BCGGroup1Failure != 0.0) &&
         localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dy);
    }

    /* End of Switch: '<S820>/Switch' */

    /* Switch: '<S842>/Switch' incorporates:
     *  Constant: '<S842>/Constant'
     *  Constant: '<S846>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S842>/Logical Operator'
     *  Logic: '<S842>/Logical Operator1'
     *  Logic: '<S842>/Logical Operator2'
     *  RelationalOperator: '<S846>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_m0j >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_g5s) {
      rtb_Switch_b0 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ODDCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_pm)));
    } else {
      rtb_Switch_b0 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ODDCB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_pm));
    }

    /* End of Switch: '<S842>/Switch' */

    /* Switch: '<S843>/Switch' incorporates:
     *  Constant: '<S843>/Constant'
     *  Logic: '<S843>/Logical Operator'
     *  Logic: '<S843>/Logical Operator1'
     *  Logic: '<S843>/Logical Operator2'
     *  UnitDelay: '<S844>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_k1i >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ke) {
      rtb_Switch_b0 = (rtb_Switch_b0 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ed));
    } else {
      rtb_Switch_b0 = (rtb_Switch_b0 && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_ed);
    }

    /* End of Switch: '<S843>/Switch' */

    /* Logic: '<S833>/AND1' incorporates:
     *  Logic: '<S833>/OR2'
     */
    rtb_ObstacleDetected = (rtb_Switch_b0 &&
      ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ObstacleHardCollision
        != 0.0) ||
       (rtb_ImpSel_InsertedFor_Faults_at_outport_0.ObstacleDetectedRightSide !=
        0.0)));

    /* Switch: '<S847>/Switch' incorporates:
     *  Constant: '<S847>/Constant'
     *  Constant: '<S851>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S847>/Logical Operator'
     *  Logic: '<S847>/Logical Operator1'
     *  Logic: '<S847>/Logical Operator2'
     *  RelationalOperator: '<S851>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cqk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lbv) {
      rtb_Switch_ocb = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WFLCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cx)));
    } else {
      rtb_Switch_ocb = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WFLCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cx));
    }

    /* End of Switch: '<S847>/Switch' */

    /* Switch: '<S850>/Switch' incorporates:
     *  Constant: '<S850>/Constant'
     *  Logic: '<S850>/Logical Operator'
     *  Logic: '<S850>/Logical Operator1'
     *  Logic: '<S850>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bx3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jz) {
      rtb_Switch_ocb = (rtb_Switch_ocb &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSWFLIsolation
                           != 0.0)));
    } else {
      rtb_Switch_ocb = (rtb_Switch_ocb &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSWFLIsolation
                         != 0.0));
    }

    /* End of Switch: '<S850>/Switch' */

    /* Switch: '<S860>/Switch' incorporates:
     *  Constant: '<S860>/Constant'
     *  Constant: '<S865>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S860>/Logical Operator'
     *  Logic: '<S860>/Logical Operator1'
     *  Logic: '<S860>/Logical Operator2'
     *  RelationalOperator: '<S865>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ljt >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nz) {
      rtb_Switch_esg = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bh)));
    } else {
      rtb_Switch_esg = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bh));
    }

    /* End of Switch: '<S860>/Switch' */

    /* Switch: '<S859>/Switch' incorporates:
     *  Constant: '<S859>/Constant'
     *  Constant: '<S864>/Constant'
     *  Logic: '<S859>/Logical Operator'
     *  Logic: '<S859>/Logical Operator1'
     *  Logic: '<S859>/Logical Operator2'
     *  RelationalOperator: '<S864>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fxi) {
      rtb_Switch_aj = (rtb_Switch_esg &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HornPB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_do)));
    } else {
      rtb_Switch_aj = (rtb_Switch_esg &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HornPB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_do));
    }

    /* End of Switch: '<S859>/Switch' */

    /* Logic: '<S862>/Logical Operator40' incorporates:
     *  Logic: '<S835>/AND1'
     *  Logic: '<S835>/OR'
     *  Logic: '<S862>/Logical Operator39'
     *  Logic: '<S862>/Logical Operator41'
     *  Memory: '<S862>/Memory'
     *  RelationalOperator: '<S853>/FixPt Relational Operator'
     *  RelationalOperator: '<S854>/FixPt Relational Operator'
     *  UnitDelay: '<S853>/Delay Input1'
     *  UnitDelay: '<S854>/Delay Input1'
     */
    rtb_LogicalOperator40_e3 = (((rtb_Switch_aj &&
      (rtb_ImpSel_InsertedFor_Faults_at_outport_0.HornBlowsContinuously != 0.0))
      || localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_c) &&
      ((!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.HornBlowsContinuously <
          localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_e)) && (
      static_cast<int32_T>(rtb_Switch_esg) >= static_cast<int32_T>
      (localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_mg))));

    /* Switch: '<S855>/Switch' incorporates:
     *  Constant: '<S855>/Constant'
     *  Logic: '<S855>/Logical Operator'
     *  Logic: '<S855>/Logical Operator1'
     *  Logic: '<S855>/Logical Operator2'
     *  UnitDelay: '<S861>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lub >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_da) {
      rtb_Switch_ee = (rtb_Switch_aj && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ku));
    } else {
      rtb_Switch_ee = (rtb_Switch_aj && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_ku);
    }

    /* End of Switch: '<S855>/Switch' */

    /* Switch: '<S857>/Switch' incorporates:
     *  Constant: '<S857>/Constant'
     *  Logic: '<S857>/Logical Operator'
     *  Logic: '<S857>/Logical Operator1'
     *  Logic: '<S857>/Logical Operator2'
     *  UnitDelay: '<S861>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ev >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_on) {
      rtb_LogicalOperator40_b_tmp = (rtb_LogicalOperator40_e3 &&
        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ku));
    } else {
      rtb_LogicalOperator40_b_tmp = (rtb_LogicalOperator40_e3 &&
        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ku);
    }

    /* End of Switch: '<S857>/Switch' */

    /* Switch: '<S856>/Switch' incorporates:
     *  Constant: '<S856>/Constant'
     *  Logic: '<S856>/Logical Operator'
     *  Logic: '<S856>/Logical Operator1'
     *  Logic: '<S856>/Logical Operator2'
     *  UnitDelay: '<S861>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pyr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_l5) {
      tmp_c = (rtb_Switch_aj && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_ku));
    } else {
      tmp_c = (rtb_Switch_aj && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_ku);
    }

    /* End of Switch: '<S856>/Switch' */

    /* Switch: '<S858>/Switch' incorporates:
     *  Constant: '<S858>/Constant'
     *  Logic: '<S858>/Logical Operator'
     *  Logic: '<S858>/Logical Operator1'
     *  Logic: '<S858>/Logical Operator2'
     *  UnitDelay: '<S861>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pbd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_iq) {
      tmp_d = (rtb_LogicalOperator40_e3 && (!localDW->CoreSubsys[ForEach_itr_h].
                UnitDelay_DSTATE_ku));
    } else {
      tmp_d = (rtb_LogicalOperator40_e3 && localDW->CoreSubsys[ForEach_itr_h].
               UnitDelay_DSTATE_ku);
    }

    /* End of Switch: '<S858>/Switch' */

    /* Outputs for Atomic SubSystem: '<S835>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit(rtb_Switch_aj, &localB->
      CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit_f, &localDW->
      CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit_f,
      &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_f,
      ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_UpperSaturationLimit_n);

    /* End of Outputs for SubSystem: '<S835>/TimerOnDelay NoInit' */

    /* Switch: '<S867>/Switch' incorporates:
     *  Constant: '<S867>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S867>/Logical Operator'
     *  Logic: '<S867>/Logical Operator1'
     *  Logic: '<S867>/Logical Operator2'
     *  Switch: '<S868>/Switch'
     *  UnitDelay: '<S870>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_a2o >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_d5o) {
      /* Switch: '<S868>/Switch' incorporates:
       *  Constant: '<S868>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].IsNonCab) {
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31102;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_cc;
      }

      rtb_Switch_mg = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                       (!(localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_o
                          != 0.0)));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].IsNonCab) {
        /* Switch: '<S868>/Switch' incorporates:
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         */
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31102;
      } else {
        /* Switch: '<S868>/Switch' incorporates:
         *  Constant: '<S868>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_cc;
      }

      rtb_Switch_mg = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                       (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_o !=
                        0.0));
    }

    /* End of Switch: '<S867>/Switch' */

    /* Switch: '<S926>/Switch' incorporates:
     *  Constant: '<S926>/Constant'
     *  Constant: '<S931>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S926>/Logical Operator'
     *  Logic: '<S926>/Logical Operator1'
     *  Logic: '<S926>/Logical Operator2'
     *  RelationalOperator: '<S931>/Compare'
     *  Switch: '<S925>/Switch'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_c2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_l5g) {
      /* Switch: '<S925>/Switch' incorporates:
       *  Constant: '<S925>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31101;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_j;
      }

      rtb_AND1_f = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                    (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.FDSCB
                       ==
                       ElectricalSystem_P.CoreSubsys.CompareToConstant_const_gw)));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S925>/Switch' incorporates:
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         */
        rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
          TrainWires.TW31101;
      } else {
        /* Switch: '<S925>/Switch' incorporates:
         *  Constant: '<S925>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_j;
      }

      rtb_AND1_f = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                    (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.FDSCB
                     == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_gw));
    }

    /* End of Switch: '<S926>/Switch' */

    /* Logic: '<S929>/Logical Operator40' incorporates:
     *  Logic: '<S929>/Logical Operator39'
     *  Logic: '<S929>/Logical Operator41'
     *  Memory: '<S929>/Memory'
     *  RelationalOperator: '<S924>/FixPt Relational Operator'
     *  UnitDelay: '<S924>/Delay Input1'
     */
    rtb_LogicalOperator40_jv =
      (((rtb_ImpSel_InsertedFor_Faults_at_outport_0.FDUFailure >
         localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_d) ||
        localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_js) &&
       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSFDUReset
          != 0.0)));

    /* Logic: '<S838>/AND' incorporates:
     *  Logic: '<S838>/NOT'
     */
    rtb_FDUHealthStatus = (rtb_AND1_f && (!rtb_LogicalOperator40_jv));

    /* Logic: '<S838>/AND2' incorporates:
     *  Logic: '<S838>/AND5'
     *  Logic: '<S838>/NOT2'
     */
    rtb_HeatAlarmEDB = (rtb_FDUHealthStatus &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.SHDEndCubicleRearLeft2DisableVDUReq
      != 0.0)) && (rtb_ImpSel_InsertedFor_Faults_at_outport_0.HeatAlarmEDB !=
                   0.0));

    /* Logic: '<S927>/Logical Operator40' incorporates:
     *  Logic: '<S927>/Logical Operator39'
     *  Logic: '<S927>/Logical Operator41'
     *  Memory: '<S927>/Memory'
     *  RelationalOperator: '<S922>/FixPt Relational Operator'
     *  UnitDelay: '<S922>/Delay Input1'
     */
    rtb_LogicalOperator40_bi = (((static_cast<int32_T>(rtb_HeatAlarmEDB) >
      static_cast<int32_T>(localDW->CoreSubsys[ForEach_itr_h].
      DelayInput1_DSTATE_or)) || localDW->CoreSubsys[ForEach_itr_h].
      Memory_PreviousInput_jx) &&
      (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSResetHVAC1
         != 0.0)));

    /* If: '<S882>/If' incorporates:
     *  Constant: '<S882>/Cooling'
     *  Constant: '<S882>/Heating'
     *  Constant: '<S882>/UnitOff'
     *  DataTypeConversion: '<S882>/Data Type Conversion2'
     *  Logic: '<S837>/OR1'
     *  Logic: '<S837>/OR2'
     */
    if (rtb_LogicalOperator40_bi || (!rtb_Switch_cbo)) {
      /* Outputs for IfAction SubSystem: '<S882>/If Action Subsystem' incorporates:
       *  ActionPort: '<S913>/Action Port'
       */
      ElectricalSystem_IfActionSubsystem
        (ElectricalSystem_P.CoreSubsys.UnitOff_Value, &localB->
         CoreSubsys[ForEach_itr_h].HVAC1Status);

      /* End of Outputs for SubSystem: '<S882>/If Action Subsystem' */
    } else if (rtb_Switch_eu) {
      /* Outputs for IfAction SubSystem: '<S882>/If Action Subsystem1' incorporates:
       *  ActionPort: '<S914>/Action Port'
       */
      ElectricalSystem_IfActionSubsystem
        (ElectricalSystem_P.CoreSubsys.Cooling_Value, &localB->
         CoreSubsys[ForEach_itr_h].HVAC1Status);

      /* End of Outputs for SubSystem: '<S882>/If Action Subsystem1' */
    } else {
      /* Outputs for IfAction SubSystem: '<S882>/If Action Subsystem2' incorporates:
       *  ActionPort: '<S915>/Action Port'
       */
      ElectricalSystem_IfActionSubsystem
        (ElectricalSystem_P.CoreSubsys.Heating_Value, &localB->
         CoreSubsys[ForEach_itr_h].HVAC1Status);

      /* End of Outputs for SubSystem: '<S882>/If Action Subsystem2' */
    }

    /* End of If: '<S882>/If' */

    /* Switch: '<S895>/Switch' incorporates:
     *  Constant: '<S895>/Constant'
     *  Constant: '<S920>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S895>/Logical Operator'
     *  Logic: '<S895>/Logical Operator1'
     *  Logic: '<S895>/Logical Operator2'
     *  RelationalOperator: '<S920>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gg >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_knh) {
      rtb_Switch_h2r = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SAC2CCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ct)));
    } else {
      rtb_Switch_h2r = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SAC2CCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ct));
    }

    /* End of Switch: '<S895>/Switch' */

    /* If: '<S883>/If' incorporates:
     *  Constant: '<S837>/Constant'
     *  Constant: '<S883>/Cooling'
     *  Constant: '<S883>/Heating'
     *  Constant: '<S883>/UnitOff'
     *  DataTypeConversion: '<S883>/Data Type Conversion1'
     */
    if (!rtb_Switch_h2r) {
      /* Outputs for IfAction SubSystem: '<S883>/If Action Subsystem' incorporates:
       *  ActionPort: '<S916>/Action Port'
       */
      ElectricalSystem_IfActionSubsystem
        (ElectricalSystem_P.CoreSubsys.UnitOff_Value_k, &localB->
         CoreSubsys[ForEach_itr_h].HVAC2Status);

      /* End of Outputs for SubSystem: '<S883>/If Action Subsystem' */
    } else if (ElectricalSystem_P.CoreSubsys.Constant_Value_j3p == 1.0) {
      /* Outputs for IfAction SubSystem: '<S883>/If Action Subsystem1' incorporates:
       *  ActionPort: '<S917>/Action Port'
       */
      ElectricalSystem_IfActionSubsystem
        (ElectricalSystem_P.CoreSubsys.Cooling_Value_a, &localB->
         CoreSubsys[ForEach_itr_h].HVAC2Status);

      /* End of Outputs for SubSystem: '<S883>/If Action Subsystem1' */
    } else {
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_j3p == 0.0) {
        /* Outputs for IfAction SubSystem: '<S883>/If Action Subsystem2' incorporates:
         *  ActionPort: '<S918>/Action Port'
         */
        ElectricalSystem_IfActionSubsystem
          (ElectricalSystem_P.CoreSubsys.Heating_Value_m, &localB->
           CoreSubsys[ForEach_itr_h].HVAC2Status);

        /* End of Outputs for SubSystem: '<S883>/If Action Subsystem2' */
      }
    }

    /* End of If: '<S883>/If' */

    /* Switch: '<S885>/Switch' incorporates:
     *  Constant: '<S885>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S885>/Logical Operator'
     *  Logic: '<S885>/Logical Operator1'
     *  Logic: '<S885>/Logical Operator2'
     *  UnitDelay: '<S904>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gvo >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mv0) {
      rtb_Switch_pqr = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_b3 != 0.0)));
    } else {
      rtb_Switch_pqr = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_b3 != 0.0));
    }

    /* End of Switch: '<S885>/Switch' */

    /* Switch: '<S886>/Switch' incorporates:
     *  Constant: '<S886>/Constant'
     *  Logic: '<S837>/OR'
     *  Logic: '<S886>/Logical Operator'
     *  Logic: '<S886>/Logical Operator1'
     *  Logic: '<S886>/Logical Operator2'
     *  UnitDelay: '<S898>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gdps >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_a5z) {
      rtb_Switch_lvy = (rtb_Switch_dgm && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_f0o));
    } else {
      rtb_Switch_lvy = (rtb_Switch_dgm && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_f0o);
    }

    /* End of Switch: '<S886>/Switch' */

    /* Switch: '<S887>/Switch' incorporates:
     *  Constant: '<S887>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S887>/Logical Operator'
     *  Logic: '<S887>/Logical Operator1'
     *  Logic: '<S887>/Logical Operator2'
     *  UnitDelay: '<S905>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ch1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gp) {
      rtb_Switch_mtn = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ch != 0.0)));
    } else {
      rtb_Switch_mtn = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ch != 0.0));
    }

    /* End of Switch: '<S887>/Switch' */

    /* Logic: '<S908>/Logical Operator40' incorporates:
     *  Logic: '<S908>/Logical Operator39'
     *  Logic: '<S908>/Logical Operator41'
     *  Memory: '<S908>/Memory'
     *  RelationalOperator: '<S875>/FixPt Relational Operator'
     *  UnitDelay: '<S875>/Delay Input1'
     */
    rtb_LogicalOperator40_p =
      (((rtb_ImpSel_InsertedFor_Faults_at_outport_0.HVAC1ExternalSmokeMode >
         localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_h) ||
        localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_mt) &&
       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSHVACSmokeReset
          != 0.0)));

    /* Switch: '<S884>/Switch' incorporates:
     *  Constant: '<S884>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S884>/Logical Operator'
     *  Logic: '<S884>/Logical Operator1'
     *  Logic: '<S884>/Logical Operator2'
     *  UnitDelay: '<S898>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_g3c >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cew) {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) && (
                !localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0o));
    } else {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) &&
               localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0o);
    }

    /* End of Switch: '<S884>/Switch' */

    /* Switch: '<S837>/Switch' incorporates:
     *  Constant: '<S837>/ResetTemp'
     *  Constant: '<S837>/SetTemp'
     */
    if (tmp_e) {
      rtb_Switch_fza = ElectricalSystem_P.CoreSubsys.SetTemp_Value;
    } else {
      rtb_Switch_fza = ElectricalSystem_P.CoreSubsys.ResetTemp_Value;
    }

    /* End of Switch: '<S837>/Switch' */

    /* Switch: '<S888>/Switch' incorporates:
     *  Constant: '<S888>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S888>/Logical Operator'
     *  Logic: '<S888>/Logical Operator1'
     *  Logic: '<S888>/Logical Operator2'
     *  UnitDelay: '<S898>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lpv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_om) {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) && (
                !localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0o));
    } else {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) &&
               localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0o);
    }

    /* End of Switch: '<S888>/Switch' */

    /* Switch: '<S837>/Switch1' incorporates:
     *  Constant: '<S837>/IntTemp2'
     *  Constant: '<S837>/ResetTemp1'
     */
    if (tmp_e) {
      rtb_Switch1_ft = ElectricalSystem_P.CoreSubsys.IntTemp2_Value;
    } else {
      rtb_Switch1_ft = ElectricalSystem_P.CoreSubsys.ResetTemp1_Value;
    }

    /* End of Switch: '<S837>/Switch1' */

    /* Switch: '<S889>/Switch' incorporates:
     *  Constant: '<S889>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S889>/Logical Operator'
     *  Logic: '<S889>/Logical Operator1'
     *  Logic: '<S889>/Logical Operator2'
     *  UnitDelay: '<S898>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bvl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_k2) {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) && (
                !localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0o));
    } else {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) &&
               localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0o);
    }

    /* End of Switch: '<S889>/Switch' */

    /* Switch: '<S837>/Switch2' incorporates:
     *  Constant: '<S837>/ExtTemp3'
     *  Constant: '<S837>/ResetTemp2'
     */
    if (tmp_e) {
      rtb_Switch2_g = ElectricalSystem_P.CoreSubsys.ExtTemp3_Value;
    } else {
      rtb_Switch2_g = ElectricalSystem_P.CoreSubsys.ResetTemp2_Value;
    }

    /* End of Switch: '<S837>/Switch2' */

    /* Switch: '<S890>/Switch' incorporates:
     *  Constant: '<S890>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S890>/Logical Operator'
     *  Logic: '<S890>/Logical Operator1'
     *  Logic: '<S890>/Logical Operator2'
     *  UnitDelay: '<S899>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fdfp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pch) {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) && (
                !localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jt));
    } else {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) &&
               localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jt);
    }

    /* End of Switch: '<S890>/Switch' */

    /* Switch: '<S837>/Switch3' incorporates:
     *  Constant: '<S837>/ResetTemp3'
     *  Constant: '<S837>/SetTemp1'
     */
    if (tmp_e) {
      rtb_Switch3 = ElectricalSystem_P.CoreSubsys.SetTemp1_Value;
    } else {
      rtb_Switch3 = ElectricalSystem_P.CoreSubsys.ResetTemp3_Value;
    }

    /* End of Switch: '<S837>/Switch3' */

    /* Switch: '<S891>/Switch' incorporates:
     *  Constant: '<S891>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S891>/Logical Operator'
     *  Logic: '<S891>/Logical Operator1'
     *  Logic: '<S891>/Logical Operator2'
     *  UnitDelay: '<S899>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bz2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_i0m) {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) && (
                !localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jt));
    } else {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) &&
               localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jt);
    }

    /* End of Switch: '<S891>/Switch' */

    /* Switch: '<S837>/Switch4' incorporates:
     *  Constant: '<S837>/IntTemp1'
     *  Constant: '<S837>/ResetTemp4'
     */
    if (tmp_e) {
      rtb_Switch4_n = ElectricalSystem_P.CoreSubsys.IntTemp1_Value;
    } else {
      rtb_Switch4_n = ElectricalSystem_P.CoreSubsys.ResetTemp4_Value;
    }

    /* End of Switch: '<S837>/Switch4' */

    /* Switch: '<S892>/Switch' incorporates:
     *  Constant: '<S892>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S892>/Logical Operator'
     *  Logic: '<S892>/Logical Operator1'
     *  Logic: '<S892>/Logical Operator2'
     *  UnitDelay: '<S899>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hg >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hy) {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) && (
                !localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jt));
    } else {
      tmp_e = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) &&
               localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jt);
    }

    /* End of Switch: '<S892>/Switch' */

    /* Switch: '<S837>/Switch5' incorporates:
     *  Constant: '<S837>/ExtTemp1'
     *  Constant: '<S837>/ResetTemp5'
     */
    if (tmp_e) {
      rtb_Switch5_g = ElectricalSystem_P.CoreSubsys.ExtTemp1_Value;
    } else {
      rtb_Switch5_g = ElectricalSystem_P.CoreSubsys.ResetTemp5_Value;
    }

    /* End of Switch: '<S837>/Switch5' */

    /* Logic: '<S838>/AND1' incorporates:
     *  Logic: '<S838>/NOT1'
     */
    rtb_AND1_f = (rtb_AND1_f && (!rtb_FDUHealthStatus));

    /* Logic: '<S838>/AND3' incorporates:
     *  Logic: '<S838>/AND6'
     *  Logic: '<S838>/NOT3'
     */
    rtb_SmokeAlarmCABArea = (rtb_FDUHealthStatus &&
      (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.CABSmokeDetectorDisableVDUReq
         != 0.0)) &&
      (rtb_ImpSel_InsertedFor_Faults_at_outport_0.SmokeAlarmCABArea != 0.0));

    /* Logic: '<S838>/AND4' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    rtb_InternalFireAlarmTLActive = ((localB->UnitDelay[ForEach_itr_h].
      TrainWires.TW_SaloonFire != 0.0) &&
      (rtb_ImpSel_InsertedFor_Faults_at_outport_0.InternalFireAlarmTLActive !=
       0.0));

    /* Logic: '<S928>/Logical Operator40' incorporates:
     *  Logic: '<S928>/Logical Operator39'
     *  Logic: '<S928>/Logical Operator41'
     *  Memory: '<S928>/Memory'
     *  RelationalOperator: '<S923>/FixPt Relational Operator'
     *  UnitDelay: '<S923>/Delay Input1'
     */
    rtb_LogicalOperator40_k4 = (((static_cast<int32_T>(rtb_SmokeAlarmCABArea) >
      static_cast<int32_T>(localDW->CoreSubsys[ForEach_itr_h].
      DelayInput1_DSTATE_lb)) || localDW->CoreSubsys[ForEach_itr_h].
      Memory_PreviousInput_fv) &&
      (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSHVACSmokeReset
         != 0.0)));

    /* Switch: '<S939>/Switch' incorporates:
     *  Constant: '<S939>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* Switch: '<S941>/Switch' incorporates:
       *  Constant: '<S941>/Constant'
       *  Constant: '<S964>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S941>/Logical Operator'
       *  Logic: '<S941>/Logical Operator1'
       *  Logic: '<S941>/Logical Operator2'
       *  RelationalOperator: '<S964>/Compare'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_g >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_l) {
        rtb_Switch_mfe = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101
                           != 0.0) &&
                          (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.OCCB1
                             ==
                             ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lx)));
      } else {
        rtb_Switch_mfe = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101
                           != 0.0) &&
                          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.OCCB1
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lx));
      }

      /* End of Switch: '<S941>/Switch' */
    } else {
      rtb_Switch_mfe = ElectricalSystem_P.CoreSubsys.Constant_Value_ja;
    }

    /* End of Switch: '<S939>/Switch' */

    /* Switch: '<S932>/Switch' incorporates:
     *  Constant: '<S932>/Constant'
     *  Logic: '<S932>/Logical Operator'
     *  Logic: '<S932>/Logical Operator1'
     *  Logic: '<S932>/Logical Operator2'
     *  UnitDelay: '<S398>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mwp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dsy) {
      rtb_Switch_be1 = (rtb_Switch_mfe && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_fi));
    } else {
      rtb_Switch_be1 = (rtb_Switch_mfe && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_fi);
    }

    /* End of Switch: '<S932>/Switch' */

    /* Switch: '<S933>/Switch' incorporates:
     *  Constant: '<S933>/Constant'
     *  Logic: '<S933>/Logical Operator'
     *  Logic: '<S933>/Logical Operator1'
     *  Logic: '<S933>/Logical Operator2'
     *  UnitDelay: '<S429>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cy >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_iaf) {
      rtb_Switch_eww = (rtb_Switch_mfe && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ol));
    } else {
      rtb_Switch_eww = (rtb_Switch_mfe && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_ol);
    }

    /* End of Switch: '<S933>/Switch' */

    /* Switch: '<S940>/Switch' incorporates:
     *  Constant: '<S940>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* Switch: '<S938>/Switch' incorporates:
       *  Constant: '<S938>/Constant'
       *  Logic: '<S839>/NOT'
       *  Logic: '<S938>/Logical Operator'
       *  Logic: '<S938>/Logical Operator1'
       *  UnitDelay: '<S161>/Unit Delay'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_ae >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_p) {
        rtb_Switch_bas = ((!rtb_Switch_mfe) || localDW->CoreSubsys[ForEach_itr_h]
                          .UnitDelay_DSTATE_cc);
      } else {
        rtb_Switch_bas = ((!rtb_Switch_mfe) || (!localDW->
          CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cc));
      }

      /* End of Switch: '<S938>/Switch' */
    } else {
      rtb_Switch_bas = ElectricalSystem_P.CoreSubsys.Constant_Value_bdo;
    }

    /* End of Switch: '<S940>/Switch' */

    /* Switch: '<S942>/Switch' incorporates:
     *  Constant: '<S942>/Constant'
     *  Constant: '<S965>/Constant'
     *  Logic: '<S942>/Logical Operator'
     *  Logic: '<S942>/Logical Operator1'
     *  Logic: '<S942>/Logical Operator2'
     *  RelationalOperator: '<S965>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pv) {
      rtb_Switch_bq = (rtb_Switch_mfe &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PECUPushButton
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nbc)));
    } else {
      rtb_Switch_bq = (rtb_Switch_mfe &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PECUPushButton
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nbc));
    }

    /* End of Switch: '<S942>/Switch' */

    /* Switch: '<S944>/Switch' incorporates:
     *  Constant: '<S944>/Constant'
     *  Logic: '<S944>/Logical Operator'
     *  Logic: '<S944>/Logical Operator1'
     *  Logic: '<S944>/Logical Operator2'
     *  UnitDelay: '<S174>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cch >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_aqx) {
      rtb_Switch_ll = (rtb_Switch_mfe && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_m));
    } else {
      rtb_Switch_ll = (rtb_Switch_mfe && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_m);
    }

    /* End of Switch: '<S944>/Switch' */

    /* Switch: '<S945>/Switch' incorporates:
     *  Constant: '<S945>/Constant'
     *  Logic: '<S945>/Logical Operator'
     *  Logic: '<S945>/Logical Operator1'
     *  Logic: '<S945>/Logical Operator2'
     *  UnitDelay: '<S1188>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ep >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gi) {
      rtb_Switch_oi = (rtb_Switch_mfe && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_d0));
    } else {
      rtb_Switch_oi = (rtb_Switch_mfe && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_d0);
    }

    /* End of Switch: '<S945>/Switch' */

    /* Switch: '<S983>/Switch' incorporates:
     *  Constant: '<S1060>/Constant'
     *  Constant: '<S983>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S983>/Logical Operator'
     *  Logic: '<S983>/Logical Operator1'
     *  Logic: '<S983>/Logical Operator2'
     *  RelationalOperator: '<S1060>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mzq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fqw) {
      rtb_Switch_lxd = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WWCB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bj)));
    } else {
      rtb_Switch_lxd = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WWCB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bj));
    }

    /* End of Switch: '<S983>/Switch' */

    /* Switch: '<S982>/Switch' incorporates:
     *  Constant: '<S982>/Constant'
     *  Logic: '<S982>/Logical Operator'
     *  Logic: '<S982>/Logical Operator1'
     *  Logic: '<S982>/Logical Operator2'
     *  UnitDelay: '<S403>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lu3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_g4c) {
      rtb_Switch_hr = (rtb_Switch_lxd && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ob));
    } else {
      rtb_Switch_hr = (rtb_Switch_lxd && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_ob);
    }

    /* End of Switch: '<S982>/Switch' */

    /* Switch: '<S989>/Switch' incorporates:
     *  Constant: '<S1072>/Constant'
     *  Constant: '<S989>/Constant'
     *  Logic: '<S989>/Logical Operator'
     *  Logic: '<S989>/Logical Operator1'
     *  Logic: '<S989>/Logical Operator2'
     *  RelationalOperator: '<S1072>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_i0f >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_afl) {
      tmp_e = (rtb_Switch_hr &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bs)));
    } else {
      tmp_e = (rtb_Switch_hr &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bs));
    }

    /* End of Switch: '<S989>/Switch' */

    /* Logic: '<S969>/AND3' incorporates:
     *  Constant: '<S1008>/Constant'
     *  Constant: '<S1009>/Constant'
     *  Constant: '<S1010>/Constant'
     *  Constant: '<S1011>/Constant'
     *  Constant: '<S969>/Constant'
     *  Constant: '<S969>/Mask'
     *  Logic: '<S969>/AND2'
     *  Logic: '<S969>/OR'
     *  Logic: '<S969>/XOR'
     *  RelationalOperator: '<S1008>/Compare'
     *  RelationalOperator: '<S1009>/Compare'
     *  RelationalOperator: '<S1010>/Compare'
     *  RelationalOperator: '<S1011>/Compare'
     */
    rtb_AND3_d = (tmp_e && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lh) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_i[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_ho) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_i[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_f) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_i[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_m) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_i[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllCenter3_NCContact != 0.0)))));

    /* Switch: '<S988>/Switch' incorporates:
     *  Constant: '<S1071>/Constant'
     *  Constant: '<S988>/Constant'
     *  Logic: '<S988>/Logical Operator'
     *  Logic: '<S988>/Logical Operator1'
     *  Logic: '<S988>/Logical Operator2'
     *  RelationalOperator: '<S1071>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_c5a >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gb) {
      tmp_e = (rtb_Switch_hr &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ai)));
    } else {
      tmp_e = (rtb_Switch_hr &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ai));
    }

    /* End of Switch: '<S988>/Switch' */

    /* Logic: '<S974>/AND3' incorporates:
     *  Constant: '<S1028>/Constant'
     *  Constant: '<S1029>/Constant'
     *  Constant: '<S1030>/Constant'
     *  Constant: '<S1031>/Constant'
     *  Constant: '<S974>/Constant'
     *  Constant: '<S974>/Mask'
     *  Logic: '<S974>/AND2'
     *  Logic: '<S974>/OR'
     *  Logic: '<S974>/XOR'
     *  RelationalOperator: '<S1028>/Compare'
     *  RelationalOperator: '<S1029>/Compare'
     *  RelationalOperator: '<S1030>/Compare'
     *  RelationalOperator: '<S1031>/Compare'
     */
    rtb_AND3_a = (tmp_e && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_h4) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_p[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_jz) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_p[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_jw) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_p[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_cw) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_p[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllLeft3_NCContact != 0.0)))));

    /* Switch: '<S990>/Switch' incorporates:
     *  Constant: '<S1073>/Constant'
     *  Constant: '<S990>/Constant'
     *  Logic: '<S990>/Logical Operator'
     *  Logic: '<S990>/Logical Operator1'
     *  Logic: '<S990>/Logical Operator2'
     *  RelationalOperator: '<S1073>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_frx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_me) {
      tmp_e = (rtb_Switch_hr &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cr)));
    } else {
      tmp_e = (rtb_Switch_hr &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cr));
    }

    /* End of Switch: '<S990>/Switch' */

    /* Logic: '<S979>/AND3' incorporates:
     *  Constant: '<S1048>/Constant'
     *  Constant: '<S1049>/Constant'
     *  Constant: '<S1050>/Constant'
     *  Constant: '<S1051>/Constant'
     *  Constant: '<S979>/Constant'
     *  Constant: '<S979>/Mask'
     *  Logic: '<S979>/AND2'
     *  Logic: '<S979>/OR'
     *  Logic: '<S979>/XOR'
     *  RelationalOperator: '<S1048>/Compare'
     *  RelationalOperator: '<S1049>/Compare'
     *  RelationalOperator: '<S1050>/Compare'
     *  RelationalOperator: '<S1051>/Compare'
     */
    rtb_AND3_o3 = (tmp_e && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dou) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_da[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_d) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_da[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_p) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_da[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_lo) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_da[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllRight3_NCContact != 0.0)))));

    /* Switch: '<S991>/Switch' incorporates:
     *  Constant: '<S1074>/Constant'
     *  Constant: '<S991>/Constant'
     *  Logic: '<S991>/Logical Operator'
     *  Logic: '<S991>/Logical Operator1'
     *  Logic: '<S991>/Logical Operator2'
     *  RelationalOperator: '<S1074>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_n0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ly) {
      tmp_e = (rtb_Switch_hr &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_i1)));
    } else {
      tmp_e = (rtb_Switch_hr &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_i1));
    }

    /* End of Switch: '<S991>/Switch' */

    /* Logic: '<S841>/Logical Operator' incorporates:
     *  Constant: '<S1020>/Constant'
     *  Constant: '<S1021>/Constant'
     *  Constant: '<S1022>/Constant'
     *  Constant: '<S1023>/Constant'
     *  Constant: '<S1036>/Constant'
     *  Constant: '<S1037>/Constant'
     *  Constant: '<S1038>/Constant'
     *  Constant: '<S1039>/Constant'
     *  Constant: '<S972>/Constant'
     *  Constant: '<S972>/Mask'
     *  Constant: '<S976>/Constant'
     *  Constant: '<S976>/Mask'
     *  Logic: '<S972>/AND2'
     *  Logic: '<S972>/AND3'
     *  Logic: '<S972>/OR'
     *  Logic: '<S972>/XOR'
     *  Logic: '<S976>/AND2'
     *  Logic: '<S976>/AND3'
     *  Logic: '<S976>/OR'
     *  Logic: '<S976>/XOR'
     *  RelationalOperator: '<S1020>/Compare'
     *  RelationalOperator: '<S1021>/Compare'
     *  RelationalOperator: '<S1022>/Compare'
     *  RelationalOperator: '<S1023>/Compare'
     *  RelationalOperator: '<S1036>/Compare'
     *  RelationalOperator: '<S1037>/Compare'
     *  RelationalOperator: '<S1038>/Compare'
     *  RelationalOperator: '<S1039>/Compare'
     */
    rtb_DMIPower = ((tmp_e && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_am) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_j[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_n) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_j[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_cd) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_j[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_ng) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_j[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllLeft1_NCContact != 0.0))))) ||
                    (rtb_Switch_hr && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hq) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_g0[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_hy) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_g0[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_ml) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_g0[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_is) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_g0[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllLeft5_NCContact != 0.0))))));

    /* Switch: '<S992>/Switch' incorporates:
     *  Constant: '<S1075>/Constant'
     *  Constant: '<S992>/Constant'
     *  Logic: '<S992>/Logical Operator'
     *  Logic: '<S992>/Logical Operator1'
     *  Logic: '<S992>/Logical Operator2'
     *  RelationalOperator: '<S1075>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_owo >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fd) {
      tmp_e = (rtb_Switch_hr &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_kh)));
    } else {
      tmp_e = (rtb_Switch_hr &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_kh));
    }

    /* End of Switch: '<S992>/Switch' */

    /* Logic: '<S841>/Logical Operator1' incorporates:
     *  Constant: '<S1000>/Constant'
     *  Constant: '<S1001>/Constant'
     *  Constant: '<S1002>/Constant'
     *  Constant: '<S1003>/Constant'
     *  Constant: '<S1016>/Constant'
     *  Constant: '<S1017>/Constant'
     *  Constant: '<S1018>/Constant'
     *  Constant: '<S1019>/Constant'
     *  Constant: '<S967>/Constant'
     *  Constant: '<S967>/Mask'
     *  Constant: '<S971>/Constant'
     *  Constant: '<S971>/Mask'
     *  Logic: '<S967>/AND2'
     *  Logic: '<S967>/AND3'
     *  Logic: '<S967>/OR'
     *  Logic: '<S967>/XOR'
     *  Logic: '<S971>/AND2'
     *  Logic: '<S971>/AND3'
     *  Logic: '<S971>/OR'
     *  Logic: '<S971>/XOR'
     *  RelationalOperator: '<S1000>/Compare'
     *  RelationalOperator: '<S1001>/Compare'
     *  RelationalOperator: '<S1002>/Compare'
     *  RelationalOperator: '<S1003>/Compare'
     *  RelationalOperator: '<S1016>/Compare'
     *  RelationalOperator: '<S1017>/Compare'
     *  RelationalOperator: '<S1018>/Compare'
     *  RelationalOperator: '<S1019>/Compare'
     */
    rtb_Switch_lxd = ((tmp_e && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_f0p) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_gv[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_a) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_gv[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_j) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_gv[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_c) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_gv[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllCenter1_NCContact != 0.0))))) ||
                      (rtb_Switch_hr && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jx) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_ls[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_i) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_ls[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_i) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_ls[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_c0) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_ls[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllCenter6_NCContact != 0.0))))));

    /* Switch: '<S993>/Switch' incorporates:
     *  Constant: '<S1076>/Constant'
     *  Constant: '<S993>/Constant'
     *  Logic: '<S993>/Logical Operator'
     *  Logic: '<S993>/Logical Operator1'
     *  Logic: '<S993>/Logical Operator2'
     *  RelationalOperator: '<S1076>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ozh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_o3i) {
      tmp_e = (rtb_Switch_hr &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dr)));
    } else {
      tmp_e = (rtb_Switch_hr &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dr));
    }

    /* End of Switch: '<S993>/Switch' */

    /* Logic: '<S841>/Logical Operator2' incorporates:
     *  Constant: '<S1040>/Constant'
     *  Constant: '<S1041>/Constant'
     *  Constant: '<S1042>/Constant'
     *  Constant: '<S1043>/Constant'
     *  Constant: '<S1056>/Constant'
     *  Constant: '<S1057>/Constant'
     *  Constant: '<S1058>/Constant'
     *  Constant: '<S1059>/Constant'
     *  Constant: '<S977>/Constant'
     *  Constant: '<S977>/Mask'
     *  Constant: '<S981>/Constant'
     *  Constant: '<S981>/Mask'
     *  Logic: '<S977>/AND2'
     *  Logic: '<S977>/AND3'
     *  Logic: '<S977>/OR'
     *  Logic: '<S977>/XOR'
     *  Logic: '<S981>/AND2'
     *  Logic: '<S981>/AND3'
     *  Logic: '<S981>/OR'
     *  Logic: '<S981>/XOR'
     *  RelationalOperator: '<S1040>/Compare'
     *  RelationalOperator: '<S1041>/Compare'
     *  RelationalOperator: '<S1042>/Compare'
     *  RelationalOperator: '<S1043>/Compare'
     *  RelationalOperator: '<S1056>/Compare'
     *  RelationalOperator: '<S1057>/Compare'
     *  RelationalOperator: '<S1058>/Compare'
     *  RelationalOperator: '<S1059>/Compare'
     */
    rtb_Switch_aw = ((tmp_e && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_on) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_in[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_ac) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_in[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_ku) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_in[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_f) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_in[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllRight1_NCContact != 0.0))))) ||
                     (rtb_Switch_hr && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_l4) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_f2[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_ed) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_f2[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_e) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_f2[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_lv) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_f2[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllRight7_NCContact != 0.0))))));

    /* Switch: '<S984>/Switch' incorporates:
     *  Constant: '<S1061>/Constant'
     *  Constant: '<S984>/Constant'
     *  Logic: '<S984>/Logical Operator'
     *  Logic: '<S984>/Logical Operator1'
     *  Logic: '<S984>/Logical Operator2'
     *  RelationalOperator: '<S1061>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ag >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kc) {
      rtb_DataTypeConversion11_i = (rtb_Switch_hr &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperWash
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jee)));
    } else {
      rtb_DataTypeConversion11_i = (rtb_Switch_hr &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperWash
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jee));
    }

    /* End of Switch: '<S984>/Switch' */

    /* Switch: '<S995>/Switch' incorporates:
     *  Constant: '<S1078>/Constant'
     *  Constant: '<S995>/Constant'
     *  Logic: '<S995>/Logical Operator'
     *  Logic: '<S995>/Logical Operator1'
     *  Logic: '<S995>/Logical Operator2'
     *  RelationalOperator: '<S1078>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lyx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gu) {
      tmp_e = (rtb_Switch_hr &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nj)));
    } else {
      tmp_e = (rtb_Switch_hr &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nj));
    }

    /* End of Switch: '<S995>/Switch' */

    /* Logic: '<S985>/Logical Operator3' incorporates:
     *  Constant: '<S1012>/Constant'
     *  Constant: '<S1013>/Constant'
     *  Constant: '<S1014>/Constant'
     *  Constant: '<S1015>/Constant'
     *  Constant: '<S1064>/Constant'
     *  Constant: '<S970>/Constant'
     *  Constant: '<S970>/Mask'
     *  Logic: '<S970>/AND2'
     *  Logic: '<S970>/AND3'
     *  Logic: '<S970>/OR'
     *  Logic: '<S970>/XOR'
     *  RelationalOperator: '<S1012>/Compare'
     *  RelationalOperator: '<S1013>/Compare'
     *  RelationalOperator: '<S1014>/Compare'
     *  RelationalOperator: '<S1015>/Compare'
     *  RelationalOperator: '<S1064>/Compare'
     *  UnitDelay: '<S985>/Unit Delay'
     */
    rtb_AND3_n = (tmp_e && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jj) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_kv[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_ht) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_kv[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_gm) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_kv[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_br) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_kv[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllCenter4_NCContact != 0.0)))) &&
                  (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cp ==
                   ElectricalSystem_P.CoreSubsys.StartCycle_const));

    /* RelationalOperator: '<S1063>/Compare' incorporates:
     *  Constant: '<S1063>/Constant'
     *  UnitDelay: '<S985>/Unit Delay'
     */
    rtb_AND3_f = (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cp ==
                  ElectricalSystem_P.CoreSubsys.FinishCycle_const);

    /* DataTypeConversion: '<S985>/Data Type Conversion1' */
    rtb_DataTypeConversion1_e = rtb_AND3_f;

    /* DiscreteIntegrator: '<S985>/Timer' */
    if ((rtb_DataTypeConversion1_e <= 0.0) && (localDW->CoreSubsys[ForEach_itr_h]
         .Timer_PrevResetState == 1)) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE =
        ElectricalSystem_P.CoreSubsys.Timer_IC;
    }

    /* End of DiscreteIntegrator: '<S985>/Timer' */

    /* Switch: '<S998>/Switch' incorporates:
     *  Constant: '<S1081>/Constant'
     *  Constant: '<S998>/Constant'
     *  Logic: '<S998>/Logical Operator'
     *  Logic: '<S998>/Logical Operator1'
     *  Logic: '<S998>/Logical Operator2'
     *  RelationalOperator: '<S1081>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jo >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bk) {
      tmp_e = (rtb_Switch_hr &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ha)));
    } else {
      tmp_e = (rtb_Switch_hr &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ha));
    }

    /* End of Switch: '<S998>/Switch' */

    /* Logic: '<S985>/Reset Cycle' incorporates:
     *  Constant: '<S1004>/Constant'
     *  Constant: '<S1005>/Constant'
     *  Constant: '<S1006>/Constant'
     *  Constant: '<S1007>/Constant'
     *  Constant: '<S968>/Constant'
     *  Constant: '<S968>/Mask'
     *  Logic: '<S968>/AND2'
     *  Logic: '<S968>/AND3'
     *  Logic: '<S968>/OR'
     *  Logic: '<S968>/XOR'
     *  Logic: '<S985>/Logical Operator1'
     *  Logic: '<S985>/Logical Operator10'
     *  RelationalOperator: '<S1004>/Compare'
     *  RelationalOperator: '<S1005>/Compare'
     *  RelationalOperator: '<S1006>/Compare'
     *  RelationalOperator: '<S1007>/Compare'
     */
    rtb_ResetCycle = (rtb_AND3_n || (((tmp_e && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hn) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_k[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_e) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_k[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_d) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_k[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_ll) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_k[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllCenter2_NCContact != 0.0))))) ||
      rtb_AND3_d) && rtb_AND3_f));

    /* DiscreteIntegrator: '<S985>/X Position' */
    if (rtb_ResetCycle && (localDW->CoreSubsys[ForEach_itr_h].
                           XPosition_PrevResetState <= 0)) {
      localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE =
        ElectricalSystem_P.CoreSubsys.XPosition_IC;
    }

    if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE >=
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat) {
      localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE =
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat;
    } else {
      if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE <=
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat) {
        localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE =
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat;
      }
    }

    /* Switch: '<S985>/Switch2' incorporates:
     *  DiscreteIntegrator: '<S985>/X Position'
     *  UnitDelay: '<S985>/Unit Delay1'
     */
    if (rtb_Switch_lxd) {
      rtb_Switch2 = localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE;
    } else {
      rtb_Switch2 = localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE;
    }

    /* End of Switch: '<S985>/Switch2' */

    /* BusAssignment: '<S1328>/Bus Assignment5' incorporates:
     *  Lookup_n-D: '<S985>/ Matched Y Position'
     */
    rtb_Switch_WiperPositionCenter = look1_pbinlcapw(rtb_Switch2,
      ElectricalSystem_P.CoreSubsys.MatchedYPosition_bp01Data,
      ElectricalSystem_P.CoreSubsys.MatchedYPosition_tableData,
      &localDW->CoreSubsys[ForEach_itr_h].m_bpIndex, 100U);

    /* Logic: '<S985>/Logical Operator5' incorporates:
     *  Logic: '<S986>/Logical Operator5'
     *  Logic: '<S987>/Logical Operator5'
     */
    tmp_e = !rtb_Switch_hr;

    /* Switch: '<S985>/Speed' incorporates:
     *  Constant: '<S985>/No Move'
     *  Fcn: '<S985>/Move Speed'
     *  Logic: '<S985>/Logical Operator5'
     *  Logic: '<S985>/Stop'
     *  Switch: '<S985>/Switch1'
     */
    if (tmp_e || rtb_AND3_n || rtb_Switch_lxd) {
      rtb_Speed = ElectricalSystem_P.CoreSubsys.NoMove_Value_n;
    } else {
      if (rtb_AND3_d) {
        /* Switch: '<S985>/Switch1' incorporates:
         *  Constant: '<S985>/Wipe Period for Fast Wiping'
         */
        rtb_MatchedYPosition_k =
          ElectricalSystem_P.CoreSubsys.WipePeriodforFastWiping_Value_b;
      } else {
        /* Switch: '<S985>/Switch1' incorporates:
         *  Constant: '<S985>/Wipe Period for Slow Wiping'
         */
        rtb_MatchedYPosition_k =
          ElectricalSystem_P.CoreSubsys.WipePeriodforSlowWiping_Value_j;
      }

      rtb_Speed = 1.0 / rtb_MatchedYPosition_k;
    }

    /* End of Switch: '<S985>/Speed' */

    /* Switch: '<S994>/Switch' incorporates:
     *  Constant: '<S1077>/Constant'
     *  Constant: '<S994>/Constant'
     *  Logic: '<S994>/Logical Operator'
     *  Logic: '<S994>/Logical Operator1'
     *  Logic: '<S994>/Logical Operator2'
     *  RelationalOperator: '<S1077>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_h2) {
      rtb_LogicalOperator_h2 = (rtb_Switch_hr &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nm)));
    } else {
      rtb_LogicalOperator_h2 = (rtb_Switch_hr &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nm));
    }

    /* End of Switch: '<S994>/Switch' */

    /* Logic: '<S986>/Logical Operator3' incorporates:
     *  Constant: '<S1032>/Constant'
     *  Constant: '<S1033>/Constant'
     *  Constant: '<S1034>/Constant'
     *  Constant: '<S1035>/Constant'
     *  Constant: '<S1067>/Constant'
     *  Constant: '<S975>/Constant'
     *  Constant: '<S975>/Mask'
     *  Logic: '<S975>/AND2'
     *  Logic: '<S975>/AND3'
     *  Logic: '<S975>/OR'
     *  Logic: '<S975>/XOR'
     *  RelationalOperator: '<S1032>/Compare'
     *  RelationalOperator: '<S1033>/Compare'
     *  RelationalOperator: '<S1034>/Compare'
     *  RelationalOperator: '<S1035>/Compare'
     *  RelationalOperator: '<S1067>/Compare'
     *  UnitDelay: '<S986>/Unit Delay'
     */
    rtb_AND3_m1 = (rtb_LogicalOperator_h2 && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ir) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_k3[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_jr) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_k3[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_k) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_k3[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_o) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_k3[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllLeft4_NCContact != 0.0)))) &&
                   (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_e ==
                    ElectricalSystem_P.CoreSubsys.StartCycle_const_n));

    /* RelationalOperator: '<S1066>/Compare' incorporates:
     *  Constant: '<S1066>/Constant'
     *  UnitDelay: '<S986>/Unit Delay'
     */
    rtb_AND3_f = (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_e ==
                  ElectricalSystem_P.CoreSubsys.FinishCycle_const_e);

    /* DataTypeConversion: '<S986>/Data Type Conversion1' */
    rtb_DataTypeConversion1_n = rtb_AND3_f;

    /* DiscreteIntegrator: '<S986>/Timer' */
    if ((rtb_DataTypeConversion1_n <= 0.0) && (localDW->CoreSubsys[ForEach_itr_h]
         .Timer_PrevResetState_f == 1)) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE_c =
        ElectricalSystem_P.CoreSubsys.Timer_IC_c;
    }

    /* End of DiscreteIntegrator: '<S986>/Timer' */

    /* Switch: '<S997>/Switch' incorporates:
     *  Constant: '<S1080>/Constant'
     *  Constant: '<S997>/Constant'
     *  Logic: '<S997>/Logical Operator'
     *  Logic: '<S997>/Logical Operator1'
     *  Logic: '<S997>/Logical Operator2'
     *  RelationalOperator: '<S1080>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_onh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hbh) {
      rtb_LogicalOperator_h2 = (rtb_Switch_hr &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_it)));
    } else {
      rtb_LogicalOperator_h2 = (rtb_Switch_hr &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_it));
    }

    /* End of Switch: '<S997>/Switch' */

    /* Logic: '<S986>/Reset Cycle' incorporates:
     *  Constant: '<S1024>/Constant'
     *  Constant: '<S1025>/Constant'
     *  Constant: '<S1026>/Constant'
     *  Constant: '<S1027>/Constant'
     *  Constant: '<S973>/Constant'
     *  Constant: '<S973>/Mask'
     *  Logic: '<S973>/AND2'
     *  Logic: '<S973>/AND3'
     *  Logic: '<S973>/OR'
     *  Logic: '<S973>/XOR'
     *  Logic: '<S986>/Logical Operator1'
     *  Logic: '<S986>/Logical Operator10'
     *  RelationalOperator: '<S1024>/Compare'
     *  RelationalOperator: '<S1025>/Compare'
     *  RelationalOperator: '<S1026>/Compare'
     *  RelationalOperator: '<S1027>/Compare'
     */
    rtb_ResetCycle_k = (rtb_AND3_m1 || (((rtb_LogicalOperator_h2 && (
      static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_oyv) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_mr[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_aj) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_mr[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_jl) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_mr[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_he) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_mr[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllLeft2_NCContact != 0.0))))) ||
      rtb_AND3_a) && rtb_AND3_f));

    /* DiscreteIntegrator: '<S986>/X Position' */
    if (rtb_ResetCycle_k && (localDW->CoreSubsys[ForEach_itr_h].
         XPosition_PrevResetState_p <= 0)) {
      localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h =
        ElectricalSystem_P.CoreSubsys.XPosition_IC_k;
    }

    if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h >=
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat_g) {
      localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h =
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat_g;
    } else {
      if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h <=
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat_d) {
        localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h =
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat_d;
      }
    }

    /* Switch: '<S986>/Switch2' incorporates:
     *  DiscreteIntegrator: '<S986>/X Position'
     *  UnitDelay: '<S986>/Unit Delay1'
     */
    if (rtb_DMIPower) {
      rtb_Switch2_m = localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_c;
    } else {
      rtb_Switch2_m = localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h;
    }

    /* End of Switch: '<S986>/Switch2' */

    /* Lookup_n-D: '<S986>/ Matched Y Position' */
    rtb_MatchedYPosition_k = look1_pbinlcapw(rtb_Switch2_m,
      ElectricalSystem_P.CoreSubsys.MatchedYPosition_bp01Data_p,
      ElectricalSystem_P.CoreSubsys.MatchedYPosition_tableData_f,
      &localDW->CoreSubsys[ForEach_itr_h].m_bpIndex_k, 100U);

    /* Switch: '<S986>/Speed' incorporates:
     *  Constant: '<S986>/No Move'
     *  Fcn: '<S986>/Move Speed'
     *  Logic: '<S986>/Stop'
     *  Switch: '<S986>/Switch1'
     */
    if (tmp_e || rtb_AND3_m1 || rtb_DMIPower) {
      rtb_Speed_ec = ElectricalSystem_P.CoreSubsys.NoMove_Value_g;
    } else {
      if (rtb_AND3_a) {
        /* Switch: '<S986>/Switch1' incorporates:
         *  Constant: '<S986>/Wipe Period for Fast Wiping'
         */
        rtb_Speed_ec =
          ElectricalSystem_P.CoreSubsys.WipePeriodforFastWiping_Value_c;
      } else {
        /* Switch: '<S986>/Switch1' incorporates:
         *  Constant: '<S986>/Wipe Period for Slow Wiping'
         */
        rtb_Speed_ec =
          ElectricalSystem_P.CoreSubsys.WipePeriodforSlowWiping_Value_l;
      }

      rtb_Speed_ec = 1.0 / rtb_Speed_ec;
    }

    /* End of Switch: '<S986>/Speed' */

    /* Switch: '<S996>/Switch' incorporates:
     *  Constant: '<S1079>/Constant'
     *  Constant: '<S996>/Constant'
     *  Logic: '<S996>/Logical Operator'
     *  Logic: '<S996>/Logical Operator1'
     *  Logic: '<S996>/Logical Operator2'
     *  RelationalOperator: '<S1079>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_i0b >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fno) {
      rtb_LogicalOperator_h2 = (rtb_Switch_hr &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hv)));
    } else {
      rtb_LogicalOperator_h2 = (rtb_Switch_hr &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hv));
    }

    /* End of Switch: '<S996>/Switch' */

    /* Logic: '<S987>/Logical Operator3' incorporates:
     *  Constant: '<S1052>/Constant'
     *  Constant: '<S1053>/Constant'
     *  Constant: '<S1054>/Constant'
     *  Constant: '<S1055>/Constant'
     *  Constant: '<S1070>/Constant'
     *  Constant: '<S980>/Constant'
     *  Constant: '<S980>/Mask'
     *  Logic: '<S980>/AND2'
     *  Logic: '<S980>/AND3'
     *  Logic: '<S980>/OR'
     *  Logic: '<S980>/XOR'
     *  RelationalOperator: '<S1052>/Compare'
     *  RelationalOperator: '<S1053>/Compare'
     *  RelationalOperator: '<S1054>/Compare'
     *  RelationalOperator: '<S1055>/Compare'
     *  RelationalOperator: '<S1070>/Compare'
     *  UnitDelay: '<S987>/Unit Delay'
     */
    rtb_AND3_m1 = (rtb_LogicalOperator_h2 && (static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ne) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_lsi[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_oi) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_lsi[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_bk) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_lsi[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_an) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_lsi[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllRight4_NCContact != 0.0)))) &&
                   (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fs ==
                    ElectricalSystem_P.CoreSubsys.StartCycle_const_p));

    /* RelationalOperator: '<S1069>/Compare' incorporates:
     *  Constant: '<S1069>/Constant'
     *  UnitDelay: '<S987>/Unit Delay'
     */
    rtb_AND3_f = (localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fs ==
                  ElectricalSystem_P.CoreSubsys.FinishCycle_const_e3);

    /* DataTypeConversion: '<S987>/Data Type Conversion1' */
    rtb_DataTypeConversion1_p = rtb_AND3_f;

    /* DiscreteIntegrator: '<S987>/Timer' */
    if ((rtb_DataTypeConversion1_p <= 0.0) && (localDW->CoreSubsys[ForEach_itr_h]
         .Timer_PrevResetState_fb == 1)) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE_a =
        ElectricalSystem_P.CoreSubsys.Timer_IC_i;
    }

    /* End of DiscreteIntegrator: '<S987>/Timer' */

    /* Switch: '<S999>/Switch' incorporates:
     *  Constant: '<S1082>/Constant'
     *  Constant: '<S999>/Constant'
     *  Logic: '<S999>/Logical Operator'
     *  Logic: '<S999>/Logical Operator1'
     *  Logic: '<S999>/Logical Operator2'
     *  RelationalOperator: '<S1082>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lt >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jh) {
      rtb_LogicalOperator_h2 = (rtb_Switch_hr &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ke)));
    } else {
      rtb_LogicalOperator_h2 = (rtb_Switch_hr &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperControlSwitch
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ke));
    }

    /* End of Switch: '<S999>/Switch' */

    /* Logic: '<S987>/Reset Cycle' incorporates:
     *  Constant: '<S1044>/Constant'
     *  Constant: '<S1045>/Constant'
     *  Constant: '<S1046>/Constant'
     *  Constant: '<S1047>/Constant'
     *  Constant: '<S978>/Constant'
     *  Constant: '<S978>/Mask'
     *  Logic: '<S978>/AND2'
     *  Logic: '<S978>/AND3'
     *  Logic: '<S978>/OR'
     *  Logic: '<S978>/XOR'
     *  Logic: '<S987>/Logical Operator1'
     *  Logic: '<S987>/Logical Operator10'
     *  RelationalOperator: '<S1044>/Compare'
     *  RelationalOperator: '<S1045>/Compare'
     *  RelationalOperator: '<S1046>/Compare'
     *  RelationalOperator: '<S1047>/Compare'
     */
    rtb_ResetCycle_i = (rtb_AND3_m1 || (((rtb_LogicalOperator_h2 && (
      static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jec) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_c[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_o) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_c[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_mk) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_c[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WiperSelectionSwitch
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_p) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_c[3])) ^
        (ElectricalSystem_P.CoreSubsys.AllRight2_NCContact != 0.0))))) ||
      rtb_AND3_o3) && rtb_AND3_f));

    /* DiscreteIntegrator: '<S987>/X Position' */
    if (rtb_ResetCycle_i && (localDW->CoreSubsys[ForEach_itr_h].
         XPosition_PrevResetState_h <= 0)) {
      localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p =
        ElectricalSystem_P.CoreSubsys.XPosition_IC_n;
    }

    if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p >=
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat_d) {
      localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p =
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat_d;
    } else {
      if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p <=
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat_p) {
        localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p =
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat_p;
      }
    }

    /* Switch: '<S987>/Switch2' incorporates:
     *  DiscreteIntegrator: '<S987>/X Position'
     *  UnitDelay: '<S987>/Unit Delay1'
     */
    if (rtb_Switch_aw) {
      rtb_Switch2_a = localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_o;
    } else {
      rtb_Switch2_a = localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p;
    }

    /* End of Switch: '<S987>/Switch2' */

    /* BusAssignment: '<S1328>/Bus Assignment5' incorporates:
     *  Lookup_n-D: '<S987>/ Matched Y Position'
     */
    rtb_Switch_WiperPositionRight = look1_pbinlcapw(rtb_Switch2_a,
      ElectricalSystem_P.CoreSubsys.MatchedYPosition_bp01Data_l,
      ElectricalSystem_P.CoreSubsys.MatchedYPosition_tableData_i,
      &localDW->CoreSubsys[ForEach_itr_h].m_bpIndex_kp, 100U);

    /* Switch: '<S987>/Speed' incorporates:
     *  Constant: '<S987>/No Move'
     *  Fcn: '<S987>/Move Speed'
     *  Logic: '<S987>/Stop'
     *  Switch: '<S987>/Switch1'
     */
    if (tmp_e || rtb_AND3_m1 || rtb_Switch_aw) {
      rtb_Speed_k = ElectricalSystem_P.CoreSubsys.NoMove_Value;
    } else {
      if (rtb_AND3_o3) {
        /* Switch: '<S987>/Switch1' incorporates:
         *  Constant: '<S987>/Wipe Period for Fast Wiping'
         */
        rtb_Speed_k =
          ElectricalSystem_P.CoreSubsys.WipePeriodforFastWiping_Value;
      } else {
        /* Switch: '<S987>/Switch1' incorporates:
         *  Constant: '<S987>/Wipe Period for Slow Wiping'
         */
        rtb_Speed_k =
          ElectricalSystem_P.CoreSubsys.WipePeriodforSlowWiping_Value;
      }

      rtb_Speed_k = 1.0 / rtb_Speed_k;
    }

    /* End of Switch: '<S987>/Speed' */

    /* Switch: '<S1089>/Switch' incorporates:
     *  Constant: '<S1089>/Constant'
     *  Logic: '<S1089>/Logical Operator'
     *  Logic: '<S1089>/Logical Operator1'
     *  Logic: '<S1089>/Logical Operator2'
     *  UnitDelay: '<S667>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ml >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eej) {
      rtb_AND3_m1 =
        ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.WakeUpCommand
          != 0.0) && (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aq));
    } else {
      rtb_AND3_m1 =
        ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.WakeUpCommand
          != 0.0) && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aq);
    }

    /* End of Switch: '<S1089>/Switch' */

    /* Switch: '<S1090>/Switch' incorporates:
     *  Constant: '<S1090>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1090>/Logical Operator'
     *  Logic: '<S1090>/Logical Operator1'
     *  Logic: '<S1090>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fdk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gw) {
      rtb_AND3_f = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC !=
                     0.0) && (!rtb_LogicalOperator));
    } else {
      rtb_AND3_f = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC !=
                     0.0) && rtb_LogicalOperator);
    }

    /* End of Switch: '<S1090>/Switch' */

    /* Switch: '<S1091>/Switch' incorporates:
     *  Constant: '<S1091>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtb_Switch_os = localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101;
    } else {
      rtb_Switch_os = ElectricalSystem_P.CoreSubsys.Constant_Value_eu;
    }

    /* End of Switch: '<S1091>/Switch' */

    /* Switch: '<S1092>/Switch' incorporates:
     *  Constant: '<S1092>/Constant'
     *  Constant: '<S1094>/Constant'
     *  Logic: '<S1092>/Logical Operator'
     *  Logic: '<S1092>/Logical Operator1'
     *  Logic: '<S1092>/Logical Operator2'
     *  RelationalOperator: '<S1094>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hml >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_aiu) {
      rtb_LogicalOperator = ((rtb_Switch_os != 0.0) &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CRSBCB
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_gb)));
    } else {
      rtb_LogicalOperator = ((rtb_Switch_os != 0.0) &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CRSBCB
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_gb));
    }

    /* End of Switch: '<S1092>/Switch' */

    /* Switch: '<S1093>/Switch' incorporates:
     *  Constant: '<S1093>/Constant'
     *  Constant: '<S1095>/Constant'
     *  Logic: '<S1093>/Logical Operator'
     *  Logic: '<S1093>/Logical Operator1'
     *  Logic: '<S1093>/Logical Operator2'
     *  RelationalOperator: '<S1095>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fix) {
      tmp_e = ((rtb_Switch_os != 0.0) &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DMICB
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hxx)));
    } else {
      tmp_e = ((rtb_Switch_os != 0.0) &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DMICB
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hxx));
    }

    /* End of Switch: '<S1093>/Switch' */

    /* Switch: '<S1101>/Switch' incorporates:
     *  Constant: '<S1101>/Constant'
     *  Constant: '<S1108>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1101>/Logical Operator'
     *  Logic: '<S1101>/Logical Operator1'
     *  Logic: '<S1101>/Logical Operator2'
     *  RelationalOperator: '<S1108>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ay4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ku) {
      rtb_Switch_aw = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.NVICB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_m4)));
    } else {
      rtb_Switch_aw = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.NVICB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_m4));
    }

    /* End of Switch: '<S1101>/Switch' */

    /* Switch: '<S1104>/Switch' incorporates:
     *  Constant: '<S1104>/Constant'
     *  Logic: '<S1104>/Logical Operator'
     *  Logic: '<S1104>/Logical Operator1'
     *  Logic: '<S1104>/Logical Operator2'
     *  UnitDelay: '<S406>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_g4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_acu) {
      rtb_AND3_a = (rtb_Switch_aw && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_gg));
    } else {
      rtb_AND3_a = (rtb_Switch_aw && localDW->CoreSubsys[ForEach_itr_h].
                    UnitDelay_DSTATE_gg);
    }

    /* End of Switch: '<S1104>/Switch' */

    /* Switch: '<S1096>/Switch' incorporates:
     *  Constant: '<S1096>/Constant'
     *  Logic: '<S1096>/Logical Operator'
     *  Logic: '<S1096>/Logical Operator1'
     *  Logic: '<S1096>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cpk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_iu) {
      rtb_Switch_lxd = (rtb_AND3_a &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EBReleasePB
                           != 0.0)));
    } else {
      rtb_Switch_lxd = (rtb_AND3_a &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EBReleasePB
                         != 0.0));
    }

    /* End of Switch: '<S1096>/Switch' */

    /* Switch: '<S1097>/Switch' incorporates:
     *  Constant: '<S1097>/Constant'
     *  Logic: '<S1097>/Logical Operator'
     *  Logic: '<S1097>/Logical Operator1'
     *  Logic: '<S1097>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fsb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pcu) {
      rtb_Switch_je = (rtb_AND3_a &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ATOStartPB
                          != 0.0)));
    } else {
      rtb_Switch_je = (rtb_AND3_a &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ATOStartPB
                        != 0.0));
    }

    /* End of Switch: '<S1097>/Switch' */

    /* Switch: '<S1098>/Switch' incorporates:
     *  Constant: '<S1098>/Constant'
     *  Logic: '<S1098>/Logical Operator'
     *  Logic: '<S1098>/Logical Operator1'
     *  Logic: '<S1098>/Logical Operator2'
     *  UnitDelay: '<S475>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mqt >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fk) {
      rtb_Switch_aw = (rtb_Switch_aw && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_dl != 0.0)));
    } else {
      rtb_Switch_aw = (rtb_Switch_aw && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_dl != 0.0));
    }

    /* End of Switch: '<S1098>/Switch' */

    /* Switch: '<S1100>/Switch' incorporates:
     *  Constant: '<S1100>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* Switch: '<S1102>/Switch' incorporates:
       *  Constant: '<S1102>/Constant'
       *  Constant: '<S1109>/Constant'
       *  Logic: '<S1102>/Logical Operator'
       *  Logic: '<S1102>/Logical Operator1'
       *  Logic: '<S1102>/Logical Operator2'
       *  RelationalOperator: '<S1109>/Compare'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_bn >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold) {
        rtb_Switch_hr = (rtb_UnitDelay1 &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.NVICB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lj)));
      } else {
        rtb_Switch_hr = (rtb_UnitDelay1 &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.NVICB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lj));
      }

      /* End of Switch: '<S1102>/Switch' */
    } else {
      rtb_Switch_hr = ElectricalSystem_P.CoreSubsys.Constant_Value_f44;
    }

    /* End of Switch: '<S1100>/Switch' */

    /* Switch: '<S1099>/Switch' incorporates:
     *  Constant: '<S1099>/Constant'
     *  Logic: '<S1099>/Logical Operator'
     *  Logic: '<S1099>/Logical Operator1'
     *  Logic: '<S1099>/Logical Operator2'
     *  UnitDelay: '<S1105>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cly >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_b5) {
      rtb_Switch_hr = (rtb_Switch_hr && (!(localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_fm != 0.0)));
    } else {
      rtb_Switch_hr = (rtb_Switch_hr && (localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_fm != 0.0));
    }

    /* End of Switch: '<S1099>/Switch' */

    /* Switch: '<S1103>/Switch' incorporates:
     *  Constant: '<S1103>/Constant'
     *  Logic: '<S1103>/Logical Operator'
     *  Logic: '<S1103>/Logical Operator1'
     *  Logic: '<S1103>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ijqu >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gsf) {
      rtb_DMIPower = (rtb_AND3_a &&
                      (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ROSPB
                         != 0.0)));
    } else {
      rtb_DMIPower = (rtb_AND3_a &&
                      (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ROSPB
                       != 0.0));
    }

    /* End of Switch: '<S1103>/Switch' */

    /* Outputs for Atomic SubSystem: '<S1085>/TimerOffDelay NoInit' */
    ElectricalSystem_TimerOffDelayNoInit(rtb_Switch_je, &localB->
      CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit, &localDW->
      CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit,
      &ElectricalSystem_P.CoreSubsys.TimerOffDelayNoInit);

    /* End of Outputs for SubSystem: '<S1085>/TimerOffDelay NoInit' */

    /* Switch: '<S1107>/Switch' incorporates:
     *  Constant: '<S1107>/Constant'
     *  Logic: '<S1107>/Logical Operator'
     *  Logic: '<S1107>/Logical Operator1'
     *  Logic: '<S1107>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dvf >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ikb) {
      rtb_AND3_a = (rtb_AND3_a &&
                    (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.UTOPB
                       != 0.0)));
    } else {
      rtb_AND3_a = (rtb_AND3_a &&
                    (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.UTOPB
                     != 0.0));
    }

    /* End of Switch: '<S1107>/Switch' */

    /* Switch: '<S1120>/Switch' incorporates:
     *  Constant: '<S1112>/Constant'
     *  Constant: '<S1113>/Constant'
     *  Constant: '<S1114>/Constant'
     *  Constant: '<S1120>/Constant'
     *  Constant: '<S1121>/Constant'
     *  Constant: '<S1123>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  RelationalOperator: '<S1112>/Compare'
     *  RelationalOperator: '<S1113>/Compare'
     *  RelationalOperator: '<S1114>/Compare'
     *  Switch: '<S1121>/Switch'
     *  Switch: '<S1123>/Switch'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtb_AND3_l =
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ATOTBDemand
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_em);
      rtb_AND3_k =
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ATOTBDemand
         >= ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_de);
      rtb_AND3_o3 =
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ATOTBDemand
         <= ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_f);
    } else {
      rtb_AND3_l = ElectricalSystem_P.CoreSubsys.Constant_Value_jq;
      rtb_AND3_k = ElectricalSystem_P.CoreSubsys.Constant_Value_cmt;
      rtb_AND3_o3 = ElectricalSystem_P.CoreSubsys.Constant_Value_kca;
    }

    /* End of Switch: '<S1120>/Switch' */

    /* Switch: '<S1127>/Switch' incorporates:
     *  Constant: '<S1127>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Switch: '<S1118>/Switch'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cc1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jo) {
      /* Switch: '<S1118>/Switch' incorporates:
       *  Constant: '<S1118>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ATCCabActivation;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_fs;
      }

      /* Update for UnitDelay: '<S1111>/Unit Delay' incorporates:
       *  Logic: '<S1127>/Logical Operator1'
       *  Logic: '<S1127>/Logical Operator2'
       *  UnitDelay: '<S668>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iut =
        ((rtu_ElectricalVehicleConfig_0 != 0.0) && (!localDW->
          CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bu));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S1118>/Switch' */
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ATCCabActivation;
      } else {
        /* Switch: '<S1118>/Switch' incorporates:
         *  Constant: '<S1118>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_fs;
      }

      /* Update for UnitDelay: '<S1111>/Unit Delay' incorporates:
       *  Logic: '<S1127>/Logical Operator'
       *  UnitDelay: '<S668>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iut =
        ((rtu_ElectricalVehicleConfig_0 != 0.0) && localDW->
         CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bu);
    }

    /* End of Switch: '<S1127>/Switch' */

    /* Switch: '<S1128>/Switch' incorporates:
     *  Constant: '<S1128>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dv3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cy1) {
      /* Update for UnitDelay: '<S1132>/Unit Delay' incorporates:
       *  Logic: '<S1128>/Logical Operator1'
       *  Logic: '<S1128>/Logical Operator2'
       *  UnitDelay: '<S668>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aw = (rtb_AND3_k &&
        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bu));
    } else {
      /* Update for UnitDelay: '<S1132>/Unit Delay' incorporates:
       *  Logic: '<S1128>/Logical Operator'
       *  UnitDelay: '<S668>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aw = (rtb_AND3_k &&
        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bu);
    }

    /* End of Switch: '<S1128>/Switch' */

    /* Switch: '<S1129>/Switch' incorporates:
     *  Constant: '<S1129>/Constant'
     *  Logic: '<S1129>/Logical Operator'
     *  Logic: '<S1129>/Logical Operator1'
     *  Logic: '<S1129>/Logical Operator2'
     *  UnitDelay: '<S668>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_oc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cz) {
      rtb_AND3_l = (rtb_AND3_l && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_bu));
    } else {
      rtb_AND3_l = (rtb_AND3_l && localDW->CoreSubsys[ForEach_itr_h].
                    UnitDelay_DSTATE_bu);
    }

    /* End of Switch: '<S1129>/Switch' */

    /* Switch: '<S1130>/Switch' incorporates:
     *  Constant: '<S1130>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_n1e >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_f2j) {
      /* Update for UnitDelay: '<S1131>/Unit Delay' incorporates:
       *  Logic: '<S1130>/Logical Operator1'
       *  Logic: '<S1130>/Logical Operator2'
       *  UnitDelay: '<S668>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gxr = (rtb_AND3_o3 &&
        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bu));
    } else {
      /* Update for UnitDelay: '<S1131>/Unit Delay' incorporates:
       *  Logic: '<S1130>/Logical Operator'
       *  UnitDelay: '<S668>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gxr = (rtb_AND3_o3 &&
        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bu);
    }

    /* End of Switch: '<S1130>/Switch' */

    /* Switch: '<S1152>/Switch' incorporates:
     *  Constant: '<S1152>/Constant'
     *  Constant: '<S1193>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1152>/Logical Operator'
     *  Logic: '<S1152>/Logical Operator1'
     *  Logic: '<S1152>/Logical Operator2'
     *  RelationalOperator: '<S1193>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cgp) {
      rtb_Switch_li = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VIO2CB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hk)));
    } else {
      rtb_Switch_li = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 !=
                        0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VIO2CB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hk));
    }

    /* End of Switch: '<S1152>/Switch' */

    /* Switch: '<S1135>/Switch' incorporates:
     *  Constant: '<S1135>/Constant'
     *  Constant: '<S1189>/Constant'
     *  Logic: '<S1135>/Logical Operator'
     *  Logic: '<S1135>/Logical Operator1'
     *  Logic: '<S1135>/Logical Operator2'
     *  RelationalOperator: '<S1189>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hfa >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_j1p) {
      rtb_AND3_o3 = (rtb_Switch_li &&
                     (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hl)));
    } else {
      rtb_AND3_o3 = (rtb_Switch_li &&
                     (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                      ==
                      ElectricalSystem_P.CoreSubsys.CompareToConstant_const_hl));
    }

    /* End of Switch: '<S1135>/Switch' */

    /* Switch: '<S1136>/Switch' incorporates:
     *  Constant: '<S1136>/Constant'
     *  Constant: '<S1190>/Constant'
     *  Logic: '<S1136>/Logical Operator'
     *  Logic: '<S1136>/Logical Operator1'
     *  Logic: '<S1136>/Logical Operator2'
     *  RelationalOperator: '<S1190>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ld >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mnk) {
      rtb_AND3_o3 = (rtb_AND3_o3 &&
                     (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ATOStartPB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_np)));
    } else {
      rtb_AND3_o3 = (rtb_AND3_o3 &&
                     (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ATOStartPB
                      ==
                      ElectricalSystem_P.CoreSubsys.CompareToConstant_const_np));
    }

    /* End of Switch: '<S1136>/Switch' */

    /* Switch: '<S1184>/Switch' incorporates:
     *  Constant: '<S1184>/Constant'
     *  Constant: '<S1210>/Constant'
     *  Logic: '<S1184>/Logical Operator'
     *  Logic: '<S1184>/Logical Operator1'
     *  Logic: '<S1184>/Logical Operator2'
     *  RelationalOperator: '<S1210>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_od3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lhf) {
      rtb_Switch_ecu = (rtb_Switch_li &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_mr)));
    } else {
      rtb_Switch_ecu = (rtb_Switch_li &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_mr));
    }

    /* End of Switch: '<S1184>/Switch' */

    /* Switch: '<S1137>/Switch' incorporates:
     *  Constant: '<S1137>/Constant'
     *  Constant: '<S1191>/Constant'
     *  Logic: '<S1137>/Logical Operator'
     *  Logic: '<S1137>/Logical Operator1'
     *  Logic: '<S1137>/Logical Operator2'
     *  RelationalOperator: '<S1191>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lcr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gv) {
      rtb_AND3_k = (rtb_Switch_ecu &&
                    (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ATOStartPB
                       ==
                       ElectricalSystem_P.CoreSubsys.CompareToConstant_const_n4)));
    } else {
      rtb_AND3_k = (rtb_Switch_ecu &&
                    (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ATOStartPB
                     == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_n4));
    }

    /* End of Switch: '<S1137>/Switch' */

    /* Switch: '<S1179>/Switch' incorporates:
     *  Constant: '<S1179>/Constant'
     *  Constant: '<S1199>/Constant'
     *  Logic: '<S1179>/Logical Operator'
     *  Logic: '<S1179>/Logical Operator1'
     *  Logic: '<S1179>/Logical Operator2'
     *  RelationalOperator: '<S1199>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hhb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kwu) {
      rtb_AND3_d = (rtb_Switch_li &&
                    (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                       ==
                       ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nw)));
    } else {
      rtb_AND3_d = (rtb_Switch_li &&
                    (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SafetyCutoutSS
                     == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nw));
    }

    /* End of Switch: '<S1179>/Switch' */

    /* Switch: '<S1138>/Switch' incorporates:
     *  Constant: '<S1138>/Constant'
     *  Logic: '<S1138>/Logical Operator'
     *  Logic: '<S1138>/Logical Operator1'
     *  Logic: '<S1138>/Logical Operator2'
     *  UnitDelay: '<S398>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_al >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gt) {
      rtb_AND3_d = (rtb_AND3_d && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_fi));
    } else {
      rtb_AND3_d = (rtb_AND3_d && localDW->CoreSubsys[ForEach_itr_h].
                    UnitDelay_DSTATE_fi);
    }

    /* End of Switch: '<S1138>/Switch' */

    /* Switch: '<S1150>/Switch' incorporates:
     *  Constant: '<S1150>/Constant'
     *  Constant: '<S1192>/Constant'
     *  Logic: '<S1150>/Logical Operator'
     *  Logic: '<S1150>/Logical Operator1'
     *  Logic: '<S1150>/Logical Operator2'
     *  RelationalOperator: '<S1192>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pws >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_klg) {
      rtb_AND3_cq = (rtb_Switch_li &&
                     (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MasterKeySwitch
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jv)));
    } else {
      rtb_AND3_cq = (rtb_Switch_li &&
                     (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MasterKeySwitch
                      ==
                      ElectricalSystem_P.CoreSubsys.CompareToConstant_const_jv));
    }

    /* End of Switch: '<S1150>/Switch' */

    /* Switch: '<S1151>/Switch' incorporates:
     *  Constant: '<S1151>/Constant'
     *  Logic: '<S1151>/Logical Operator'
     *  Logic: '<S1151>/Logical Operator1'
     *  Logic: '<S1151>/Logical Operator2'
     *  UnitDelay: '<S429>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_m15u >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eon) {
      rtb_AND3_n = (rtb_Switch_li && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ol));
    } else {
      rtb_AND3_n = (rtb_Switch_li && localDW->CoreSubsys[ForEach_itr_h].
                    UnitDelay_DSTATE_ol);
    }

    /* End of Switch: '<S1151>/Switch' */

    /* Switch: '<S1154>/Switch' incorporates:
     *  Constant: '<S1154>/Constant'
     *  Logic: '<S1154>/Logical Operator'
     *  Logic: '<S1154>/Logical Operator1'
     *  Logic: '<S1154>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_duk) {
      rtb_XOR_j5 = (rtb_Switch_li && (!rtb_Switch_bq));
    } else {
      rtb_XOR_j5 = (rtb_Switch_li && rtb_Switch_bq);
    }

    /* End of Switch: '<S1154>/Switch' */

    /* Switch: '<S1155>/Switch' incorporates:
     *  Constant: '<S1155>/Constant'
     *  Constant: '<S1195>/Constant'
     *  Logic: '<S1155>/Logical Operator'
     *  Logic: '<S1155>/Logical Operator1'
     *  Logic: '<S1155>/Logical Operator2'
     *  RelationalOperator: '<S1195>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_loh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ph) {
      rtb_AND3_jm = (rtb_Switch_li &&
                     (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_he)));
    } else {
      rtb_AND3_jm = (rtb_Switch_li &&
                     (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                      ==
                      ElectricalSystem_P.CoreSubsys.CompareToConstant_const_he));
    }

    /* End of Switch: '<S1155>/Switch' */

    /* Switch: '<S1156>/Switch' incorporates:
     *  Constant: '<S1156>/Constant'
     *  Constant: '<S1196>/Constant'
     *  Logic: '<S1156>/Logical Operator'
     *  Logic: '<S1156>/Logical Operator1'
     *  Logic: '<S1156>/Logical Operator2'
     *  RelationalOperator: '<S1196>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_du >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_liu) {
      rtb_XOR_nn = (rtb_Switch_li &&
                    (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                       ==
                       ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cc)));
    } else {
      rtb_XOR_nn = (rtb_Switch_li &&
                    (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                     == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cc));
    }

    /* End of Switch: '<S1156>/Switch' */

    /* Switch: '<S1157>/Switch' incorporates:
     *  Constant: '<S1157>/Constant'
     *  Constant: '<S1197>/Constant'
     *  Logic: '<S1157>/Logical Operator'
     *  Logic: '<S1157>/Logical Operator1'
     *  Logic: '<S1157>/Logical Operator2'
     *  RelationalOperator: '<S1197>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gs >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_b0) {
      rtb_AND3_e0 = (rtb_Switch_li &&
                     (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_os)));
    } else {
      rtb_AND3_e0 = (rtb_Switch_li &&
                     (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                      ==
                      ElectricalSystem_P.CoreSubsys.CompareToConstant_const_os));
    }

    /* End of Switch: '<S1157>/Switch' */

    /* Switch: '<S1180>/Switch' incorporates:
     *  Constant: '<S1180>/Constant'
     *  Logic: '<S1180>/Logical Operator'
     *  Logic: '<S1180>/Logical Operator1'
     *  Logic: '<S1180>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_my >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lv) {
      rtb_Switch_ai2 = (rtb_Switch_li && (!rtb_InternalFireAlarmTLActive));
    } else {
      rtb_Switch_ai2 = (rtb_Switch_li && rtb_InternalFireAlarmTLActive);
    }

    /* End of Switch: '<S1180>/Switch' */

    /* Switch: '<S1181>/Switch' incorporates:
     *  Constant: '<S1181>/Constant'
     *  Constant: '<S1200>/Constant'
     *  Logic: '<S1181>/Logical Operator'
     *  Logic: '<S1181>/Logical Operator1'
     *  Logic: '<S1181>/Logical Operator2'
     *  RelationalOperator: '<S1200>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_e3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_je) {
      rtb_Switch_gsu = (rtb_Switch_li &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_oh)));
    } else {
      rtb_Switch_gsu = (rtb_Switch_li &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_oh));
    }

    /* End of Switch: '<S1181>/Switch' */

    /* Switch: '<S1201>/Switch' incorporates:
     *  Constant: '<S1201>/Constant'
     *  Logic: '<S1201>/Logical Operator'
     *  Logic: '<S1201>/Logical Operator1'
     *  Logic: '<S1201>/Logical Operator2'
     *  UnitDelay: '<S672>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ekk >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_awi) {
      rtb_Switch_gi2 = (rtb_Switch_li && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_fg));
    } else {
      rtb_Switch_gi2 = (rtb_Switch_li && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_fg);
    }

    /* End of Switch: '<S1201>/Switch' */

    /* Switch: '<S1205>/Switch' incorporates:
     *  Constant: '<S1205>/Constant'
     *  Logic: '<S1205>/Logical Operator'
     *  Logic: '<S1205>/Logical Operator1'
     *  Logic: '<S1205>/Logical Operator2'
     *  UnitDelay: '<S1177>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_m3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_iqz) {
      rtb_Switch_gi2 = (rtb_Switch_gi2 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_f2));
    } else {
      rtb_Switch_gi2 = (rtb_Switch_gi2 && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_f2);
    }

    /* End of Switch: '<S1205>/Switch' */

    /* Switch: '<S1203>/Switch' incorporates:
     *  Constant: '<S1203>/Constant'
     *  Constant: '<S1208>/Constant'
     *  Logic: '<S1203>/Logical Operator'
     *  Logic: '<S1203>/Logical Operator1'
     *  Logic: '<S1203>/Logical Operator2'
     *  RelationalOperator: '<S1208>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_naq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bbp) {
      rtb_Switch_f1 = (rtb_Switch_gi2 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DoorProvenLoopCutoutSw
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bn)));
    } else {
      rtb_Switch_f1 = (rtb_Switch_gi2 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DoorProvenLoopCutoutSw
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bn));
    }

    /* End of Switch: '<S1203>/Switch' */

    /* Switch: '<S1202>/Switch' incorporates:
     *  Constant: '<S1202>/Constant'
     *  Constant: '<S1207>/Constant'
     *  Logic: '<S1202>/Logical Operator'
     *  Logic: '<S1202>/Logical Operator1'
     *  Logic: '<S1202>/Logical Operator2'
     *  RelationalOperator: '<S1207>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mjp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kst) {
      rtb_Switch_gi2 = (rtb_Switch_f1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DoorProvenLoopCutoutPB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cbf)));
    } else {
      rtb_Switch_gi2 = (rtb_Switch_f1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DoorProvenLoopCutoutPB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cbf));
    }

    /* End of Switch: '<S1202>/Switch' */

    /* Switch: '<S1206>/Switch' incorporates:
     *  Constant: '<S1206>/Constant'
     *  Logic: '<S1206>/Logical Operator'
     *  Logic: '<S1206>/Logical Operator1'
     *  Logic: '<S1206>/Logical Operator2'
     *  UnitDelay: '<S1178>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lw >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cq) {
      rtb_Switch_f1 = (rtb_Switch_f1 && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_hc));
    } else {
      rtb_Switch_f1 = (rtb_Switch_f1 && localDW->CoreSubsys[ForEach_itr_h].
                       UnitDelay_DSTATE_hc);
    }

    /* End of Switch: '<S1206>/Switch' */

    /* Switch: '<S1204>/Switch' incorporates:
     *  Constant: '<S1204>/Constant'
     *  Logic: '<S1204>/Logical Operator'
     *  Logic: '<S1204>/Logical Operator1'
     *  Logic: '<S1204>/Logical Operator2'
     *  UnitDelay: '<S174>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lfv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nzw) {
      rtb_LogicalOperator_h2 = (rtb_Switch_li && (!localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m));
    } else {
      rtb_LogicalOperator_h2 = (rtb_Switch_li && localDW->
        CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m);
    }

    /* End of Switch: '<S1204>/Switch' */

    /* Logic: '<S1182>/Logical Operator' incorporates:
     *  Logic: '<S1182>/Logical Operator1'
     */
    rtb_LogicalOperator_h2 = (rtb_LogicalOperator_h2 || (rtb_Switch_gi2 ||
      rtb_Switch_f1));

    /* Switch: '<S1183>/Switch' incorporates:
     *  Constant: '<S1183>/Constant'
     *  Constant: '<S1209>/Constant'
     *  Logic: '<S1183>/Logical Operator'
     *  Logic: '<S1183>/Logical Operator1'
     *  Logic: '<S1183>/Logical Operator2'
     *  RelationalOperator: '<S1209>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_efh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kll) {
      rtb_Switch_f1 = (rtb_Switch_li &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ji3)));
    } else {
      rtb_Switch_f1 = (rtb_Switch_li &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ji3));
    }

    /* End of Switch: '<S1183>/Switch' */

    /* Switch: '<S1185>/Switch' incorporates:
     *  Constant: '<S1185>/Constant'
     *  Constant: '<S1211>/Constant'
     *  Logic: '<S1185>/Logical Operator'
     *  Logic: '<S1185>/Logical Operator1'
     *  Logic: '<S1185>/Logical Operator2'
     *  RelationalOperator: '<S1211>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_er >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_erk) {
      rtb_Switch_gi2 = (rtb_Switch_ecu &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.UTOPB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_aw)));
    } else {
      rtb_Switch_gi2 = (rtb_Switch_ecu &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.UTOPB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_aw));
    }

    /* End of Switch: '<S1185>/Switch' */

    /* Switch: '<S1168>/Switch' incorporates:
     *  Constant: '<S1168>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S1168>/Logical Operator'
     *  Logic: '<S1168>/Logical Operator1'
     *  Logic: '<S1168>/Logical Operator2'
     *  Switch: '<S1142>/Switch'
     *  UnitDelay: '<S667>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_og >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dc) {
      /* Switch: '<S1142>/Switch' incorporates:
       *  Constant: '<S1142>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtb_Switch_jc =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.NoEmergencyBrakeOrder;
      } else {
        rtb_Switch_jc = ElectricalSystem_P.CoreSubsys.Constant_Value_jw;
      }

      rtb_Switch_f20 = (rtb_Switch_jc && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_aq));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S1142>/Switch' */
        rtb_Switch_jc =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.NoEmergencyBrakeOrder;
      } else {
        /* Switch: '<S1142>/Switch' incorporates:
         *  Constant: '<S1142>/Constant'
         */
        rtb_Switch_jc = ElectricalSystem_P.CoreSubsys.Constant_Value_jw;
      }

      rtb_Switch_f20 = (rtb_Switch_jc && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_aq);
    }

    /* End of Switch: '<S1168>/Switch' */

    /* Switch: '<S1153>/Switch' incorporates:
     *  Constant: '<S1153>/Constant'
     *  Constant: '<S1194>/Constant'
     *  Logic: '<S1153>/Logical Operator'
     *  Logic: '<S1153>/Logical Operator1'
     *  Logic: '<S1153>/Logical Operator2'
     *  RelationalOperator: '<S1194>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nt >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_aw5) {
      rtb_Switch_li = (rtb_LogicalOperator &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VIO1CB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_a4)));
    } else {
      rtb_Switch_li = (rtb_LogicalOperator &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VIO1CB
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_a4));
    }

    /* End of Switch: '<S1153>/Switch' */

    /* Update for UnitDelay: '<S1139>/Unit Delay' incorporates:
     *  Logic: '<S1087>/Logical Operator'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l0p = (rtb_Switch_f20 &&
      rtb_Switch_li);

    /* Switch: '<S1160>/Switch' incorporates:
     *  Constant: '<S1160>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S1160>/Logical Operator'
     *  Logic: '<S1160>/Logical Operator1'
     *  Logic: '<S1160>/Logical Operator2'
     *  Switch: '<S1143>/Switch'
     *  UnitDelay: '<S666>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pcj >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hec) {
      /* Switch: '<S1143>/Switch' incorporates:
       *  Constant: '<S1143>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.TractionForward;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_dj;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bh));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S1143>/Switch' */
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.TractionForward;
      } else {
        /* Switch: '<S1143>/Switch' incorporates:
         *  Constant: '<S1143>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_dj;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bh);
    }

    /* End of Switch: '<S1160>/Switch' */

    /* Update for UnitDelay: '<S1172>/Unit Delay' incorporates:
     *  Logic: '<S1087>/Logical Operator1'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fse = (rtb_Switch_f20 &&
      rtb_Switch_li);

    /* Switch: '<S1163>/Switch' incorporates:
     *  Constant: '<S1163>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S1163>/Logical Operator'
     *  Logic: '<S1163>/Logical Operator1'
     *  Logic: '<S1163>/Logical Operator2'
     *  Switch: '<S1146>/Switch'
     *  UnitDelay: '<S666>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fc) {
      /* Switch: '<S1146>/Switch' incorporates:
       *  Constant: '<S1146>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.NotImmobilise;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_b;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bh));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S1146>/Switch' */
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.NotImmobilise;
      } else {
        /* Switch: '<S1146>/Switch' incorporates:
         *  Constant: '<S1146>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_b;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bh);
    }

    /* End of Switch: '<S1163>/Switch' */

    /* Logic: '<S1087>/Logical Operator2' */
    rtb_Switch_ecu = (rtb_Switch_f20 && rtb_Switch_li);

    /* Switch: '<S1162>/Switch' incorporates:
     *  Constant: '<S1162>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S1162>/Logical Operator'
     *  Logic: '<S1162>/Logical Operator1'
     *  Logic: '<S1162>/Logical Operator2'
     *  Switch: '<S1145>/Switch'
     *  UnitDelay: '<S666>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dqd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mro) {
      /* Switch: '<S1145>/Switch' incorporates:
       *  Constant: '<S1145>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.LeftSideDoorEnable;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_dw;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bh));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S1145>/Switch' */
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.LeftSideDoorEnable;
      } else {
        /* Switch: '<S1145>/Switch' incorporates:
         *  Constant: '<S1145>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_dw;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bh);
    }

    /* End of Switch: '<S1162>/Switch' */

    /* Update for UnitDelay: '<S1170>/Unit Delay' incorporates:
     *  Logic: '<S1087>/Logical Operator3'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_kk = (rtb_Switch_f20 &&
      rtb_Switch_li);

    /* Switch: '<S1161>/Switch' incorporates:
     *  Constant: '<S1161>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S1161>/Logical Operator'
     *  Logic: '<S1161>/Logical Operator1'
     *  Logic: '<S1161>/Logical Operator2'
     *  Switch: '<S1144>/Switch'
     *  UnitDelay: '<S666>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hwd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_oi) {
      /* Switch: '<S1144>/Switch' incorporates:
       *  Constant: '<S1144>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.RightSideDoorEnable;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_px2;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bh));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S1144>/Switch' */
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.RightSideDoorEnable;
      } else {
        /* Switch: '<S1144>/Switch' incorporates:
         *  Constant: '<S1144>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_px2;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bh);
    }

    /* End of Switch: '<S1161>/Switch' */

    /* Update for UnitDelay: '<S1171>/Unit Delay' incorporates:
     *  Logic: '<S1087>/Logical Operator4'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_pk = (rtb_Switch_li &&
      rtb_Switch_f20);

    /* Switch: '<S1166>/Switch' incorporates:
     *  Constant: '<S1166>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S1166>/Logical Operator'
     *  Logic: '<S1166>/Logical Operator1'
     *  Logic: '<S1166>/Logical Operator2'
     *  Switch: '<S1140>/Switch'
     *  UnitDelay: '<S667>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_c1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_i0w) {
      /* Switch: '<S1140>/Switch' incorporates:
       *  Constant: '<S1140>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ATCZeroSpeed;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_e;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aq));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S1140>/Switch' */
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ATCZeroSpeed;
      } else {
        /* Switch: '<S1140>/Switch' incorporates:
         *  Constant: '<S1140>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_e;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aq);
    }

    /* End of Switch: '<S1166>/Switch' */

    /* Logic: '<S1087>/Logical Operator5' */
    rtb_LogicalOperator5_ld = (rtb_Switch_li && rtb_Switch_f20);

    /* Switch: '<S1164>/Switch' incorporates:
     *  Constant: '<S1164>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S1164>/Logical Operator'
     *  Logic: '<S1164>/Logical Operator1'
     *  Logic: '<S1164>/Logical Operator2'
     *  Switch: '<S1147>/Switch'
     *  UnitDelay: '<S667>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ol3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_iue) {
      /* Switch: '<S1147>/Switch' incorporates:
       *  Constant: '<S1147>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtb_Switch_jc =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.LeftHoldDoorClose;
      } else {
        rtb_Switch_jc = ElectricalSystem_P.CoreSubsys.Constant_Value_bd3;
      }

      rtb_Switch_f20 = (rtb_Switch_jc && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_aq));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S1147>/Switch' */
        rtb_Switch_jc =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.LeftHoldDoorClose;
      } else {
        /* Switch: '<S1147>/Switch' incorporates:
         *  Constant: '<S1147>/Constant'
         */
        rtb_Switch_jc = ElectricalSystem_P.CoreSubsys.Constant_Value_bd3;
      }

      rtb_Switch_f20 = (rtb_Switch_jc && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_aq);
    }

    /* End of Switch: '<S1164>/Switch' */

    /* Update for UnitDelay: '<S1173>/Unit Delay' incorporates:
     *  Logic: '<S1087>/Logical Operator6'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c1 = (rtb_Switch_li &&
      rtb_Switch_f20);

    /* Switch: '<S1159>/Switch' incorporates:
     *  Constant: '<S1159>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S1159>/Logical Operator'
     *  Logic: '<S1159>/Logical Operator1'
     *  Logic: '<S1159>/Logical Operator2'
     *  Switch: '<S1148>/Switch'
     *  UnitDelay: '<S667>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bp5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hm) {
      /* Switch: '<S1148>/Switch' incorporates:
       *  Constant: '<S1148>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtb_Switch_jc =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.RightHoldDoorClose;
      } else {
        rtb_Switch_jc = ElectricalSystem_P.CoreSubsys.Constant_Value_pla;
      }

      rtb_Switch_f20 = (rtb_Switch_jc && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_aq));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S1148>/Switch' */
        rtb_Switch_jc =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.RightHoldDoorClose;
      } else {
        /* Switch: '<S1148>/Switch' incorporates:
         *  Constant: '<S1148>/Constant'
         */
        rtb_Switch_jc = ElectricalSystem_P.CoreSubsys.Constant_Value_pla;
      }

      rtb_Switch_f20 = (rtb_Switch_jc && localDW->CoreSubsys[ForEach_itr_h].
                        UnitDelay_DSTATE_aq);
    }

    /* End of Switch: '<S1159>/Switch' */

    /* Update for UnitDelay: '<S1174>/Unit Delay' incorporates:
     *  Logic: '<S1087>/Logical Operator7'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bly = (rtb_Switch_li &&
      rtb_Switch_f20);

    /* Switch: '<S1167>/Switch' incorporates:
     *  Constant: '<S1167>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Logic: '<S1167>/Logical Operator'
     *  Logic: '<S1167>/Logical Operator1'
     *  Logic: '<S1167>/Logical Operator2'
     *  Switch: '<S1141>/Switch'
     *  UnitDelay: '<S667>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jb3 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ge) {
      /* Switch: '<S1141>/Switch' incorporates:
       *  Constant: '<S1141>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.UTOModeActive;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_lg;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aq));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S1141>/Switch' */
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.UTOModeActive;
      } else {
        /* Switch: '<S1141>/Switch' incorporates:
         *  Constant: '<S1141>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_lg;
      }

      rtb_Switch_f20 = ((rtu_ElectricalVehicleConfig_0 != 0.0) &&
                        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aq);
    }

    /* End of Switch: '<S1167>/Switch' */

    /* Logic: '<S1087>/Logical Operator9' */
    rtb_Switch_li = (rtb_Switch_li && rtb_Switch_f20);

    /* Switch: '<S1165>/Switch' incorporates:
     *  Constant: '<S1165>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Switch: '<S1149>/Switch'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_haz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_khd) {
      /* Switch: '<S1149>/Switch' incorporates:
       *  Constant: '<S1149>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
       */
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.EmerDetrainDoorLockRelay;
      } else {
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_px;
      }

      /* Update for UnitDelay: '<S1175>/Unit Delay' incorporates:
       *  Logic: '<S1165>/Logical Operator1'
       *  Logic: '<S1165>/Logical Operator2'
       *  UnitDelay: '<S667>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_du =
        ((rtu_ElectricalVehicleConfig_0 != 0.0) && (!localDW->
          CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aq));
    } else {
      if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
        /* Switch: '<S1149>/Switch' */
        rtu_ElectricalVehicleConfig_0 =
          rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.EmerDetrainDoorLockRelay;
      } else {
        /* Switch: '<S1149>/Switch' incorporates:
         *  Constant: '<S1149>/Constant'
         */
        rtu_ElectricalVehicleConfig_0 =
          ElectricalSystem_P.CoreSubsys.Constant_Value_px;
      }

      /* Update for UnitDelay: '<S1175>/Unit Delay' incorporates:
       *  Logic: '<S1165>/Logical Operator'
       *  UnitDelay: '<S667>/Unit Delay'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_du =
        ((rtu_ElectricalVehicleConfig_0 != 0.0) && localDW->
         CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aq);
    }

    /* End of Switch: '<S1165>/Switch' */

    /* Switch: '<S1219>/Switch' incorporates:
     *  Constant: '<S1219>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1219>/Logical Operator'
     *  Logic: '<S1219>/Logical Operator1'
     *  Logic: '<S1219>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_h2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mvz) {
      rtb_Switch_f20 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BCGCB
                           != 0.0)));
    } else {
      rtb_Switch_f20 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BCGCB
                         != 0.0));
    }

    /* End of Switch: '<S1219>/Switch' */

    /* Switch: '<S1216>/Switch' incorporates:
     *  Constant: '<S1216>/Constant'
     *  Logic: '<S1216>/Logical Operator'
     *  Logic: '<S1216>/Logical Operator1'
     *  Logic: '<S1216>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_abz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mi3) {
      rtb_Switch_f20 = (rtb_Switch_f20 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.APSCB
                           != 0.0)));
    } else {
      rtb_Switch_f20 = (rtb_Switch_f20 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.APSCB
                         != 0.0));
    }

    /* End of Switch: '<S1216>/Switch' */

    /* Switch: '<S1223>/Switch' incorporates:
     *  Constant: '<S1223>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1223>/Logical Operator'
     *  Logic: '<S1223>/Logical Operator1'
     *  Logic: '<S1223>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jho >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nw3) {
      rtb_Switch_dk = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                        != 0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BLCB
                          != 0.0)));
    } else {
      rtb_Switch_dk = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                        != 0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BLCB
                        != 0.0));
    }

    /* End of Switch: '<S1223>/Switch' */

    /* Switch: '<S1227>/Switch' incorporates:
     *  Constant: '<S1227>/Constant'
     *  Logic: '<S1227>/Logical Operator'
     *  Logic: '<S1227>/Logical Operator1'
     *  Logic: '<S1227>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_js >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gk) {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CMCCB
                          != 0.0)));
    } else {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CMCCB
                        != 0.0));
    }

    /* End of Switch: '<S1227>/Switch' */

    /* Switch: '<S1239>/Switch' incorporates:
     *  Constant: '<S1239>/Constant'
     *  Logic: '<S1239>/Logical Operator'
     *  Logic: '<S1239>/Logical Operator1'
     *  Logic: '<S1239>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_p5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_k10) {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EBLR1CB
                          != 0.0)));
    } else {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EBLR1CB
                        != 0.0));
    }

    /* End of Switch: '<S1239>/Switch' */

    /* Switch: '<S1240>/Switch' incorporates:
     *  Constant: '<S1240>/Constant'
     *  Logic: '<S1240>/Logical Operator'
     *  Logic: '<S1240>/Logical Operator1'
     *  Logic: '<S1240>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lj4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lw) {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EBLR2CB
                          != 0.0)));
    } else {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EBLR2CB
                        != 0.0));
    }

    /* End of Switch: '<S1240>/Switch' */

    /* Switch: '<S1220>/Switch' incorporates:
     *  Constant: '<S1220>/Constant'
     *  Logic: '<S1220>/Logical Operator'
     *  Logic: '<S1220>/Logical Operator1'
     *  Logic: '<S1220>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fa >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gem) {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB1
                          != 0.0)));
    } else {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB1
                        != 0.0));
    }

    /* End of Switch: '<S1220>/Switch' */

    /* Switch: '<S1221>/Switch' incorporates:
     *  Constant: '<S1221>/Constant'
     *  Logic: '<S1221>/Logical Operator'
     *  Logic: '<S1221>/Logical Operator1'
     *  Logic: '<S1221>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_eqv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ggy) {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB2
                          != 0.0)));
    } else {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB2
                        != 0.0));
    }

    /* End of Switch: '<S1221>/Switch' */

    /* Switch: '<S1222>/Switch' incorporates:
     *  Constant: '<S1222>/Constant'
     *  Logic: '<S1222>/Logical Operator'
     *  Logic: '<S1222>/Logical Operator1'
     *  Logic: '<S1222>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_eken >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_e20) {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB3
                          != 0.0)));
    } else {
      rtb_Switch_dk = (rtb_Switch_dk &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BECUCB3
                        != 0.0));
    }

    /* End of Switch: '<S1222>/Switch' */

    /* Switch: '<S1226>/Switch' incorporates:
     *  Constant: '<S1226>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1226>/Logical Operator'
     *  Logic: '<S1226>/Logical Operator1'
     *  Logic: '<S1226>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ks >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pi) {
      rtb_Switch_jc = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                        != 0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CELCB
                          != 0.0)));
    } else {
      rtb_Switch_jc = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                        != 0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CELCB
                        != 0.0));
    }

    /* End of Switch: '<S1226>/Switch' */

    /* Switch: '<S1272>/Switch' incorporates:
     *  Constant: '<S1272>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1272>/Logical Operator'
     *  Logic: '<S1272>/Logical Operator1'
     *  Logic: '<S1272>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_md >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hqv) {
      rtb_Switch_ib1 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VIO2CB
                           != 0.0)));
    } else {
      rtb_Switch_ib1 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VIO2CB
                         != 0.0));
    }

    /* End of Switch: '<S1272>/Switch' */

    /* Switch: '<S1271>/Switch' incorporates:
     *  Constant: '<S1271>/Constant'
     *  Logic: '<S1271>/Logical Operator'
     *  Logic: '<S1271>/Logical Operator1'
     *  Logic: '<S1271>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pnq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gq) {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VIO1CB
                           != 0.0)));
    } else {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VIO1CB
                         != 0.0));
    }

    /* End of Switch: '<S1271>/Switch' */

    /* Switch: '<S1228>/Switch' incorporates:
     *  Constant: '<S1228>/Constant'
     *  Logic: '<S1228>/Logical Operator'
     *  Logic: '<S1228>/Logical Operator1'
     *  Logic: '<S1228>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ho >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pj) {
      rtb_Switch_jk = (rtb_Switch_ib1 &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CRSBCB
                          != 0.0)));
    } else {
      rtb_Switch_jk = (rtb_Switch_ib1 &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CRSBCB
                        != 0.0));
    }

    /* End of Switch: '<S1228>/Switch' */

    /* Switch: '<S1266>/Switch' incorporates:
     *  Constant: '<S1266>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1266>/Logical Operator'
     *  Logic: '<S1266>/Logical Operator1'
     *  Logic: '<S1266>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ia >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bpo) {
      rtb_Switch_ib1 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TDICB
                           != 0.0)));
    } else {
      rtb_Switch_ib1 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TDICB
                         != 0.0));
    }

    /* End of Switch: '<S1266>/Switch' */

    /* Switch: '<S1259>/Switch' incorporates:
     *  Constant: '<S1259>/Constant'
     *  Logic: '<S1259>/Logical Operator'
     *  Logic: '<S1259>/Logical Operator1'
     *  Logic: '<S1259>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hek >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jj) {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RIO1CB
                           != 0.0)));
    } else {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RIO1CB
                         != 0.0));
    }

    /* End of Switch: '<S1259>/Switch' */

    /* Switch: '<S1260>/Switch' incorporates:
     *  Constant: '<S1260>/Constant'
     *  Logic: '<S1260>/Logical Operator'
     *  Logic: '<S1260>/Logical Operator1'
     *  Logic: '<S1260>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ne >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_br) {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RIO2CB
                           != 0.0)));
    } else {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RIO2CB
                         != 0.0));
    }

    /* End of Switch: '<S1260>/Switch' */

    /* Switch: '<S1232>/Switch' incorporates:
     *  Constant: '<S1232>/Constant'
     *  Logic: '<S1232>/Logical Operator'
     *  Logic: '<S1232>/Logical Operator1'
     *  Logic: '<S1232>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kwo >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ngp) {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DIOCB1
                           != 0.0)));
    } else {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DIOCB1
                         != 0.0));
    }

    /* End of Switch: '<S1232>/Switch' */

    /* Switch: '<S1233>/Switch' incorporates:
     *  Constant: '<S1233>/Constant'
     *  Logic: '<S1233>/Logical Operator'
     *  Logic: '<S1233>/Logical Operator1'
     *  Logic: '<S1233>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ocl >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lvz) {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DIOCB2
                           != 0.0)));
    } else {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DIOCB2
                         != 0.0));
    }

    /* End of Switch: '<S1233>/Switch' */

    /* Switch: '<S1231>/Switch' incorporates:
     *  Constant: '<S1231>/Constant'
     *  Logic: '<S1231>/Logical Operator'
     *  Logic: '<S1231>/Logical Operator1'
     *  Logic: '<S1231>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gpz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kyk) {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CSCCB
                           != 0.0)));
    } else {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CSCCB
                         != 0.0));
    }

    /* End of Switch: '<S1231>/Switch' */

    /* Switch: '<S1230>/Switch' incorporates:
     *  Constant: '<S1230>/Constant'
     *  Logic: '<S1230>/Logical Operator'
     *  Logic: '<S1230>/Logical Operator1'
     *  Logic: '<S1230>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_k2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_c0d) {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CSBCB
                           != 0.0)));
    } else {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CSBCB
                         != 0.0));
    }

    /* End of Switch: '<S1230>/Switch' */

    /* Switch: '<S1229>/Switch' incorporates:
     *  Constant: '<S1229>/Constant'
     *  Logic: '<S1229>/Logical Operator'
     *  Logic: '<S1229>/Logical Operator1'
     *  Logic: '<S1229>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fjn >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ksss) {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CSACB
                           != 0.0)));
    } else {
      rtb_Switch_ib1 = (rtb_Switch_ib1 &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CSACB
                         != 0.0));
    }

    /* End of Switch: '<S1229>/Switch' */

    /* Switch: '<S1234>/Switch' incorporates:
     *  Constant: '<S1234>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1234>/Logical Operator'
     *  Logic: '<S1234>/Logical Operator1'
     *  Logic: '<S1234>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bva >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_f0) {
      rtb_Switch_emj = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DLCB
                           != 0.0)));
    } else {
      rtb_Switch_emj = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DLCB
                         != 0.0));
    }

    /* End of Switch: '<S1234>/Switch' */

    /* Switch: '<S1235>/Switch' incorporates:
     *  Constant: '<S1235>/Constant'
     *  Logic: '<S1235>/Logical Operator'
     *  Logic: '<S1235>/Logical Operator1'
     *  Logic: '<S1235>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hn >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lzv) {
      rtb_Switch_cz = (rtb_Switch_jk &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DMICB
                          != 0.0)));
    } else {
      rtb_Switch_cz = (rtb_Switch_jk &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DMICB
                        != 0.0));
    }

    /* End of Switch: '<S1235>/Switch' */

    /* Switch: '<S1237>/Switch' incorporates:
     *  Constant: '<S1237>/Constant'
     *  Logic: '<S1237>/Logical Operator'
     *  Logic: '<S1237>/Logical Operator1'
     *  Logic: '<S1237>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mll >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pcg) {
      rtb_Switch_jk = (rtb_Switch_emj &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DRCB
                          != 0.0)));
    } else {
      rtb_Switch_jk = (rtb_Switch_emj &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DRCB
                        != 0.0));
    }

    /* End of Switch: '<S1237>/Switch' */

    /* Switch: '<S1236>/Switch' incorporates:
     *  Constant: '<S1236>/Constant'
     *  Logic: '<S1236>/Logical Operator'
     *  Logic: '<S1236>/Logical Operator1'
     *  Logic: '<S1236>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hbc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ejb) {
      rtb_Switch_emj = (rtb_Switch_jk &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DPLCB
                           != 0.0)));
    } else {
      rtb_Switch_emj = (rtb_Switch_jk &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DPLCB
                         != 0.0));
    }

    /* End of Switch: '<S1236>/Switch' */

    /* Switch: '<S1241>/Switch' incorporates:
     *  Constant: '<S1241>/Constant'
     *  Logic: '<S1241>/Logical Operator'
     *  Logic: '<S1241>/Logical Operator1'
     *  Logic: '<S1241>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ivq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lc) {
      rtb_Switch_emj = (rtb_Switch_emj &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EDCB
                           != 0.0)));
    } else {
      rtb_Switch_emj = (rtb_Switch_emj &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EDCB
                         != 0.0));
    }

    /* End of Switch: '<S1241>/Switch' */

    /* Switch: '<S1242>/Switch' incorporates:
     *  Constant: '<S1242>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1242>/Logical Operator'
     *  Logic: '<S1242>/Logical Operator1'
     *  Logic: '<S1242>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ewo >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kly) {
      rtb_Switch_jk = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                        != 0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ELCB1
                          != 0.0)));
    } else {
      rtb_Switch_jk = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                        != 0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ELCB1
                        != 0.0));
    }

    /* End of Switch: '<S1242>/Switch' */

    /* Switch: '<S1244>/Switch' incorporates:
     *  Constant: '<S1244>/Constant'
     *  Logic: '<S1244>/Logical Operator'
     *  Logic: '<S1244>/Logical Operator1'
     *  Logic: '<S1244>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_g0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dcc) {
      rtb_Switch_jk = (rtb_Switch_jk &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ELCB2
                          != 0.0)));
    } else {
      rtb_Switch_jk = (rtb_Switch_jk &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ELCB2
                        != 0.0));
    }

    /* End of Switch: '<S1244>/Switch' */

    /* Switch: '<S1264>/Switch' incorporates:
     *  Constant: '<S1264>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1264>/Logical Operator'
     *  Logic: '<S1264>/Logical Operator1'
     *  Logic: '<S1264>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_oww >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bwp) {
      rtb_Switch_eto = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TBCCB1
                           != 0.0)));
    } else {
      rtb_Switch_eto = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TBCCB1
                         != 0.0));
    }

    /* End of Switch: '<S1264>/Switch' */

    /* Switch: '<S1265>/Switch' incorporates:
     *  Constant: '<S1265>/Constant'
     *  Logic: '<S1265>/Logical Operator'
     *  Logic: '<S1265>/Logical Operator1'
     *  Logic: '<S1265>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fm >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eaz) {
      rtb_Switch_eto = (rtb_Switch_eto &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TBCCB2
                           != 0.0)));
    } else {
      rtb_Switch_eto = (rtb_Switch_eto &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TBCCB2
                         != 0.0));
    }

    /* End of Switch: '<S1265>/Switch' */

    /* Switch: '<S1263>/Switch' incorporates:
     *  Constant: '<S1263>/Constant'
     *  Logic: '<S1263>/Logical Operator'
     *  Logic: '<S1263>/Logical Operator1'
     *  Logic: '<S1263>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kn >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_i0c) {
      rtb_Switch_eto = (rtb_Switch_eto &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SSICB
                           != 0.0)));
    } else {
      rtb_Switch_eto = (rtb_Switch_eto &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SSICB
                         != 0.0));
    }

    /* End of Switch: '<S1263>/Switch' */

    /* Switch: '<S1246>/Switch' incorporates:
     *  Constant: '<S1246>/Constant'
     *  Logic: '<S1246>/Logical Operator'
     *  Logic: '<S1246>/Logical Operator1'
     *  Logic: '<S1246>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ez >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_p2) {
      rtb_Switch_lx = (rtb_Switch_eto &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HCB
                          != 0.0)));
    } else {
      rtb_Switch_lx = (rtb_Switch_eto &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HCB
                        != 0.0));
    }

    /* End of Switch: '<S1246>/Switch' */

    /* Switch: '<S1247>/Switch' incorporates:
     *  Constant: '<S1247>/Constant'
     *  Logic: '<S1247>/Logical Operator'
     *  Logic: '<S1247>/Logical Operator1'
     *  Logic: '<S1247>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_a1 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ht) {
      rtb_Switch_eto = (rtb_Switch_jc &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HLCB
                           != 0.0)));
    } else {
      rtb_Switch_eto = (rtb_Switch_jc &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.HLCB
                         != 0.0));
    }

    /* End of Switch: '<S1247>/Switch' */

    /* Switch: '<S1248>/Switch' incorporates:
     *  Constant: '<S1248>/Constant'
     *  Logic: '<S1248>/Logical Operator'
     *  Logic: '<S1248>/Logical Operator1'
     *  Logic: '<S1248>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lu4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_o5g) {
      rtb_Switch_jk = (rtb_Switch_jk &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB1
                          != 0.0)));
    } else {
      rtb_Switch_jk = (rtb_Switch_jk &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB1
                        != 0.0));
    }

    /* End of Switch: '<S1248>/Switch' */

    /* Switch: '<S1250>/Switch' incorporates:
     *  Constant: '<S1250>/Constant'
     *  Logic: '<S1250>/Logical Operator'
     *  Logic: '<S1250>/Logical Operator1'
     *  Logic: '<S1250>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_f20 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jhl) {
      rtb_Switch_jk = (rtb_Switch_jk &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB2
                          != 0.0)));
    } else {
      rtb_Switch_jk = (rtb_Switch_jk &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB2
                        != 0.0));
    }

    /* End of Switch: '<S1250>/Switch' */

    /* Switch: '<S1253>/Switch' incorporates:
     *  Constant: '<S1253>/Constant'
     *  Logic: '<S1253>/Logical Operator'
     *  Logic: '<S1253>/Logical Operator1'
     *  Logic: '<S1253>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lqp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eed) {
      rtb_Switch_cz = (rtb_Switch_cz &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.NVICB
                          != 0.0)));
    } else {
      rtb_Switch_cz = (rtb_Switch_cz &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.NVICB
                        != 0.0));
    }

    /* End of Switch: '<S1253>/Switch' */

    /* Switch: '<S1258>/Switch' incorporates:
     *  Constant: '<S1258>/Constant'
     *  Logic: '<S1258>/Logical Operator'
     *  Logic: '<S1258>/Logical Operator1'
     *  Logic: '<S1258>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_e5g >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_owp) {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.POCB
                          != 0.0)));
    } else {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.POCB
                        != 0.0));
    }

    /* End of Switch: '<S1258>/Switch' */

    /* Switch: '<S1268>/Switch' incorporates:
     *  Constant: '<S1268>/Constant'
     *  Logic: '<S1268>/Logical Operator'
     *  Logic: '<S1268>/Logical Operator1'
     *  Logic: '<S1268>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_c1t >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_g0l) {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TVDUCB
                          != 0.0)));
    } else {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TVDUCB
                        != 0.0));
    }

    /* End of Switch: '<S1268>/Switch' */

    /* Switch: '<S1255>/Switch' incorporates:
     *  Constant: '<S1255>/Constant'
     *  Logic: '<S1255>/Logical Operator'
     *  Logic: '<S1255>/Logical Operator1'
     *  Logic: '<S1255>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jd) {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ODDCB
                          != 0.0)));
    } else {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ODDCB
                        != 0.0));
    }

    /* End of Switch: '<S1255>/Switch' */

    /* Switch: '<S1261>/Switch' incorporates:
     *  Constant: '<S1261>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1261>/Logical Operator'
     *  Logic: '<S1261>/Logical Operator1'
     *  Logic: '<S1261>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lrd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fkw) {
      rtb_Switch_hq = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                        != 0.0) &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SAC1CCB
                          != 0.0)));
    } else {
      rtb_Switch_hq = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                        != 0.0) &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SAC1CCB
                        != 0.0));
    }

    /* End of Switch: '<S1261>/Switch' */

    /* Switch: '<S1262>/Switch' incorporates:
     *  Constant: '<S1262>/Constant'
     *  Logic: '<S1262>/Logical Operator'
     *  Logic: '<S1262>/Logical Operator1'
     *  Logic: '<S1262>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bie >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dlc) {
      rtb_Switch_hq = (rtb_Switch_hq &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SAC2CCB
                          != 0.0)));
    } else {
      rtb_Switch_hq = (rtb_Switch_hq &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.SAC2CCB
                        != 0.0));
    }

    /* End of Switch: '<S1262>/Switch' */

    /* Switch: '<S1267>/Switch' incorporates:
     *  Constant: '<S1267>/Constant'
     *  Logic: '<S1267>/Logical Operator'
     *  Logic: '<S1267>/Logical Operator1'
     *  Logic: '<S1267>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gsw >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cr3) {
      rtb_Switch_eto = (rtb_Switch_eto &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TLCB
                           != 0.0)));
    } else {
      rtb_Switch_eto = (rtb_Switch_eto &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TLCB
                         != 0.0));
    }

    /* End of Switch: '<S1267>/Switch' */

    /* Switch: '<S1273>/Switch' incorporates:
     *  Constant: '<S1273>/Constant'
     *  Logic: '<S1273>/Logical Operator'
     *  Logic: '<S1273>/Logical Operator1'
     *  Logic: '<S1273>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pxi >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dyl) {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WFLCB
                          != 0.0)));
    } else {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WFLCB
                        != 0.0));
    }

    /* End of Switch: '<S1273>/Switch' */

    /* Switch: '<S1274>/Switch' incorporates:
     *  Constant: '<S1274>/Constant'
     *  Logic: '<S1274>/Logical Operator'
     *  Logic: '<S1274>/Logical Operator1'
     *  Logic: '<S1274>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_af >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_k13) {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WWCB
                          != 0.0)));
    } else {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WWCB
                        != 0.0));
    }

    /* End of Switch: '<S1274>/Switch' */

    /* Switch: '<S1270>/Switch' incorporates:
     *  Constant: '<S1270>/Constant'
     *  Logic: '<S1270>/Logical Operator'
     *  Logic: '<S1270>/Logical Operator1'
     *  Logic: '<S1270>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ac >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_l21) {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VCBCB
                          != 0.0)));
    } else {
      rtb_Switch_lx = (rtb_Switch_lx &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.VCBCB
                        != 0.0));
    }

    /* End of Switch: '<S1270>/Switch' */

    /* Switch: '<S1277>/Switch' incorporates:
     *  Constant: '<S1277>/Constant'
     *  Constant: '<S1286>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1277>/Logical Operator'
     *  Logic: '<S1277>/Logical Operator1'
     *  Logic: '<S1277>/Logical Operator2'
     *  RelationalOperator: '<S1286>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ktb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cs) {
      rtb_Switch_mbi = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TDICB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_h45)));
    } else {
      rtb_Switch_mbi = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TDICB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_h45));
    }

    /* End of Switch: '<S1277>/Switch' */

    /* Switch: '<S1278>/Switch' incorporates:
     *  Constant: '<S1278>/Constant'
     *  Constant: '<S1287>/Constant'
     *  Logic: '<S1278>/Logical Operator'
     *  Logic: '<S1278>/Logical Operator1'
     *  Logic: '<S1278>/Logical Operator2'
     *  RelationalOperator: '<S1287>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_l21s) {
      rtb_Switch_mbi = (rtb_Switch_mbi &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DIOCB1
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cu)));
    } else {
      rtb_Switch_mbi = (rtb_Switch_mbi &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DIOCB1
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_cu));
    }

    /* End of Switch: '<S1278>/Switch' */

    /* Switch: '<S1280>/Switch' incorporates:
     *  Constant: '<S1280>/Constant'
     *  Constant: '<S1289>/Constant'
     *  Logic: '<S1280>/Logical Operator'
     *  Logic: '<S1280>/Logical Operator1'
     *  Logic: '<S1280>/Logical Operator2'
     *  RelationalOperator: '<S1289>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jj >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pz) {
      rtb_Switch_mbi = (rtb_Switch_mbi &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DIOCB2
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_b0)));
    } else {
      rtb_Switch_mbi = (rtb_Switch_mbi &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DIOCB2
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_b0));
    }

    /* End of Switch: '<S1280>/Switch' */

    /* Switch: '<S1279>/Switch' incorporates:
     *  Constant: '<S1279>/Constant'
     *  Constant: '<S1288>/Constant'
     *  Logic: '<S1279>/Logical Operator'
     *  Logic: '<S1279>/Logical Operator1'
     *  Logic: '<S1279>/Logical Operator2'
     *  RelationalOperator: '<S1288>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_cfx >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ibh) {
      rtb_Switch_mbi = (rtb_Switch_mbi &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RIO1CB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bl)));
    } else {
      rtb_Switch_mbi = (rtb_Switch_mbi &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RIO1CB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_bl));
    }

    /* End of Switch: '<S1279>/Switch' */

    /* Switch: '<S1281>/Switch' incorporates:
     *  Constant: '<S1281>/Constant'
     *  Constant: '<S1290>/Constant'
     *  Logic: '<S1281>/Logical Operator'
     *  Logic: '<S1281>/Logical Operator1'
     *  Logic: '<S1281>/Logical Operator2'
     *  RelationalOperator: '<S1290>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nn >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mp) {
      rtb_Switch_mbi = (rtb_Switch_mbi &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RIO2CB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_itl)));
    } else {
      rtb_Switch_mbi = (rtb_Switch_mbi &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RIO2CB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_itl));
    }

    /* End of Switch: '<S1281>/Switch' */

    /* Switch: '<S1313>/Switch' incorporates:
     *  Constant: '<S1313>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1313>/Logical Operator'
     *  Logic: '<S1313>/Logical Operator1'
     *  Logic: '<S1313>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_chc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fy) {
      rtb_Switch_ddv = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerOFFPB
                           != 0.0)));
    } else {
      rtb_Switch_ddv = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerOFFPB
                         != 0.0));
    }

    /* End of Switch: '<S1313>/Switch' */

    /* Switch: '<S1295>/Switch' incorporates:
     *  Constant: '<S1295>/Constant'
     *  Logic: '<S1295>/Logical Operator'
     *  Logic: '<S1295>/Logical Operator1'
     *  Logic: '<S1295>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fbv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ms) {
      rtb_Switch_ddv = (rtb_Switch_ddv &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerONPB
                           != 0.0)));
    } else {
      rtb_Switch_ddv = (rtb_Switch_ddv &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerONPB
                         != 0.0));
    }

    /* End of Switch: '<S1295>/Switch' */

    /* Switch: '<S1296>/Switch' incorporates:
     *  Constant: '<S1296>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1296>/Logical Operator'
     *  Logic: '<S1296>/Logical Operator1'
     *  Logic: '<S1296>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pm >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_kyl) {
      rtb_Switch_h4n = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerONPB
                           != 0.0)));
    } else {
      rtb_Switch_h4n = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerONPB
                         != 0.0));
    }

    /* End of Switch: '<S1296>/Switch' */

    /* Switch: '<S1305>/Switch' incorporates:
     *  Constant: '<S1305>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtb_Switch_os = localB->UnitDelay[ForEach_itr_h].TrainWires.TW11105;
    } else {
      rtb_Switch_os = ElectricalSystem_P.CoreSubsys.Constant_Value_f5;
    }

    /* End of Switch: '<S1305>/Switch' */

    /* Switch: '<S1307>/Switch' incorporates:
     *  Constant: '<S1307>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtb_Switch_e25 = localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC;
    } else {
      rtb_Switch_e25 = ElectricalSystem_P.CoreSubsys.Constant_Value_n;
    }

    /* End of Switch: '<S1307>/Switch' */

    /* Switch: '<S1311>/Switch' incorporates:
     *  Constant: '<S1311>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1311>/Logical Operator'
     *  Logic: '<S1311>/Logical Operator1'
     *  Logic: '<S1311>/Logical Operator2'
     *  UnitDelay: '<S429>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_evd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bkn) {
      rtb_DataTypeConversion12 = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TDI_110VDC != 0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ol));
    } else {
      rtb_DataTypeConversion12 = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TDI_110VDC != 0.0) && localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_ol);
    }

    /* End of Switch: '<S1311>/Switch' */

    /* Switch: '<S1312>/Switch' incorporates:
     *  Constant: '<S1312>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1312>/Logical Operator'
     *  Logic: '<S1312>/Logical Operator1'
     *  Logic: '<S1312>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ot >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_km) {
      rtb_Switch_cq = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                        != 0.0) && (!rtb_Switch_cq));
    } else {
      rtb_Switch_cq = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                        != 0.0) && rtb_Switch_cq);
    }

    /* End of Switch: '<S1312>/Switch' */

    /* Switch: '<S1314>/Switch' incorporates:
     *  Constant: '<S1314>/Constant'
     *  Logic: '<S1314>/Logical Operator'
     *  Logic: '<S1314>/Logical Operator1'
     *  Logic: '<S1314>/Logical Operator2'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_na2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nju) {
      rtb_Switch_h4n = (rtb_Switch_h4n &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerOFFPB
                           != 0.0)));
    } else {
      rtb_Switch_h4n = (rtb_Switch_h4n &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PowerOFFPB
                         != 0.0));
    }

    /* End of Switch: '<S1314>/Switch' */

    /* Switch: '<S1315>/Switch' incorporates:
     *  Constant: '<S1315>/Constant'
     *  Logic: '<S1315>/Logical Operator'
     *  Logic: '<S1315>/Logical Operator1'
     *  Logic: '<S1315>/Logical Operator2'
     *  UnitDelay: '<S134>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_poe >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fq1) {
      rtb_DataTypeConversion6_o = ((rtb_Switch_e25 != 0.0) &&
        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l0));
    } else {
      rtb_DataTypeConversion6_o = ((rtb_Switch_e25 != 0.0) &&
        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l0);
    }

    /* End of Switch: '<S1315>/Switch' */

    /* Switch: '<S1316>/Switch' incorporates:
     *  Constant: '<S1316>/Constant'
     *  Logic: '<S1316>/Logical Operator'
     *  Logic: '<S1316>/Logical Operator1'
     *  Logic: '<S1316>/Logical Operator2'
     *  UnitDelay: '<S163>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ct2 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_db0) {
      rtb_DataTypeConversion4_i = ((rtb_Switch_e25 != 0.0) &&
        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gu));
    } else {
      rtb_DataTypeConversion4_i = ((rtb_Switch_e25 != 0.0) &&
        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gu);
    }

    /* End of Switch: '<S1316>/Switch' */

    /* Logic: '<S1317>/Logical Operator40' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1214>/Logical Operator1'
     *  Logic: '<S1317>/Logical Operator39'
     *  Logic: '<S1317>/Logical Operator41'
     *  Memory: '<S1317>/Memory'
     *  RelationalOperator: '<S1299>/FixPt Relational Operator'
     *  UnitDelay: '<S1299>/Delay Input1'
     */
    rtb_LogicalOperator40_ab = ((((localB->UnitDelay[ForEach_itr_h].
      TrainWires.TW_LHPBR != 0.0) && rtb_LogicalOperator_dj) ||
      localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_mf) &&
      (!(localB->UnitDelay[ForEach_itr_h].TrainWires.TW_LHPBR <
         localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_j)));

    /* Switch: '<S1319>/Switch' incorporates:
     *  Constant: '<S1319>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1319>/Logical Operator'
     *  Logic: '<S1319>/Logical Operator1'
     *  Logic: '<S1319>/Logical Operator2'
     *  UnitDelay: '<S1188>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_km >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dmq) {
      rtb_DataTypeConversion13 = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TDI_110VDC != 0.0) && (!localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_d0));
    } else {
      rtb_DataTypeConversion13 = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TDI_110VDC != 0.0) && localDW->CoreSubsys[ForEach_itr_h].
        UnitDelay_DSTATE_d0);
    }

    /* End of Switch: '<S1319>/Switch' */

    /* BusAssignment: '<S1328>/Bus Assignment4' incorporates:
     *  Constant: '<S1328>/Constant1'
     *  DataTypeConversion: '<S1328>/Data Type Conversion1'
     *  DataTypeConversion: '<S1328>/Data Type Conversion36'
     *  DataTypeConversion: '<S1328>/Data Type Conversion38'
     *  DataTypeConversion: '<S1328>/Data Type Conversion39'
     */
    rtb_Switch_e25 =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.EmergencyBrakePBLight;
    rtb_Switch_SignallingLights =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.SignallingLights;
    rtb_Switch_IdentificationLights =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.IdentificationLights;
    rtb_Switch_WiperPosition =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.WiperPosition;
    rtb_Switch_LeftDoor1LEDIndicator =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.LeftDoor1LEDIndicator;
    rtb_Switch_LeftDoor2LEDIndicator =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.LeftDoor2LEDIndicator;
    rtb_Switch_LeftDoor3LEDIndicator =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.LeftDoor3LEDIndicator;
    rtb_Switch_LeftDoor4LEDIndicator =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.LeftDoor4LEDIndicator;
    rtb_Switch_RightDoor1LEDIndicator =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.RightDoor1LEDIndicator;
    rtb_Switch_RightDoor2LEDIndicator =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.RightDoor2LEDIndicator;
    rtb_Switch_RightDoor3LEDIndicator =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.RightDoor3LEDIndicator;
    rtb_Switch_RightDoor4LEDIndicator =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_a.RightDoor4LEDIndicator;
    rtb_Switch_VCBClosePBLamp = rtb_Switch_ke;
    rtb_Switch_VCBOpenPBLamp = rtb_Switch_h50;
    rtb_Switch_PantoUpPBLamp = rtb_Switch_gy;
    rtb_Switch_PantoDownPBLamp = rtb_Switch_k0;

    /* BusAssignment: '<S1328>/Bus Assignment2' incorporates:
     *  DataTypeConversion: '<S1328>/Data Type Conversion15'
     *  DataTypeConversion: '<S1328>/Data Type Conversion5'
     *  DataTypeConversion: '<S1328>/Data Type Conversion58'
     *  Logic: '<S214>/AND1'
     *  Logic: '<S214>/NOT'
     *  Logic: '<S252>/OR2'
     */
    rtb_Switch_AllDoorsClosedLight =
      ((!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.AllDoorCloseIndicatorNotWorking
          != 0.0)) && rtb_LogicalOperator_kp);
    rtb_Switch_ParkBrakeApplyPBLight = rtb_LogicalOperator1_dl;
    rtb_Switch_OverheadLineVoltageGauge = rtb_Merge_a;
    rtb_Switch_Speedometer = ratio;
    rtb_Switch_FloodLight = (tmp_9 || tmp_a || tmp_b);
    rtb_Switch_FlasherLight = diff;
    rtb_Switch_UTOOrRMLight = rtb_Switch_dul;
    rtb_Switch_MarkerOrTailLight = rtb_PulseGenerator;

    /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
     *  DataTypeConversion: '<S1328>/Data Type Conversion10'
     *  DataTypeConversion: '<S1328>/Data Type Conversion11'
     *  DataTypeConversion: '<S1328>/Data Type Conversion18'
     *  DataTypeConversion: '<S1328>/Data Type Conversion23'
     *  DataTypeConversion: '<S1328>/Data Type Conversion7'
     *  DataTypeConversion: '<S1328>/Data Type Conversion8'
     *  DataTypeConversion: '<S1328>/Data Type Conversion9'
     */
    rtb_Switch_HornPBLamp = rtb_OR20;
    rtb_Switch_CabConsoleLight = rtb_Switch_ge;
    rtb_Switch_LeftDoorClosePBOperatingPanel1Lamp =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.LeftDoorClosePBLight;
    rtb_Switch_LeftDoorOpenPBOperatingPanel1Lamp =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.LeftDoorAuth_Opened_Op1;
    rtb_Switch_RightDoorOpenPBOperatingPanel1Lamp =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.RightDoorAuth_Opened_Op1;
    rtb_Switch_RightDoorClosePBOperatingPanel1Lamp =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.RightDoorClosePBLight;
    rtb_Switch_CabMainLight = rtb_Switch_iu2;

    /* Switch: '<S935>/Switch' incorporates:
     *  Constant: '<S935>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_c0) {
      /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
       *  Constant: '<S947>/Constant'
       *  DataTypeConversion: '<S1328>/Data Type Conversion22'
       *  Logic: '<S935>/Logical Operator1'
       *  Logic: '<S935>/Logical Operator2'
       *  RelationalOperator: '<S947>/Compare'
       */
      rtb_Switch_DoorCloseAnnouncementLamp = (rtb_Switch_mfe &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DoorCloseAnnouncementPB
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ig)));
    } else {
      /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
       *  Constant: '<S947>/Constant'
       *  DataTypeConversion: '<S1328>/Data Type Conversion22'
       *  Logic: '<S935>/Logical Operator'
       *  RelationalOperator: '<S947>/Compare'
       */
      rtb_Switch_DoorCloseAnnouncementLamp = (rtb_Switch_mfe &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DoorCloseAnnouncementPB
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ig));
    }

    /* End of Switch: '<S935>/Switch' */

    /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
     *  DataTypeConversion: '<S1328>/Data Type Conversion19'
     *  DataTypeConversion: '<S1328>/Data Type Conversion24'
     *  DataTypeConversion: '<S1328>/Data Type Conversion25'
     *  DataTypeConversion: '<S1328>/Data Type Conversion26'
     *  DataTypeConversion: '<S1328>/Data Type Conversion28'
     *  DataTypeConversion: '<S1328>/Data Type Conversion29'
     *  DataTypeConversion: '<S1328>/Data Type Conversion30'
     */
    rtb_Switch_LampTestPBLamp = rtb_AllDoorsClosedLight;
    rtb_Switch_UncouplePBLamp = rtb_Switch_ii;
    rtb_Switch_FlasherLightPBLamp = rtb_Switch_ko5;
    rtb_Switch_FloodLightPBLamp = rtb_Switch_fz;
    rtb_Switch_BatteryResetPBLamp = rtb_Switch_egb;
    rtb_Switch_RightDoorOpenPBOperatingPanel5Lamp =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.RightDoorAuth_Opened_Op2_5;
    rtb_Switch_RightDoorClosePBOperatingPanel5Lamp =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.RightDoorClosePBLight;

    /* Switch: '<S849>/Switch' incorporates:
     *  Constant: '<S849>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bsb >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jpr) {
      /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
       *  Constant: '<S852>/Constant'
       *  DataTypeConversion: '<S1328>/Data Type Conversion31'
       *  Logic: '<S849>/Logical Operator1'
       *  Logic: '<S849>/Logical Operator2'
       *  RelationalOperator: '<S852>/Compare'
       */
      rtb_Switch_WFLTestPBLamp = (rtb_Switch_ocb &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WFLTestPB
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_da)));
    } else {
      /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
       *  Constant: '<S852>/Constant'
       *  DataTypeConversion: '<S1328>/Data Type Conversion31'
       *  Logic: '<S849>/Logical Operator'
       *  RelationalOperator: '<S852>/Compare'
       */
      rtb_Switch_WFLTestPBLamp = (rtb_Switch_ocb &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.WFLTestPB
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_da));
    }

    /* End of Switch: '<S849>/Switch' */

    /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
     *  DataTypeConversion: '<S1328>/Data Type Conversion27'
     *  DataTypeConversion: '<S1328>/Data Type Conversion33'
     *  DataTypeConversion: '<S1328>/Data Type Conversion34'
     */
    rtb_Switch_SaloonDoorCloseIndicator = rtb_LogicalOperator_kp;
    rtb_Switch_ParkBrakeOnPBLamp = rtb_DataTypeConversion8_m;
    rtb_Switch_ParkBrakeOffPBLamp = rtb_Switch_et;

    /* Switch: '<S233>/Switch' incorporates:
     *  Constant: '<S233>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
        UnitWires.UW11104;
    } else {
      rtu_ElectricalVehicleConfig_0 =
        ElectricalSystem_P.CoreSubsys.Constant_Value_d1;
    }

    /* End of Switch: '<S233>/Switch' */

    /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
     *  DataTypeConversion: '<S1328>/Data Type Conversion35'
     *  DataTypeConversion: '<S1328>/Data Type Conversion40'
     *  DataTypeConversion: '<S1328>/Data Type Conversion41'
     *  DataTypeConversion: '<S1328>/Data Type Conversion43'
     *  DataTypeConversion: '<S1328>/Data Type Conversion44'
     *  DataTypeConversion: '<S1328>/Data Type Conversion45'
     *  Logic: '<S215>/Logical Operator1'
     *  Logic: '<S215>/Logical Operator3'
     *  Logic: '<S215>/NOT1'
     */
    rtb_Switch_LineVoltageIndicator = ((rtb_AllDoorsClosedLight ||
      (rtu_ElectricalVehicleConfig_0 != 0.0)) &&
      (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.LineVoltageIndicatorNotWorking
         != 0.0)));
    rtb_Switch_LeftDoorOpenPBOperatingPanel2Lamp =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.LeftDoorAuth_Opened_Op2_5;
    rtb_Switch_LeftDoorClosePBOperatingPanel2Lamp =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.LeftDoorClosePBLight;
    rtb_Switch_LIMPHomePBLamp = rtb_Switch_gh;
    rtb_Switch_PowerOFFPBLamp = rtb_Switch_n3;
    rtb_Switch_CallOnLightPBLamp = rtb_Switch_ai;

    /* Switch: '<S236>/Switch' incorporates:
     *  Constant: '<S236>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW_APSFault;
    } else {
      rtu_ElectricalVehicleConfig_0 =
        ElectricalSystem_P.CoreSubsys.Constant_Value_dr;
    }

    /* End of Switch: '<S236>/Switch' */

    /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
     *  DataTypeConversion: '<S1328>/Data Type Conversion42'
     *  Logic: '<S215>/Logical Operator18'
     */
    rtb_Switch_APSFaultIndicator = (rtb_AllDoorsClosedLight ||
      (rtu_ElectricalVehicleConfig_0 != 0.0));

    /* Switch: '<S235>/Switch' incorporates:
     *  Constant: '<S235>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      rtu_ElectricalVehicleConfig_0 = localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW_VCBTripByCI;
    } else {
      rtu_ElectricalVehicleConfig_0 =
        ElectricalSystem_P.CoreSubsys.Constant_Value_e5;
    }

    /* End of Switch: '<S235>/Switch' */

    /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
     *  DataTypeConversion: '<S1328>/Data Type Conversion46'
     *  Logic: '<S215>/Logical Operator19'
     */
    rtb_Switch_PowerFaultIndicator = (rtb_AllDoorsClosedLight ||
      (rtu_ElectricalVehicleConfig_0 != 0.0));

    /* Switch: '<S243>/Switch' incorporates:
     *  Constant: '<S243>/Constant'
     *  Logic: '<S243>/Logical Operator'
     *  Logic: '<S243>/Logical Operator1'
     *  Logic: '<S243>/Logical Operator2'
     *  UnitDelay: '<S474>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ca >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_aq) {
      tmp_9 = (rtb_OR1 && (!(localDW->CoreSubsys[ForEach_itr_h].
                 UnitDelay_DSTATE_bl != 0.0)));
    } else {
      tmp_9 = (rtb_OR1 && (localDW->CoreSubsys[ForEach_itr_h].
                           UnitDelay_DSTATE_bl != 0.0));
    }

    /* End of Switch: '<S243>/Switch' */

    /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
     *  DataTypeConversion: '<S1328>/Data Type Conversion47'
     *  Logic: '<S215>/Logical Operator20'
     */
    rtb_Switch_EmergencyBrakeIndicator = (rtb_AllDoorsClosedLight || tmp_9);

    /* Switch: '<S766>/Switch' incorporates:
     *  Constant: '<S766>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S766>/Logical Operator'
     *  Logic: '<S766>/Logical Operator1'
     *  Logic: '<S766>/Logical Operator2'
     *  UnitDelay: '<S403>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_db >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ji) {
      tmp_9 = ((localB->UnitDelay[ForEach_itr_h].UnitWires.UW_VCBTrip != 0.0) &&
               (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ob));
    } else {
      tmp_9 = ((localB->UnitDelay[ForEach_itr_h].UnitWires.UW_VCBTrip != 0.0) &&
               localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ob);
    }

    /* End of Switch: '<S766>/Switch' */

    /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
     *  DataTypeConversion: '<S1328>/Data Type Conversion48'
     *  Logic: '<S215>/Logical Operator23'
     */
    rtb_Switch_VCBTripIndicator = (rtb_AllDoorsClosedLight || tmp_9);

    /* Switch: '<S241>/Switch' incorporates:
     *  Constant: '<S241>/Constant'
     *  Logic: '<S241>/Logical Operator'
     *  Logic: '<S241>/Logical Operator1'
     *  Logic: '<S241>/Logical Operator2'
     *  UnitDelay: '<S399>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_mc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ib) {
      tmp_9 = (rtb_OR1 && (!localDW->CoreSubsys[ForEach_itr_h].
                           UnitDelay_DSTATE_pn));
    } else {
      tmp_9 = (rtb_OR1 && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_pn);
    }

    /* End of Switch: '<S241>/Switch' */

    /* Switch: '<S242>/Switch' incorporates:
     *  Constant: '<S242>/Constant'
     *  Logic: '<S242>/Logical Operator'
     *  Logic: '<S242>/Logical Operator1'
     *  Logic: '<S242>/Logical Operator2'
     *  UnitDelay: '<S401>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ap >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ei) {
      tmp_a = (rtb_OR1 && (!localDW->CoreSubsys[ForEach_itr_h].
                           UnitDelay_DSTATE_ph));
    } else {
      tmp_a = (rtb_OR1 && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ph);
    }

    /* End of Switch: '<S242>/Switch' */

    /* BusAssignment: '<S1328>/Bus Assignment1' incorporates:
     *  CombinatorialLogic: '<S829>/Logic'
     *  DataTypeConversion: '<S1328>/Data Type Conversion12'
     *  DataTypeConversion: '<S1328>/Data Type Conversion2'
     *  DataTypeConversion: '<S1328>/Data Type Conversion49'
     *  DataTypeConversion: '<S1328>/Data Type Conversion50'
     *  DataTypeConversion: '<S1328>/Data Type Conversion59'
     *  Logic: '<S1328>/OR'
     *  Logic: '<S215>/Logical Operator2'
     *  Logic: '<S215>/Logical Operator21'
     *  Logic: '<S215>/Logical Operator22'
     *  Logic: '<S215>/Logical Operator4'
     *  Logic: '<S215>/Logical Operator5'
     *  Logic: '<S215>/NOT'
     *  Logic: '<S837>/OR'
     */
    rtb_Switch_OtherCabOccupiedIndicator = ((tmp_9 || tmp_a ||
      rtb_AllDoorsClosedLight) &&
      (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.OtherCabOccupiedIndicatorFaulty
         != 0.0)));
    rtb_Switch_HVACFaultIndicator = (rtb_AllDoorsClosedLight || (rtb_Switch_dgm &&
      rtb_OR1));
    rtb_Switch_AuxModuleON =
      (ElectricalSystem_P.CoreSubsys.Logic_table_l[numCycles] || rtb_Logic_idx_0);
    rtb_Switch_LeftDoorOpenPB1OperatingPanel2Lamp =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.LeftDoorOpenPBLight;
    rtb_Switch_RightDoorOpenPB1OperatingPanel5Lamp =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.RightDoorOpenPBLight;

    /* Switch: '<S1116>/Switch' incorporates:
     *  Constant: '<S1117>/Constant'
     *  Constant: '<S1125>/Constant'
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     *  Switch: '<S1117>/Switch'
     *  Switch: '<S1119>/Switch'
     *  Switch: '<S1125>/Switch'
     *  Switch: '<S1126>/Switch'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* BusAssignment: '<S1328>/Bus Assignment5' */
      rtb_Switch_ROSPBLamp =
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ROSIndication;
      rtb_Switch_UTOPBLamp =
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.UTOPBIndicator;
      rtb_Switch_ATOStartPBLamp =
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ATOStartIndicator;
      rtu_ElectricalVehicleConfig_0 =
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.SBResetIndicator;
      rtb_Switch_jc = rtb_Switch_lxd;
    } else {
      /* BusAssignment: '<S1328>/Bus Assignment5' incorporates:
       *  Constant: '<S1116>/Constant'
       *  Constant: '<S1119>/Constant'
       *  Constant: '<S1126>/Constant'
       */
      rtb_Switch_ROSPBLamp = ElectricalSystem_P.CoreSubsys.Constant_Value_ij;
      rtb_Switch_UTOPBLamp = ElectricalSystem_P.CoreSubsys.Constant_Value_k4;
      rtb_Switch_ATOStartPBLamp = ElectricalSystem_P.CoreSubsys.Constant_Value_k;
      rtu_ElectricalVehicleConfig_0 =
        ElectricalSystem_P.CoreSubsys.Constant_Value_i;
      rtb_Switch_jc = ElectricalSystem_P.CoreSubsys.Constant_Value_bpg;
    }

    /* End of Switch: '<S1116>/Switch' */

    /* BusAssignment: '<S1328>/Bus Assignment5' incorporates:
     *  DataTypeConversion: '<S1328>/Data Type Conversion16'
     *  DataTypeConversion: '<S1328>/Data Type Conversion54'
     *  Logic: '<S1086>/Logical Operator2'
     */
    rtu_ElectricalVehicleConfig_0 = ((rtu_ElectricalVehicleConfig_0 != 0.0) ||
      rtb_Switch_jc);
    rtb_Switch_WiperPositionLeft = rtb_MatchedYPosition_k;
    rtb_Switch_WiperWash = rtb_DataTypeConversion11_i;

    /* Outputs for Atomic SubSystem: '<S1336>/TimerOnDelay NoInit' */
    ElectricalSystem_TimerOnDelayNoInit
      (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.ModelStatus.IsInitialized,
       &localB->CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit,
       &localDW->CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit,
       &ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit,
       ElectricalSystem_P.CoreSubsys.TimerOnDelayNoInit_UpperSaturationLimit_a);

    /* End of Outputs for SubSystem: '<S1336>/TimerOnDelay NoInit' */

    /* Switch: '<S1336>/Switch' incorporates:
     *  Constant: '<S1336>/Constant'
     */
    if (!localB->CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit.Compare) {
      rtb_Switch_VCBClosePBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.VCBClosePBLamp;
      rtb_Switch_VCBOpenPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.VCBOpenPBLamp;
      rtb_Switch_AllDoorsClosedLight =
        ElectricalSystem_P.CoreSubsys.Constant_Value.AllDoorsClosedLight;
      rtb_Switch_e25 =
        ElectricalSystem_P.CoreSubsys.Constant_Value.EmergencyBrakePBLight;
      rtb_Switch_ParkBrakeApplyPBLight =
        ElectricalSystem_P.CoreSubsys.Constant_Value.ParkBrakeApplyPBLight;
      rtb_Switch_g0z =
        ElectricalSystem_P.CoreSubsys.Constant_Value.BatteryVoltageGauge;
      rtb_Switch_OverheadLineVoltageGauge =
        ElectricalSystem_P.CoreSubsys.Constant_Value.OverheadLineVoltageGauge;
      rtb_Switch_FloodLight =
        ElectricalSystem_P.CoreSubsys.Constant_Value.FloodLight;
      rtb_Switch_FlasherLight =
        ElectricalSystem_P.CoreSubsys.Constant_Value.FlasherLight;
      rtb_Switch_UTOOrRMLight =
        ElectricalSystem_P.CoreSubsys.Constant_Value.UTOOrRMLight;
      rtb_Switch_MarkerOrTailLight =
        ElectricalSystem_P.CoreSubsys.Constant_Value.MarkerOrTailLight;
      rtb_Switch_HeadLight =
        ElectricalSystem_P.CoreSubsys.Constant_Value.HeadLight;
      rtb_Switch_SignallingLights =
        ElectricalSystem_P.CoreSubsys.Constant_Value.SignallingLights;
      rtb_Switch_IdentificationLights =
        ElectricalSystem_P.CoreSubsys.Constant_Value.IdentificationLights;
      rtb_Switch_Speedometer =
        ElectricalSystem_P.CoreSubsys.Constant_Value.Speedometer;
      rtb_Switch_WiperPosition =
        ElectricalSystem_P.CoreSubsys.Constant_Value.WiperPosition;
      rtb_Switch_HornPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.HornPBLamp;
      rtb_Switch_LeftDoorClosePBOperatingPanel1Lamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LeftDoorClosePBOperatingPanel1Lamp;
      rtb_Switch_LeftDoorOpenPBOperatingPanel1Lamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LeftDoorOpenPBOperatingPanel1Lamp;
      rtb_Switch_RightDoorOpenPBOperatingPanel1Lamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.RightDoorOpenPBOperatingPanel1Lamp;
      rtb_Switch_RightDoorClosePBOperatingPanel1Lamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.RightDoorClosePBOperatingPanel1Lamp;
      rtb_Switch_CabMainLight =
        ElectricalSystem_P.CoreSubsys.Constant_Value.CabMainLight;
      rtb_Switch_CabConsoleLight =
        ElectricalSystem_P.CoreSubsys.Constant_Value.CabConsoleLight;
      rtb_Switch_DoorCloseAnnouncementLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.DoorCloseAnnouncementLamp;
      rtb_Switch_LampTestPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LampTestPBLamp;
      rtb_Switch_UncouplePBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.UncouplePBLamp;
      rtb_Switch_FlasherLightPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.FlasherLightPBLamp;
      rtb_Switch_FloodLightPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.FloodLightPBLamp;
      rtb_Switch_BatteryResetPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.BatteryResetPBLamp;
      rtb_Switch_RightDoorOpenPBOperatingPanel5Lamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.RightDoorOpenPBOperatingPanel5Lamp;
      rtb_Switch_RightDoorClosePBOperatingPanel5Lamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.RightDoorClosePBOperatingPanel5Lamp;
      rtb_Switch_WFLTestPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.WFLTestPBLamp;
      rtb_Switch_SaloonDoorCloseIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.SaloonDoorCloseIndicator;
      rtb_Switch_ParkBrakeOnPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.ParkBrakeOnPBLamp;
      rtb_Switch_ParkBrakeOffPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.ParkBrakeOffPBLamp;
      rtb_Switch_LineVoltageIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LineVoltageIndicator;
      rtb_Switch_LeftDoorOpenPBOperatingPanel2Lamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LeftDoorOpenPBOperatingPanel2Lamp;
      rtb_Switch_LeftDoorClosePBOperatingPanel2Lamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LeftDoorClosePBOperatingPanel2Lamp;
      rtb_Switch_PantoUpPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.PantoUpPBLamp;
      rtb_Switch_PantoDownPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.PantoDownPBLamp;
      rtb_Switch_LIMPHomePBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LIMPHomePBLamp;
      rtb_Switch_PowerOFFPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.PowerOFFPBLamp;
      rtb_Switch_CallOnLightPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.CallOnLightPBLamp;
      rtb_Switch_APSFaultIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.APSFaultIndicator;
      rtb_Switch_PowerFaultIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.PowerFaultIndicator;
      rtb_Switch_EmergencyBrakeIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.EmergencyBrakeIndicator;
      rtb_Switch_VCBTripIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.VCBTripIndicator;
      rtb_Switch_OtherCabOccupiedIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.OtherCabOccupiedIndicator;
      rtb_Switch_HVACFaultIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.HVACFaultIndicator;
      rtb_Switch_ROSPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.ROSPBLamp;
      rtb_Switch_UTOPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.UTOPBLamp;
      rtb_Switch_ATOStartPBLamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.ATOStartPBLamp;
      rtu_ElectricalVehicleConfig_0 =
        ElectricalSystem_P.CoreSubsys.Constant_Value.EBResetPBLamp;
      rtb_Switch_AuxModuleON =
        ElectricalSystem_P.CoreSubsys.Constant_Value.AuxModuleON;
      rtb_Switch_LeftDoorOpenPB1OperatingPanel2Lamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LeftDoorOpenPB1OperatingPanel2Lamp;
      rtb_Switch_RightDoorOpenPB1OperatingPanel5Lamp =
        ElectricalSystem_P.CoreSubsys.Constant_Value.RightDoorOpenPB1OperatingPanel5Lamp;
      rtb_Switch_LeftDoor1LEDIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LeftDoor1LEDIndicator;
      rtb_Switch_LeftDoor2LEDIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LeftDoor2LEDIndicator;
      rtb_Switch_LeftDoor3LEDIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LeftDoor3LEDIndicator;
      rtb_Switch_LeftDoor4LEDIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.LeftDoor4LEDIndicator;
      rtb_Switch_RightDoor1LEDIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.RightDoor1LEDIndicator;
      rtb_Switch_RightDoor2LEDIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.RightDoor2LEDIndicator;
      rtb_Switch_RightDoor3LEDIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.RightDoor3LEDIndicator;
      rtb_Switch_RightDoor4LEDIndicator =
        ElectricalSystem_P.CoreSubsys.Constant_Value.RightDoor4LEDIndicator;
      rtb_Switch_WiperPositionLeft =
        ElectricalSystem_P.CoreSubsys.Constant_Value.WiperPositionLeft;
      rtb_Switch_WiperPositionCenter =
        ElectricalSystem_P.CoreSubsys.Constant_Value.WiperPositionCenter;
      rtb_Switch_WiperPositionRight =
        ElectricalSystem_P.CoreSubsys.Constant_Value.WiperPositionRight;
      rtb_Switch_WiperWash =
        ElectricalSystem_P.CoreSubsys.Constant_Value.WiperWash;
    }

    /* End of Switch: '<S1336>/Switch' */

    /* Switch: '<S197>/Switch' incorporates:
     *  Constant: '<S197>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hfd >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_c2) {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S205>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S197>/Logical Operator1'
       *  Logic: '<S197>/Logical Operator2'
       *  RelationalOperator: '<S205>/Compare'
       */
      rtb_DCUPower[0] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoor1DCUCB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_m)));
    } else {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S205>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S197>/Logical Operator'
       *  RelationalOperator: '<S205>/Compare'
       */
      rtb_DCUPower[0] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoor1DCUCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_m));
    }

    /* End of Switch: '<S197>/Switch' */

    /* Switch: '<S198>/Switch' incorporates:
     *  Constant: '<S198>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kea >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_c4) {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S206>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S198>/Logical Operator1'
       *  Logic: '<S198>/Logical Operator2'
       *  RelationalOperator: '<S206>/Compare'
       */
      rtb_DCUPower[1] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoor2DCUCB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_k3)));
    } else {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S206>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S198>/Logical Operator'
       *  RelationalOperator: '<S206>/Compare'
       */
      rtb_DCUPower[1] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoor2DCUCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_k3));
    }

    /* End of Switch: '<S198>/Switch' */

    /* Switch: '<S199>/Switch' incorporates:
     *  Constant: '<S199>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ey >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_md) {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S207>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S199>/Logical Operator1'
       *  Logic: '<S199>/Logical Operator2'
       *  RelationalOperator: '<S207>/Compare'
       */
      rtb_DCUPower[2] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoor3DCUCB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_e4)));
    } else {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S207>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S199>/Logical Operator'
       *  RelationalOperator: '<S207>/Compare'
       */
      rtb_DCUPower[2] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoor3DCUCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_e4));
    }

    /* End of Switch: '<S199>/Switch' */

    /* Switch: '<S200>/Switch' incorporates:
     *  Constant: '<S200>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ce >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ifs) {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S208>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S200>/Logical Operator1'
       *  Logic: '<S200>/Logical Operator2'
       *  RelationalOperator: '<S208>/Compare'
       */
      rtb_DCUPower[3] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoor4DCUCB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_mm)));
    } else {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S208>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S200>/Logical Operator'
       *  RelationalOperator: '<S208>/Compare'
       */
      rtb_DCUPower[3] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoor4DCUCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_mm));
    }

    /* End of Switch: '<S200>/Switch' */

    /* Switch: '<S201>/Switch' incorporates:
     *  Constant: '<S201>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_g5 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_e2r) {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S209>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S201>/Logical Operator1'
       *  Logic: '<S201>/Logical Operator2'
       *  RelationalOperator: '<S209>/Compare'
       */
      rtb_DCUPower[4] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoor1DCUCB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_j5)));
    } else {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S209>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S201>/Logical Operator'
       *  RelationalOperator: '<S209>/Compare'
       */
      rtb_DCUPower[4] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoor1DCUCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_j5));
    }

    /* End of Switch: '<S201>/Switch' */

    /* Switch: '<S202>/Switch' incorporates:
     *  Constant: '<S202>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pt) {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S210>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S202>/Logical Operator1'
       *  Logic: '<S202>/Logical Operator2'
       *  RelationalOperator: '<S210>/Compare'
       */
      rtb_DCUPower[5] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoor2DCUCB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ft)));
    } else {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S210>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S202>/Logical Operator'
       *  RelationalOperator: '<S210>/Compare'
       */
      rtb_DCUPower[5] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoor2DCUCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ft));
    }

    /* End of Switch: '<S202>/Switch' */

    /* Switch: '<S195>/Switch' incorporates:
     *  Constant: '<S195>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_kev >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lm) {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S203>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S195>/Logical Operator1'
       *  Logic: '<S195>/Logical Operator2'
       *  RelationalOperator: '<S203>/Compare'
       */
      rtb_DCUPower[6] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoor3DCUCB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_d5)));
    } else {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S203>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S195>/Logical Operator'
       *  RelationalOperator: '<S203>/Compare'
       */
      rtb_DCUPower[6] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoor3DCUCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_d5));
    }

    /* End of Switch: '<S195>/Switch' */

    /* Switch: '<S196>/Switch' incorporates:
     *  Constant: '<S196>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ec >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ow) {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S204>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S196>/Logical Operator1'
       *  Logic: '<S196>/Logical Operator2'
       *  RelationalOperator: '<S204>/Compare'
       */
      rtb_DCUPower[7] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoor4DCUCB
                            ==
                            ElectricalSystem_P.CoreSubsys.CompareToConstant_const_eia)));
    } else {
      /* SignalConversion generated from: '<S1327>/Subsystem' incorporates:
       *  Constant: '<S204>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S196>/Logical Operator'
       *  RelationalOperator: '<S204>/Compare'
       */
      rtb_DCUPower[7] = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 !=
                          0.0) &&
                         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoor4DCUCB
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_eia));
    }

    /* End of Switch: '<S196>/Switch' */

    /* Outputs for Iterator SubSystem: '<S1327>/Subsystem' incorporates:
     *  ForEach: '<S1335>/For Each'
     */
    for (ForEach_itr_gs = 0; ForEach_itr_gs < 8; ForEach_itr_gs++) {
      /* ForEachSliceAssignment generated from: '<S1335>/Out1' incorporates:
       *  DataTypeConversion: '<S1335>/Data Type Conversion9'
       *  ForEachSliceSelector generated from: '<S1335>/In1'
       */
      rtb_ImpAsg_InsertedFor_Out1_at_inport_0_d[ForEach_itr_gs] =
        rtb_DCUPower[ForEach_itr_gs];
    }

    /* End of Outputs for SubSystem: '<S1327>/Subsystem' */

    /* Logic: '<S1322>/Logical Operator' */
    rtb_LogicalOperator_dj = (rtb_DG1182 || rtb_LogicalOperator_dj);

    /* BusAssignment: '<S1322>/Bus Assignment' incorporates:
     *  RelationalOperator: '<S1334>/FixPt Relational Operator'
     *  UnitDelay: '<S1334>/Delay Input1'
     */
    rtb_Switch_egb = (static_cast<int32_T>
                      (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.VCBPressureSwitch)
                      < static_cast<int32_T>(localDW->CoreSubsys[ForEach_itr_h].
      DelayInput1_DSTATE_cu));

    /* Switch: '<S1339>/Switch' incorporates:
     *  Constant: '<S1333>/Constant1'
     *  Constant: '<S1339>/Constant'
     *  Logic: '<S1339>/Logical Operator'
     *  Logic: '<S1339>/Logical Operator1'
     *  Logic: '<S1339>/Logical Operator2'
     *  UnitDelay: '<S472>/Unit Delay'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ox >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_j3u) {
      rtb_Switch_iu2 = (ElectricalSystem_P.CoreSubsys.Constant1_Value_d &&
                        (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_db));
    } else {
      rtb_Switch_iu2 = (ElectricalSystem_P.CoreSubsys.Constant1_Value_d &&
                        localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_db);
    }

    /* End of Switch: '<S1339>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/OrientationWireSources' incorporates:
     *  BusAssignment: '<S1321>/Bus Assignment3'
     *  Constant: '<S1321>/Constant3'
     */
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h] =
      ElectricalSystem_P.CoreSubsys.Constant3_Value;

    /* BusAssignment: '<S1321>/Bus Assignment3' incorporates:
     *  DataTypeConversion: '<S1321>/Data Type Conversion37'
     *  DataTypeConversion: '<S1321>/Data Type Conversion38'
     *  DataTypeConversion: '<S1321>/Data Type Conversion39'
     *  DataTypeConversion: '<S1321>/Data Type Conversion40'
     *  DataTypeConversion: '<S1321>/Data Type Conversion41'
     *  DataTypeConversion: '<S1321>/Data Type Conversion42'
     *  DataTypeConversion: '<S1321>/Data Type Conversion59'
     *  DataTypeConversion: '<S1321>/Data Type Conversion61'
     *  DataTypeConversion: '<S1321>/Data Type Conversion62'
     *  DataTypeConversion: '<S1321>/Data Type Conversion63'
     *  ForEachSliceAssignment generated from: '<S1>/OrientationWireSources'
     *  Logic: '<S84>/OR2'
     *  Logic: '<S84>/OR23'
     *  Logic: '<S84>/OR25'
     *  Logic: '<S84>/OR4'
     */
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
      TWForward = rtb_OR6_a;
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
      TWReverse = rtb_w1;
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
      TW_LeftDoorClose = localB->CoreSubsys[ForEach_itr_h].
      TimerOnDelayNoInit2.Compare;
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
      TW_RightDoorClose = localB->CoreSubsys[ForEach_itr_h].
      TimerOnDelayNoInit3.Compare;
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
      TW_LeftDoorOpen = rtb_OR8_f;
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
      TW_RightDoorOpen = rtb_Switch_io;
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
      TW_LDE = (tmp_7 || tmp_8);
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
      TW_RDE = (tmp_5 || tmp_6);
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
      TW_LHDC = (tmp_3 || rtb_Switch_f);
    rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
      TW_RHDC = (tmp_4 || rtb_Switch_hy);

    /* Switch: '<S132>/Switch' incorporates:
     *  Constant: '<S132>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_on >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_o0) {
      /* BusAssignment: '<S1321>/Bus Assignment3' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion35'
       *  ForEachSliceAssignment generated from: '<S1>/OrientationWireSources'
       *  Logic: '<S132>/Logical Operator1'
       *  Logic: '<S132>/Logical Operator2'
       */
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
        TW_LDO_LH = (rtb_Switch_kb2 &&
                     (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LIMPHomePB
                        != 0.0)));
    } else {
      /* BusAssignment: '<S1321>/Bus Assignment3' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion35'
       *  ForEachSliceAssignment generated from: '<S1>/OrientationWireSources'
       *  Logic: '<S132>/Logical Operator'
       */
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
        TW_LDO_LH = (rtb_Switch_kb2 &&
                     (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LIMPHomePB
                      != 0.0));
    }

    /* End of Switch: '<S132>/Switch' */

    /* Switch: '<S133>/Switch' incorporates:
     *  Constant: '<S133>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bb) {
      /* BusAssignment: '<S1321>/Bus Assignment3' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion36'
       *  ForEachSliceAssignment generated from: '<S1>/OrientationWireSources'
       *  Logic: '<S133>/Logical Operator1'
       *  Logic: '<S133>/Logical Operator2'
       */
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
        TW_RDO_LH = (rtb_Switch_hqb &&
                     (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LIMPHomePB
                        != 0.0)));
    } else {
      /* BusAssignment: '<S1321>/Bus Assignment3' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion36'
       *  ForEachSliceAssignment generated from: '<S1>/OrientationWireSources'
       *  Logic: '<S133>/Logical Operator'
       */
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_h].
        TW_RDO_LH = (rtb_Switch_hqb &&
                     (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LIMPHomePB
                      != 0.0));
    }

    /* End of Switch: '<S133>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
     *  DataTypeConversion: '<S1321>/Data Type Conversion6'
     *  UnitDelay: '<S15>/Unit Delay1'
     */
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW31102 =
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_j;

    /* ForEachSliceAssignment generated from: '<S1>/UnitWireSources' incorporates:
     *  BusAssignment: '<S1321>/Bus Assignment2'
     *  Constant: '<S1321>/Constant2'
     */
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h] =
      ElectricalSystem_P.CoreSubsys.Constant2_Value;

    /* BusAssignment: '<S1321>/Bus Assignment2' incorporates:
     *  CombinatorialLogic: '<S829>/Logic'
     *  DataTypeConversion: '<S1321>/Data Type Conversion1'
     *  DataTypeConversion: '<S1321>/Data Type Conversion14'
     *  DataTypeConversion: '<S1321>/Data Type Conversion15'
     *  DataTypeConversion: '<S1321>/Data Type Conversion24'
     *  DataTypeConversion: '<S1321>/Data Type Conversion3'
     *  DataTypeConversion: '<S1321>/Data Type Conversion32'
     *  DataTypeConversion: '<S1321>/Data Type Conversion44'
     *  DataTypeConversion: '<S1321>/Data Type Conversion48'
     *  DataTypeConversion: '<S1321>/Data Type Conversion49'
     *  DataTypeConversion: '<S1321>/Data Type Conversion50'
     *  DataTypeConversion: '<S1321>/Data Type Conversion57'
     *  DataTypeConversion: '<S1321>/Data Type Conversion65'
     *  DataTypeConversion: '<S1321>/Data Type Conversion7'
     *  DataTypeConversion: '<S1321>/Data Type Conversion73'
     *  DataTypeConversion: '<S1321>/Data Type Conversion74'
     *  DataTypeConversion: '<S1321>/Data Type Conversion9'
     *  ForEachSliceAssignment generated from: '<S1>/UnitWireSources'
     *  Logic: '<S328>/Logical Operator1'
     */
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].UW11104 =
      rtb_Switch_kn;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].UW26101 =
      rtb_Switch_n;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].UW33101 =
      localB->CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit_h.Compare;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      LW32101_02_03V = rtb_Merge;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].UW_TPOR =
      rtb_Switch_mp;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      UW_BCGPower = rtb_Switch_c3a;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].UW_VCB =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.VCBPressureSwitch;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      UW_TCU_KStatus =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TractionSys.TCU_KStatus;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      UW_TCU_AKStatus =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TractionSys.TCU_AKStatus;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      KContactorState = ElectricalSystem_P.CoreSubsys.Logic_table_l[numCycles];
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      AKContactorState = rtb_Logic_idx_0;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].APSPower =
      rtb_APSPower;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      Contactor_Fault = rtb_OR5_g;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].UW_VCBTrip
      = (rtb_Switch_ej || rtb_Switch_hz);
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].UW_PADR =
      rtb_Switch_gft;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].UW_BUVDR =
      rtb_LogicalOperator40_l;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      UW_PantoDown = rtb_LogicalOperator3;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      UW_DC110VLowFault =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.DC110VLowVoltage;

    /* Switch: '<S778>/Switch' incorporates:
     *  Constant: '<S778>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nmc >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pc3) {
      /* BusAssignment: '<S1321>/Bus Assignment2' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion47'
       *  ForEachSliceAssignment generated from: '<S1>/UnitWireSources'
       *  Logic: '<S328>/Logical Operator11'
       *  Logic: '<S778>/Logical Operator1'
       *  Logic: '<S778>/Logical Operator2'
       *  UnitDelay: '<S825>/Unit Delay'
       */
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
        UW_ACOvercurrent =
        (((rtb_ImpSel_InsertedFor_Faults_at_outport_0.OHLHighVoltageLevel3 !=
           0.0) ||
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.LineConverterOverCurrentLevel2
           != 0.0)) && (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m2));
    } else {
      /* BusAssignment: '<S1321>/Bus Assignment2' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion47'
       *  ForEachSliceAssignment generated from: '<S1>/UnitWireSources'
       *  Logic: '<S328>/Logical Operator11'
       *  Logic: '<S778>/Logical Operator'
       *  UnitDelay: '<S825>/Unit Delay'
       */
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
        UW_ACOvercurrent =
        (((rtb_ImpSel_InsertedFor_Faults_at_outport_0.OHLHighVoltageLevel3 !=
           0.0) ||
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.LineConverterOverCurrentLevel2
           != 0.0)) && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m2);
    }

    /* End of Switch: '<S778>/Switch' */

    /* Switch: '<S786>/Switch' incorporates:
     *  Constant: '<S786>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_d3r >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mw) {
      /* BusAssignment: '<S1321>/Bus Assignment2' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion60'
       *  ForEachSliceAssignment generated from: '<S1>/UnitWireSources'
       *  Logic: '<S328>/Logical Operator12'
       *  Logic: '<S786>/Logical Operator1'
       *  Logic: '<S786>/Logical Operator2'
       *  UnitDelay: '<S825>/Unit Delay'
       */
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
        UW_KAKContactorCI =
        (((rtb_ImpSel_InsertedFor_Faults_at_outport_0.LineConverterIGBTFailure
           != 0.0) ||
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.MainCircuitEarthFaultLevel2
           != 0.0)) && (!localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m2));
    } else {
      /* BusAssignment: '<S1321>/Bus Assignment2' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion60'
       *  ForEachSliceAssignment generated from: '<S1>/UnitWireSources'
       *  Logic: '<S328>/Logical Operator12'
       *  Logic: '<S786>/Logical Operator'
       *  UnitDelay: '<S825>/Unit Delay'
       */
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
        UW_KAKContactorCI =
        (((rtb_ImpSel_InsertedFor_Faults_at_outport_0.LineConverterIGBTFailure
           != 0.0) ||
          (rtb_ImpSel_InsertedFor_Faults_at_outport_0.MainCircuitEarthFaultLevel2
           != 0.0)) && localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m2);
    }

    /* End of Switch: '<S786>/Switch' */

    /* BusAssignment: '<S1321>/Bus Assignment2' incorporates:
     *  DataTypeConversion: '<S1321>/Data Type Conversion27'
     *  DataTypeConversion: '<S1321>/Data Type Conversion30'
     *  DataTypeConversion: '<S1321>/Data Type Conversion31'
     *  ForEachSliceAssignment generated from: '<S1>/UnitWireSources'
     */
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      UW_VCBTripByCI = rtb_Switch_ej;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      UW_APSFault = rtb_LogicalOperator6_l;
    rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_h].
      UW_VCBTripByAPS = rtb_Switch_hz;

    /* Update for UnitDelay: '<S826>/Unit Delay' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE = localB->
      UnitDelay[ForEach_itr_h].UnitWires.KContactorState;

    /* Update for UnitDelay: '<S823>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ki =
      rtb_LogicalOperator3_o;

    /* Update for UnitDelay: '<S869>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dw = rtb_Switch_mg;

    /* Update for UnitDelay: '<S824>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolateAPS2;

    /* Update for UnitDelay: '<S25>/Unit Delay' incorporates:
     *  Logic: '<S15>/Logical Operator'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_of =
      !(rtb_ImpSel_InsertedFor_Faults_at_outport_0.BatteryFuseBlown != 0.0);

    /* Update for UnitDelay: '<S26>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ov = rtb_Switch_dm3;

    /* Update for UnitDelay: '<S30>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_g = rtb_Switch_h0m;

    /* Switch: '<S58>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasMotor) {
      /* Update for UnitDelay: '<S38>/Unit Delay' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_d = localB->
        UnitDelay[ForEach_itr_h].TrainWires.TW31203;
    } else {
      /* Update for UnitDelay: '<S38>/Unit Delay' incorporates:
       *  Constant: '<S58>/Constant'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_d =
        ElectricalSystem_P.CoreSubsys.Constant_Value_io;
    }

    /* End of Switch: '<S58>/Switch' */

    /* Update for UnitDelay: '<S40>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_n = rtb_Switch_ggt;

    /* Update for UnitDelay: '<S68>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l = rtb_Switch_mp;

    /* Update for UnitDelay: '<S69>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ft = rtb_TW_TSDR;

    /* Update for UnitDelay: '<S70>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gd = rtb_TW_TSDR;

    /* Update for UnitDelay: '<S71>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_on = localB->
      CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit_b.LogicalOperator1;

    /* Update for UnitDelay: '<S15>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dg = rtb_Switch_jyc;

    /* Update for UnitDelay: '<S35>/Unit Delay' incorporates:
     *  Constant: '<S15>/Default_NoFault'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_k =
      ElectricalSystem_P.CoreSubsys.Default_NoFault_Value;

    /* Update for UnitDelay: '<S64>/Unit Delay' incorporates:
     *  Constant: '<S15>/TCMS_PSK_Not_Modelled'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_i =
      ElectricalSystem_P.CoreSubsys.TCMS_PSK_Not_Modelled_Value;

    /* Update for UnitDelay: '<S15>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_j = rtb_Switch_fp;

    /* Update for UnitDelay: '<S134>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_l0 = rtb_NOT5;

    /* Update for UnitDelay: '<S135>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cu = rtb_NOT5;

    /* Update for UnitDelay: '<S155>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_np =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Doors.EmergencyDoorOpen;

    /* Update for UnitDelay: '<S156>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gx = rtb_OR11;

    /* Update for UnitDelay: '<S158>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dwg = rtb_UnitDelay1;

    /* Update for UnitDelay: '<S159>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b4 = rtb_UnitDelay1;

    /* Update for UnitDelay: '<S160>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_p = rtb_UnitDelay1;

    /* Update for UnitDelay: '<S161>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cc = rtb_UnitDelay1;

    /* Update for UnitDelay: '<S163>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gu = rtb_NOT4;

    /* Update for UnitDelay: '<S164>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ic = rtb_NOT4;

    /* Update for UnitDelay: '<S174>/Unit Delay' incorporates:
     *  Logic: '<S84>/AND1'
     *  Logic: '<S84>/NOT1'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m =
      ((!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.TrainDoorLockedClosedRelayFailure
          != 0.0)) && rtb_Switch_e4);

    /* Update for UnitDelay: '<S403>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ob =
      rtb_LogicalOperator2;

    /* Update for UnitDelay: '<S406>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gg =
      rtb_LogicalOperator2;

    /* Update for UnitDelay: '<S407>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jz =
      rtb_LogicalOperator2;

    /* Update for UnitDelay: '<S396>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mo =
      rtb_LogicalOperator2;

    /* Update for UnitDelay: '<S402>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_mx =
      rtb_LogicalOperator2;

    /* Update for UnitDelay: '<S674>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cc1 = rtb_Switch_fy;

    /* Update for UnitDelay: '<S673>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bt = rtb_Switch_fy;

    /* Update for UnitDelay: '<S408>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f5 =
      rtb_LogicalOperator2;

    /* Update for UnitDelay: '<S1186>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c2 =
      rtb_LogicalOperator5_ld;

    /* Update for UnitDelay: '<S1187>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_h =
      rtb_LogicalOperator5_ld;

    /* Update for UnitDelay: '<S669>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bi =
      rtb_LogicalOperator1_nts;

    /* Update for UnitDelay: '<S611>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_lu = rtb_NOT_o;

    /* Update for UnitDelay: '<S399>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_pn = rtb_Switch_nba;

    /* Update for UnitDelay: '<S401>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ph = rtb_Switch_fya;

    /* Update for UnitDelay: '<S474>/Unit Delay' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bl = localB->
      UnitDelay[ForEach_itr_h].TrainWires.TW22204;

    /* Update for UnitDelay: '<S903>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iu =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.HVAC1RCCBTrip;

    /* Update for UnitDelay: '<S871>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_ks = rtb_OR7;

    /* Update for Memory: '<S906>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput = rtb_Switch_it;

    /* Update for UnitDelay: '<S873>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_n = rtb_OR7;

    /* Update for UnitDelay: '<S902>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.HVAC1SupplyFanMPCBTrip;

    /* Update for UnitDelay: '<S872>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_lq = rtb_Switch_eu;

    /* Update for Memory: '<S907>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_f =
      rtb_LogicalOperator40_kv;

    /* Update for UnitDelay: '<S874>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_m0 = rtb_Switch_eu;

    /* Update for UnitDelay: '<S900>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_om =
      rtb_LogicalOperator40_p;

    /* Update for UnitDelay: '<S901>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_im =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.HVAC1EmergencyInverterTrip;

    /* Update for UnitDelay: '<S876>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.HVAC1FireMode;

    /* Update for Memory: '<S909>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_p =
      rtb_LogicalOperator40_nd;

    /* Update for UnitDelay: '<S877>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_m =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.HVAC1ReducedMode;

    /* Update for Memory: '<S910>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_e =
      rtb_LogicalOperator40_eo;

    /* Update for UnitDelay: '<S878>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_k =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.HVAC1MajorFault;

    /* Update for Memory: '<S911>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_d =
      rtb_LogicalOperator40_dp;

    /* Update for UnitDelay: '<S287>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_d1 =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.EnergizeHLLBR;

    /* Update for UnitDelay: '<S288>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m1 =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.EnergizeFLR;

    /* Update for UnitDelay: '<S289>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_no =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.EnergizeRM;

    /* Update for UnitDelay: '<S290>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_a =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.EnergizeHLHBR;

    /* Update for UnitDelay: '<S291>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bll =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.EnergizeFLDR;

    /* Update for UnitDelay: '<S292>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bo =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.EnergizeTLRR;

    /* Update for UnitDelay: '<S293>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nn =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.EnergizeTLWR;

    /* Update for UnitDelay: '<S294>/Unit Delay' incorporates:
     *  Logic: '<S252>/OR4'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_c3 = (rtb_Switch_bf ||
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.EnergizeCOLR);

    /* Update for UnitDelay: '<S397>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ke =
      rtb_LogicalOperator2;

    /* Update for UnitDelay: '<S662>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nk = rtb_Switch_jp;

    /* Update for DiscreteIntegrator: '<S300>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE +=
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_gainval_o *
      rtb_DataTypeConversion7;
    if (rtb_DataTypeConversion7 > 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState =
        1;
    } else if (rtb_DataTypeConversion7 < 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState =
        -1;
    } else if (rtb_DataTypeConversion7 == 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState =
        0;
    } else {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState =
        2;
    }

    /* End of Update for DiscreteIntegrator: '<S300>/Discrete-Time Integrator' */

    /* Update for UnitDelay: '<S429>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ol = rtb_AND_i;

    /* Update for UnitDelay: '<S670>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m5 = rtb_OR3_l;

    /* Update for UnitDelay: '<S665>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_og =
      rtb_LogicalOperator1_nts;

    /* Update for DiscreteIntegrator: '<S301>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_k =
      DiscreteTimeIntegrator_c;
    if (rtb_DataTypeConversion7_i > 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_d
        = 1;
    } else if (rtb_DataTypeConversion7_i < 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_d
        = -1;
    } else if (rtb_DataTypeConversion7_i == 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_d
        = 0;
    } else {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_d
        = 2;
    }

    /* End of Update for DiscreteIntegrator: '<S301>/Discrete-Time Integrator' */

    /* Update for UnitDelay: '<S1176>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gs = rtb_Switch_li;

    /* Update for DiscreteIntegrator: '<S302>/Discrete-Time Integrator' */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_m =
      rtb_PulseGenerator_o;
    if (rtb_DataTypeConversion7_ie > 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_g
        = 1;
    } else if (rtb_DataTypeConversion7_ie < 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_g
        = -1;
    } else if (rtb_DataTypeConversion7_ie == 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_g
        = 0;
    } else {
      localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_PrevResetState_g
        = 2;
    }

    /* End of Update for DiscreteIntegrator: '<S302>/Discrete-Time Integrator' */

    /* Update for UnitDelay: '<S345>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_pw =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.AuxiliaryReservoirPressureSwitch;

    /* Update for UnitDelay: '<S346>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hj =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.MainReservoirPressureSwitch;

    /* Update for UnitDelay: '<S353>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_k4 = rtb_Switch_ni;

    /* Update for UnitDelay: '<S316>/Unit Delay' incorporates:
     *  Constant: '<S316>/TCMS_ACMC'
     *  Logic: '<S316>/OR2'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_h5 = (rtb_Switch_am ||
      (ElectricalSystem_P.CoreSubsys.TCMS_ACMC_Value != 0.0));

    /* Update for UnitDelay: '<S333>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_o2 =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.MainReservoirPressureSwitch;

    /* Update for UnitDelay: '<S334>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_p =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographRisingFailure;

    /* Update for Memory: '<S347>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_j = rtb_Switch_k2a;

    /* Update for Memory: '<S348>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_m = rtb_Switch_hbz;

    /* Update for UnitDelay: '<S364>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_f =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.Bogie1IsolateVDUReq;

    /* Update for UnitDelay: '<S365>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_c =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.Bogie2IsolateVDUReq;

    /* Update for Memory: '<S368>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_jt = rtb_Switch_ovx;

    /* Update for Memory: '<S369>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_jq = rtb_Switch_jqt;

    /* Update for UnitDelay: '<S374>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_kd = rtb_OR2_o;

    /* Update for UnitDelay: '<S388>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_la =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.MRPSTractionCutout;

    /* Update for UnitDelay: '<S404>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bm =
      rtb_LogicalOperator2;

    /* Update for UnitDelay: '<S405>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_n1 =
      rtb_LogicalOperator2;

    /* Update for UnitDelay: '<S845>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_p2 = rtb_Switch_b0;

    /* Update for UnitDelay: '<S398>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fi =
      rtb_LogicalOperator2;

    /* Update for UnitDelay: '<S400>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_iv = rtb_Switch_nba;

    /* Update for UnitDelay: '<S409>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jy =
      rtb_LogicalOperator2;

    /* Update for UnitDelay: '<S416>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ho = rtb_Switch_mhf;

    /* Switch: '<S321>/Switch' incorporates:
     *  Bias: '<S321>/Add Constant'
     *  ForEachSliceSelector generated from: '<S1>/CommonVehicleConfig'
     */
    if (rtu_CommonVehicleConfig[ForEach_itr_h].Orientation +
        ElectricalSystem_P.CoreSubsys.AddConstant_Bias >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bh) {
      /* Update for UnitDelay: '<S430>/Unit Delay' */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nh =
        rtb_Switch_gmd_idx_1;
    } else {
      /* Update for UnitDelay: '<S430>/Unit Delay' */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nh =
        rtb_Switch_gmd_idx_0;
    }

    /* End of Switch: '<S321>/Switch' */

    /* Update for UnitDelay: '<S447>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gp = rtb_Switch_ou;

    /* Update for UnitDelay: '<S449>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dux = rtb_Switch_ou;

    /* Update for UnitDelay: '<S472>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_db = rtb_DG1182;

    /* Switch: '<S463>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasMotor) {
      /* Update for UnitDelay: '<S473>/Unit Delay' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fx = localB->
        UnitDelay[ForEach_itr_h].TrainWires.TW22204;
    } else {
      /* Update for UnitDelay: '<S473>/Unit Delay' incorporates:
       *  Constant: '<S463>/Constant'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fx =
        ElectricalSystem_P.CoreSubsys.Constant_Value_pc;
    }

    /* End of Switch: '<S463>/Switch' */

    /* Switch: '<S464>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* Update for UnitDelay: '<S475>/Unit Delay' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dl = localB->
        UnitDelay[ForEach_itr_h].TrainWires.TW22212;
    } else {
      /* Update for UnitDelay: '<S475>/Unit Delay' incorporates:
       *  Constant: '<S464>/Constant'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dl =
        ElectricalSystem_P.CoreSubsys.Constant_Value_mj;
    }

    /* End of Switch: '<S464>/Switch' */

    /* Update for UnitDelay: '<S322>/Unit Delay' incorporates:
     *  Logic: '<S322>/NOT1'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jd =
      !rtb_LogicalOperator40_i;

    /* Update for UnitDelay: '<S661>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m0 = rtb_Switch_jp;

    /* Update for UnitDelay: '<S671>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dk = rtb_OR3_l;

    /* Update for UnitDelay: '<S664>/Unit Delay' incorporates:
     *  Constant: '<S684>/Constant'
     *  Constant: '<S684>/Mask'
     *  Constant: '<S739>/Constant'
     *  Constant: '<S740>/Constant'
     *  Constant: '<S741>/Constant'
     *  Constant: '<S742>/Constant'
     *  Constant: '<S743>/Constant'
     *  Constant: '<S744>/Constant'
     *  Constant: '<S745>/Constant'
     *  Logic: '<S684>/AND'
     *  Logic: '<S684>/AND1'
     *  Logic: '<S684>/AND2'
     *  Logic: '<S684>/AND3'
     *  Logic: '<S684>/OR'
     *  Logic: '<S684>/XOR'
     *  RelationalOperator: '<S739>/Compare'
     *  RelationalOperator: '<S740>/Compare'
     *  RelationalOperator: '<S741>/Compare'
     *  RelationalOperator: '<S742>/Compare'
     *  RelationalOperator: '<S743>/Compare'
     *  RelationalOperator: '<S744>/Compare'
     *  RelationalOperator: '<S745>/Compare'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jb = (rtb_Switch_jb && (
      static_cast<boolean_T>
      (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           <= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_aq) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_d[0]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_k) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_d[1]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           > ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_c) &&
          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           < ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_ii) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_d[2]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_k) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_d[3]) ||
         ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           > ElectricalSystem_P.CoreSubsys.CompareToConstant5_const_n) &&
          (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
           <= ElectricalSystem_P.CoreSubsys.CompareToConstant4_const_bh) &&
          ElectricalSystem_P.CoreSubsys.Mask_Value_d[4])) ^
        (ElectricalSystem_P.CoreSubsys.TBC5_NCContact != 0.0)))));

    /* Update for UnitDelay: '<S445>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_b = rtb_EBbyPB;

    /* Update for Memory: '<S478>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_l =
      rtb_LogicalOperator40_i;

    /* Update for UnitDelay: '<S1177>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f2 = rtb_Switch_li;

    /* Update for Memory: '<S582>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_a =
      rtb_LogicalOperator40_k;

    /* Update for UnitDelay: '<S792>/Unit Delay' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cj = localB->
      UnitDelay[ForEach_itr_h].UnitWires.UW_VCB;

    /* Update for UnitDelay: '<S536>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_l =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographLoweringFailure;

    /* Update for UnitDelay: '<S537>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_li = rtb_Switch_m4;

    /* Update for Memory: '<S581>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_i = rtb_Switch_nm;

    /* Update for Memory: '<S583>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_g =
      rtb_LogicalOperator40_l;

    /* Update for Memory: '<S614>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_o = rtb_Switch_noe;

    /* Switch: '<S619>/Switch' incorporates:
     *  Constant: '<S619>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_hu >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_psb) {
      /* Update for UnitDelay: '<S663>/Unit Delay' incorporates:
       *  Constant: '<S691>/Constant'
       *  Logic: '<S619>/Logical Operator1'
       *  Logic: '<S619>/Logical Operator2'
       *  RelationalOperator: '<S691>/Compare'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_npl = (rtb_Switch_jb &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ll)));
    } else {
      /* Update for UnitDelay: '<S663>/Unit Delay' incorporates:
       *  Constant: '<S691>/Constant'
       *  Logic: '<S619>/Logical Operator'
       *  RelationalOperator: '<S691>/Compare'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_npl = (rtb_Switch_jb &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ll));
    }

    /* End of Switch: '<S619>/Switch' */

    /* Update for UnitDelay: '<S666>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bh =
      rtb_LogicalOperator1_nts;

    /* Update for UnitDelay: '<S667>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_aq =
      rtb_LogicalOperator1_nts;

    /* Update for UnitDelay: '<S668>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_bu =
      rtb_LogicalOperator1_nts;

    /* Switch: '<S618>/Switch' incorporates:
     *  Constant: '<S618>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_pw0 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ax) {
      /* Update for UnitDelay: '<S672>/Unit Delay' incorporates:
       *  Constant: '<S690>/Constant'
       *  Logic: '<S618>/Logical Operator1'
       *  Logic: '<S618>/Logical Operator2'
       *  RelationalOperator: '<S690>/Compare'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fg = (rtb_Switch_jb &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ehm)));
    } else {
      /* Update for UnitDelay: '<S672>/Unit Delay' incorporates:
       *  Constant: '<S690>/Constant'
       *  Logic: '<S618>/Logical Operator'
       *  RelationalOperator: '<S690>/Compare'
       */
      localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fg = (rtb_Switch_jb &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ModeSelector
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ehm));
    }

    /* End of Switch: '<S618>/Switch' */

    /* Update for UnitDelay: '<S704>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_o = rtb_Switch_fir;

    /* Update for Memory: '<S709>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_ox =
      rtb_LogicalOperator39_gn;

    /* Update for UnitDelay: '<S705>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_dd = rtb_Switch_b1wm;

    /* Update for UnitDelay: '<S1133>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_nj = rtb_AND3_l;

    /* Update for UnitDelay: '<S1134>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0 = rtb_AND3_l;

    /* Update for UnitDelay: '<S1188>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_d0 =
      rtb_LogicalOperator5_ld;

    /* Update for UnitDelay: '<S1169>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jdy = rtb_Switch_ecu;

    /* Update for UnitDelay: '<S793>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ey = rtb_Switch_gu4;

    /* Update for UnitDelay: '<S825>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_m2 =
      rtb_LogicalOperator1_fh;

    /* Update for Memory: '<S790>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_h = rtb_Switch_omo;

    /* Update for UnitDelay: '<S821>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_dy = rtb_AND_dy;

    /* Update for UnitDelay: '<S822>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hk =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolateBCG2;

    /* Update for UnitDelay: '<S798>/Unit Delay' incorporates:
     *  CombinatorialLogic: '<S829>/Logic'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_gj =
      ElectricalSystem_P.CoreSubsys.Logic_table_l[numCycles];

    /* Update for Memory: '<S828>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_aj = rtb_Logic_idx_0;

    /* Update for DiscreteIntegrator: '<S798>/Discrete-Time Integrator' incorporates:
     *  DataTypeConversion: '<S798>/Data Type Conversion1'
     */
    localDW->CoreSubsys[ForEach_itr_h].DiscreteTimeIntegrator_DSTATE_p +=
      ElectricalSystem_P.CoreSubsys.DiscreteTimeIntegrator_gainval_l *
      static_cast<real_T>(rtb_Logic_idx_0);

    /* Update for Memory: '<S829>/Memory' incorporates:
     *  CombinatorialLogic: '<S829>/Logic'
     */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_b =
      ElectricalSystem_P.CoreSubsys.Logic_table_l[numCycles];

    /* Update for UnitDelay: '<S844>/Unit Delay' incorporates:
     *  Logic: '<S833>/AND'
     *  Logic: '<S833>/NOT'
     *  Logic: '<S833>/OR1'
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ed =
      (((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.DerailmentDetected
         != 0.0) ||
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ObstacleHardCollision
         != 0.0) ||
        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.ObstacleDetectedRightSide !=
         0.0) ||
        (rtb_ImpSel_InsertedFor_Faults_at_outport_0.DerailmentDetectedRightSide
         != 0.0)) && (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.ODDFailure !=
                        0.0)));

    /* Update for UnitDelay: '<S861>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ku = localB->
      CoreSubsys[ForEach_itr_h].TimerOnDelayNoInit_f.Compare;

    /* Update for Memory: '<S862>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_c =
      rtb_LogicalOperator40_e3;

    /* Update for UnitDelay: '<S853>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_e =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.HornBlowsContinuously;

    /* Update for UnitDelay: '<S854>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_mg = rtb_Switch_esg;

    /* Update for UnitDelay: '<S870>/Unit Delay' incorporates:
     *  Constant: '<S836>/TCMS energizes ESKAK '
     */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_o =
      ElectricalSystem_P.CoreSubsys.TCMSenergizesESKAK_Value;

    /* Update for UnitDelay: '<S898>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_f0o = rtb_Switch_cbo;

    /* Update for UnitDelay: '<S899>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_jt = rtb_Switch_h2r;

    /* Update for UnitDelay: '<S904>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_b3 =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolateHVAC1;

    /* Update for UnitDelay: '<S905>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_ch =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolateHVAC2;

    /* Update for UnitDelay: '<S875>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_h =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.HVAC1ExternalSmokeMode;

    /* Update for UnitDelay: '<S924>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_d =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.FDUFailure;

    /* Update for Memory: '<S929>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_js =
      rtb_LogicalOperator40_jv;

    /* Update for UnitDelay: '<S922>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_or = rtb_HeatAlarmEDB;

    /* Update for Memory: '<S927>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_jx =
      rtb_LogicalOperator40_bi;

    /* Update for Memory: '<S908>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_mt =
      rtb_LogicalOperator40_p;

    /* Update for UnitDelay: '<S923>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_lb =
      rtb_SmokeAlarmCABArea;

    /* Update for Memory: '<S928>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_fv =
      rtb_LogicalOperator40_k4;

    /* Update for UnitDelay: '<S985>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE = rtb_Switch2;

    /* Update for UnitDelay: '<S985>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_cp = rtb_Switch2;

    /* Update for DiscreteIntegrator: '<S985>/Timer' */
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE +=
      ElectricalSystem_P.CoreSubsys.Timer_gainval * rtb_DataTypeConversion1_e;
    if (rtb_DataTypeConversion1_e > 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState = 1;
    } else if (rtb_DataTypeConversion1_e < 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState = -1;
    } else if (rtb_DataTypeConversion1_e == 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState = 0;
    } else {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState = 2;
    }

    /* End of Update for DiscreteIntegrator: '<S985>/Timer' */

    /* Update for DiscreteIntegrator: '<S985>/X Position' */
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE +=
      ElectricalSystem_P.CoreSubsys.XPosition_gainval * rtb_Speed;
    if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE >=
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat) {
      localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE =
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat;
    } else {
      if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE <=
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat) {
        localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE =
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat;
      }
    }

    localDW->CoreSubsys[ForEach_itr_h].XPosition_PrevResetState =
      static_cast<int8_T>(rtb_ResetCycle);

    /* End of Update for DiscreteIntegrator: '<S985>/X Position' */

    /* Update for UnitDelay: '<S986>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_c = rtb_Switch2_m;

    /* Update for UnitDelay: '<S986>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_e = rtb_Switch2_m;

    /* Update for DiscreteIntegrator: '<S986>/Timer' */
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE_c +=
      ElectricalSystem_P.CoreSubsys.Timer_gainval_f * rtb_DataTypeConversion1_n;
    if (rtb_DataTypeConversion1_n > 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_f = 1;
    } else if (rtb_DataTypeConversion1_n < 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_f = -1;
    } else if (rtb_DataTypeConversion1_n == 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_f = 0;
    } else {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_f = 2;
    }

    /* End of Update for DiscreteIntegrator: '<S986>/Timer' */

    /* Update for DiscreteIntegrator: '<S986>/X Position' */
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h +=
      ElectricalSystem_P.CoreSubsys.XPosition_gainval_k * rtb_Speed_ec;
    if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h >=
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat_g) {
      localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h =
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat_g;
    } else {
      if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h <=
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat_d) {
        localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_h =
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat_d;
      }
    }

    localDW->CoreSubsys[ForEach_itr_h].XPosition_PrevResetState_p =
      static_cast<int8_T>(rtb_ResetCycle_k);

    /* End of Update for DiscreteIntegrator: '<S986>/X Position' */

    /* Update for UnitDelay: '<S987>/Unit Delay1' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay1_DSTATE_o = rtb_Switch2_a;

    /* Update for UnitDelay: '<S987>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fs = rtb_Switch2_a;

    /* Update for DiscreteIntegrator: '<S987>/Timer' */
    localDW->CoreSubsys[ForEach_itr_h].Timer_DSTATE_a +=
      ElectricalSystem_P.CoreSubsys.Timer_gainval_n * rtb_DataTypeConversion1_p;
    if (rtb_DataTypeConversion1_p > 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_fb = 1;
    } else if (rtb_DataTypeConversion1_p < 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_fb = -1;
    } else if (rtb_DataTypeConversion1_p == 0.0) {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_fb = 0;
    } else {
      localDW->CoreSubsys[ForEach_itr_h].Timer_PrevResetState_fb = 2;
    }

    /* End of Update for DiscreteIntegrator: '<S987>/Timer' */

    /* Update for DiscreteIntegrator: '<S987>/X Position' */
    localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p +=
      ElectricalSystem_P.CoreSubsys.XPosition_gainval_c * rtb_Speed_k;
    if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p >=
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat_d) {
      localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p =
        ElectricalSystem_P.CoreSubsys.XPosition_UpperSat_d;
    } else {
      if (localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p <=
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat_p) {
        localDW->CoreSubsys[ForEach_itr_h].XPosition_DSTATE_p =
          ElectricalSystem_P.CoreSubsys.XPosition_LowerSat_p;
      }
    }

    localDW->CoreSubsys[ForEach_itr_h].XPosition_PrevResetState_h =
      static_cast<int8_T>(rtb_ResetCycle_i);

    /* End of Update for DiscreteIntegrator: '<S987>/X Position' */

    /* Update for UnitDelay: '<S1105>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_fm =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.CCDetectedEmerDoorOpen;

    /* Update for UnitDelay: '<S1178>/Unit Delay' */
    localDW->CoreSubsys[ForEach_itr_h].UnitDelay_DSTATE_hc = rtb_Switch_ecu;

    /* Update for UnitDelay: '<S1299>/Delay Input1' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_j = localB->
      UnitDelay[ForEach_itr_h].TrainWires.TW_LHPBR;

    /* Update for Memory: '<S1317>/Memory' */
    localDW->CoreSubsys[ForEach_itr_h].Memory_PreviousInput_mf =
      rtb_LogicalOperator40_ab;

    /* Update for UnitDelay: '<S1334>/Delay Input1' */
    localDW->CoreSubsys[ForEach_itr_h].DelayInput1_DSTATE_cu =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.VCBPressureSwitch;

    /* Switch: '<S417>/Switch' incorporates:
     *  Constant: '<S417>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dyp >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_iov) {
      /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion12'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S417>/Logical Operator1'
       *  Logic: '<S417>/Logical Operator2'
       */
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
        TW_TLPC1 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 != 0.0)
                    &&
                    (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MasterKeySwitch
                       != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion12'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S417>/Logical Operator'
       */
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
        TW_TLPC1 = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 != 0.0)
                    &&
                    (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MasterKeySwitch
                     != 0.0));
    }

    /* End of Switch: '<S417>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
     *  DataTypeConversion: '<S1321>/Data Type Conversion17'
     *  DataTypeConversion: '<S1321>/Data Type Conversion18'
     *  DataTypeConversion: '<S1321>/Data Type Conversion19'
     *  DataTypeConversion: '<S1321>/Data Type Conversion20'
     *  DataTypeConversion: '<S1321>/Data Type Conversion22'
     *  DataTypeConversion: '<S1321>/Data Type Conversion26'
     */
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW22502 =
      rtb_Switch_og;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TW_UncoupleSignal = rtb_Switch_ii;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_TLGC1 =
      rtb_Switch_lm;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW25102 =
      rtb_Switch_h50;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW25103 =
      rtb_Switch_ke;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW26201 =
      rtb_Switch_am;

    /* Switch: '<S56>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* Switch: '<S60>/Switch' incorporates:
       *  Constant: '<S60>/Constant'
       */
      if (ElectricalSystem_P.CoreSubsys.Constant_Value_fb >
          ElectricalSystem_P.CoreSubsys.Switch_Threshold_cx) {
        /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
         *  Constant: '<S81>/Constant'
         *  DataTypeConversion: '<S1321>/Data Type Conversion25'
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         *  Logic: '<S60>/Logical Operator1'
         *  Logic: '<S60>/Logical Operator2'
         *  RelationalOperator: '<S81>/Compare'
         */
        rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
          TDI_110VDC = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                         0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TDICB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fo)));
      } else {
        /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
         *  Constant: '<S81>/Constant'
         *  DataTypeConversion: '<S1321>/Data Type Conversion25'
         *  ForEachSliceSelector generated from: '<S1>/WireStates'
         *  Logic: '<S60>/Logical Operator'
         *  RelationalOperator: '<S81>/Compare'
         */
        rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
          TDI_110VDC = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 !=
                         0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TDICB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fo));
      }

      /* End of Switch: '<S60>/Switch' */
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
       *  Constant: '<S56>/Constant'
       *  DataTypeConversion: '<S1321>/Data Type Conversion25'
       */
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
        TDI_110VDC = ElectricalSystem_P.CoreSubsys.Constant_Value_a5z;
    }

    /* End of Switch: '<S56>/Switch' */

    /* Switch: '<S36>/Switch' incorporates:
     *  Constant: '<S36>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_go >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fbu) {
      /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion29'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S36>/Logical Operator1'
       *  Logic: '<S36>/Logical Operator2'
       */
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW31203
        = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
           (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BatteryResetPB
              != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion29'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S36>/Logical Operator'
       */
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW31203
        = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
           (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BatteryResetPB
            != 0.0));
    }

    /* End of Switch: '<S36>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
     *  BusAssignment: '<S1321>/Bus Assignment1'
     *  DataTypeConversion: '<S1321>/Data Type Conversion28'
     *  Logic: '<S84>/OR18'
     *  Logic: '<S84>/OR24'
     */
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW51204 =
      0.0;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW51206 =
      0.0;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TW_ZeroSpeed = (rtb_Switch_ij || (rtb_Switch_fvk || rtb_Switch_a0));
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW81201 =
      0.0;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW81203 =
      0.0;

    /* Switch: '<S523>/Switch' incorporates:
     *  Constant: '<S523>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ayr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_cw) {
      /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion43'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S523>/Logical Operator1'
       *  Logic: '<S523>/Logical Operator2'
       */
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
        TWPantoDNCmd = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantographDownPB
                           != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
       *  DataTypeConversion: '<S1321>/Data Type Conversion43'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S523>/Logical Operator'
       */
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
        TWPantoDNCmd = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC
                         != 0.0) &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PantographDownPB
                         != 0.0));
    }

    /* End of Switch: '<S523>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
     *  BusAssignment: '<S1321>/Bus Assignment1'
     *  DataTypeConversion: '<S1321>/Data Type Conversion23'
     *  DataTypeConversion: '<S1321>/Data Type Conversion45'
     *  DataTypeConversion: '<S1321>/Data Type Conversion51'
     *  DataTypeConversion: '<S1321>/Data Type Conversion52'
     *  DataTypeConversion: '<S1321>/Data Type Conversion53'
     *  DataTypeConversion: '<S1321>/Data Type Conversion54'
     *  DataTypeConversion: '<S1321>/Data Type Conversion56'
     */
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW99102 =
      rtb_Switch_hfn;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW99103 =
      rtb_Switch_mk;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW99104 =
      rtb_Switch_fl;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW99105 =
      rtb_Switch_put;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_LHPBR =
      rtb_Switch_gh;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_PADR =
      rtb_LogicalOperator_ks;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TW_CC_TrainWakeup = rtb_AND3_m1;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW41701 =
      0.0;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW41704 =
      0.0;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW41A04 =
      0.0;

    /* Switch: '<S1088>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' */
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
        TW_ATOState =
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ATOState;
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
       *  Constant: '<S1088>/Constant'
       */
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
        TW_ATOState = ElectricalSystem_P.CoreSubsys.Constant_Value_pu;
    }

    /* End of Switch: '<S1088>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
     *  BusAssignment: '<S1321>/Bus Assignment1'
     *  DataTypeConversion: '<S1321>/Data Type Conversion2'
     *  DataTypeConversion: '<S1321>/Data Type Conversion4'
     *  DataTypeConversion: '<S1321>/Data Type Conversion55'
     *  DataTypeConversion: '<S1321>/Data Type Conversion66'
     *  DataTypeConversion: '<S1321>/Data Type Conversion67'
     *  DataTypeConversion: '<S1321>/Data Type Conversion68'
     *  DataTypeConversion: '<S1321>/Data Type Conversion69'
     *  DataTypeConversion: '<S1321>/Data Type Conversion70'
     *  DataTypeConversion: '<S1321>/Data Type Conversion71'
     *  DataTypeConversion: '<S1321>/Data Type Conversion72'
     *  Logic: '<S15>/OR2'
     */
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TWNotBraking = rtb_BRAKING_TLFC7;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TWMotoring = rtb_OR4_n;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TWNotFSB =
      rtb_OR5_h;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TWCabASelected = rtb_Switch_ag5;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TWCabAKeySwitchON = rtb_Switch_ip;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TWCabBSelected = rtb_Switch_ag5;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TWCabBKeySwitchON = rtb_Switch_ip;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW31101 =
      rtb_Switch_ew0;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW31101V =
      rtb_Switch_jyc;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW31103 =
      (tmp || tmp_0 || localB->CoreSubsys[ForEach_itr_h].
       BICK_Delay.LogicalOperator1);
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW22212 =
      rtb_Switch_nkh;

    /* Switch: '<S803>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasPanto) {
      /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' */
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW11105
        =
        rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pantograph.PantographPosition;
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
       *  Constant: '<S803>/Constant'
       */
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW11105
        = ElectricalSystem_P.CoreSubsys.Constant_Value_pr;
    }

    /* End of Switch: '<S803>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/TrainWireSources' incorporates:
     *  BusAssignment: '<S1321>/Bus Assignment1'
     *  Constant: '<S1083>/Constant'
     *  DataTypeConversion: '<S1321>/Data Type Conversion10'
     *  DataTypeConversion: '<S1321>/Data Type Conversion58'
     *  DataTypeConversion: '<S1321>/Data Type Conversion64'
     *  DataTypeConversion: '<S1321>/Data Type Conversion76'
     *  DataTypeConversion: '<S1321>/Data Type Conversion77'
     *  DataTypeConversion: '<S1321>/Data Type Conversion78'
     *  DataTypeConversion: '<S1321>/Data Type Conversion79'
     *  DataTypeConversion: '<S1321>/Data Type Conversion8'
     *  DataTypeConversion: '<S1321>/Data Type Conversion80'
     *  DataTypeConversion: '<S1321>/Data Type Conversion81'
     *  DataTypeConversion: '<S1321>/Data Type Conversion82'
     *  DataTypeConversion: '<S1321>/Data Type Conversion83'
     *  DataTypeConversion: '<S1321>/Data Type Conversion84'
     *  Logic: '<S84>/NOT2'
     *  Logic: '<S84>/NOT3'
     */
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_TSDR =
      rtb_Switch_gez;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_TLGC3 =
      0.0;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_TLGC2 =
      rtb_Switch_abq;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_TLGC9 =
      rtb_Switch_gbz;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_TLGC10
      = rtb_Switch_pmn;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_TLGC11
      = rtb_OR1_d;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TW_SaloonFire = rtb_FDUHealthStatus;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TW_Integrity = ElectricalSystem_P.CoreSubsys.Constant_Value_g1;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW22204 =
      rtb_OR13_c;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TW_VCBTripByCI = rtb_Switch_ej;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TW_APSFault = rtb_LogicalOperator6_l;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].
      TW_VCBTripByAPS = rtb_Switch_hz;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_LDISRR
      =
      !rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Doors.AllRightDoorsClosed;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_LDISLR
      =
      !rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Doors.AllLeftDoorsClosed;
    rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_h].TW_11104 =
      rtb_Switch_kn;

    /* ForEachSliceAssignment generated from: '<S1>/MiscWireSources' incorporates:
     *  BusAssignment: '<S1321>/Bus Assignment7'
     *  DataTypeConversion: '<S1321>/Data Type Conversion75'
     */
    rtb_ImpAsg_InsertedFor_MiscWireSources_at_inport_0[ForEach_itr_h].TW_TLGC3 =
      rtb_OR12_k;
    rtb_ImpAsg_InsertedFor_MiscWireSources_at_inport_0[ForEach_itr_h].Dummy =
      0.0;

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1320>/Bus Assignment'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.VCBClosePBLamp = rtb_Switch_VCBClosePBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.VCBOpenPBLamp = rtb_Switch_VCBOpenPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.AllDoorsClosedLight = rtb_Switch_AllDoorsClosedLight;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.EmergencyBrakePBLight = rtb_Switch_e25;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.ParkBrakeApplyPBLight =
      rtb_Switch_ParkBrakeApplyPBLight;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.BatteryVoltageGauge = rtb_Switch_g0z;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.OverheadLineVoltageGauge =
      rtb_Switch_OverheadLineVoltageGauge;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.FloodLight = rtb_Switch_FloodLight;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.FlasherLight = rtb_Switch_FlasherLight;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.UTOOrRMLight = rtb_Switch_UTOOrRMLight;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.MarkerOrTailLight = rtb_Switch_MarkerOrTailLight;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.HeadLight = rtb_Switch_HeadLight;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.SignallingLights = rtb_Switch_SignallingLights;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.IdentificationLights = rtb_Switch_IdentificationLights;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.Speedometer = rtb_Switch_Speedometer;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.WiperPosition = rtb_Switch_WiperPosition;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.HornPBLamp = rtb_Switch_HornPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LeftDoorClosePBOperatingPanel1Lamp =
      rtb_Switch_LeftDoorClosePBOperatingPanel1Lamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LeftDoorOpenPBOperatingPanel1Lamp =
      rtb_Switch_LeftDoorOpenPBOperatingPanel1Lamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.RightDoorOpenPBOperatingPanel1Lamp =
      rtb_Switch_RightDoorOpenPBOperatingPanel1Lamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.RightDoorClosePBOperatingPanel1Lamp =
      rtb_Switch_RightDoorClosePBOperatingPanel1Lamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.CabMainLight = rtb_Switch_CabMainLight;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.CabConsoleLight = rtb_Switch_CabConsoleLight;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.DoorCloseAnnouncementLamp =
      rtb_Switch_DoorCloseAnnouncementLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LampTestPBLamp = rtb_Switch_LampTestPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.UncouplePBLamp = rtb_Switch_UncouplePBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.FlasherLightPBLamp = rtb_Switch_FlasherLightPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.FloodLightPBLamp = rtb_Switch_FloodLightPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.BatteryResetPBLamp = rtb_Switch_BatteryResetPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.RightDoorOpenPBOperatingPanel5Lamp =
      rtb_Switch_RightDoorOpenPBOperatingPanel5Lamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.RightDoorClosePBOperatingPanel5Lamp =
      rtb_Switch_RightDoorClosePBOperatingPanel5Lamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.WFLTestPBLamp = rtb_Switch_WFLTestPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.SaloonDoorCloseIndicator =
      rtb_Switch_SaloonDoorCloseIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.ParkBrakeOnPBLamp = rtb_Switch_ParkBrakeOnPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.ParkBrakeOffPBLamp = rtb_Switch_ParkBrakeOffPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LineVoltageIndicator = rtb_Switch_LineVoltageIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LeftDoorOpenPBOperatingPanel2Lamp =
      rtb_Switch_LeftDoorOpenPBOperatingPanel2Lamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LeftDoorClosePBOperatingPanel2Lamp =
      rtb_Switch_LeftDoorClosePBOperatingPanel2Lamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.PantoUpPBLamp = rtb_Switch_PantoUpPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.PantoDownPBLamp = rtb_Switch_PantoDownPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LIMPHomePBLamp = rtb_Switch_LIMPHomePBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.PowerOFFPBLamp = rtb_Switch_PowerOFFPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.CallOnLightPBLamp = rtb_Switch_CallOnLightPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.APSFaultIndicator = rtb_Switch_APSFaultIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.PowerFaultIndicator = rtb_Switch_PowerFaultIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.EmergencyBrakeIndicator =
      rtb_Switch_EmergencyBrakeIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.VCBTripIndicator = rtb_Switch_VCBTripIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.OtherCabOccupiedIndicator =
      rtb_Switch_OtherCabOccupiedIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.HVACFaultIndicator = rtb_Switch_HVACFaultIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.ROSPBLamp = rtb_Switch_ROSPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.UTOPBLamp = rtb_Switch_UTOPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.ATOStartPBLamp = rtb_Switch_ATOStartPBLamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.EBResetPBLamp = rtu_ElectricalVehicleConfig_0;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.AuxModuleON = rtb_Switch_AuxModuleON;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LeftDoorOpenPB1OperatingPanel2Lamp =
      rtb_Switch_LeftDoorOpenPB1OperatingPanel2Lamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.RightDoorOpenPB1OperatingPanel5Lamp =
      rtb_Switch_RightDoorOpenPB1OperatingPanel5Lamp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LeftDoor1LEDIndicator =
      rtb_Switch_LeftDoor1LEDIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LeftDoor2LEDIndicator =
      rtb_Switch_LeftDoor2LEDIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LeftDoor3LEDIndicator =
      rtb_Switch_LeftDoor3LEDIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.LeftDoor4LEDIndicator =
      rtb_Switch_LeftDoor4LEDIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.RightDoor1LEDIndicator =
      rtb_Switch_RightDoor1LEDIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.RightDoor2LEDIndicator =
      rtb_Switch_RightDoor2LEDIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.RightDoor3LEDIndicator =
      rtb_Switch_RightDoor3LEDIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.RightDoor4LEDIndicator =
      rtb_Switch_RightDoor4LEDIndicator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.WiperPositionLeft = rtb_Switch_WiperPositionLeft;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.WiperPositionCenter = rtb_Switch_WiperPositionCenter;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.WiperPositionRight = rtb_Switch_WiperPositionRight;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      OutputControlStates.WiperWash = rtb_Switch_WiperWash;

    /* Switch: '<S764>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasMotor) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1330>/Data Type Conversion2'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
        Traction.TCUPowerAvailable = (localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW31101 != 0.0);
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S764>/Constant'
       *  DataTypeConversion: '<S1330>/Data Type Conversion2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
        Traction.TCUPowerAvailable =
        (ElectricalSystem_P.CoreSubsys.Constant_Value_aeh != 0.0);
    }

    /* End of Switch: '<S764>/Switch' */

    /* Switch: '<S801>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasMotor) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1330>/Data Type Conversion7'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
        Traction.MotorPowerAvailable =
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TractionSys.TractionContactorStatus
         != 0.0);
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S801>/Constant'
       *  DataTypeConversion: '<S1330>/Data Type Conversion7'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
        Traction.MotorPowerAvailable =
        (ElectricalSystem_P.CoreSubsys.Constant_Value_lf != 0.0);
    }

    /* End of Switch: '<S801>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  DataTypeConversion: '<S1330>/Data Type Conversion4'
     *  DataTypeConversion: '<S1330>/Data Type Conversion6'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Traction.ForwardDirection =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TWForward != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Traction.ReverseDirection =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TWReverse != 0.0);

    /* Switch: '<S763>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasMotor) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1330>/Data Type Conversion5'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Traction.TBCTraction =
        (localB->UnitDelay[ForEach_itr_h].TrainWires.TWMotoring != 0.0);
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S763>/Constant'
       *  DataTypeConversion: '<S1330>/Data Type Conversion5'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Traction.TBCTraction =
        (ElectricalSystem_P.CoreSubsys.Constant_Value_hi != 0.0);
    }

    /* End of Switch: '<S763>/Switch' */

    /* Switch: '<S760>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasMotor) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1330>/Data Type Conversion3'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Traction.TBCNotBraking =
        (localB->UnitDelay[ForEach_itr_h].TrainWires.TWNotBraking != 0.0);
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S760>/Constant'
       *  DataTypeConversion: '<S1330>/Data Type Conversion3'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Traction.TBCNotBraking =
        (ElectricalSystem_P.CoreSubsys.Constant_Value_o != 0.0);
    }

    /* End of Switch: '<S760>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1326>/Bus Assignment3'
     *  BusAssignment: '<S1329>/Bus Assignment4'
     *  BusAssignment: '<S1330>/Bus Assignment1'
     *  BusAssignment: '<S1330>/Bus Assignment2'
     *  DataTypeConversion: '<S1326>/Data Type Conversion2'
     *  DataTypeConversion: '<S1326>/Data Type Conversion3'
     *  DataTypeConversion: '<S1326>/Data Type Conversion4'
     *  DataTypeConversion: '<S1330>/Data Type Conversion11'
     *  DataTypeConversion: '<S1330>/Data Type Conversion8'
     *  DataTypeConversion: '<S1330>/Data Type Conversion9'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Traction.TractionSafe =
      rtb_Switch_mqr;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Traction.NoEmergencyBrake =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TW22212 != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Traction.VCBStatus =
      (localB->UnitDelay[ForEach_itr_h].UnitWires.UW_VCB != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Traction.ContactorsFailure
      = rtb_OR5_g;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Traction.CIIsolated =
      rtb_LogicalOperator1_fh;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Braking.BCUPower =
      rtb_Switch_awy;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Braking.TBCTraction =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TWMotoring != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Braking.TBCNotBraking =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TWNotBraking != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Braking.NoEB =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TW22212 != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Braking.DeadmanVigilance =
      rtb_DG1182;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.TCMSPowerAvailable =
      rtb_Switch_mbi;

    /* Switch: '<S1285>/Switch' incorporates:
     *  Constant: '<S1285>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_eup >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_a5c) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1294>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1285>/Logical Operator1'
       *  Logic: '<S1285>/Logical Operator2'
       *  RelationalOperator: '<S1294>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HMIPower =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TVDUCB
            == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_mo)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1294>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1285>/Logical Operator'
       *  RelationalOperator: '<S1294>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HMIPower =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TVDUCB
          == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_mo));
    }

    /* End of Switch: '<S1285>/Switch' */

    /* Switch: '<S1303>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.CabActive =
        rtb_LogicalOperator2;
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1303>/Constant'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.CabActive =
        ElectricalSystem_P.CoreSubsys.Constant_Value_cmz;
    }

    /* End of Switch: '<S1303>/Switch' */

    /* Switch: '<S1300>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1329>/Data Type Conversion13'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ForwardDirection =
        (localB->UnitDelay[ForEach_itr_h].OrientationWires.TWForward != 0.0);
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1300>/Constant'
       *  DataTypeConversion: '<S1329>/Data Type Conversion13'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ForwardDirection =
        (ElectricalSystem_P.CoreSubsys.Constant_Value_l != 0.0);
    }

    /* End of Switch: '<S1300>/Switch' */

    /* Switch: '<S1304>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1329>/Data Type Conversion12'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ReverseDirection =
        (localB->UnitDelay[ForEach_itr_h].OrientationWires.TWReverse != 0.0);
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1304>/Constant'
       *  DataTypeConversion: '<S1329>/Data Type Conversion12'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ReverseDirection =
        (ElectricalSystem_P.CoreSubsys.Constant_Value_ha != 0.0);
    }

    /* End of Switch: '<S1304>/Switch' */

    /* Switch: '<S1301>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1329>/Data Type Conversion11'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.TractionOn =
        (localB->UnitDelay[ForEach_itr_h].TrainWires.TWMotoring != 0.0);
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1301>/Constant'
       *  DataTypeConversion: '<S1329>/Data Type Conversion11'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.TractionOn =
        (ElectricalSystem_P.CoreSubsys.Constant_Value_av != 0.0);
    }

    /* End of Switch: '<S1301>/Switch' */

    /* Switch: '<S1302>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1214>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BrakeOn =
        !(localB->UnitDelay[ForEach_itr_h].TrainWires.TWNotBraking != 0.0);
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1302>/Constant'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BrakeOn =
        ElectricalSystem_P.CoreSubsys.Constant_Value_kr;
    }

    /* End of Switch: '<S1302>/Switch' */

    /* Switch: '<S1309>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1329>/Data Type Conversion9'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.TractionSafe =
        (localB->UnitDelay[ForEach_itr_h].TrainWires.TW_TLGC2 != 0.0);
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1309>/Constant'
       *  DataTypeConversion: '<S1329>/Data Type Conversion9'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.TractionSafe =
        (ElectricalSystem_P.CoreSubsys.Constant_Value_di != 0.0);
    }

    /* End of Switch: '<S1309>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1329>/Bus Assignment'
     *  Constant: '<S1297>/Constant'
     *  Constant: '<S1298>/Constant'
     *  Constant: '<S1329>/Constant1'
     *  Logic: '<S1214>/NOT'
     *  RelationalOperator: '<S1297>/Compare'
     *  RelationalOperator: '<S1298>/Compare'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.AllRightDoorsClosed =
      rtb_DataTypeConversion4_i;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.AllLeftDoorsClosed =
      rtb_DataTypeConversion6_o;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ServiceBrakesReleased
      =
      !rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.ServiceBrakeApplied;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ParkBrakesReleased =
      rtb_Switch_hg_tmp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ParkBrakeApplication =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.ParkBrakeApplied;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      TCMS.ServiceBrakeApplication =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_n.ServiceBrakeApplication;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PantoLowered =
      (rtb_Switch_os <=
       ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_ej);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PantoRaised =
      (rtb_Switch_os >= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nz);

    /* Switch: '<S1306>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1329>/Data Type Conversion1'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PantoPowerDetected =
        (localB->UnitDelay[ForEach_itr_h].UnitWires.UW11104 != 0.0);
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1306>/Constant'
       *  DataTypeConversion: '<S1329>/Data Type Conversion1'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PantoPowerDetected =
        (ElectricalSystem_P.CoreSubsys.Constant_Value_f1 != 0.0);
    }

    /* End of Switch: '<S1306>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1329>/Bus Assignment4'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ZeroSpeed =
      rtb_DataTypeConversion13;

    /* Switch: '<S1308>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.Speedometer = ratio;
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1308>/Constant'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.Speedometer =
        ElectricalSystem_P.CoreSubsys.Constant_Value_pw;
    }

    /* End of Switch: '<S1308>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1329>/Bus Assignment2'
     *  CombinatorialLogic: '<S829>/Logic'
     *  Constant: '<S1212>/Constant'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.VCBState =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.VCBPressureSwitch;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APSKContactorState =
      ElectricalSystem_P.CoreSubsys.Logic_table_l[numCycles];
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APSAKContactorState =
      rtb_Logic_idx_0;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.FilterVoltage =
      ElectricalSystem_P.CoreSubsys.Constant_Value_bs3;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APS1Status =
      rtb_Switch_o0;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APS2Status =
      rtb_Switch_d5;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCG1Status =
      rtb_Switch_h3q;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCG2Status =
      rtb_Switch_bo;

    /* Switch: '<S1252>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasMotor) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCGOutputVoltage =
        rtb_Switch_jyc;
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1252>/Constant'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCGOutputVoltage =
        ElectricalSystem_P.CoreSubsys.Constant_Value_ax;
    }

    /* End of Switch: '<S1252>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1329>/Bus Assignment2'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BatteryVoltage =
      rtb_Switch_jyc;

    /* DataTypeConversion: '<S1212>/Data Type Conversion10' incorporates:
     *  Constant: '<S44>/Constant'
     *  DataTypeConversion: '<S1212>/Data Type Conversion12'
     *  DataTypeConversion: '<S1212>/Data Type Conversion13'
     *  Gain: '<S15>/Multiply'
     *  RelationalOperator: '<S44>/Compare'
     */
    rtb_Switch_jyc = static_cast<real_T>(static_cast<uint8_T>
      ((localB->CoreSubsys[ForEach_itr_h].u2Q01 >
        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_g ?
        static_cast<int32_T>(ElectricalSystem_P.CoreSubsys.Multiply_Gain_p) : 0)))
      * 0.0078125;

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1329>/Bus Assignment'
     *  BusAssignment: '<S1329>/Bus Assignment1'
     *  BusAssignment: '<S1329>/Bus Assignment2'
     *  BusAssignment: '<S1329>/Bus Assignment3'
     *  Constant: '<S1329>/Constant1'
     *  DataTypeConversion: '<S1212>/Data Type Conversion10'
     *  DataTypeConversion: '<S1212>/Data Type Conversion14'
     *  DataTypeConversion: '<S1212>/Data Type Conversion15'
     *  DataTypeConversion: '<S1212>/Data Type Conversion16'
     *  DataTypeConversion: '<S1212>/Data Type Conversion17'
     *  DataTypeConversion: '<S1212>/Data Type Conversion18'
     *  DataTypeConversion: '<S1212>/Data Type Conversion19'
     *  DataTypeConversion: '<S1214>/Data Type Conversion'
     *  DataTypeConversion: '<S1329>/Data Type Conversion18'
     *  DataTypeConversion: '<S1329>/Data Type Conversion20'
     *  DataTypeConversion: '<S1329>/Data Type Conversion24'
     *  DataTypeConversion: '<S1329>/Data Type Conversion25'
     *  DataTypeConversion: '<S1329>/Data Type Conversion26'
     *  DataTypeConversion: '<S1329>/Data Type Conversion27'
     *  DataTypeConversion: '<S1329>/Data Type Conversion6'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BatteryCurrent =
      rtb_Switch_jyc;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BatteryTemperature =
      localB->CoreSubsys[ForEach_itr_h].OutportBufferForBatteryTemp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCG1OutputCurrent =
      rtb_Switch_jyc;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCG2OutputCurrent =
      rtb_Switch_jyc;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.NoBrakeTrainLine =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TWNotBraking != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MotorTrainLine =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TWMotoring != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.NoFSB1Line =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TWNotFSB != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.NoFSB2Line =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TWNotFSB != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.NoEB1Line =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TW22212 != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.NoEB2Line =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TW22212 != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.LineVoltage =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pantograph.LineVoltageDetected;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.NoEB =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TW22212 != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APS1OutputVoltage =
      localB->UnitDelay[ForEach_itr_h].UnitWires.LW32101_02_03V;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APS2OutputVoltage =
      localB->UnitDelay[ForEach_itr_h].UnitWires.LW32101_02_03V;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HLSwitchStatus =
      rtb_OR10;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MarkerAndTailLight =
      rtb_PulseGenerator;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.TCMS_FL_Status =
      rtb_OR11_l;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.TCMS_CallOn_Status =
      rtb_Switch_bf;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.UTOOrRMLight =
      rtb_Switch_dul;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PADPBStatus =
      ElectricalSystem_P.CoreSubsys.Constant1_Value_n.PADPBStatus;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PADRStatus =
      rtb_Switch_gft;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.TPOR_ON =
      rtb_Switch_mp;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.TSDR_ON = rtb_TW_TSDR;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PowerONPBPressed =
      rtb_Switch_h4n;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PowerOFFPBPressed =
      rtb_Switch_ddv;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.LeftDoorEnable =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_LDE != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.RightDoorEnable =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_RDE != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.LeftHoldDoorClose =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_LHDC != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.RightHoldDoorClose =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_RHDC != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.LimpHomeMode =
      rtb_LogicalOperator40_ab;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      TCMS.FwdRevTrainLineMismatchMessage = rtb_Switch_lzx;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      TCMS.LowMRPressureFaultMessage = rtb_Switch_k2a;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCUPower =
      rtb_Switch_awy;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APS1Fault =
      rtb_Switch_lj5;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APS2Fault =
      rtb_Switch_i0;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APS1Isolated =
      rtb_LogicalOperator3_o;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APS2Isolated =
      (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolateAPS2
       != 0.0);

    /* Switch: '<S238>/Switch' incorporates:
     *  Constant: '<S238>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_iv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lo) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S249>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S238>/Logical Operator1'
       *  Logic: '<S238>/Logical Operator2'
       *  RelationalOperator: '<S249>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
        TCMS.SaloonLightGroupStatus1 = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW31102 != 0.0) &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB1
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fe)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S249>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S238>/Logical Operator'
       *  RelationalOperator: '<S249>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
        TCMS.SaloonLightGroupStatus1 = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW31102 != 0.0) &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB1
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_fe));
    }

    /* End of Switch: '<S238>/Switch' */

    /* Switch: '<S239>/Switch' incorporates:
     *  Constant: '<S239>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_me >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gcn) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S250>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S239>/Logical Operator1'
       *  Logic: '<S239>/Logical Operator2'
       *  RelationalOperator: '<S250>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
        TCMS.SaloonLightGroupStatus2 = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW31102 != 0.0) &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB2
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_p3)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S250>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S239>/Logical Operator'
       *  RelationalOperator: '<S250>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
        TCMS.SaloonLightGroupStatus2 = ((localB->UnitDelay[ForEach_itr_h].
        TrainWires.TW31102 != 0.0) &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB2
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_p3));
    }

    /* End of Switch: '<S239>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1329>/Bus Assignment1'
     *  BusAssignment: '<S1329>/Bus Assignment2'
     *  Constant: '<S471>/Constant'
     *  Constant: '<S471>/Mask'
     *  Constant: '<S504>/Constant'
     *  Constant: '<S505>/Constant'
     *  Constant: '<S506>/Constant'
     *  Constant: '<S507>/Constant'
     *  Constant: '<S508>/Constant'
     *  Constant: '<S509>/Constant'
     *  Constant: '<S510>/Constant'
     *  Constant: '<S834>/Shall be modelled as per faults requirement2'
     *  Constant: '<S834>/Shall be modelled as per faults requirement3'
     *  Constant: '<S834>/Shall be modelled as per faults requirement4'
     *  DataTypeConversion: '<S1212>/Data Type Conversion22'
     *  DataTypeConversion: '<S1212>/Data Type Conversion23'
     *  DataTypeConversion: '<S1212>/Data Type Conversion24'
     *  DataTypeConversion: '<S1212>/Data Type Conversion25'
     *  DataTypeConversion: '<S1212>/Data Type Conversion26'
     *  DataTypeConversion: '<S1329>/Data Type Conversion23'
     *  DataTypeConversion: '<S837>/Data Type Conversion11'
     *  DataTypeConversion: '<S837>/Data Type Conversion13'
     *  DataTypeConversion: '<S837>/Data Type Conversion14'
     *  DataTypeConversion: '<S837>/Data Type Conversion15'
     *  DataTypeConversion: '<S837>/Data Type Conversion16'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S1212>/NOT'
     *  Logic: '<S471>/AND'
     *  Logic: '<S471>/AND1'
     *  Logic: '<S471>/AND2'
     *  Logic: '<S471>/AND3'
     *  Logic: '<S471>/OR'
     *  Logic: '<S471>/XOR'
     *  Logic: '<S834>/Logical Operator'
     *  Logic: '<S834>/Logical Operator1'
     *  Logic: '<S834>/Logical Operator2'
     *  Logic: '<S834>/Logical Operator3'
     *  Logic: '<S834>/Logical Operator4'
     *  Logic: '<S834>/Logical Operator5'
     *  Logic: '<S834>/Logical Operator6'
     *  RelationalOperator: '<S504>/Compare'
     *  RelationalOperator: '<S505>/Compare'
     *  RelationalOperator: '<S506>/Compare'
     *  RelationalOperator: '<S507>/Compare'
     *  RelationalOperator: '<S508>/Compare'
     *  RelationalOperator: '<S509>/Compare'
     *  RelationalOperator: '<S510>/Compare'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.WFLStatus =
      rtb_Switch_ocb;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.WFLOilLevelStatus =
      ((!(ElectricalSystem_P.CoreSubsys.Shallbemodelledasperfaultsrequirement4_Value
          != 0.0)) && rtb_Switch_ocb);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.WFLPump1Status =
      ((!(ElectricalSystem_P.CoreSubsys.Shallbemodelledasperfaultsrequirement2_Value
          != 0.0)) && rtb_Switch_ocb);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.WFLPump2Status =
      ((!(ElectricalSystem_P.CoreSubsys.Shallbemodelledasperfaultsrequirement3_Value
          != 0.0)) && rtb_Switch_ocb);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.WFLFailure =
      (rtb_Switch_ocb && (rtb_ImpSel_InsertedFor_Faults_at_outport_0.WFLFailure
                          != 0.0));
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      TCMS.BatteryIsolationContactor = rtb_Switch_dm3;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.TrainControlContactor
      = localB->CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit_b.LogicalOperator1;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MainCompressor =
      rtb_Switch_ngo;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.AuxCompressor =
      rtb_Switch_bt;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVAC1Status =
      localB->CoreSubsys[ForEach_itr_h].HVAC1Status;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      TCMS.HVAC1SetPointTemperature = rtb_Switch_fza;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVAC1IntTemperature =
      rtb_Switch1_ft;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVAC1ExtTemperature =
      rtb_Switch2_g;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVAC1Faulty =
      rtb_Switch_lvy;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVAC1Isolated =
      rtb_Switch_pqr;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVAC2Status =
      localB->CoreSubsys[ForEach_itr_h].HVAC2Status;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      TCMS.HVAC2SetPointTemperature = rtb_Switch3;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVAC2IntTemperature =
      rtb_Switch4_n;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVAC2ExtTemperature =
      rtb_Switch5_g;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVAC2Faulty = false;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVAC2Isolated =
      rtb_Switch_mtn;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PECStatus =
      rtb_Switch_mg;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.EBbyNonCabEnabled =
      rtb_Switch_k2;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.EBbyMC =
      ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 != 0.0) && (
        static_cast<boolean_T>
        (((((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             <= ElectricalSystem_P.CoreSubsys.CompareToConstant_const_gs) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_f[0]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             == ElectricalSystem_P.CoreSubsys.CompareToConstant6_const_j) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_f[1]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             > ElectricalSystem_P.CoreSubsys.CompareToConstant1_const_g) &&
            (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             < ElectricalSystem_P.CoreSubsys.CompareToConstant2_const_g) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_f[2]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             == ElectricalSystem_P.CoreSubsys.CompareToConstant3_const_e) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_f[3]) ||
           ((rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             > ElectricalSystem_P.CoreSubsys.CompareToConstant5_const_k) &&
            (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.TractionBrakeController
             <= ElectricalSystem_P.CoreSubsys.CompareToConstant4_const_h) &&
            ElectricalSystem_P.CoreSubsys.Mask_Value_f[4])) ^
          (ElectricalSystem_P.CoreSubsys.NotEB1_NCContact != 0.0)))));
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.EBbyBrakeLoop =
      rtb_EBDueToCC;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.EBbyDeadMan =
      rtb_Switch_nw;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.NoLineVoltage =
      !(localB->UnitDelay[ForEach_itr_h].TrainWires.TW_11104 != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.D1Power =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.EBbyCC =
      rtb_Switch_fe;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.EBdueToATCZeroSpeed =
      rtb_Switch_d2;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVACFaults[0] =
      rtb_Switch_it;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVACFaults[1] =
      rtb_SupplyFanTripped;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVACFaults[2] =
      rtb_ExtSmokeDetectedinHVAC;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVACFaults[3] =
      rtb_LogicalOperator23;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVACFaults[4] =
      rtb_LogicalOperator40_nd;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVACFaults[5] =
      rtb_LogicalOperator40_eo;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HVACFaults[6] =
      rtb_LogicalOperator40_dp;

    /* Switch: '<S1215>/Switch' incorporates:
     *  Constant: '<S1215>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ll >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lf) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1215>/Logical Operator1'
       *  Logic: '<S1215>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ADDCOSStatus =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ADDCOS
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1215>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ADDCOSStatus =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ADDCOS
          != 0.0));
    }

    /* End of Switch: '<S1215>/Switch' */

    /* Switch: '<S1256>/Switch' incorporates:
     *  Constant: '<S1256>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bh >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fjg) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1256>/Logical Operator1'
       *  Logic: '<S1256>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ORDCOSStatus =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ORDCOS
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1256>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ORDCOSStatus =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ORDCOS
          != 0.0));
    }

    /* End of Switch: '<S1256>/Switch' */

    /* Switch: '<S1218>/Switch' incorporates:
     *  Constant: '<S1218>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fes >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_pr) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1218>/Logical Operator1'
       *  Logic: '<S1218>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MRIsolation =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MRIsolationCock
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1218>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MRIsolation =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31103 != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MRIsolationCock
          != 0.0));
    }

    /* End of Switch: '<S1218>/Switch' */

    /* Switch: '<S1254>/Switch' incorporates:
     *  Constant: '<S1254>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_i4p >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_egc) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1254>/Logical Operator1'
       *  Logic: '<S1254>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCBPAGroup =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.OCCB1
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1254>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCBPAGroup =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.OCCB1
          != 0.0));
    }

    /* End of Switch: '<S1254>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1329>/Bus Assignment2'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCB110VDCGroup =
      rtb_Switch_lx;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCBLightGroup =
      rtb_Switch_eto;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCBLightSaloonGroup =
      rtb_Switch_jk;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCBDoorGroup =
      rtb_Switch_emj;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCBBrakeGroup =
      rtb_Switch_dk;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCBAPSGroup =
      rtb_Switch_f20;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCBTCMSGroup =
      rtb_Switch_ib1;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCBSignallingGroup =
      rtb_Switch_cz;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.VCBTripCommand =
      rtb_Switch_cxh;

    /* Switch: '<S1225>/Switch' incorporates:
     *  Constant: '<S1225>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_klz >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_eoz) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1225>/Logical Operator1'
       *  Logic: '<S1225>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.CECBTripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CECB
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1225>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.CECBTripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.CECB
          != 0.0));
    }

    /* End of Switch: '<S1225>/Switch' */

    /* Switch: '<S1269>/Switch' incorporates:
     *  Constant: '<S1269>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bwy >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_gxj) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1269>/Logical Operator1'
       *  Logic: '<S1269>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.UCCBTripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.UCCB
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1269>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.UCCBTripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.UCCB
          != 0.0));
    }

    /* End of Switch: '<S1269>/Switch' */

    /* Switch: '<S1257>/Switch' incorporates:
     *  Constant: '<S1257>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dbq >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_fh) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1257>/Logical Operator1'
       *  Logic: '<S1257>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PANCBTripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PANCB
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1257>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PANCBTripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.PANCB
          != 0.0));
    }

    /* End of Switch: '<S1257>/Switch' */

    /* Switch: '<S1243>/Switch' incorporates:
     *  Constant: '<S1243>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_l5c >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_mnp) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1243>/Logical Operator1'
       *  Logic: '<S1243>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ELCB1Tripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ELCB1
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1243>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ELCB1Tripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ELCB1
          != 0.0));
    }

    /* End of Switch: '<S1243>/Switch' */

    /* Switch: '<S1245>/Switch' incorporates:
     *  Constant: '<S1245>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_h4 >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ja) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1245>/Logical Operator1'
       *  Logic: '<S1245>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ELCB2Tripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ELCB2
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1245>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ELCB2Tripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ELCB2
          != 0.0));
    }

    /* End of Switch: '<S1245>/Switch' */

    /* Switch: '<S1249>/Switch' incorporates:
     *  Constant: '<S1249>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_b2a >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_c4u) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1249>/Logical Operator1'
       *  Logic: '<S1249>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ILCB1Tripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB1
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1249>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ILCB1Tripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB1
          != 0.0));
    }

    /* End of Switch: '<S1249>/Switch' */

    /* Switch: '<S1251>/Switch' incorporates:
     *  Constant: '<S1251>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_k3c >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_nvq) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1251>/Logical Operator1'
       *  Logic: '<S1251>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ILCB2Tripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB2
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1251>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ILCB2Tripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ILCB2
          != 0.0));
    }

    /* End of Switch: '<S1251>/Switch' */

    /* Switch: '<S1217>/Switch' incorporates:
     *  Constant: '<S1217>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_o4q >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_are) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1217>/Logical Operator1'
       *  Logic: '<S1217>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APSCBTripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.APSCB
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1217>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.APSCBTripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.APSCB
          != 0.0));
    }

    /* End of Switch: '<S1217>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1329>/Bus Assignment2'
     *  BusAssignment: '<S1329>/Bus Assignment3'
     *  DataTypeConversion: '<S1329>/Data Type Conversion29'
     *  DataTypeConversion: '<S1329>/Data Type Conversion32'
     *  DataTypeConversion: '<S1329>/Data Type Conversion33'
     *  DataTypeConversion: '<S1329>/Data Type Conversion34'
     *  DataTypeConversion: '<S1329>/Data Type Conversion35'
     *  DataTypeConversion: '<S1329>/Data Type Conversion36'
     *  DataTypeConversion: '<S1329>/Data Type Conversion7'
     *  DataTypeConversion: '<S323>/Data Type Conversion'
     *  DataTypeConversion: '<S328>/Data Type Conversion1'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.FDUFailure =
      rtb_AND1_f;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      TCMS.InternalFireAlarmTLActive = rtb_InternalFireAlarmTLActive;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.SmokeAlarmCABArea =
      rtb_LogicalOperator40_k4;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.HeatAlarmEDB =
      rtb_LogicalOperator40_bi;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.FDUStatus =
      rtb_FDUHealthStatus;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.SFARStatus =
      rtb_FDUHealthStatus;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.UFARStatus =
      rtb_FDUHealthStatus;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BUVDR_Active =
      rtb_LogicalOperator40_l;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.CMCActivationFault =
      rtb_Switch_jxy;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.CMCDeactivationFault =
      rtb_Switch_jy;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.UW_VCB =
      localB->UnitDelay[ForEach_itr_h].UnitWires.UW_VCB;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PantoIsolated =
      rtb_Switch_fr4;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.VCBIsolated =
      rtb_Switch_gu4;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PantoDownPBCmd =
      rtb_Switch_jrk;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.VCBTripByCI =
      localB->UnitDelay[ForEach_itr_h].UnitWires.UW_VCBTripByCI;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.CIIsolated =
      rtb_LogicalOperator1_fh;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCG1Fault =
      rtb_Switch_iw;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCG2Fault =
      rtb_Switch_oe;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCG1Isolated =
      rtb_AND_dy;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCG2Isolated =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSIsolateBCG2;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BCG1IsolationFailed =
      rtb_AND1_c;

    /* Switch: '<S454>/Switch' incorporates:
     *  Constant: '<S454>/Constant'
     *  Constant: '<S491>/Constant'
     *  Logic: '<S454>/Logical Operator'
     *  Logic: '<S454>/Logical Operator1'
     *  Logic: '<S454>/Logical Operator2'
     *  RelationalOperator: '<S491>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_gia >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_oa) {
      rtb_Switch_dgm = (rtb_Switch_frj &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyBrakePB
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lu)));
    } else {
      rtb_Switch_dgm = (rtb_Switch_frj &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyBrakePB
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lu));
    }

    /* End of Switch: '<S454>/Switch' */

    /* Switch: '<S455>/Switch' incorporates:
     *  Constant: '<S455>/Constant'
     *  Constant: '<S492>/Constant'
     *  Logic: '<S455>/Logical Operator'
     *  Logic: '<S455>/Logical Operator1'
     *  Logic: '<S455>/Logical Operator2'
     *  RelationalOperator: '<S492>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bt >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jp) {
      tmp = (rtb_Switch_frj &&
             (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyStopPB
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lc)));
    } else {
      tmp = (rtb_Switch_frj &&
             (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.EmergencyStopPB
              == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_lc));
    }

    /* End of Switch: '<S455>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1329>/Bus Assignment2'
     *  BusAssignment: '<S1329>/Bus Assignment3'
     *  DataTypeConversion: '<S1329>/Data Type Conversion39'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S322>/OR1'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.EBbyPB =
      (rtb_Switch_dgm || tmp);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.VCBTripByAPS =
      localB->UnitDelay[ForEach_itr_h].UnitWires.UW_VCBTripByAPS;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCDR =
      rtb_DataTypeConversion12;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCDRFaulty =
      rtb_Switch_l5d;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ObstacleDetected =
      rtb_ObstacleDetected;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.ODDFailure =
      rtb_ImpSel_InsertedFor_Faults_at_outport_0.ODDFailure;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.MCBHVACGroupTripped =
      rtb_Switch_hq;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.PANPSR =
      rtb_Switch_cq;

    /* Switch: '<S1310>/Switch' incorporates:
     *  Constant: '<S1310>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ese) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1329>/Data Type Conversion40'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1310>/Logical Operator1'
       *  Logic: '<S1310>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.Key_Switch_Status =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MasterKeySwitch
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1329>/Data Type Conversion40'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1310>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.Key_Switch_Status =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.MasterKeySwitch
          != 0.0));
    }

    /* End of Switch: '<S1310>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  DataTypeConversion: '<S1329>/Data Type Conversion43'
     *  DataTypeConversion: '<S1329>/Data Type Conversion44'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.VCBI_ACOvercurrent =
      localB->UnitDelay[ForEach_itr_h].UnitWires.UW_ACOvercurrent;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.VCBI_KAKContactorCI =
      localB->UnitDelay[ForEach_itr_h].UnitWires.UW_KAKContactorCI;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      TCMS.EmergencyDoorNotOpenStatus = rtb_UnitDelay1;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.DoorProvenLoopOK =
      rtb_OR11;

    /* Switch: '<S373>/Switch' incorporates:
     *  Constant: '<S373>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_jf >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_c1z) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1329>/Data Type Conversion45'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S373>/Logical Operator1'
       *  Logic: '<S373>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BrakeLoopCBTripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BLCB
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  DataTypeConversion: '<S1329>/Data Type Conversion45'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S373>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BrakeLoopCBTripped =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101 != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BLCB
          != 0.0));
    }

    /* End of Switch: '<S373>/Switch' */

    /* Switch: '<S1238>/Switch' incorporates:
     *  Constant: '<S1238>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_oz4f >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_g1) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1276>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1238>/Logical Operator1'
       *  Logic: '<S1238>/Logical Operator2'
       *  RelationalOperator: '<S1276>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.DeadmanBypassStatus
        = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
           (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DeadmanBypassSwitch
              == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_er)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1276>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1238>/Logical Operator'
       *  RelationalOperator: '<S1276>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.DeadmanBypassStatus
        = ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
           (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DeadmanBypassSwitch
            == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_er));
    }

    /* End of Switch: '<S1238>/Switch' */

    /* Switch: '<S1224>/Switch' incorporates:
     *  Constant: '<S1224>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ajr >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_c0x) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1275>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1224>/Logical Operator1'
       *  Logic: '<S1224>/Logical Operator2'
       *  RelationalOperator: '<S1275>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BLCOSwitchStatus =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BrakeLoopCutoutSS
            == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ix)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1275>/Constant'
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1224>/Logical Operator'
       *  RelationalOperator: '<S1275>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.BLCOSwitchStatus =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.BrakeLoopCutoutSS
          == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ix));
    }

    /* End of Switch: '<S1224>/Switch' */

    /* Switch: '<S1318>/Switch' incorporates:
     *  Constant: '<S1318>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_bni >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_hsi) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1318>/Logical Operator1'
       *  Logic: '<S1318>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.WFLIsolated =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSWFLIsolation
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       *  Logic: '<S1318>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].TCMS.WFLIsolated =
        ((localB->UnitDelay[ForEach_itr_h].TrainWires.TDI_110VDC != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMSWFLIsolation
          != 0.0));
    }

    /* End of Switch: '<S1318>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1327>/Bus Assignment'
     *  BusAssignment: '<S1331>/Bus Assignment'
     *  BusAssignment: '<S1332>/Bus Assignment'
     *  Constant: '<S1327>/Constant'
     *  DataTypeConversion: '<S1327>/Data Type Conversion10'
     *  DataTypeConversion: '<S1327>/Data Type Conversion11'
     *  DataTypeConversion: '<S1327>/Data Type Conversion12'
     *  DataTypeConversion: '<S1327>/Data Type Conversion13'
     *  DataTypeConversion: '<S1327>/Data Type Conversion14'
     *  DataTypeConversion: '<S1327>/Data Type Conversion15'
     *  DataTypeConversion: '<S1327>/Data Type Conversion16'
     *  DataTypeConversion: '<S1327>/Data Type Conversion17'
     *  DataTypeConversion: '<S1327>/Data Type Conversion2'
     *  DataTypeConversion: '<S1327>/Data Type Conversion5'
     *  DataTypeConversion: '<S1327>/Data Type Conversion6'
     *  DataTypeConversion: '<S1327>/Data Type Conversion7'
     *  DataTypeConversion: '<S1327>/Data Type Conversion8'
     *  DataTypeConversion: '<S1331>/Data Type Conversion1'
     *  DataTypeConversion: '<S1331>/Data Type Conversion2'
     *  DataTypeConversion: '<S835>/Data Type Conversion'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     *  Logic: '<S324>/OR1'
     *  Logic: '<S324>/OR5'
     *  Logic: '<S835>/AND'
     *  Logic: '<S835>/AND2'
     *  Logic: '<S84>/OR10'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pneumatics.ParkBrakeApplicationValve = ((localB->UnitDelay[ForEach_itr_h].
      TrainWires.TW_TLGC9 != 0.0) ||
      (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.ParkBrakeApplyVDUReq
       != 0.0));
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pneumatics.ParkBrakeRelease = ((localB->UnitDelay[ForEach_itr_h].
      TrainWires.TW_TLGC10 != 0.0) ||
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.TCMS_PBR);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pneumatics.PantographRaiseValve = rtb_Switch_pb;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pneumatics.MainCompressorMotorPower = rtb_Switch_imq;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pneumatics.AuxCompressorMotorPower = rtb_Switch_di;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pneumatics.RemoteMagnetValve1 = rtb_Switch_ovx;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pneumatics.RemoteMagnetValve2 = rtb_Switch_jqt;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Pneumatics.HornLow =
      (rtb_Switch_ee ||
       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.HornLowVDUReq
        != 0.0) || rtb_LogicalOperator40_b_tmp);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Pneumatics.HornHigh =
      (tmp_c ||
       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.HornHighVDUReq
        != 0.0) || tmp_d);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pneumatics.RemoteHornIsolate =
      (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.TCMS.HornIsolateReinstateVDUReq
       != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Pneumatics.VCBCloseCmd =
      rtb_Switch_omo;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.LeftDoorClose =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_LeftDoorClose != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.RightDoorClose =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_RightDoorClose !=
       0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.LeftDoorOpen =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_LeftDoorOpen != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.RightDoorOpen =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_RightDoorOpen != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.LeftDoorRelease =
      ElectricalSystem_P.CoreSubsys.Constant_Value_d.LeftDoorRelease;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.RightDoorRelease =
      ElectricalSystem_P.CoreSubsys.Constant_Value_d.RightDoorRelease;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Doors.ObstacleDetectionDisabled =
      ElectricalSystem_P.CoreSubsys.Constant_Value_d.ObstacleDetectionDisabled;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.ZeroSpeed =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TW_ZeroSpeed != 0.0);
    for (i = 0; i < 8; i++) {
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.DCUPower[i] =
        rtb_ImpAsg_InsertedFor_Out1_at_inport_0_d[i];
    }

    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.DoorMotorPower =
      (localB->UnitDelay[ForEach_itr_h].TrainWires.TW31102 != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Doors.LeftDoorOpenCmdInLimpHome = (localB->UnitDelay[ForEach_itr_h].
      OrientationWires.TW_LDO_LH != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Doors.RightDoorOpenCmdInLimpHome = (localB->UnitDelay[ForEach_itr_h].
      OrientationWires.TW_RDO_LH != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.LeftDoorEnable =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_LDE != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.RightDoorEnable =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_RDE != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.LeftHoldDoorClose =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_LHDC != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.RightHoldDoorClose =
      (localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_RHDC != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.EmerDoorLatched =
      (tmp_1 || tmp_2);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Doors.EmerDoorOpenFault =
      (rtb_ImpSel_InsertedFor_Faults_at_outport_0.CCDetectedEmerDoorOpen != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Pantograph.PantoUpCommand =
      rtb_Switch_pb;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pantograph.PantoDownCommand = rtb_Switch_cx;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pantograph.PantoControlPower = (rtb_Switch_enl != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Pantograph.PantoMotorPower
      = (rtb_Switch_enl != 0.0);

    /* Switch: '<S529>/Switch' incorporates:
     *  Constant: '<S529>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_b2g >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_go) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Logic: '<S529>/Logical Operator1'
       *  Logic: '<S529>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Pantograph.PantoADDFault
        =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographDownForADDIntervention
          != 0.0) &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ADDCOS
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Logic: '<S529>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Pantograph.PantoADDFault
        =
        ((rtb_ImpSel_InsertedFor_Faults_at_outport_0.PantographDownForADDIntervention
          != 0.0) &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ADDCOS
          != 0.0));
    }

    /* End of Switch: '<S529>/Switch' */

    /* Switch: '<S552>/Switch' incorporates:
     *  Constant: '<S552>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_piv >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ptq) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Logic: '<S552>/Logical Operator1'
       *  Logic: '<S552>/Logical Operator2'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Pantograph.PantoORDFault
        =
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.PS2
         &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ORDCOS
            != 0.0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Logic: '<S552>/Logical Operator'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Pantograph.PantoORDFault
        =
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.PS2
         &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ORDCOS
          != 0.0));
    }

    /* End of Switch: '<S552>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1323>/Bus Assignment'
     *  BusAssignment: '<S1331>/Bus Assignment'
     *  Constant: '<S1087>/Constant'
     *  Constant: '<S1323>/Constant'
     *  DataTypeConversion: '<S1323>/Data Type Conversion1'
     *  DataTypeConversion: '<S1323>/Data Type Conversion12'
     *  DataTypeConversion: '<S1323>/Data Type Conversion13'
     *  DataTypeConversion: '<S1323>/Data Type Conversion14'
     *  DataTypeConversion: '<S1323>/Data Type Conversion15'
     *  DataTypeConversion: '<S1323>/Data Type Conversion16'
     *  DataTypeConversion: '<S1323>/Data Type Conversion17'
     *  DataTypeConversion: '<S1323>/Data Type Conversion18'
     *  DataTypeConversion: '<S1323>/Data Type Conversion2'
     *  DataTypeConversion: '<S1323>/Data Type Conversion21'
     *  DataTypeConversion: '<S1323>/Data Type Conversion24'
     *  DataTypeConversion: '<S1323>/Data Type Conversion25'
     *  DataTypeConversion: '<S1323>/Data Type Conversion26'
     *  DataTypeConversion: '<S1323>/Data Type Conversion3'
     *  DataTypeConversion: '<S1323>/Data Type Conversion9'
     *  Logic: '<S1084>/AND2'
     *  Logic: '<S1084>/AND3'
     *  Logic: '<S1084>/NOT'
     *  Logic: '<S1084>/NOT1'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pantograph.PantoRaiseFailure = rtb_Switch_hbz;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Pantograph.PantoLoweringFailure = rtb_Switch_nm;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.ATCPower =
      (rtb_LogicalOperator &&
       (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.ATCFailure != 0.0)));
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.ATOStartPB =
      localB->CoreSubsys[ForEach_itr_h].TimerOffDelayNoInit.LogicalOperator1;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.UTOStartPB =
      ElectricalSystem_P.CoreSubsys.Constant_Value_a.UTOStartPB;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      SignalSys.ATCSafetyBrakeResetPB = rtb_Switch_lxd;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.NotSafetyBrake =
      rtb_Switch_aw;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.CabActive =
      rtb_AND3_cq;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.UTOMode =
      rtb_Switch_gi2;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.TBCInFSB =
      rtb_Switch_f1;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.RMFMode =
      rtb_AND3_jm;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.DoorEnableBypass
      = rtb_Switch_gsu;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      SignalSys.TrainDoorClosedAndLocked = rtb_LogicalOperator_h2;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.RMRMode =
      rtb_XOR_nn;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.NoATCBypass =
      rtb_AND3_d;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.TrainIntegrity =
      ElectricalSystem_P.CoreSubsys.Constant_Value_o3f;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.DMIPower =
      (tmp_e && (!(rtb_ImpSel_InsertedFor_Faults_at_outport_0.DMIFailure != 0.0)));
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.ATOMode =
      rtb_AND3_o3;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.ATBMode =
      rtb_AND3_k;

    /* Switch: '<S1158>/Switch' incorporates:
     *  Constant: '<S1158>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_g5a >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_h5a) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1198>/Constant'
       *  DataTypeConversion: '<S1323>/Data Type Conversion27'
       *  Logic: '<S1158>/Logical Operator1'
       *  Logic: '<S1158>/Logical Operator2'
       *  RelationalOperator: '<S1198>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.ROSMode =
        (rtb_AND3_e0 &&
         (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ROSPB
            == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_e0)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S1198>/Constant'
       *  DataTypeConversion: '<S1323>/Data Type Conversion27'
       *  Logic: '<S1158>/Logical Operator'
       *  RelationalOperator: '<S1198>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.ROSMode =
        (rtb_AND3_e0 &&
         (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.ROSPB
          == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_e0));
    }

    /* End of Switch: '<S1158>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  BusAssignment: '<S1320>/Bus Assignment'
     *  BusAssignment: '<S1322>/Bus Assignment'
     *  BusAssignment: '<S1324>/Bus Assignment'
     *  BusAssignment: '<S1333>/Bus Assignment'
     *  Constant: '<S1324>/Constant'
     *  DataTypeConversion: '<S1322>/Data Type Conversion4'
     *  DataTypeConversion: '<S1322>/Data Type Conversion6'
     *  DataTypeConversion: '<S1323>/Data Type Conversion28'
     *  DataTypeConversion: '<S1323>/Data Type Conversion29'
     *  DataTypeConversion: '<S1323>/Data Type Conversion30'
     *  DataTypeConversion: '<S1323>/Data Type Conversion4'
     *  DataTypeConversion: '<S1323>/Data Type Conversion5'
     *  DataTypeConversion: '<S1323>/Data Type Conversion6'
     *  DataTypeConversion: '<S1323>/Data Type Conversion7'
     *  DataTypeConversion: '<S1323>/Data Type Conversion8'
     *  DataTypeConversion: '<S1325>/Data Type Conversion'
     *  ForEachSliceSelector generated from: '<S1>/WireStates'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.ATPMode =
      rtb_AND3_e0;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      SignalSys.EmergencyDoorNotOpen = rtb_Switch_hr;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.WakeUpStatus =
      rtb_AND3_f;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      SignalSys.PassengerEmergencyAlarm = rtb_XOR_j5;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.FireSmokeInd =
      rtb_Switch_ai2;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      SignalSys.MechanicalCoupling = rtb_AND3_n;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.ROSPB =
      rtb_DMIPower;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.UTBPB =
      rtb_AND3_a;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.LeftDoorOpenPB =
      localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_LeftDoorOpen;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.RightDoorOpenPB =
      localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_RightDoorOpen;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.LeftDoorClosePB =
      localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_LeftDoorClose;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].SignalSys.RightDoorClosePB
      = localB->UnitDelay[ForEach_itr_h].OrientationWires.TW_RightDoorClose;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      CouplingSystem.ElectricalCouplerState =
      ElectricalSystem_P.CoreSubsys.Constant_Value_dm.ElectricalCouplerState;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].CouplingSystem.UncoupleCmd
      = localB->UnitDelay[ForEach_itr_h].TrainWires.TW_UncoupleSignal;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Audio.VCBOpen =
      rtb_Switch_egb;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Audio.VCBClose =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.Pneumatics.VCBPressureSwitch;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Audio.CompressorOn =
      rtb_Switch_imq;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Audio.WiperOn =
      (rtb_MatchedYPosition_k != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Audio.DeadmanVigilance =
      rtb_LogicalOperator_dj;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Audio.FlasherLightSound =
      (diff != 0.0);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      Audio.ObstacleSoftCollision =
      rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.SignalSys.ObstacleSoftCollision;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].Scoring.DeadmanRelay =
      rtb_Switch_iu2;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      MiscOutputs.PAPIS.PAPIS_CCTV_Power = rtb_Switch_mfe;

    /* Switch: '<S934>/Switch' incorporates:
     *  Constant: '<S934>/Constant'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_osu >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_lbn) {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S946>/Constant'
       *  DataTypeConversion: '<S1325>/Data Type Conversion1'
       *  Logic: '<S934>/Logical Operator1'
       *  Logic: '<S934>/Logical Operator2'
       *  RelationalOperator: '<S946>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
        MiscOutputs.PAPIS.DoorCloseAnnouncement = (rtb_Switch_mfe &&
        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DoorCloseAnnouncementPB
           == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_d3)));
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
       *  Constant: '<S946>/Constant'
       *  DataTypeConversion: '<S1325>/Data Type Conversion1'
       *  Logic: '<S934>/Logical Operator'
       *  RelationalOperator: '<S946>/Compare'
       */
      rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
        MiscOutputs.PAPIS.DoorCloseAnnouncement = (rtb_Switch_mfe &&
        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.DoorCloseAnnouncementPB
         == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_d3));
    }

    /* End of Switch: '<S934>/Switch' */

    /* Switch: '<S956>/Switch' incorporates:
     *  Constant: '<S956>/Constant'
     *  Constant: '<S960>/Constant'
     *  Logic: '<S956>/Logical Operator'
     *  Logic: '<S956>/Logical Operator1'
     *  Logic: '<S956>/Logical Operator2'
     *  RelationalOperator: '<S960>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_dli >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ev3) {
      rtb_Switch_dgm = (rtb_Switch_mfe &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPBOperatingPanel1
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ic)));
    } else {
      rtb_Switch_dgm = (rtb_Switch_mfe &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPBOperatingPanel1
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ic));
    }

    /* End of Switch: '<S956>/Switch' */

    /* Switch: '<S959>/Switch' incorporates:
     *  Constant: '<S959>/Constant'
     *  Constant: '<S963>/Constant'
     *  Logic: '<S959>/Logical Operator'
     *  Logic: '<S959>/Logical Operator1'
     *  Logic: '<S959>/Logical Operator2'
     *  RelationalOperator: '<S963>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_oic >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_npd) {
      tmp = (rtb_Switch_mfe &&
             (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPBOperatingPanel1
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nl)));
    } else {
      tmp = (rtb_Switch_mfe &&
             (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPBOperatingPanel1
              == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_nl));
    }

    /* End of Switch: '<S959>/Switch' */

    /* Switch: '<S957>/Switch' incorporates:
     *  Constant: '<S957>/Constant'
     *  Constant: '<S961>/Constant'
     *  Logic: '<S957>/Logical Operator'
     *  Logic: '<S957>/Logical Operator1'
     *  Logic: '<S957>/Logical Operator2'
     *  RelationalOperator: '<S961>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ol >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_he) {
      tmp_0 = (rtb_Switch_mfe &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPB1OperatingPanel5
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_br2)));
    } else {
      tmp_0 = (rtb_Switch_mfe &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorOpenPB1OperatingPanel5
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_br2));
    }

    /* End of Switch: '<S957>/Switch' */

    /* Switch: '<S958>/Switch' incorporates:
     *  Constant: '<S958>/Constant'
     *  Constant: '<S962>/Constant'
     *  Logic: '<S958>/Logical Operator'
     *  Logic: '<S958>/Logical Operator1'
     *  Logic: '<S958>/Logical Operator2'
     *  RelationalOperator: '<S962>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_iiy >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_dug) {
      rtb_Switch_e4 = (rtb_Switch_mfe &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPB1OperatingPanel2
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_f00)));
    } else {
      rtb_Switch_e4 = (rtb_Switch_mfe &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorOpenPB1OperatingPanel2
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_f00));
    }

    /* End of Switch: '<S958>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  DataTypeConversion: '<S1325>/Data Type Conversion2'
     *  Logic: '<S937>/Logical Operator'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].MiscOutputs.PAPIS.DoorOpen
      = (rtb_Switch_dgm || tmp || tmp_0 || rtb_Switch_e4);

    /* Switch: '<S948>/Switch' incorporates:
     *  Constant: '<S948>/Constant'
     *  Constant: '<S952>/Constant'
     *  Logic: '<S948>/Logical Operator'
     *  Logic: '<S948>/Logical Operator1'
     *  Logic: '<S948>/Logical Operator2'
     *  RelationalOperator: '<S952>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_ncs >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_ky) {
      rtb_Switch_dgm = (rtb_Switch_mfe &&
                        (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel1
                           ==
                           ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ef)));
    } else {
      rtb_Switch_dgm = (rtb_Switch_mfe &&
                        (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel1
                         ==
                         ElectricalSystem_P.CoreSubsys.CompareToConstant_const_ef));
    }

    /* End of Switch: '<S948>/Switch' */

    /* Switch: '<S950>/Switch' incorporates:
     *  Constant: '<S950>/Constant'
     *  Constant: '<S954>/Constant'
     *  Logic: '<S950>/Logical Operator'
     *  Logic: '<S950>/Logical Operator1'
     *  Logic: '<S950>/Logical Operator2'
     *  RelationalOperator: '<S954>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_nf >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_bjp) {
      tmp = (rtb_Switch_mfe &&
             (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel1
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dc)));
    } else {
      tmp = (rtb_Switch_mfe &&
             (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel1
              == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_dc));
    }

    /* End of Switch: '<S950>/Switch' */

    /* Switch: '<S949>/Switch' incorporates:
     *  Constant: '<S949>/Constant'
     *  Constant: '<S953>/Constant'
     *  Logic: '<S949>/Logical Operator'
     *  Logic: '<S949>/Logical Operator1'
     *  Logic: '<S949>/Logical Operator2'
     *  RelationalOperator: '<S953>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_lyn >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_o4) {
      tmp_0 = (rtb_Switch_mfe &&
               (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel5
                  == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_is)));
    } else {
      tmp_0 = (rtb_Switch_mfe &&
               (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.RightDoorClosePBOperatingPanel5
                == ElectricalSystem_P.CoreSubsys.CompareToConstant_const_is));
    }

    /* End of Switch: '<S949>/Switch' */

    /* Switch: '<S951>/Switch' incorporates:
     *  Constant: '<S951>/Constant'
     *  Constant: '<S955>/Constant'
     *  Logic: '<S951>/Logical Operator'
     *  Logic: '<S951>/Logical Operator1'
     *  Logic: '<S951>/Logical Operator2'
     *  RelationalOperator: '<S955>/Compare'
     */
    if (ElectricalSystem_P.CoreSubsys.Constant_Value_fbs >
        ElectricalSystem_P.CoreSubsys.Switch_Threshold_jk) {
      rtb_Switch_e4 = (rtb_Switch_mfe &&
                       (!(rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel2
                          ==
                          ElectricalSystem_P.CoreSubsys.CompareToConstant_const_aqr)));
    } else {
      rtb_Switch_e4 = (rtb_Switch_mfe &&
                       (rtb_ImpSel_InsertedFor_ElectricalSystemInputs_at_outport_0.InputControlStates.LeftDoorClosePBOperatingPanel2
                        ==
                        ElectricalSystem_P.CoreSubsys.CompareToConstant_const_aqr));
    }

    /* End of Switch: '<S951>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/ElectricalSystemVehicleOutputs' incorporates:
     *  DataTypeConversion: '<S1325>/Data Type Conversion10'
     *  DataTypeConversion: '<S1325>/Data Type Conversion3'
     *  DataTypeConversion: '<S1325>/Data Type Conversion4'
     *  DataTypeConversion: '<S1325>/Data Type Conversion5'
     *  DataTypeConversion: '<S1325>/Data Type Conversion6'
     *  DataTypeConversion: '<S1325>/Data Type Conversion7'
     *  DataTypeConversion: '<S1325>/Data Type Conversion8'
     *  DataTypeConversion: '<S1325>/Data Type Conversion9'
     *  Logic: '<S936>/Logical Operator'
     */
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      MiscOutputs.PAPIS.DoorClose = (rtb_Switch_dgm || tmp || tmp_0 ||
      rtb_Switch_e4);
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      MiscOutputs.PAPIS.EmergencyDoorOpen = rtb_Switch_bas;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      MiscOutputs.PAPIS.CabActive = rtb_Switch_be1;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      MiscOutputs.PAPIS.AllDoorClose = rtb_Switch_ll;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      MiscOutputs.PAPIS.ZeroSpeed = rtb_Switch_oi;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      MiscOutputs.PAPIS.PECUAlarmActive = rtb_Switch_bq;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].MiscOutputs.PAPIS.Couple =
      rtb_Switch_eww;
    rty_ElectricalSystemVehicleOutputs[ForEach_itr_h].
      MiscOutputs.PAPIS.FrontObstacleDetected = rtb_ObstacleDetected;

    /* Switch: '<S966>/Switch' incorporates:
     *  ForEachSliceSelector generated from: '<S1>/ElectricalVehicleConfig'
     */
    if (rtu_ElectricalVehicleConfig[ForEach_itr_h].HasCab) {
      /* ForEachSliceAssignment generated from: '<S1>/CoupledCabsWireSources' incorporates:
       *  ForEachSliceSelector generated from: '<S1>/WireStates'
       */
      rtb_ImpAsg_InsertedFor_CoupledCabsWireSources_at_inport_0[ForEach_itr_h].
        TWCouplingForward = localB->UnitDelay[ForEach_itr_h].TrainWires.TW31101;
    } else {
      /* ForEachSliceAssignment generated from: '<S1>/CoupledCabsWireSources' incorporates:
       *  Constant: '<S966>/Constant'
       */
      rtb_ImpAsg_InsertedFor_CoupledCabsWireSources_at_inport_0[ForEach_itr_h].
        TWCouplingForward = ElectricalSystem_P.CoreSubsys.Constant_Value_n2;
    }

    /* End of Switch: '<S966>/Switch' */

    /* ForEachSliceAssignment generated from: '<S1>/CoupledCabsWireSources' incorporates:
     *  Constant: '<S840>/Zero'
     */
    rtb_ImpAsg_InsertedFor_CoupledCabsWireSources_at_inport_0[ForEach_itr_h].
      TWCouplingReturn = ElectricalSystem_P.CoreSubsys.Zero_Value_d;
  }

  /* End of Outputs for SubSystem: '<Root>/Model (Per Car)' */

  /* Outputs for Atomic SubSystem: '<Root>/WireLogic' */
  /* Outputs for Iterator SubSystem: '<S1342>/PartitionWireSources' incorporates:
   *  ForEach: '<S1349>/For Each'
   */
  for (ForEach_itr_o = 0; ForEach_itr_o < 8; ForEach_itr_o++) {
    /* ForEachSliceAssignment generated from: '<S1349>/TWCouplingReturn' incorporates:
     *  ForEachSliceSelector generated from: '<S1349>/In1'
     */
    rtb_ImpAsg_InsertedFor_TWCouplingReturn_at_inport_0[ForEach_itr_o] =
      rtb_ImpAsg_InsertedFor_CoupledCabsWireSources_at_inport_0[ForEach_itr_o].
      TWCouplingReturn;

    /* ForEachSliceAssignment generated from: '<S1349>/TWCouplingForward' incorporates:
     *  ForEachSliceSelector generated from: '<S1349>/In1'
     */
    rtb_ImpAsg_InsertedFor_TWCouplingForward_at_inport_0[ForEach_itr_o] =
      rtb_ImpAsg_InsertedFor_CoupledCabsWireSources_at_inport_0[ForEach_itr_o].
      TWCouplingForward;
  }

  /* End of Outputs for SubSystem: '<S1342>/PartitionWireSources' */

  /* Outputs for Iterator SubSystem: '<S2>/WireConnections' incorporates:
   *  ForEach: '<S1347>/For Each'
   */
  for (ForEach_itr_g = 0; ForEach_itr_g < 8; ForEach_itr_g++) {
    /* ForEachSliceAssignment generated from: '<S1347>/UnitConnection' incorporates:
     *  ForEachSliceSelector generated from: '<S1347>/ElectricalVehicleConfig'
     */
    rtb_ImpAsg_InsertedFor_UnitConnection_at_inport_0[ForEach_itr_g] =
      rtu_ElectricalVehicleConfig[ForEach_itr_g].UnitConnection;

    /* ForEachSliceAssignment generated from: '<S1347>/HasPanto' incorporates:
     *  ForEachSliceSelector generated from: '<S1347>/ElectricalVehicleConfig'
     */
    rtb_ImpAsg_InsertedFor_HasPanto_at_inport_0[ForEach_itr_g] =
      rtu_ElectricalVehicleConfig[ForEach_itr_g].HasPanto;

    /* ForEachSliceAssignment generated from: '<S1347>/TrainConnection' incorporates:
     *  ForEachSliceSelector generated from: '<S1347>/ElectricalVehicleInputs'
     */
    rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0[ForEach_itr_g] =
      rtu_ElectricalSystemVehicleInputs[ForEach_itr_g].
      Coupling.ElectricalTrainConnection;

    /* ForEachSliceAssignment generated from: '<S1347>/CoupledCabsConnection' incorporates:
     *  ForEachSliceSelector generated from: '<S1347>/ElectricalVehicleInputs'
     */
    rtb_ImpAsg_InsertedFor_CoupledCabsConnection_at_inport_0[ForEach_itr_g] =
      rtu_ElectricalSystemVehicleInputs[ForEach_itr_g].
      Coupling.ElectricalCoupledCabsConnection;

    /* ForEachSliceAssignment generated from: '<S1347>/Orientation' incorporates:
     *  ForEachSliceSelector generated from: '<S1347>/CommonVehicleInputs'
     */
    rtb_ImpAsg_InsertedFor_Orientation_at_inport_0[ForEach_itr_g] =
      rtu_CommonVehicleConfig[ForEach_itr_g].Orientation;
  }

  /* End of Outputs for SubSystem: '<S2>/WireConnections' */

  /* MATLAB Function: '<S1352>/Orientation Swap' */
  ElectricalSystem_OrientationSwap
    (rtb_ImpAsg_InsertedFor_TWCouplingForward_at_inport_0,
     rtb_ImpAsg_InsertedFor_TWCouplingReturn_at_inport_0,
     rtb_ImpAsg_InsertedFor_Orientation_at_inport_0, &localB->sf_OrientationSwap);

  /* MATLAB Function: '<S1358>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_CoupledCabsConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages);

  /* MATLAB Function: '<S1359>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap.w1,
    localB->sf_EnumeratedVoltages.enum_volt, &localB->sf_TrainWireMax);

  /* MATLAB Function: '<S1362>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_CoupledCabsConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_h);

  /* MATLAB Function: '<S1363>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap.w2,
    localB->sf_EnumeratedVoltages_h.enum_volt, &localB->sf_TrainWireMax_c);

  /* MATLAB Function: '<S1353>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(localB->sf_TrainWireMax.w,
    localB->sf_TrainWireMax_c.w, rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_d);

  /* Outputs for Iterator SubSystem: '<S1342>/WiresStatesRepack' incorporates:
   *  ForEach: '<S1351>/For Each'
   */
  for (ForEach_itr_n = 0; ForEach_itr_n < 8; ForEach_itr_n++) {
    /* ForEachSliceAssignment generated from: '<S1351>/Out1' incorporates:
     *  ForEachSliceSelector generated from: '<S1351>/TWCouplingForward'
     *  ForEachSliceSelector generated from: '<S1351>/TWCouplingReturn'
     */
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0_f[ForEach_itr_n].TWCouplingForward =
      localB->sf_OrientationSwap_d.w1[ForEach_itr_n];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0_f[ForEach_itr_n].TWCouplingReturn =
      localB->sf_OrientationSwap_d.w2[ForEach_itr_n];
  }

  /* End of Outputs for SubSystem: '<S1342>/WiresStatesRepack' */

  /* Outputs for Iterator SubSystem: '<S1343>/PartitionWireSources' incorporates:
   *  ForEach: '<S1366>/For Each'
   */
  for (ForEach_itr_bb = 0; ForEach_itr_bb < 8; ForEach_itr_bb++) {
    /* ForEachSliceAssignment generated from: '<S1366>/TW22204' incorporates:
     *  ForEachSliceSelector generated from: '<S1366>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW22204_at_inport_0[ForEach_itr_bb] =
      static_cast<int8_T>
      (rtb_ImpAsg_InsertedFor_MiscWireSources_at_inport_0[ForEach_itr_bb].
       TW_TLGC3);

    /* ForEachSliceAssignment generated from: '<S1366>/TW1' incorporates:
     *  ForEachSliceSelector generated from: '<S1366>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW1_at_inport_0[ForEach_itr_bb] =
      rtb_ImpAsg_InsertedFor_MiscWireSources_at_inport_0[ForEach_itr_bb].Dummy;
  }

  /* End of Outputs for SubSystem: '<S1343>/PartitionWireSources' */

  /* RelationalOperator: '<S1343>/Relational Operator' incorporates:
   *  Logic: '<S1343>/AND1'
   */
  for (i = 0; i < 8; i++) {
    rtb_ImpAsg_InsertedFor_HasPanto_at_inport_0[i] =
      ((rtb_ImpAsg_InsertedFor_HasPanto_at_inport_0[i] &&
        (rtb_ImpAsg_InsertedFor_TW22204_at_inport_0[i] != 0)) ==
       static_cast<int32_T>(rtb_ImpAsg_InsertedFor_HasPanto_at_inport_0[i]));
  }

  /* End of RelationalOperator: '<S1343>/Relational Operator' */

  /* Logic: '<S1343>/AND' */
  rtb_Switch_dgm = rtb_ImpAsg_InsertedFor_HasPanto_at_inport_0[0];
  for (i = 0; i < 7; i++) {
    rtb_Switch_dgm = (rtb_Switch_dgm &&
                      rtb_ImpAsg_InsertedFor_HasPanto_at_inport_0[i + 1]);
  }

  /* Outputs for Iterator SubSystem: '<S1343>/WiresStatesRepack' incorporates:
   *  ForEach: '<S1367>/For Each'
   */
  for (ForEach_itr_e = 0; ForEach_itr_e < 8; ForEach_itr_e++) {
    /* ForEachSliceAssignment generated from: '<S1367>/Out1' incorporates:
     *  BusCreator: '<S1367>/Bus Creator'
     *  DataTypeConversion: '<S1343>/Data Type Conversion'
     *  ForEachSliceSelector generated from: '<S1367>/Dummy'
     *  Logic: '<S1343>/AND'
     */
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0_p[ForEach_itr_e].TW_TLGC3 =
      rtb_Switch_dgm;
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0_p[ForEach_itr_e].Dummy =
      rtb_ImpAsg_InsertedFor_TW1_at_inport_0[ForEach_itr_e];
  }

  /* End of Outputs for SubSystem: '<S1343>/WiresStatesRepack' */

  /* Outputs for Iterator SubSystem: '<S1344>/PartitionWireSources' incorporates:
   *  ForEach: '<S1368>/For Each'
   */
  for (ForEach_itr_b = 0; ForEach_itr_b < 8; ForEach_itr_b++) {
    /* ForEachSliceAssignment generated from: '<S1368>/TW_RightDoorOpen' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW_RightDoorOpen_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW_RightDoorOpen;

    /* ForEachSliceAssignment generated from: '<S1368>/TW_RightDoorClose' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW_RightDoorClose_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW_RightDoorClose;

    /* ForEachSliceAssignment generated from: '<S1368>/TW_RHDC' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW_RHDC_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW_RHDC;

    /* ForEachSliceAssignment generated from: '<S1368>/TW_RDO_LH' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW_RDO_LH_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW_RDO_LH;

    /* ForEachSliceAssignment generated from: '<S1368>/TW_RDE' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW_RDE_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW_RDE;

    /* ForEachSliceAssignment generated from: '<S1368>/TW_LeftDoorOpen' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW_LeftDoorOpen_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW_LeftDoorOpen;

    /* ForEachSliceAssignment generated from: '<S1368>/TW_LeftDoorClose' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW_LeftDoorClose_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW_LeftDoorClose;

    /* ForEachSliceAssignment generated from: '<S1368>/TW_LHDC' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW_LHDC_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW_LHDC;

    /* ForEachSliceAssignment generated from: '<S1368>/TW_LDO_LH' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW_LDO_LH_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW_LDO_LH;

    /* ForEachSliceAssignment generated from: '<S1368>/TW_LDE' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW_LDE_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW_LDE;

    /* ForEachSliceAssignment generated from: '<S1368>/TWReverse' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TWReverse_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TWReverse;

    /* ForEachSliceAssignment generated from: '<S1368>/TWForward' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TWForward_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TWForward;

    /* ForEachSliceAssignment generated from: '<S1368>/TW81115' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW81115_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW81115;

    /* ForEachSliceAssignment generated from: '<S1368>/TW81114' incorporates:
     *  ForEachSliceSelector generated from: '<S1368>/In1'
     */
    rtb_ImpAsg_InsertedFor_TW81114_at_inport_0[ForEach_itr_b] =
      rtb_ImpAsg_InsertedFor_OrientationWireSources_at_inport_0[ForEach_itr_b].
      TW81114;
  }

  /* End of Outputs for SubSystem: '<S1344>/PartitionWireSources' */

  /* MATLAB Function: '<S1377>/Orientation Swap' */
  ElectricalSystem_OrientationSwap
    (rtb_ImpAsg_InsertedFor_TW_LeftDoorClose_at_inport_0,
     rtb_ImpAsg_InsertedFor_TW_RightDoorClose_at_inport_0,
     rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
     &localB->sf_OrientationSwap_dr);

  /* MATLAB Function: '<S1383>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_g);

  /* MATLAB Function: '<S1384>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_dr.w1,
    localB->sf_EnumeratedVoltages_g.enum_volt, &localB->sf_TrainWireMax_n);

  /* MATLAB Function: '<S1387>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_f);

  /* MATLAB Function: '<S1388>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_dr.w2,
    localB->sf_EnumeratedVoltages_f.enum_volt, &localB->sf_TrainWireMax_a);

  /* MATLAB Function: '<S1378>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(localB->sf_TrainWireMax_n.w,
    localB->sf_TrainWireMax_a.w, rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_h);

  /* MATLAB Function: '<S1391>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(rtb_ImpAsg_InsertedFor_TW81114_at_inport_0,
    rtb_ImpAsg_InsertedFor_TW81115_at_inport_0,
    rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_k);

  /* MATLAB Function: '<S1397>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_o);

  /* MATLAB Function: '<S1398>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_k.w1,
    localB->sf_EnumeratedVoltages_o.enum_volt, &localB->sf_TrainWireMax_i);

  /* MATLAB Function: '<S1401>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_k);

  /* MATLAB Function: '<S1402>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_k.w2,
    localB->sf_EnumeratedVoltages_k.enum_volt, &localB->sf_TrainWireMax_i0);

  /* MATLAB Function: '<S1392>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(localB->sf_TrainWireMax_i.w,
    localB->sf_TrainWireMax_i0.w, rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_hz);

  /* MATLAB Function: '<S1405>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(rtb_ImpAsg_InsertedFor_TWForward_at_inport_0,
    rtb_ImpAsg_InsertedFor_TWReverse_at_inport_0,
    rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_l);

  /* MATLAB Function: '<S1411>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_kp);

  /* MATLAB Function: '<S1412>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_l.w1,
    localB->sf_EnumeratedVoltages_kp.enum_volt, &localB->sf_TrainWireMax_o);

  /* MATLAB Function: '<S1415>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_e);

  /* MATLAB Function: '<S1416>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_l.w2,
    localB->sf_EnumeratedVoltages_e.enum_volt, &localB->sf_TrainWireMax_p);

  /* MATLAB Function: '<S1406>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(localB->sf_TrainWireMax_o.w,
    localB->sf_TrainWireMax_p.w, rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_i);

  /* MATLAB Function: '<S1419>/Orientation Swap' */
  ElectricalSystem_OrientationSwap
    (rtb_ImpAsg_InsertedFor_TW_LeftDoorOpen_at_inport_0,
     rtb_ImpAsg_InsertedFor_TW_RightDoorOpen_at_inport_0,
     rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
     &localB->sf_OrientationSwap_dc);

  /* MATLAB Function: '<S1425>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_hg);

  /* MATLAB Function: '<S1426>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_dc.w1,
    localB->sf_EnumeratedVoltages_hg.enum_volt, &localB->sf_TrainWireMax_ae);

  /* MATLAB Function: '<S1429>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_gb);

  /* MATLAB Function: '<S1430>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_dc.w2,
    localB->sf_EnumeratedVoltages_gb.enum_volt, &localB->sf_TrainWireMax_b);

  /* MATLAB Function: '<S1420>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(localB->sf_TrainWireMax_ae.w,
    localB->sf_TrainWireMax_b.w, rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_a);

  /* MATLAB Function: '<S1433>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(rtb_ImpAsg_InsertedFor_TW_LDE_at_inport_0,
    rtb_ImpAsg_InsertedFor_TW_RDE_at_inport_0,
    rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_df);

  /* MATLAB Function: '<S1439>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_p);

  /* MATLAB Function: '<S1440>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_df.w1,
    localB->sf_EnumeratedVoltages_p.enum_volt, &localB->sf_TrainWireMax_aj);

  /* MATLAB Function: '<S1443>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_kl);

  /* MATLAB Function: '<S1444>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_df.w2,
    localB->sf_EnumeratedVoltages_kl.enum_volt, &localB->sf_TrainWireMax_j);

  /* MATLAB Function: '<S1434>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(localB->sf_TrainWireMax_aj.w,
    localB->sf_TrainWireMax_j.w, rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_h2);

  /* MATLAB Function: '<S1447>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(rtb_ImpAsg_InsertedFor_TW_LHDC_at_inport_0,
    rtb_ImpAsg_InsertedFor_TW_RHDC_at_inport_0,
    rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_in);

  /* MATLAB Function: '<S1453>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_oe);

  /* MATLAB Function: '<S1454>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_in.w1,
    localB->sf_EnumeratedVoltages_oe.enum_volt, &localB->sf_TrainWireMax_nf);

  /* MATLAB Function: '<S1457>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_ga);

  /* MATLAB Function: '<S1458>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_in.w2,
    localB->sf_EnumeratedVoltages_ga.enum_volt, &localB->sf_TrainWireMax_om);

  /* MATLAB Function: '<S1448>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(localB->sf_TrainWireMax_nf.w,
    localB->sf_TrainWireMax_om.w, rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_f);

  /* MATLAB Function: '<S1461>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(rtb_ImpAsg_InsertedFor_TW_LDO_LH_at_inport_0,
    rtb_ImpAsg_InsertedFor_TW_RDO_LH_at_inport_0,
    rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_as);

  /* MATLAB Function: '<S1467>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_k2);

  /* MATLAB Function: '<S1468>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_as.w1,
    localB->sf_EnumeratedVoltages_k2.enum_volt, &localB->sf_TrainWireMax_d);

  /* MATLAB Function: '<S1471>/Enumerated Voltages' */
  ElectricalSystem_EnumeratedVoltages
    (rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
     &localB->sf_EnumeratedVoltages_a);

  /* MATLAB Function: '<S1472>/TrainWireMax' */
  ElectricalSystem_TrainWireMax(localB->sf_OrientationSwap_as.w2,
    localB->sf_EnumeratedVoltages_a.enum_volt, &localB->sf_TrainWireMax_ob);

  /* MATLAB Function: '<S1462>/Orientation Swap' */
  ElectricalSystem_OrientationSwap(localB->sf_TrainWireMax_d.w,
    localB->sf_TrainWireMax_ob.w, rtb_ImpAsg_InsertedFor_Orientation_at_inport_0,
    &localB->sf_OrientationSwap_lh);

  /* Outputs for Iterator SubSystem: '<S1344>/WiresStatesRepack' incorporates:
   *  ForEach: '<S1376>/For Each'
   */
  for (ForEach_itr_c = 0; ForEach_itr_c < 8; ForEach_itr_c++) {
    /* ForEachSliceAssignment generated from: '<S1376>/Out1' incorporates:
     *  ForEachSliceSelector generated from: '<S1376>/TW21201'
     *  ForEachSliceSelector generated from: '<S1376>/TW21202'
     *  ForEachSliceSelector generated from: '<S1376>/TW81105'
     *  ForEachSliceSelector generated from: '<S1376>/TW81106'
     *  ForEachSliceSelector generated from: '<S1376>/TW81109'
     *  ForEachSliceSelector generated from: '<S1376>/TW81110'
     *  ForEachSliceSelector generated from: '<S1376>/TW81114'
     *  ForEachSliceSelector generated from: '<S1376>/TW81115'
     *  ForEachSliceSelector generated from: '<S1376>/TW_LDE'
     *  ForEachSliceSelector generated from: '<S1376>/TW_LDO_LH'
     *  ForEachSliceSelector generated from: '<S1376>/TW_LHDC'
     *  ForEachSliceSelector generated from: '<S1376>/TW_RDE'
     *  ForEachSliceSelector generated from: '<S1376>/TW_RDO_LH'
     *  ForEachSliceSelector generated from: '<S1376>/TW_RHDC'
     */
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TWForward =
      localB->sf_OrientationSwap_i.w1[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TWReverse =
      localB->sf_OrientationSwap_i.w2[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW_LeftDoorClose =
      localB->sf_OrientationSwap_h.w1[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW_RightDoorClose =
      localB->sf_OrientationSwap_h.w2[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW_LeftDoorOpen =
      localB->sf_OrientationSwap_a.w1[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW_RightDoorOpen =
      localB->sf_OrientationSwap_a.w2[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW81114 =
      localB->sf_OrientationSwap_hz.w1[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW81115 =
      localB->sf_OrientationSwap_hz.w2[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW_LDE =
      localB->sf_OrientationSwap_h2.w1[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW_RDE =
      localB->sf_OrientationSwap_h2.w2[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW_LHDC =
      localB->sf_OrientationSwap_f.w1[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW_RHDC =
      localB->sf_OrientationSwap_f.w2[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW_LDO_LH =
      localB->sf_OrientationSwap_lh.w1[ForEach_itr_c];
    rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr_c].TW_RDO_LH =
      localB->sf_OrientationSwap_lh.w2[ForEach_itr_c];
  }

  /* End of Outputs for SubSystem: '<S1344>/WiresStatesRepack' */

  /* Outputs for Iterator SubSystem: '<S1475>/Convert to Matrix' incorporates:
   *  ForEach: '<S1477>/For Each'
   */
  for (ForEach_itr_d4 = 0; ForEach_itr_d4 < 8; ForEach_itr_d4++) {
    /* ForEachSliceAssignment generated from: '<S1477>/AllWires' */
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_TLPC1;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 1] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW22502;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 2] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_UncoupleSignal;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 3] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_TLGC1;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 4] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW25102;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 5] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW25103;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 6] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW26201;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 7] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TDI_110VDC;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 8] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW31203;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 9] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW51204;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 10] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW51206;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 11] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_ZeroSpeed;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 12] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW81201;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 13] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW81203;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 14] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TWPantoDNCmd;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 15] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW99102;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 16] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW99103;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 17] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW99104;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 18] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW99105;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 19] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_LHPBR;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 20] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_PADR;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 21] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_CC_TrainWakeup;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 22] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW41701;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 23] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW41704;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 24] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW41A04;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 25] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_ATOState;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 26] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TWNotBraking;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 27] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TWMotoring;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 28] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TWNotFSB;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 29] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TWCabASelected;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 30] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TWCabAKeySwitchON;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 31] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TWCabBSelected;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 32] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TWCabBKeySwitchON;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 33] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW31101;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 34] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW31101V;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 35] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW31102;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 36] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW31103;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 37] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW22212;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 38] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW11105;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 39] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_TSDR;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 40] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_TLGC3;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 41] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_TLGC2;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 42] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_TLGC9;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 43] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_TLGC10;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 44] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_TLGC11;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 45] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_SaloonFire;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 46] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_Integrity;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 47] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW22204;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 48] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_VCBTripByCI;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 49] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_APSFault;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 50] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_VCBTripByAPS;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 51] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_LDISRR;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 52] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_LDISLR;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n[54 * ForEach_itr_d4 + 53] =
      rtb_ImpAsg_InsertedFor_TrainWireSources_at_inport_0[ForEach_itr_d4].
      TW_11104;
  }

  /* End of Outputs for SubSystem: '<S1475>/Convert to Matrix' */

  /* Outputs for Iterator SubSystem: '<S1475>/TrainWires' */
  ElectricalSystem_TrainWires(54, rtb_ImpAsg_InsertedFor_AllWires_at_inport_0_n,
    rtb_ImpAsg_InsertedFor_TrainConnection_at_inport_0,
    rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i, localB->TrainWires);

  /* End of Outputs for SubSystem: '<S1475>/TrainWires' */

  /* Outputs for Iterator SubSystem: '<S1475>/Convert to Busses' incorporates:
   *  ForEach: '<S1476>/For Each'
   */
  for (ForEach_itr_gv = 0; ForEach_itr_gv < 8; ForEach_itr_gv++) {
    /* ForEachSliceAssignment generated from: '<S1476>/WiresStates' incorporates:
     *  BusCreator: '<S1479>/BusCreator'
     */
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_TLPC1 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW22502 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 1];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].
      TW_UncoupleSignal = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 *
      ForEach_itr_gv + 2];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_TLGC1 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 3];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW25102 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 4];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW25103 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 5];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW26201 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 6];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TDI_110VDC =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 7];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW31203 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 8];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW51204 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 9];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW51206 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 10];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_ZeroSpeed =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 11];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW81201 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 12];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW81203 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 13];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TWPantoDNCmd =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 14];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW99102 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 15];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW99103 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 16];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW99104 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 17];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW99105 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 18];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_LHPBR =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 19];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_PADR =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 20];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].
      TW_CC_TrainWakeup = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 *
      ForEach_itr_gv + 21];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW41701 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 22];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW41704 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 23];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW41A04 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 24];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_ATOState =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 25];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TWNotBraking =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 26];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TWMotoring =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 27];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TWNotFSB =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 28];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].
      TWCabASelected = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 *
      ForEach_itr_gv + 29];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].
      TWCabAKeySwitchON = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 *
      ForEach_itr_gv + 30];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].
      TWCabBSelected = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 *
      ForEach_itr_gv + 31];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].
      TWCabBKeySwitchON = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 *
      ForEach_itr_gv + 32];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW31101 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 33];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW31101V =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 34];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW31102 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 35];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW31103 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 36];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW22212 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 37];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW11105 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 38];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_TSDR =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 39];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_TLGC3 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 40];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_TLGC2 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 41];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_TLGC9 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 42];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_TLGC10 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 43];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_TLGC11 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 44];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_SaloonFire
      = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 45];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_Integrity =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 46];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW22204 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 47];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].
      TW_VCBTripByCI = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 *
      ForEach_itr_gv + 48];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_APSFault =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 49];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].
      TW_VCBTripByAPS = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 *
      ForEach_itr_gv + 50];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_LDISRR =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 51];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_LDISLR =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 52];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr_gv].TW_11104 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0_i[54 * ForEach_itr_gv + 53];
  }

  /* End of Outputs for SubSystem: '<S1475>/Convert to Busses' */

  /* Outputs for Iterator SubSystem: '<S1485>/Convert to Matrix' incorporates:
   *  ForEach: '<S1487>/For Each'
   */
  for (ForEach_itr_d = 0; ForEach_itr_d < 8; ForEach_itr_d++) {
    /* ForEachSliceAssignment generated from: '<S1487>/AllWires' */
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].UW11104;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 1] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].UW26101;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 2] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].UW33101;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 3] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      LW32101_02_03V;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 4] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].UW_TPOR;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 5] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      UW_BCGPower;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 6] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].UW_VCB;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 7] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      UW_TCU_KStatus;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 8] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      UW_TCU_AKStatus;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 9] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      KContactorState;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 10] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      AKContactorState;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 11] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].APSPower;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 12] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      Contactor_Fault;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 13] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      UW_DC110VLowFault;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 14] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      UW_VCBTrip;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 15] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].UW_PADR;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 16] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].UW_BUVDR;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 17] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      UW_PantoDown;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 18] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      UW_ACOvercurrent;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 19] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      UW_KAKContactorCI;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 20] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      UW_VCBTripByCI;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 21] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      UW_APSFault;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 22] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].
      UW_VCBTripByAPS;
    rtb_ImpAsg_InsertedFor_AllWires_at_inport_0[24 * ForEach_itr_d + 23] =
      rtb_ImpAsg_InsertedFor_UnitWireSources_at_inport_0[ForEach_itr_d].UW_TSDR;
  }

  /* End of Outputs for SubSystem: '<S1485>/Convert to Matrix' */

  /* Outputs for Iterator SubSystem: '<S1485>/TrainWires' */
  ElectricalSystem_TrainWires(24, rtb_ImpAsg_InsertedFor_AllWires_at_inport_0,
    rtb_ImpAsg_InsertedFor_UnitConnection_at_inport_0,
    rtb_ImpAsg_InsertedFor_wires_s_at_inport_0, localB->TrainWires_l);

  /* End of Outputs for SubSystem: '<S1485>/TrainWires' */

  /* Outputs for Iterator SubSystem: '<S1485>/Convert to Busses' incorporates:
   *  ForEach: '<S1486>/For Each'
   */
  for (ForEach_itr_p = 0; ForEach_itr_p < 8; ForEach_itr_p++) {
    /* ForEachSliceAssignment generated from: '<S1486>/WiresStates' incorporates:
     *  BusCreator: '<S1489>/BusCreator'
     */
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW11104 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW26101 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 1];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW33101 =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 2];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].
      LW32101_02_03V = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 *
      ForEach_itr_p + 3];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW_TPOR =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 4];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW_BCGPower =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 5];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW_VCB =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 6];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].
      UW_TCU_KStatus = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 *
      ForEach_itr_p + 7];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].
      UW_TCU_AKStatus = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 *
      ForEach_itr_p + 8];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].
      KContactorState = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 *
      ForEach_itr_p + 9];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].
      AKContactorState = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 *
      ForEach_itr_p + 10];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].APSPower =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 11];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].
      Contactor_Fault = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 *
      ForEach_itr_p + 12];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].
      UW_DC110VLowFault = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 *
      ForEach_itr_p + 13];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW_VCBTrip =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 14];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW_PADR =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 15];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW_BUVDR =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 16];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW_PantoDown
      = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 17];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].
      UW_ACOvercurrent = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 *
      ForEach_itr_p + 18];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].
      UW_KAKContactorCI = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 *
      ForEach_itr_p + 19];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].
      UW_VCBTripByCI = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 *
      ForEach_itr_p + 20];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW_APSFault =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 21];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].
      UW_VCBTripByAPS = rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 *
      ForEach_itr_p + 22];
    rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr_p].UW_TSDR =
      rtb_ImpAsg_InsertedFor_wires_s_at_inport_0[24 * ForEach_itr_p + 23];
  }

  /* End of Outputs for SubSystem: '<S1485>/Convert to Busses' */

  /* Outputs for Iterator SubSystem: '<S2>/WiresRepack' incorporates:
   *  ForEach: '<S1348>/For Each'
   */
  for (ForEach_itr = 0; ForEach_itr < 8; ForEach_itr++) {
    /* ForEachSliceAssignment generated from: '<S1348>/WireStates' incorporates:
     *  ForEachSliceSelector generated from: '<S1348>/CoupledCabsWiresStates'
     *  ForEachSliceSelector generated from: '<S1348>/MiscWiresStates'
     *  ForEachSliceSelector generated from: '<S1348>/OrientationWiresStates'
     *  ForEachSliceSelector generated from: '<S1348>/TrainWiresStates'
     *  ForEachSliceSelector generated from: '<S1348>/UnitWiresStates'
     */
    rty_TrainWireOutput[ForEach_itr].TrainWires =
      rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0[ForEach_itr];
    rty_TrainWireOutput[ForEach_itr].UnitWires =
      rtb_ImpAsg_InsertedFor_WiresStates_at_inport_0_f[ForEach_itr];
    rty_TrainWireOutput[ForEach_itr].OrientationWires =
      rtb_ImpAsg_InsertedFor_Out1_at_inport_0[ForEach_itr];
    rty_TrainWireOutput[ForEach_itr].CoupledCabsWires =
      rtb_ImpAsg_InsertedFor_Out1_at_inport_0_f[ForEach_itr];
    rty_TrainWireOutput[ForEach_itr].MiscWires =
      rtb_ImpAsg_InsertedFor_Out1_at_inport_0_p[ForEach_itr];
  }

  /* End of Outputs for SubSystem: '<S2>/WiresRepack' */
  /* End of Outputs for SubSystem: '<Root>/WireLogic' */

  /* Update for UnitDelay: '<Root>/Unit Delay' */
  memcpy(&localDW->UnitDelay_DSTATE[0], &rty_TrainWireOutput[0], sizeof
         (BD_ElectricalSystem_Wires) << 3U);
}

/* Model initialize function */
void ElectricalSystem_initialize(const char_T **rt_errorStatus, const
  rtTimingBridge *timingBridge, int_T mdlref_TID0, RT_MODEL_ElectricalSystem_T *
  const ElectricalSystem_M, B_ElectricalSystem_c_T *localB,
  DW_ElectricalSystem_f_T *localDW, rtwCAPI_ModelMappingInfo *rt_ParentMMI,
  const char_T *rt_ChildPath, int_T rt_ChildMMIIdx, int_T rt_CSTATEIdx)
{
  /* Registration code */

  /* initialize non-finites */
  rt_InitInfAndNaN(sizeof(real_T));

  /* setup the global timing engine */
  ElectricalSystem_M->Timing.mdlref_GlobalTID[0] = mdlref_TID0;
  ElectricalSystem_M->timingBridge = (timingBridge);

  /* initialize error status */
  rtmSetErrorStatusPointer(ElectricalSystem_M, rt_errorStatus);

  /* block I/O */
  (void) memset((static_cast<void *>(localB)), 0,
                sizeof(B_ElectricalSystem_c_T));

  /* states (dwork) */
  (void) memset(static_cast<void *>(localDW), 0,
                sizeof(DW_ElectricalSystem_f_T));

  /* Initialize DataMapInfo substructure containing ModelMap for C API */
  {
    ElectricalSystem_InitializeDataMapInfo(ElectricalSystem_M, localB);
  }

  /* Initialize Parent model MMI */
  if ((rt_ParentMMI != (NULL)) && (rt_ChildPath != (NULL))) {
    rtwCAPI_SetChildMMI(*rt_ParentMMI, rt_ChildMMIIdx,
                        &(ElectricalSystem_M->DataMapInfo.mmi));
    rtwCAPI_SetPath(ElectricalSystem_M->DataMapInfo.mmi, rt_ChildPath);
    rtwCAPI_MMISetContStateStartIndex(ElectricalSystem_M->DataMapInfo.mmi,
      rt_CSTATEIdx);
  }
}
