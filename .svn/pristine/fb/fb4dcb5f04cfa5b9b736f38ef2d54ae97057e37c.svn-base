// This file is autogenerated by matlab.py, do not modify!

#include "ModelSpecific.h"
#include "model_dll/MemoryMapping.h"

namespace
{
    // If there is no timing element then the whole structure can be added through AddReadOnly

    template<typename T>
    void AddRTM(MemoryMapping &mm, T &data)
    {
        mm.AddReadOnly(data.errorStatus);
        mm.AddReadOnly(data.DataMapInfo);
        mm.AddReadOnly(data.timingBridge);

        // This leaves Timing which is part of the state
    }
}

void RegisterMemoryMap(MemoryMapping &mm, ModelResource &model)
{
    mm.RegisterStruct(model.Model().BEML_EMU_U.SimData);
    mm.Add("SimulationTime", model.Model().BEML_EMU_U.SimData.SimulationTime);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Common);
    mm.Add("Enabled", model.Model().BEML_EMU_U.VehicleConfig[0].Common.Enabled);
    mm.Add("VehicleID", model.Model().BEML_EMU_U.VehicleConfig[0].Common.VehicleID);
    mm.Add("Type", model.Model().BEML_EMU_U.VehicleConfig[0].Common.Type);
    mm.Add("Class", model.Model().BEML_EMU_U.VehicleConfig[0].Common.Class);
    mm.Add("Orientation", model.Model().BEML_EMU_U.VehicleConfig[0].Common.Orientation);
    mm.Add("Length", model.Model().BEML_EMU_U.VehicleConfig[0].Common.Length);
    mm.Add("Height", model.Model().BEML_EMU_U.VehicleConfig[0].Common.Height);
    mm.Add("Width", model.Model().BEML_EMU_U.VehicleConfig[0].Common.Width);
    mm.Add("TareMass", model.Model().BEML_EMU_U.VehicleConfig[0].Common.TareMass);
    mm.Add("GrossMass", model.Model().BEML_EMU_U.VehicleConfig[0].Common.GrossMass);
    mm.Add("LoadingMass", model.Model().BEML_EMU_U.VehicleConfig[0].Common.LoadingMass);
    mm.Add("NumberOfAxles", model.Model().BEML_EMU_U.VehicleConfig[0].Common.NumberOfAxles);
    mm.Add("NumberOfDrivenAxles", model.Model().BEML_EMU_U.VehicleConfig[0].Common.NumberOfDrivenAxles);
    mm.Add("NumberOfBrakedAxles", model.Model().BEML_EMU_U.VehicleConfig[0].Common.NumberOfBrakedAxles);
    mm.Add("WheelDiameter", model.Model().BEML_EMU_U.VehicleConfig[0].Common.WheelDiameter);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Location.UnitConfig);
    mm.Add("UnitConnection", model.Model().BEML_EMU_U.VehicleConfig[0].Location.UnitConfig.UnitConnection);
    mm.Add("UnitID", model.Model().BEML_EMU_U.VehicleConfig[0].Location.UnitConfig.UnitID);
    mm.Add("VehiclesPerUnit", model.Model().BEML_EMU_U.VehicleConfig[0].Location.UnitConfig.VehiclesPerUnit);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Location);
    mm.Add("IsFirstVehicle", model.Model().BEML_EMU_U.VehicleConfig[0].Location.IsFirstVehicle);
    mm.Add("IsLastVehicle", model.Model().BEML_EMU_U.VehicleConfig[0].Location.IsLastVehicle);
    mm.Add("UnitConfig", model.Model().BEML_EMU_U.VehicleConfig[0].Location.UnitConfig);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Equipment);
    mm.Add("HasCab", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.HasCab);
    mm.Add("HasBogie", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.HasBogie);
    mm.Add("HasMotors", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.HasMotors);
    mm.Add("HasPneumaticPanto", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.HasPneumaticPanto);
    mm.Add("HasElectricPanto", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.HasElectricPanto);
    mm.Add("HasMainCompressor", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.HasMainCompressor);
    mm.Add("HasMainReservoir", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.HasMainReservoir);
    mm.Add("HasPantoReservoir", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.HasPantoReservoir);
    mm.Add("HasBrakeSystem", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.HasBrakeSystem);
    mm.Add("NumberOfDoors", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.NumberOfDoors);
    mm.Add("NumberOfTractionBogies", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.NumberOfTractionBogies);
    mm.Add("NumberOfBrakingBogies", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment.NumberOfBrakingBogies);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DavisCoefficients);
    mm.Add("DavisCoeffA1", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DavisCoefficients.DavisCoeffA1);
    mm.Add("DavisCoeffA2", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DavisCoefficients.DavisCoeffA2);
    mm.Add("DavisCoeffB1", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DavisCoefficients.DavisCoeffB1);
    mm.Add("DavisCoeffB2", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DavisCoefficients.DavisCoeffB2);
    mm.Add("DavisCoeffLeadCarC", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DavisCoefficients.DavisCoeffLeadCarC);
    mm.Add("DavisCoeffTailCarC", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DavisCoefficients.DavisCoeffTailCarC);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics);
    mm.Add("AerodynamicDragCoeff_Front", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.AerodynamicDragCoeff_Front);
    mm.Add("AerodynamicDragCoeff_Trail", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.AerodynamicDragCoeff_Trail);
    mm.Add("BearingFrictionCoeff", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.BearingFrictionCoeff);
    mm.Add("BearingDynamicFrictionCoeff", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.BearingDynamicFrictionCoeff);
    mm.Add("LateralFrictionCoeff", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.LateralFrictionCoeff);
    mm.Add("RailStaticFrictionCoeff", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.RailStaticFrictionCoeff);
    mm.Add("RailDynamicFrictionCoeff", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.RailDynamicFrictionCoeff);
    mm.Add("RailSandedStaticFrictionCoeff", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.RailSandedStaticFrictionCoeff);
    mm.Add("RailSandedDynamicFrictionCoeff", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.RailSandedDynamicFrictionCoeff);
    mm.Add("SpringRate", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.SpringRate);
    mm.Add("SlackSpringRate", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.SlackSpringRate);
    mm.Add("DampingRate", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DampingRate);
    mm.Add("SlackDampingRate", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.SlackDampingRate);
    mm.Add("EnableDampingAdjustmentByMass", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.EnableDampingAdjustmentByMass);
    mm.Add("DampingAdjustmentDesignMass", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DampingAdjustmentDesignMass);
    mm.Add("SlackLength", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.SlackLength);
    mm.Add("DampingLeadIn", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DampingLeadIn);
    mm.Add("CouplerShockTime", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.CouplerShockTime);
    mm.Add("DragCalculationMethod", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DragCalculationMethod);
    mm.Add("DavisCoefficients", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.DavisCoefficients);
    mm.Add("UseSandFrictionCoeffs", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.UseSandFrictionCoeffs);
    mm.Add("SandStaticFrictionFactor", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.SandStaticFrictionFactor);
    mm.Add("SandDynamicFrictionFactor", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.SandDynamicFrictionFactor);
    mm.Add("InitialVelocity", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics.InitialVelocity);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Brakes);
    mm.Add("BrakeShoeCoefficientCalculationMethod", model.Model().BEML_EMU_U.VehicleConfig[0].Brakes.BrakeShoeCoefficientCalculationMethod);
    mm.Add("BrakeShoeFrictionCoeff", model.Model().BEML_EMU_U.VehicleConfig[0].Brakes.BrakeShoeFrictionCoeff);
    mm.Add("BrakeFadeEnable", model.Model().BEML_EMU_U.VehicleConfig[0].Brakes.BrakeFadeEnable);
    mm.Add("BrakeTemperatureEnable", model.Model().BEML_EMU_U.VehicleConfig[0].Brakes.BrakeTemperatureEnable);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Pneumatics.Equipment);
    mm.Add("HasDriverCab", model.Model().BEML_EMU_U.VehicleConfig[0].Pneumatics.Equipment.HasDriverCab);
    mm.Add("HasBogie", model.Model().BEML_EMU_U.VehicleConfig[0].Pneumatics.Equipment.HasBogie);
    mm.Add("HasCompressor", model.Model().BEML_EMU_U.VehicleConfig[0].Pneumatics.Equipment.HasCompressor);
    mm.Add("HasMainReservoir", model.Model().BEML_EMU_U.VehicleConfig[0].Pneumatics.Equipment.HasMainReservoir);
    mm.Add("HasBrakeSystem", model.Model().BEML_EMU_U.VehicleConfig[0].Pneumatics.Equipment.HasBrakeSystem);
    mm.Add("HasPantograph", model.Model().BEML_EMU_U.VehicleConfig[0].Pneumatics.Equipment.HasPantograph);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Pneumatics);
    mm.Add("Equipment", model.Model().BEML_EMU_U.VehicleConfig[0].Pneumatics.Equipment);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Traction);
    mm.Add("HasMotors", model.Model().BEML_EMU_U.VehicleConfig[0].Traction.HasMotors);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Pantograph);
    mm.Add("HasPanto", model.Model().BEML_EMU_U.VehicleConfig[0].Pantograph.HasPanto);
    mm.Add("PneumaticsPoweredPanto", model.Model().BEML_EMU_U.VehicleConfig[0].Pantograph.PneumaticsPoweredPanto);
    mm.Add("ElectricPoweredPanto", model.Model().BEML_EMU_U.VehicleConfig[0].Pantograph.ElectricPoweredPanto);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Doors);
    mm.Add("isLeft", model.Model().BEML_EMU_U.VehicleConfig[0].Doors.isLeft);
    mm.Add("NumberOfDoors", model.Model().BEML_EMU_U.VehicleConfig[0].Doors.NumberOfDoors);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0].Electrical);
    mm.Add("HasPanto", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.HasPanto);
    mm.Add("HasCab", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.HasCab);
    mm.Add("IsNonCab", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.IsNonCab);
    mm.Add("HasMotor", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.HasMotor);
    mm.Add("HasMainCompressor", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.HasMainCompressor);
    mm.Add("HasPantoReservoir", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.HasPantoReservoir);
    mm.Add("IsT1", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.IsT1);
    mm.Add("IsT2", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.IsT2);
    mm.Add("IsT3", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.IsT3);
    mm.Add("IsM1", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.IsM1);
    mm.Add("IsM2", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.IsM2);
    mm.Add("IsM3", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.IsM3);
    mm.Add("IsDM1", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.IsDM1);
    mm.Add("IsDM2", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.IsDM2);
    mm.Add("IsDM3", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.IsDM3);
    mm.Add("UnitConnection", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.UnitConnection);
    mm.Add("UnitID", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical.UnitID);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleConfig[0]);
    mm.Add("Common", model.Model().BEML_EMU_U.VehicleConfig[0].Common);
    mm.Add("Location", model.Model().BEML_EMU_U.VehicleConfig[0].Location);
    mm.Add("Equipment", model.Model().BEML_EMU_U.VehicleConfig[0].Equipment);
    mm.Add("Dynamics", model.Model().BEML_EMU_U.VehicleConfig[0].Dynamics);
    mm.Add("Brakes", model.Model().BEML_EMU_U.VehicleConfig[0].Brakes);
    mm.Add("Pneumatics", model.Model().BEML_EMU_U.VehicleConfig[0].Pneumatics);
    mm.Add("Traction", model.Model().BEML_EMU_U.VehicleConfig[0].Traction);
    mm.Add("Pantograph", model.Model().BEML_EMU_U.VehicleConfig[0].Pantograph);
    mm.Add("Doors", model.Model().BEML_EMU_U.VehicleConfig[0].Doors);
    mm.Add("Electrical", model.Model().BEML_EMU_U.VehicleConfig[0].Electrical);
    mm.RegisterStruct(model.Model().BEML_EMU_U.TrainInput.Common.CollisionAndDerailment);
    mm.Add("Collision", model.Model().BEML_EMU_U.TrainInput.Common.CollisionAndDerailment.Collision);
    mm.Add("Derailment", model.Model().BEML_EMU_U.TrainInput.Common.CollisionAndDerailment.Derailment);
    mm.Add("Frozen", model.Model().BEML_EMU_U.TrainInput.Common.CollisionAndDerailment.Frozen);
    mm.RegisterStruct(model.Model().BEML_EMU_U.TrainInput.Common);
    mm.Add("CollisionAndDerailment", model.Model().BEML_EMU_U.TrainInput.Common.CollisionAndDerailment);
    mm.RegisterStruct(model.Model().BEML_EMU_U.TrainInput.Overrides);
    mm.Add("InitialVelocity", model.Model().BEML_EMU_U.TrainInput.Overrides.InitialVelocity);
    mm.Add("AutoPowerOn", model.Model().BEML_EMU_U.TrainInput.Overrides.AutoPowerOn);
    mm.Add("TrainLoadOverride", model.Model().BEML_EMU_U.TrainInput.Overrides.TrainLoadOverride);
    mm.Add("OrientationSwapRequest", model.Model().BEML_EMU_U.TrainInput.Overrides.OrientationSwapRequest);
    mm.RegisterStruct(model.Model().BEML_EMU_U.TrainInput.CBTCTuning);
    mm.Add("ATOTractionP", model.Model().BEML_EMU_U.TrainInput.CBTCTuning.ATOTractionP);
    mm.Add("ATOTractionI", model.Model().BEML_EMU_U.TrainInput.CBTCTuning.ATOTractionI);
    mm.Add("ATOTractionD", model.Model().BEML_EMU_U.TrainInput.CBTCTuning.ATOTractionD);
    mm.Add("ATOBrakeP", model.Model().BEML_EMU_U.TrainInput.CBTCTuning.ATOBrakeP);
    mm.Add("ATOBrakeI", model.Model().BEML_EMU_U.TrainInput.CBTCTuning.ATOBrakeI);
    mm.Add("ATOBrakeD", model.Model().BEML_EMU_U.TrainInput.CBTCTuning.ATOBrakeD);
    mm.Add("ATOProximityBrakeDistance", model.Model().BEML_EMU_U.TrainInput.CBTCTuning.ATOProximityBrakeDistance);
    mm.RegisterStruct(model.Model().BEML_EMU_U.TrainInput.Faults);
    mm.Add("DynamicBrakeCutOut", model.Model().BEML_EMU_U.TrainInput.Faults.DynamicBrakeCutOut);
    mm.Add("ReverseMotionInForwardCommand", model.Model().BEML_EMU_U.TrainInput.Faults.ReverseMotionInForwardCommand);
    mm.Add("FWDREVTrainLineMismatch", model.Model().BEML_EMU_U.TrainInput.Faults.FWDREVTrainLineMismatch);
    mm.Add("InternalFireAlarmTLActive", model.Model().BEML_EMU_U.TrainInput.Faults.InternalFireAlarmTLActive);
    mm.Add("FDUFaultAlarmTLActive", model.Model().BEML_EMU_U.TrainInput.Faults.FDUFaultAlarmTLActive);
    mm.Add("LowMRPressure", model.Model().BEML_EMU_U.TrainInput.Faults.LowMRPressure);
    mm.Add("TractionCutModeSelectorInATPATOUTO", model.Model().BEML_EMU_U.TrainInput.Faults.TractionCutModeSelectorInATPATOUTO);
    mm.Add("DepotSignalMalfunction", model.Model().BEML_EMU_U.TrainInput.Faults.DepotSignalMalfunction);
    mm.Add("TrackCircuitOccupied", model.Model().BEML_EMU_U.TrainInput.Faults.TrackCircuitOccupied);
    mm.Add("MainSignalSwitchesToRed", model.Model().BEML_EMU_U.TrainInput.Faults.MainSignalSwitchesToRed);
    mm.Add("PlatformScreenDoorNotWorking", model.Model().BEML_EMU_U.TrainInput.Faults.PlatformScreenDoorNotWorking);
    mm.Add("DamagedOHE", model.Model().BEML_EMU_U.TrainInput.Faults.DamagedOHE);
    mm.Add("TrainGettingZeroSpeedOrder", model.Model().BEML_EMU_U.TrainInput.Faults.TrainGettingZeroSpeedOrder);
    mm.Add("DoorsNotOpeningFromDOPBOP1", model.Model().BEML_EMU_U.TrainInput.Faults.DoorsNotOpeningFromDOPBOP1);
    mm.Add("ATCEBUnableToReset", model.Model().BEML_EMU_U.TrainInput.Faults.ATCEBUnableToReset);
    mm.Add("TrainOvershootATCNotAllowingReverseAlignment", model.Model().BEML_EMU_U.TrainInput.Faults.TrainOvershootATCNotAllowingReverseAlignment);
    mm.Add("FSBAppliedAt10KMPH", model.Model().BEML_EMU_U.TrainInput.Faults.FSBAppliedAt10KMPH);
    mm.Add("NeutralZoneVCBBackupFunctionActivated", model.Model().BEML_EMU_U.TrainInput.Faults.NeutralZoneVCBBackupFunctionActivated);
    mm.Add("TCMSFailure", model.Model().BEML_EMU_U.TrainInput.Faults.TCMSFailure);
    mm.Add("TCMSDisplayHanged", model.Model().BEML_EMU_U.TrainInput.Faults.TCMSDisplayHanged);
    mm.Add("CCUCommunicationError", model.Model().BEML_EMU_U.TrainInput.Faults.CCUCommunicationError);
    mm.Add("HighTractiveEffortRequired", model.Model().BEML_EMU_U.TrainInput.Faults.HighTractiveEffortRequired);
    mm.Add("PSDADCLStatusNotAvailable", model.Model().BEML_EMU_U.TrainInput.Faults.PSDADCLStatusNotAvailable);
    mm.Add("OnePSDBypassedAtStationInOpenCondition", model.Model().BEML_EMU_U.TrainInput.Faults.OnePSDBypassedAtStationInOpenCondition);
    mm.Add("PSDStatusUnknown", model.Model().BEML_EMU_U.TrainInput.Faults.PSDStatusUnknown);
    mm.RegisterStruct(model.Model().BEML_EMU_U.TrainInput);
    mm.Add("Common", model.Model().BEML_EMU_U.TrainInput.Common);
    mm.Add("Overrides", model.Model().BEML_EMU_U.TrainInput.Overrides);
    mm.Add("CBTCTuning", model.Model().BEML_EMU_U.TrainInput.CBTCTuning);
    mm.Add("Faults", model.Model().BEML_EMU_U.TrainInput.Faults);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Common.Adjacencies);
    mm.Add("Collision", model.Model().BEML_EMU_U.VehicleInput[0].Common.Adjacencies.Collision);
    mm.Add("SoftCollision", model.Model().BEML_EMU_U.VehicleInput[0].Common.Adjacencies.SoftCollision);
    mm.Add("Derailment", model.Model().BEML_EMU_U.VehicleInput[0].Common.Adjacencies.Derailment);
    mm.Add("FacingTrackStop", model.Model().BEML_EMU_U.VehicleInput[0].Common.Adjacencies.FacingTrackStop);
    mm.Add("TrailingTrackStop", model.Model().BEML_EMU_U.VehicleInput[0].Common.Adjacencies.TrailingTrackStop);
    mm.Add("Detonator", model.Model().BEML_EMU_U.VehicleInput[0].Common.Adjacencies.Detonator);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Common.CollisionAndDerailment);
    mm.Add("Collision", model.Model().BEML_EMU_U.VehicleInput[0].Common.CollisionAndDerailment.Collision);
    mm.Add("CollisionMass", model.Model().BEML_EMU_U.VehicleInput[0].Common.CollisionAndDerailment.CollisionMass);
    mm.Add("CollisionSpeed", model.Model().BEML_EMU_U.VehicleInput[0].Common.CollisionAndDerailment.CollisionSpeed);
    mm.Add("Derailment", model.Model().BEML_EMU_U.VehicleInput[0].Common.CollisionAndDerailment.Derailment);
    mm.Add("Frozen", model.Model().BEML_EMU_U.VehicleInput[0].Common.CollisionAndDerailment.Frozen);
    mm.Add("Freeze", model.Model().BEML_EMU_U.VehicleInput[0].Common.CollisionAndDerailment.Freeze);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Common);
    mm.Add("Adjacencies", model.Model().BEML_EMU_U.VehicleInput[0].Common.Adjacencies);
    mm.Add("CollisionAndDerailment", model.Model().BEML_EMU_U.VehicleInput[0].Common.CollisionAndDerailment);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Dynamics.TrackData);
    mm.Add("Gradient", model.Model().BEML_EMU_U.VehicleInput[0].Dynamics.TrackData.Gradient);
    mm.Add("Radius", model.Model().BEML_EMU_U.VehicleInput[0].Dynamics.TrackData.Radius);
    mm.Add("Superelevation", model.Model().BEML_EMU_U.VehicleInput[0].Dynamics.TrackData.Superelevation);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Dynamics);
    mm.Add("TrackData", model.Model().BEML_EMU_U.VehicleInput[0].Dynamics.TrackData);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Environment);
    mm.Add("LineVoltage", model.Model().BEML_EMU_U.VehicleInput[0].Environment.LineVoltage);
    mm.Add("OverheadLinePresent", model.Model().BEML_EMU_U.VehicleInput[0].Environment.OverheadLinePresent);
    mm.Add("NeutralSection", model.Model().BEML_EMU_U.VehicleInput[0].Environment.NeutralSection);
    mm.Add("RightDoorsEnable", model.Model().BEML_EMU_U.VehicleInput[0].Environment.RightDoorsEnable);
    mm.Add("LeftDoorsEnable", model.Model().BEML_EMU_U.VehicleInput[0].Environment.LeftDoorsEnable);
    mm.Add("DoorsPairEnable", model.Model().BEML_EMU_U.VehicleInput[0].Environment.DoorsPairEnable);
    mm.Add("DamagedOHE", model.Model().BEML_EMU_U.VehicleInput[0].Environment.DamagedOHE);
    mm.Add("ObstructionOnTrack", model.Model().BEML_EMU_U.VehicleInput[0].Environment.ObstructionOnTrack);
    mm.Add("ObstructionSoftCollision", model.Model().BEML_EMU_U.VehicleInput[0].Environment.ObstructionSoftCollision);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Faults);
    mm.Add("WFLFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.WFLFailure);
    mm.Add("ODDFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.ODDFailure);
    mm.Add("ObstacleDetectedRightSide", model.Model().BEML_EMU_U.VehicleInput[0].Faults.ObstacleDetectedRightSide);
    mm.Add("DerailmentDetectedRightSide", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DerailmentDetectedRightSide);
    mm.Add("ShutdownFailureVCBOpening", model.Model().BEML_EMU_U.VehicleInput[0].Faults.ShutdownFailureVCBOpening);
    mm.Add("MCBLightGroupSaloonTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MCBLightGroupSaloonTripped);
    mm.Add("CouplingCircuitNotPowered", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CouplingCircuitNotPowered);
    mm.Add("CabEnablingCircuitBreakerTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CabEnablingCircuitBreakerTripped);
    mm.Add("ExteriorLight1CBTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.ExteriorLight1CBTripped);
    mm.Add("ExteriorLight2CBTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.ExteriorLight2CBTripped);
    mm.Add("InteriorLight1CBTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.InteriorLight1CBTripped);
    mm.Add("InteriorLight2CBTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.InteriorLight2CBTripped);
    mm.Add("CMCContactorActivationFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CMCContactorActivationFailure);
    mm.Add("CIFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CIFailure);
    mm.Add("CIIsolated", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CIIsolated);
    mm.Add("OHLHighVoltageLevel3", model.Model().BEML_EMU_U.VehicleInput[0].Faults.OHLHighVoltageLevel3);
    mm.Add("OHLLowVoltageLevel2", model.Model().BEML_EMU_U.VehicleInput[0].Faults.OHLLowVoltageLevel2);
    mm.Add("LineConverterOverCurrentLevel2", model.Model().BEML_EMU_U.VehicleInput[0].Faults.LineConverterOverCurrentLevel2);
    mm.Add("DCLinkOverVoltageLevel1", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DCLinkOverVoltageLevel1);
    mm.Add("DCLinkLowVoltageLevel1", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DCLinkLowVoltageLevel1);
    mm.Add("LineConverterIGBTFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.LineConverterIGBTFailure);
    mm.Add("DC110VLowVoltage", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DC110VLowVoltage);
    mm.Add("CIMicroprocessorAbnormal", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CIMicroprocessorAbnormal);
    mm.Add("CILocalCommunicationFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CILocalCommunicationFailure);
    mm.Add("OverTemperatureOfInverterPowerUnit", model.Model().BEML_EMU_U.VehicleInput[0].Faults.OverTemperatureOfInverterPowerUnit);
    mm.Add("OverTemperatureOfConverterPowerUnit", model.Model().BEML_EMU_U.VehicleInput[0].Faults.OverTemperatureOfConverterPowerUnit);
    mm.Add("AKOpenFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.AKOpenFailure);
    mm.Add("KOpenFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.KOpenFailure);
    mm.Add("MainCircuitEarthFaultLevel2", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MainCircuitEarthFaultLevel2);
    mm.Add("HeavyWheelSlip", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HeavyWheelSlip);
    mm.Add("BrakeDemandSignalFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BrakeDemandSignalFailure);
    mm.Add("CIGateSignalAbnormal", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CIGateSignalAbnormal);
    mm.Add("CITCMSCommunicationFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CITCMSCommunicationFailure);
    mm.Add("VCBOpenedByCI", model.Model().BEML_EMU_U.VehicleInput[0].Faults.VCBOpenedByCI);
    mm.Add("PantographDownForADDIntervention", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PantographDownForADDIntervention);
    mm.Add("PantographDownForORDIntervention", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PantographDownForORDIntervention);
    mm.Add("PantographDownForBUVDRIntervention", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PantographDownForBUVDRIntervention);
    mm.Add("PantographCircuitNotEnergized", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PantographCircuitNotEnergized);
    mm.Add("PantographPipeLowPressure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PantographPipeLowPressure);
    mm.Add("TransformerOilPressureTooLow", model.Model().BEML_EMU_U.VehicleInput[0].Faults.TransformerOilPressureTooLow);
    mm.Add("TransformerOilTemperatureTooHigh", model.Model().BEML_EMU_U.VehicleInput[0].Faults.TransformerOilTemperatureTooHigh);
    mm.Add("VCBOpenedByACOvercurrent", model.Model().BEML_EMU_U.VehicleInput[0].Faults.VCBOpenedByACOvercurrent);
    mm.Add("VCBOpenedByMTrProtection", model.Model().BEML_EMU_U.VehicleInput[0].Faults.VCBOpenedByMTrProtection);
    mm.Add("VCBOpenedByAPS", model.Model().BEML_EMU_U.VehicleInput[0].Faults.VCBOpenedByAPS);
    mm.Add("PantographRaiseFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PantographRaiseFailure);
    mm.Add("PantographLoweringFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PantographLoweringFailure);
    mm.Add("CMCContactorDeactivationFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CMCContactorDeactivationFailure);
    mm.Add("MCB110VDCGroupTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MCB110VDCGroupTripped);
    mm.Add("MechanicalCouplerRelayFault", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MechanicalCouplerRelayFault);
    mm.Add("MasterControllerandTrainLineIncongruence", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MasterControllerandTrainLineIncongruence);
    mm.Add("BatteryFuseBlown", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BatteryFuseBlown);
    mm.Add("BICContactorActivationFault", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BICContactorActivationFault);
    mm.Add("LowBatteryVoltageAlarm", model.Model().BEML_EMU_U.VehicleInput[0].Faults.LowBatteryVoltageAlarm);
    mm.Add("MCBLightGroupTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MCBLightGroupTripped);
    mm.Add("BECU1MissingOnSegment", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU1MissingOnSegment);
    mm.Add("DLSLFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DLSLFailure);
    mm.Add("DCSRFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DCSRFailure);
    mm.Add("APSGroup1Failure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.APSGroup1Failure);
    mm.Add("APSGroup1Isolated", model.Model().BEML_EMU_U.VehicleInput[0].Faults.APSGroup1Isolated);
    mm.Add("MCBHVACGroupTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MCBHVACGroupTripped);
    mm.Add("HVAC1MajorFault", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HVAC1MajorFault);
    mm.Add("HVAC1SupplyFanMPCBTrip", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HVAC1SupplyFanMPCBTrip);
    mm.Add("HVAC1EmergencyInverterTrip", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HVAC1EmergencyInverterTrip);
    mm.Add("HVAC1RCCBTrip", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HVAC1RCCBTrip);
    mm.Add("HVAC1FireMode", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HVAC1FireMode);
    mm.Add("HVAC1ExternalSmokeMode", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HVAC1ExternalSmokeMode);
    mm.Add("HVAC1ReducedMode", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HVAC1ReducedMode);
    mm.Add("BCGGroup1Failure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BCGGroup1Failure);
    mm.Add("BCGGroup1IsolationFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BCGGroup1IsolationFailure);
    mm.Add("BCGGroup1Isolated", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BCGGroup1Isolated);
    mm.Add("MCBSignalingGroupTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MCBSignalingGroupTripped);
    mm.Add("TrainRadioFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.TrainRadioFailure);
    mm.Add("PEA2AlarmActive", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PEA2AlarmActive);
    mm.Add("PEA2Failure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PEA2Failure);
    mm.Add("PEA3Failure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PEA3Failure);
    mm.Add("SCU2Failure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.SCU2Failure);
    mm.Add("MCBDoorGroupTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MCBDoorGroupTripped);
    mm.Add("EmergencyDoorMechanicalUnlocked", model.Model().BEML_EMU_U.VehicleInput[0].Faults.EmergencyDoorMechanicalUnlocked);
    mm.Add("BECU1FailureAllSpeedSensors", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU1FailureAllSpeedSensors);
    mm.Add("BECU1LoadPressureLow", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU1LoadPressureLow);
    mm.Add("DoorMajorFault", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DoorMajorFault);
    mm.Add("DoorDCUFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DoorDCUFailure);
    mm.Add("DoorMotorCircuitFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DoorMotorCircuitFailure);
    mm.Add("BECU1CarLoadPressureLow", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU1CarLoadPressureLow);
    mm.Add("DCSLFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DCSLFailure);
    mm.Add("DoorUnexpectedUnlocking", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DoorUnexpectedUnlocking);
    mm.Add("DoorFailedToLock", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DoorFailedToLock);
    mm.Add("BECU1BrakeNotApplied", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU1BrakeNotApplied);
    mm.Add("DoorCloseObstruction", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DoorCloseObstruction);
    mm.Add("DoorOpenObstruction", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DoorOpenObstruction);
    mm.Add("DoorFailedToUnlock", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DoorFailedToUnlock);
    mm.Add("BECU2MinorFault", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU2MinorFault);
    mm.Add("BECUMajorFault", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECUMajorFault);
    mm.Add("BECUMajorFaultWired", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECUMajorFaultWired);
    mm.Add("BECUPWRAndBRKCmdAtSameTime", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECUPWRAndBRKCmdAtSameTime);
    mm.Add("MCBAPSGroupTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MCBAPSGroupTripped);
    mm.Add("BECU1BrakeNotReleased", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU1BrakeNotReleased);
    mm.Add("BECULowRPressure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECULowRPressure);
    mm.Add("BECU2AxleLockedWheelSet2", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU2AxleLockedWheelSet2);
    mm.Add("TransformerOilLevelTooLow", model.Model().BEML_EMU_U.VehicleInput[0].Faults.TransformerOilLevelTooLow);
    mm.Add("PantographRisingMissing", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PantographRisingMissing);
    mm.Add("PantographLoweringMissing", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PantographLoweringMissing);
    mm.Add("PantographRisingInhibited", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PantographRisingInhibited);
    mm.Add("VCBMissingClosing", model.Model().BEML_EMU_U.VehicleInput[0].Faults.VCBMissingClosing);
    mm.Add("VCBMissingOpening", model.Model().BEML_EMU_U.VehicleInput[0].Faults.VCBMissingOpening);
    mm.Add("FailureOfTrainborneATCEquipment", model.Model().BEML_EMU_U.VehicleInput[0].Faults.FailureOfTrainborneATCEquipment);
    mm.Add("DMIFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DMIFailure);
    mm.Add("TrainDoorsNotOpeningInATOMode", model.Model().BEML_EMU_U.VehicleInput[0].Faults.TrainDoorsNotOpeningInATOMode);
    mm.Add("APSCircuitBreakerTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.APSCircuitBreakerTripped);
    mm.Add("CCTVDisplayHanged", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CCTVDisplayHanged);
    mm.Add("HeadlightFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HeadlightFailure);
    mm.Add("HornBlowsContinuously", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HornBlowsContinuously);
    mm.Add("EBNotReleased", model.Model().BEML_EMU_U.VehicleInput[0].Faults.EBNotReleased);
    mm.Add("TrainDoorLockedClosedRelayFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.TrainDoorLockedClosedRelayFailure);
    mm.Add("EmergencyBrakePBOP1NotWorking", model.Model().BEML_EMU_U.VehicleInput[0].Faults.EmergencyBrakePBOP1NotWorking);
    mm.Add("AllDoorCloseIndicatorNotWorking", model.Model().BEML_EMU_U.VehicleInput[0].Faults.AllDoorCloseIndicatorNotWorking);
    mm.Add("DoorClosePBOP1NotWorking", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DoorClosePBOP1NotWorking);
    mm.Add("DoorCloseAnnouncementPBNotWorking", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DoorCloseAnnouncementPBNotWorking);
    mm.Add("LineVoltageIndicatorNotWorking", model.Model().BEML_EMU_U.VehicleInput[0].Faults.LineVoltageIndicatorNotWorking);
    mm.Add("SmokeAlarmCABArea", model.Model().BEML_EMU_U.VehicleInput[0].Faults.SmokeAlarmCABArea);
    mm.Add("HeatAlarmEDB", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HeatAlarmEDB);
    mm.Add("PEA1AlarmActive", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PEA1AlarmActive);
    mm.Add("PEA1CallNotAcknowledged", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PEA1CallNotAcknowledged);
    mm.Add("PEA1Failure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PEA1Failure);
    mm.Add("PCUFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PCUFailure);
    mm.Add("MCBPAGroupOpen", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MCBPAGroupOpen);
    mm.Add("TrainDoorNotClosingAtPlatform", model.Model().BEML_EMU_U.VehicleInput[0].Faults.TrainDoorNotClosingAtPlatform);
    mm.Add("DM1A1DoorNotOpeningAtPlatform", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DM1A1DoorNotOpeningAtPlatform);
    mm.Add("WipersNotWorking", model.Model().BEML_EMU_U.VehicleInput[0].Faults.WipersNotWorking);
    mm.Add("CCDetectDetrainmentDoorOpen", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CCDetectDetrainmentDoorOpen);
    mm.Add("BECU1AxleLockedWheelSet1", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU1AxleLockedWheelSet1);
    mm.Add("BECU1ServiceBrakeFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU1ServiceBrakeFailure);
    mm.Add("BECU1EmergencyBrakeFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU1EmergencyBrakeFailure);
    mm.Add("AirSuspensionBogie1Deflated", model.Model().BEML_EMU_U.VehicleInput[0].Faults.AirSuspensionBogie1Deflated);
    mm.Add("WSPActiveBogie1", model.Model().BEML_EMU_U.VehicleInput[0].Faults.WSPActiveBogie1);
    mm.Add("MCBBrakeGroupTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MCBBrakeGroupTripped);
    mm.Add("ParkingBrakeApplicationFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.ParkingBrakeApplicationFailure);
    mm.Add("ParkingBrakeReleaseFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.ParkingBrakeReleaseFailure);
    mm.Add("CommunicationErrorRIO1RIO2", model.Model().BEML_EMU_U.VehicleInput[0].Faults.CommunicationErrorRIO1RIO2);
    mm.Add("MCBTCMSGroupTripped", model.Model().BEML_EMU_U.VehicleInput[0].Faults.MCBTCMSGroupTripped);
    mm.Add("ER1MajorFault", model.Model().BEML_EMU_U.VehicleInput[0].Faults.ER1MajorFault);
    mm.Add("FloodLightNotWorking", model.Model().BEML_EMU_U.VehicleInput[0].Faults.FloodLightNotWorking);
    mm.Add("HornIsolatedByVDU", model.Model().BEML_EMU_U.VehicleInput[0].Faults.HornIsolatedByVDU);
    mm.Add("DLSRFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DLSRFailure);
    mm.Add("BECU2CarLoadPressureLow", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU2CarLoadPressureLow);
    mm.Add("BECU2EmergencyBrakeFailure", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BECU2EmergencyBrakeFailure);
    mm.Add("OtherCabOccupiedIndicatorFaulty", model.Model().BEML_EMU_U.VehicleInput[0].Faults.OtherCabOccupiedIndicatorFaulty);
    mm.Add("EDNORDeactivatedInRunningTrain", model.Model().BEML_EMU_U.VehicleInput[0].Faults.EDNORDeactivatedInRunningTrain);
    mm.Add("PressureGuageNotWorking", model.Model().BEML_EMU_U.VehicleInput[0].Faults.PressureGuageNotWorking);
    mm.Add("RIOMastershipError", model.Model().BEML_EMU_U.VehicleInput[0].Faults.RIOMastershipError);
    mm.Add("TransformerOilLevelLow", model.Model().BEML_EMU_U.VehicleInput[0].Faults.TransformerOilLevelLow);
    mm.Add("TransformerOilFlowWarning", model.Model().BEML_EMU_U.VehicleInput[0].Faults.TransformerOilFlowWarning);
    mm.Add("TransformerOilPressureWarning", model.Model().BEML_EMU_U.VehicleInput[0].Faults.TransformerOilPressureWarning);
    mm.Add("TransformerOilTemperatureHigh", model.Model().BEML_EMU_U.VehicleInput[0].Faults.TransformerOilTemperatureHigh);
    mm.Add("UnexpectedDoorOpeningDetectedByCC", model.Model().BEML_EMU_U.VehicleInput[0].Faults.UnexpectedDoorOpeningDetectedByCC);
    mm.Add("EmergencyBrakeDueToEBPB", model.Model().BEML_EMU_U.VehicleInput[0].Faults.EmergencyBrakeDueToEBPB);
    mm.Add("EmergencyBrakeDueDeadman", model.Model().BEML_EMU_U.VehicleInput[0].Faults.EmergencyBrakeDueDeadman);
    mm.Add("DoorEmergencyHandleActivation", model.Model().BEML_EMU_U.VehicleInput[0].Faults.DoorEmergencyHandleActivation);
    mm.Add("BogieDerailed", model.Model().BEML_EMU_U.VehicleInput[0].Faults.BogieDerailed);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.BogieControl[0]);
    mm.Add("TractionInhibit", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.BogieControl[0].TractionInhibit);
    mm.Add("EDBrakingInhibit", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.BogieControl[0].EDBrakingInhibit);
    mm.Add("EPBrakingInhibit", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.BogieControl[0].EPBrakingInhibit);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl);
    mm.Add("TractionPowerLimit", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TractionPowerLimit);
    mm.Add("EDBrakingPowerLimit", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.EDBrakingPowerLimit);
    mm.Add("EnableTractionPowerLimit", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.EnableTractionPowerLimit);
    mm.Add("EnableEDBrakingPowerLimit", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.EnableEDBrakingPowerLimit);
    mm.Add("MaxTractionAccelerationTargetOverride", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.MaxTractionAccelerationTargetOverride);
    mm.Add("MaxBrakingDecelerationTargetOverride", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.MaxBrakingDecelerationTargetOverride);
    mm.Add("EnableTractionTargetOverride", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.EnableTractionTargetOverride);
    mm.Add("EnableBrakingTargetOverride", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.EnableBrakingTargetOverride);
    mm.Add("BogieControl", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.BogieControl);
    mm.Add("PantographIsolationCommand", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.PantographIsolationCommand);
    mm.Add("RightDoorsEmergencyReleaseCommand", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.RightDoorsEmergencyReleaseCommand);
    mm.Add("LeftDoorsEmergencyReleaseCommand", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.LeftDoorsEmergencyReleaseCommand);
    mm.Add("DoorRight1DisableCommand", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorRight1DisableCommand);
    mm.Add("DoorLeft1DisableCommand", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorLeft1DisableCommand);
    mm.Add("DoorRight2DisableCommand", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorRight2DisableCommand);
    mm.Add("DoorLeft2DisableCommand", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorLeft2DisableCommand);
    mm.Add("DoorRight3DisableCommand", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorRight3DisableCommand);
    mm.Add("DoorLeft3DisableCommand", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorLeft3DisableCommand);
    mm.Add("DoorRight4DisableCommand", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorRight4DisableCommand);
    mm.Add("DoorLeft4DisableCommand", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorLeft4DisableCommand);
    mm.Add("DoorA1IsolateVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorA1IsolateVDUReq);
    mm.Add("DoorA2IsolateVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorA2IsolateVDUReq);
    mm.Add("DoorA3IsolateVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorA3IsolateVDUReq);
    mm.Add("DoorA4IsolateVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorA4IsolateVDUReq);
    mm.Add("DoorB1IsolateVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorB1IsolateVDUReq);
    mm.Add("DoorB2IsolateVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorB2IsolateVDUReq);
    mm.Add("DoorB3IsolateVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorB3IsolateVDUReq);
    mm.Add("DoorB4IsolateVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.DoorB4IsolateVDUReq);
    mm.Add("LVIsolateBCG1", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.LVIsolateBCG1);
    mm.Add("LVIsolateBCG2", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.LVIsolateBCG2);
    mm.Add("LVCommandPOPB", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.LVCommandPOPB);
    mm.Add("ParkBrakeApplyVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ParkBrakeApplyVDUReq);
    mm.Add("ParkBrakeReleaseVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ParkBrakeReleaseVDUReq);
    mm.Add("ParkBrakeBypassVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ParkBrakeBypassVDUReq);
    mm.Add("Bogie1IsolateVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.Bogie1IsolateVDUReq);
    mm.Add("Bogie2IsolateVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.Bogie2IsolateVDUReq);
    mm.Add("HornHigh", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.HornHigh);
    mm.Add("HornLow", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.HornLow);
    mm.Add("HornIsolate", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.HornIsolate);
    mm.Add("TCMSPantoLowerReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSPantoLowerReq);
    mm.Add("TCMSPantoResetReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSPantoResetReq);
    mm.Add("TCMSPantoRiseReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSPantoRiseReq);
    mm.Add("TCMSReqCtrlVCBNS", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSReqCtrlVCBNS);
    mm.Add("TCMSVCBResetReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSVCBResetReq);
    mm.Add("TCMSVCBOpenReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSVCBOpenReq);
    mm.Add("TCMSVCBCloseReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSVCBCloseReq);
    mm.Add("TCMSIsolateCI", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSIsolateCI);
    mm.Add("TCMSIsolatePanto", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSIsolatePanto);
    mm.Add("TCMSIsolateVCB", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSIsolateVCB);
    mm.Add("TCMSIsolateAPS1", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSIsolateAPS1);
    mm.Add("TCMSIsolateAPS2", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSIsolateAPS2);
    mm.Add("ActivateHTE", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ActivateHTE);
    mm.Add("ActivateWashing3Kmph", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ActivateWashing3Kmph);
    mm.Add("ActivateWashing4Kmph", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ActivateWashing4Kmph);
    mm.Add("ActivateWashing5Kmph", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ActivateWashing5Kmph);
    mm.Add("TCMSAPSICBOpen", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSAPSICBOpen);
    mm.Add("TCMSAPSICBClose", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSAPSICBClose);
    mm.Add("TCMSHVAC1Close", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSHVAC1Close);
    mm.Add("TCMSHVAC1Open", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSHVAC1Open);
    mm.Add("TCMSHVAC2Open", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSHVAC2Open);
    mm.Add("TCMSHVAC2Close", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSHVAC2Close);
    mm.Add("TCMSFDSCBClose", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSFDSCBClose);
    mm.Add("TCMSFDSCBOpen", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSFDSCBOpen);
    mm.Add("MVMainCompForcing", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.MVMainCompForcing);
    mm.Add("MVMTrBlowersForcingHigh", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.MVMTrBlowersForcingHigh);
    mm.Add("MVMTrBlowersForcingLow", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.MVMTrBlowersForcingLow);
    mm.Add("MVCompHoursReset", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.MVCompHoursReset);
    mm.Add("TEBEFeedback", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TEBEFeedback);
    mm.Add("TCMSHVAC1ResetReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSHVAC1ResetReq);
    mm.Add("TCMSHVAC2ResetReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSHVAC2ResetReq);
    mm.Add("TCMSHVAC1IsolateReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSHVAC1IsolateReq);
    mm.Add("TCMSHVAC2IsolateReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSHVAC2IsolateReq);
    mm.Add("TCMSHVACSmokeResetReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSHVACSmokeResetReq);
    mm.Add("TCMSFireAlarmResetReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSFireAlarmResetReq);
    mm.Add("TCMSFDUResetReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSFDUResetReq);
    mm.Add("ShuntModeMaxSpeed", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ShuntModeMaxSpeed);
    mm.Add("ShuntModeMinSpeed", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ShuntModeMinSpeed);
    mm.Add("ATPLowModeMaxSpeed", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ATPLowModeMaxSpeed);
    mm.Add("ATPLowModeActivated", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ATPLowModeActivated);
    mm.Add("ShuntModeActivated", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.ShuntModeActivated);
    mm.Add("TCMSWFLIsolationReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSWFLIsolationReq);
    mm.Add("TCMSPABORBypassReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.TCMSPABORBypassReq);
    mm.Add("HVAC1FireDetectorDisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.HVAC1FireDetectorDisableVDUReq);
    mm.Add("EDBHeatAlarmDisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.EDBHeatAlarmDisableVDUReq);
    mm.Add("CABSmokeDetectorDisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.CABSmokeDetectorDisableVDUReq);
    mm.Add("SHDEndCubicleRearRight1DisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.SHDEndCubicleRearRight1DisableVDUReq);
    mm.Add("SHDEndCubicleRearRight2DisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.SHDEndCubicleRearRight2DisableVDUReq);
    mm.Add("SHDEndCubicleRearLeft1DisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.SHDEndCubicleRearLeft1DisableVDUReq);
    mm.Add("SHDEndCubicleRearLeft2DisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.SHDEndCubicleRearLeft2DisableVDUReq);
    mm.Add("LHDDriverDeskDisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.LHDDriverDeskDisableVDUReq);
    mm.Add("LHDCIDisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.LHDCIDisableVDUReq);
    mm.Add("LHDLTJBDisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.LHDLTJBDisableVDUReq);
    mm.Add("SaloonR1FireDetectorDisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.SaloonR1FireDetectorDisableVDUReq);
    mm.Add("SaloonR2FireDetectorDisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.SaloonR2FireDetectorDisableVDUReq);
    mm.Add("AuxiliaryDeskFireDetectorDisableVDUReq", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl.AuxiliaryDeskFireDetectorDisableVDUReq);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard);
    mm.Add("NoServiceBrakeOrder", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.NoServiceBrakeOrder);
    mm.Add("NoEmergencyBrakeOrder", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.NoEmergencyBrakeOrder);
    mm.Add("ImmobilisationState", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.ImmobilisationState);
    mm.Add("ATOState", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.ATOState);
    mm.Add("ATOPermittedSpeed", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.ATOPermittedSpeed);
    mm.Add("ATOPermittedDistance", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.ATOPermittedDistance);
    mm.Add("ATOStartIndicator", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.ATOStartIndicator);
    mm.Add("ROSIndicator", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.ROSIndicator);
    mm.Add("ATCSBResetIndicator", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.ATCSBResetIndicator);
    mm.Add("ZeroSpeed", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.ZeroSpeed);
    mm.Add("LeftHoldDoorClose", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.LeftHoldDoorClose);
    mm.Add("RightHoldDoorClose", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.RightHoldDoorClose);
    mm.Add("WakeUpCommand", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.WakeUpCommand);
    mm.Add("UTOPBIndicator", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.UTOPBIndicator);
    mm.Add("UTOModeActive", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.UTOModeActive);
    mm.Add("ATCCabActivation", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.ATCCabActivation);
    mm.Add("TractionForward", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.TractionForward);
    mm.Add("EmergencyDetrainmentDoorLocked", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.EmergencyDetrainmentDoorLocked);
    mm.Add("RollbackDetected", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard.RollbackDetected);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform);
    mm.Add("LeftSideDoorEnable", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.LeftSideDoorEnable);
    mm.Add("RightSideDoorEnable", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.RightSideDoorEnable);
    mm.Add("OpenLeftTrainDoors", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.OpenLeftTrainDoors);
    mm.Add("OpenRightTrainDoors", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.OpenRightTrainDoors);
    mm.Add("CloseLeftTrainDoors", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.CloseLeftTrainDoors);
    mm.Add("CloseRightTrainDoors", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.CloseRightTrainDoors);
    mm.Add("LeftDoorOpenIndicator", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.LeftDoorOpenIndicator);
    mm.Add("RightDoorOpenIndicator", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.RightDoorOpenIndicator);
    mm.Add("LeftDoorReleaseIndicator", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.LeftDoorReleaseIndicator);
    mm.Add("RightDoorReleaseIndicator", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.RightDoorReleaseIndicator);
    mm.Add("UndergroundSection", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.UndergroundSection);
    mm.Add("LeftDoorCloseIndicator", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.LeftDoorCloseIndicator);
    mm.Add("RightDoorCloseIndicator", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform.RightDoorCloseIndicator);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].CBTC);
    mm.Add("OnBoard", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.OnBoard);
    mm.Add("Platform", model.Model().BEML_EMU_U.VehicleInput[0].CBTC.Platform);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingInterface);
    mm.Add("CouplerType", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingInterface.CouplerType);
    mm.Add("ReadyToCouple", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingInterface.ReadyToCouple);
    mm.Add("MechanicallyCoupled", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingInterface.MechanicallyCoupled);
    mm.Add("CouplerBrakeDemand", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingInterface.CouplerBrakeDemand);
    mm.Add("ElectricallyCoupled", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingInterface.ElectricallyCoupled);
    mm.Add("PneumaticallyCoupled", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingInterface.PneumaticallyCoupled);
    mm.Add("RescueModeCondition", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingInterface.RescueModeCondition);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic);
    mm.Add("Mass", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic.Mass);
    mm.Add("Time", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic.Time);
    mm.Add("Position", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic.Position);
    mm.Add("Velocity", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic.Velocity);
    mm.Add("Acceleration", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic.Acceleration);
    mm.Add("Gradient", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic.Gradient);
    mm.Add("Radius", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic.Radius);
    mm.Add("TractiveForce", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic.TractiveForce);
    mm.Add("BrakingForce", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic.BrakingForce);
    mm.Add("OtherCouplerForce", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic.OtherCouplerForce);
    mm.Add("OtherCouplerForceRate", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic.OtherCouplerForceRate);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical);
    mm.Add("End", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.End);
    mm.Add("OtherVehicleID", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.OtherVehicleID);
    mm.Add("OtherVehicleEnd", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.OtherVehicleEnd);
    mm.Add("OtherVehicleOrientation", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.OtherVehicleOrientation);
    mm.Add("Available", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Available);
    mm.Add("Separation", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Separation);
    mm.Add("SeparationRate", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.SeparationRate);
    mm.Add("OurCouplingPosition", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.OurCouplingPosition);
    mm.Add("OtherCouplingPosition", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.OtherCouplingPosition);
    mm.Add("CouplingSeparation", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.CouplingSeparation);
    mm.Add("Interfacing", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Interfacing);
    mm.Add("CoupledChainLength", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.CoupledChainLength);
    mm.Add("MechanicallyCoupled", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.MechanicallyCoupled);
    mm.Add("Mimic", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical.Mimic);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0]);
    mm.Add("CouplingInterface", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingInterface);
    mm.Add("CouplingPhysical", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler[0].CouplingPhysical);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0]);
    mm.Add("Force", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0].Force);
    mm.Add("SpringForce", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0].SpringForce);
    mm.Add("DampingForce", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0].DampingForce);
    mm.Add("BuffForce", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0].BuffForce);
    mm.Add("DraftForce", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0].DraftForce);
    mm.Add("ImpactForce", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0].ImpactForce);
    mm.Add("Breakage", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0].Breakage);
    mm.Add("Extension", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0].Extension);
    mm.Add("ExtensionRate", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0].ExtensionRate);
    mm.Add("ExternalCoupling", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0].ExternalCoupling);
    mm.Add("Mimic", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers[0].Mimic);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Couplers);
    mm.Add("ReleaseCoupler", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.ReleaseCoupler);
    mm.Add("Coupler", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.Coupler);
    mm.Add("DynamicsCouplers", model.Model().BEML_EMU_U.VehicleInput[0].Couplers.DynamicsCouplers);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0].Overrides);
    mm.Add("VehicleLoadOverride", model.Model().BEML_EMU_U.VehicleInput[0].Overrides.VehicleLoadOverride);
    mm.RegisterStruct(model.Model().BEML_EMU_U.VehicleInput[0]);
    mm.Add("Common", model.Model().BEML_EMU_U.VehicleInput[0].Common);
    mm.Add("Dynamics", model.Model().BEML_EMU_U.VehicleInput[0].Dynamics);
    mm.Add("Environment", model.Model().BEML_EMU_U.VehicleInput[0].Environment);
    mm.Add("Faults", model.Model().BEML_EMU_U.VehicleInput[0].Faults);
    mm.Add("DisplayControl", model.Model().BEML_EMU_U.VehicleInput[0].DisplayControl);
    mm.Add("CBTC", model.Model().BEML_EMU_U.VehicleInput[0].CBTC);
    mm.Add("Couplers", model.Model().BEML_EMU_U.VehicleInput[0].Couplers);
    mm.Add("Overrides", model.Model().BEML_EMU_U.VehicleInput[0].Overrides);
    mm.RegisterStruct(model.Model().BEML_EMU_U.IOControlsInput[0].EmergencyBrakePB);
    mm.Add("Value", model.Model().BEML_EMU_U.IOControlsInput[0].EmergencyBrakePB.Value);
    mm.Add("Mode", model.Model().BEML_EMU_U.IOControlsInput[0].EmergencyBrakePB.Mode);
    mm.Add("InitVal", model.Model().BEML_EMU_U.IOControlsInput[0].EmergencyBrakePB.InitVal);
    mm.Add("InternalRequest", model.Model().BEML_EMU_U.IOControlsInput[0].EmergencyBrakePB.InternalRequest);
    mm.Add("Inhibit", model.Model().BEML_EMU_U.IOControlsInput[0].EmergencyBrakePB.Inhibit);
    mm.RegisterStruct(model.Model().BEML_EMU_U.IOControlsInput[0].EBLR2CB);
    mm.Add("Value", model.Model().BEML_EMU_U.IOControlsInput[0].EBLR2CB.Value);
    mm.Add("Mode", model.Model().BEML_EMU_U.IOControlsInput[0].EBLR2CB.Mode);
    mm.Add("InitVal", model.Model().BEML_EMU_U.IOControlsInput[0].EBLR2CB.InitVal);
    mm.Add("InternalRequest", model.Model().BEML_EMU_U.IOControlsInput[0].EBLR2CB.InternalRequest);
    mm.Add("Inhibit", model.Model().BEML_EMU_U.IOControlsInput[0].EBLR2CB.Inhibit);
    mm.Add("TripRequest", model.Model().BEML_EMU_U.IOControlsInput[0].EBLR2CB.TripRequest);
    mm.RegisterStruct(model.Model().BEML_EMU_U.IOControlsInput[0]);
    mm.Add("EmergencyBrakePB", model.Model().BEML_EMU_U.IOControlsInput[0].EmergencyBrakePB);
    mm.Add("HornPB", model.Model().BEML_EMU_U.IOControlsInput[0].HornPB);
    mm.Add("CabConsoleLightPB", model.Model().BEML_EMU_U.IOControlsInput[0].CabConsoleLightPB);
    mm.Add("DoorProvenLoopCutoutPB", model.Model().BEML_EMU_U.IOControlsInput[0].DoorProvenLoopCutoutPB);
    mm.Add("LeftDoorClosePBOperatingPanel1", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoorClosePBOperatingPanel1);
    mm.Add("RightDoorClosePBOperatingPanel1", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoorClosePBOperatingPanel1);
    mm.Add("LeftDoorOpenPBOperatingPanel1", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoorOpenPBOperatingPanel1);
    mm.Add("RightDoorOpenPBOperatingPanel1", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoorOpenPBOperatingPanel1);
    mm.Add("CabMainLightPB", model.Model().BEML_EMU_U.IOControlsInput[0].CabMainLightPB);
    mm.Add("ParkingBrakeOnSwitch", model.Model().BEML_EMU_U.IOControlsInput[0].ParkingBrakeOnSwitch);
    mm.Add("ParkingBrakeOffSwitch", model.Model().BEML_EMU_U.IOControlsInput[0].ParkingBrakeOffSwitch);
    mm.Add("DoorCloseAnnouncementPB", model.Model().BEML_EMU_U.IOControlsInput[0].DoorCloseAnnouncementPB);
    mm.Add("ROSPB", model.Model().BEML_EMU_U.IOControlsInput[0].ROSPB);
    mm.Add("UTOPB", model.Model().BEML_EMU_U.IOControlsInput[0].UTOPB);
    mm.Add("ATOStartPB", model.Model().BEML_EMU_U.IOControlsInput[0].ATOStartPB);
    mm.Add("EmergencyBrakeResetPB", model.Model().BEML_EMU_U.IOControlsInput[0].EmergencyBrakeResetPB);
    mm.Add("ControlKey", model.Model().BEML_EMU_U.IOControlsInput[0].ControlKey);
    mm.Add("ModeSelector", model.Model().BEML_EMU_U.IOControlsInput[0].ModeSelector);
    mm.Add("MasterControllerHandle", model.Model().BEML_EMU_U.IOControlsInput[0].MasterControllerHandle);
    mm.Add("DeadmanSafetyDevice", model.Model().BEML_EMU_U.IOControlsInput[0].DeadmanSafetyDevice);
    mm.Add("CallOnLightPB", model.Model().BEML_EMU_U.IOControlsInput[0].CallOnLightPB);
    mm.Add("VCBOpenPB", model.Model().BEML_EMU_U.IOControlsInput[0].VCBOpenPB);
    mm.Add("WiperSelectionSwitch", model.Model().BEML_EMU_U.IOControlsInput[0].WiperSelectionSwitch);
    mm.Add("WiperPump", model.Model().BEML_EMU_U.IOControlsInput[0].WiperPump);
    mm.Add("LIMPHomePB", model.Model().BEML_EMU_U.IOControlsInput[0].LIMPHomePB);
    mm.Add("PowerOffPB", model.Model().BEML_EMU_U.IOControlsInput[0].PowerOffPB);
    mm.Add("PantoDownPB", model.Model().BEML_EMU_U.IOControlsInput[0].PantoDownPB);
    mm.Add("VCBClosePB", model.Model().BEML_EMU_U.IOControlsInput[0].VCBClosePB);
    mm.Add("LeftDoorOpenPBOperatingPanel2", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoorOpenPBOperatingPanel2);
    mm.Add("LeftDoorOpenPB1OperatingPanel2", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoorOpenPB1OperatingPanel2);
    mm.Add("LeftDoorClosePBOperatingPanel2", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoorClosePBOperatingPanel2);
    mm.Add("PantoUpPB", model.Model().BEML_EMU_U.IOControlsInput[0].PantoUpPB);
    mm.Add("SafetyCutoutSS", model.Model().BEML_EMU_U.IOControlsInput[0].SafetyCutoutSS);
    mm.Add("BrakeLoopCutoutSS", model.Model().BEML_EMU_U.IOControlsInput[0].BrakeLoopCutoutSS);
    mm.Add("PantoSelector", model.Model().BEML_EMU_U.IOControlsInput[0].PantoSelector);
    mm.Add("DeadmanBypassSwitch", model.Model().BEML_EMU_U.IOControlsInput[0].DeadmanBypassSwitch);
    mm.Add("HeadLightSwitch", model.Model().BEML_EMU_U.IOControlsInput[0].HeadLightSwitch);
    mm.Add("UncouplePB", model.Model().BEML_EMU_U.IOControlsInput[0].UncouplePB);
    mm.Add("FlasherLightPB", model.Model().BEML_EMU_U.IOControlsInput[0].FlasherLightPB);
    mm.Add("FloodLightPB", model.Model().BEML_EMU_U.IOControlsInput[0].FloodLightPB);
    mm.Add("BatteryResetPB", model.Model().BEML_EMU_U.IOControlsInput[0].BatteryResetPB);
    mm.Add("RightDoorOpenPBOperatingPanel5", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoorOpenPBOperatingPanel5);
    mm.Add("RightDoorOpenPB1OperatingPanel5", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoorOpenPB1OperatingPanel5);
    mm.Add("RightDoorClosePBOperatingPanel5", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoorClosePBOperatingPanel5);
    mm.Add("DoorProvenLoopOutputSwitch", model.Model().BEML_EMU_U.IOControlsInput[0].DoorProvenLoopOutputSwitch);
    mm.Add("LampTestPB", model.Model().BEML_EMU_U.IOControlsInput[0].LampTestPB);
    mm.Add("WFLTestPB", model.Model().BEML_EMU_U.IOControlsInput[0].WFLTestPB);
    mm.Add("WiperControlSwitch", model.Model().BEML_EMU_U.IOControlsInput[0].WiperControlSwitch);
    mm.Add("EmergencyStopPB", model.Model().BEML_EMU_U.IOControlsInput[0].EmergencyStopPB);
    mm.Add("HoldDoorCloseBypassSS", model.Model().BEML_EMU_U.IOControlsInput[0].HoldDoorCloseBypassSS);
    mm.Add("CabBoosterFanSS", model.Model().BEML_EMU_U.IOControlsInput[0].CabBoosterFanSS);
    mm.Add("EmergencyBrakePBBypassSS", model.Model().BEML_EMU_U.IOControlsInput[0].EmergencyBrakePBBypassSS);
    mm.Add("CabEEDLeft", model.Model().BEML_EMU_U.IOControlsInput[0].CabEEDLeft);
    mm.Add("CabEEDRight", model.Model().BEML_EMU_U.IOControlsInput[0].CabEEDRight);
    mm.Add("SafetyCover", model.Model().BEML_EMU_U.IOControlsInput[0].SafetyCover);
    mm.Add("DummyCover", model.Model().BEML_EMU_U.IOControlsInput[0].DummyCover);
    mm.Add("RampCoverLockingLever", model.Model().BEML_EMU_U.IOControlsInput[0].RampCoverLockingLever);
    mm.Add("RampCover", model.Model().BEML_EMU_U.IOControlsInput[0].RampCover);
    mm.Add("RampHandle", model.Model().BEML_EMU_U.IOControlsInput[0].RampHandle);
    mm.Add("RampEndSupport", model.Model().BEML_EMU_U.IOControlsInput[0].RampEndSupport);
    mm.Add("RampMiddleSupport", model.Model().BEML_EMU_U.IOControlsInput[0].RampMiddleSupport);
    mm.Add("WinderHandlesAccessCover", model.Model().BEML_EMU_U.IOControlsInput[0].WinderHandlesAccessCover);
    mm.Add("LargeHandle", model.Model().BEML_EMU_U.IOControlsInput[0].LargeHandle);
    mm.Add("RampWinder", model.Model().BEML_EMU_U.IOControlsInput[0].RampWinder);
    mm.Add("SmallHandle", model.Model().BEML_EMU_U.IOControlsInput[0].SmallHandle);
    mm.Add("EmergencyDoorGasSpring", model.Model().BEML_EMU_U.IOControlsInput[0].EmergencyDoorGasSpring);
    mm.Add("DoorWinder", model.Model().BEML_EMU_U.IOControlsInput[0].DoorWinder);
    mm.Add("EBLR2CB", model.Model().BEML_EMU_U.IOControlsInput[0].EBLR2CB);
    mm.Add("EBMVCB", model.Model().BEML_EMU_U.IOControlsInput[0].EBMVCB);
    mm.Add("EDCB", model.Model().BEML_EMU_U.IOControlsInput[0].EDCB);
    mm.Add("ELCB1", model.Model().BEML_EMU_U.IOControlsInput[0].ELCB1);
    mm.Add("ELCB2", model.Model().BEML_EMU_U.IOControlsInput[0].ELCB2);
    mm.Add("ERCB", model.Model().BEML_EMU_U.IOControlsInput[0].ERCB);
    mm.Add("HCB", model.Model().BEML_EMU_U.IOControlsInput[0].HCB);
    mm.Add("HLLCB", model.Model().BEML_EMU_U.IOControlsInput[0].HLLCB);
    mm.Add("HLRCB", model.Model().BEML_EMU_U.IOControlsInput[0].HLRCB);
    mm.Add("ILCB1", model.Model().BEML_EMU_U.IOControlsInput[0].ILCB1);
    mm.Add("ILCB2", model.Model().BEML_EMU_U.IOControlsInput[0].ILCB2);
    mm.Add("LDICB", model.Model().BEML_EMU_U.IOControlsInput[0].LDICB);
    mm.Add("LDLCB", model.Model().BEML_EMU_U.IOControlsInput[0].LDLCB);
    mm.Add("LDRCB", model.Model().BEML_EMU_U.IOControlsInput[0].LDRCB);
    mm.Add("MLCB", model.Model().BEML_EMU_U.IOControlsInput[0].MLCB);
    mm.Add("MMCB", model.Model().BEML_EMU_U.IOControlsInput[0].MMCB);
    mm.Add("NBCB", model.Model().BEML_EMU_U.IOControlsInput[0].NBCB);
    mm.Add("NVICB", model.Model().BEML_EMU_U.IOControlsInput[0].NVICB);
    mm.Add("OCCB1", model.Model().BEML_EMU_U.IOControlsInput[0].OCCB1);
    mm.Add("OCCB2", model.Model().BEML_EMU_U.IOControlsInput[0].OCCB2);
    mm.Add("ODDCB", model.Model().BEML_EMU_U.IOControlsInput[0].ODDCB);
    mm.Add("PBCB", model.Model().BEML_EMU_U.IOControlsInput[0].PBCB);
    mm.Add("PISCB1", model.Model().BEML_EMU_U.IOControlsInput[0].PISCB1);
    mm.Add("PISCB2", model.Model().BEML_EMU_U.IOControlsInput[0].PISCB2);
    mm.Add("POCB", model.Model().BEML_EMU_U.IOControlsInput[0].POCB);
    mm.Add("PPU1CB", model.Model().BEML_EMU_U.IOControlsInput[0].PPU1CB);
    mm.Add("PPU2CB", model.Model().BEML_EMU_U.IOControlsInput[0].PPU2CB);
    mm.Add("PPU3CB", model.Model().BEML_EMU_U.IOControlsInput[0].PPU3CB);
    mm.Add("RIO1CB", model.Model().BEML_EMU_U.IOControlsInput[0].RIO1CB);
    mm.Add("RIO2CB", model.Model().BEML_EMU_U.IOControlsInput[0].RIO2CB);
    mm.Add("SIOCB1", model.Model().BEML_EMU_U.IOControlsInput[0].SIOCB1);
    mm.Add("SIOCB2", model.Model().BEML_EMU_U.IOControlsInput[0].SIOCB2);
    mm.Add("SSICB", model.Model().BEML_EMU_U.IOControlsInput[0].SSICB);
    mm.Add("TBCCB1", model.Model().BEML_EMU_U.IOControlsInput[0].TBCCB1);
    mm.Add("TBCCB2", model.Model().BEML_EMU_U.IOControlsInput[0].TBCCB2);
    mm.Add("TBNCB", model.Model().BEML_EMU_U.IOControlsInput[0].TBNCB);
    mm.Add("TDICB", model.Model().BEML_EMU_U.IOControlsInput[0].TDICB);
    mm.Add("TLLCB", model.Model().BEML_EMU_U.IOControlsInput[0].TLLCB);
    mm.Add("TLRCB", model.Model().BEML_EMU_U.IOControlsInput[0].TLRCB);
    mm.Add("TRIVCB", model.Model().BEML_EMU_U.IOControlsInput[0].TRIVCB);
    mm.Add("TVDUCB", model.Model().BEML_EMU_U.IOControlsInput[0].TVDUCB);
    mm.Add("TWVCB", model.Model().BEML_EMU_U.IOControlsInput[0].TWVCB);
    mm.Add("VCCBOrUCCB", model.Model().BEML_EMU_U.IOControlsInput[0].VCCBOrUCCB);
    mm.Add("VCBCCB", model.Model().BEML_EMU_U.IOControlsInput[0].VCBCCB);
    mm.Add("VIO1CB", model.Model().BEML_EMU_U.IOControlsInput[0].VIO1CB);
    mm.Add("VIO2CB", model.Model().BEML_EMU_U.IOControlsInput[0].VIO2CB);
    mm.Add("WFLCB", model.Model().BEML_EMU_U.IOControlsInput[0].WFLCB);
    mm.Add("WIFICB", model.Model().BEML_EMU_U.IOControlsInput[0].WIFICB);
    mm.Add("WWCB", model.Model().BEML_EMU_U.IOControlsInput[0].WWCB);
    mm.Add("BECUCB1", model.Model().BEML_EMU_U.IOControlsInput[0].BECUCB1);
    mm.Add("BECUCB2", model.Model().BEML_EMU_U.IOControlsInput[0].BECUCB2);
    mm.Add("BECUCB3", model.Model().BEML_EMU_U.IOControlsInput[0].BECUCB3);
    mm.Add("RSACB", model.Model().BEML_EMU_U.IOControlsInput[0].RSACB);
    mm.Add("CMCCB", model.Model().BEML_EMU_U.IOControlsInput[0].CMCCB);
    mm.Add("CILCB", model.Model().BEML_EMU_U.IOControlsInput[0].CILCB);
    mm.Add("CICB", model.Model().BEML_EMU_U.IOControlsInput[0].CICB);
    mm.Add("CELCB", model.Model().BEML_EMU_U.IOControlsInput[0].CELCB);
    mm.Add("CECB", model.Model().BEML_EMU_U.IOControlsInput[0].CECB);
    mm.Add("CDUCB", model.Model().BEML_EMU_U.IOControlsInput[0].CDUCB);
    mm.Add("CCNVIO1CB", model.Model().BEML_EMU_U.IOControlsInput[0].CCNVIO1CB);
    mm.Add("CBTCCB1", model.Model().BEML_EMU_U.IOControlsInput[0].CBTCCB1);
    mm.Add("CBFCCB", model.Model().BEML_EMU_U.IOControlsInput[0].CBFCCB);
    mm.Add("CBFCB", model.Model().BEML_EMU_U.IOControlsInput[0].CBFCB);
    mm.Add("C1CB", model.Model().BEML_EMU_U.IOControlsInput[0].C1CB);
    mm.Add("BLCB", model.Model().BEML_EMU_U.IOControlsInput[0].BLCB);
    mm.Add("ZVBACB", model.Model().BEML_EMU_U.IOControlsInput[0].ZVBACB);
    mm.Add("EBLR1CB", model.Model().BEML_EMU_U.IOControlsInput[0].EBLR1CB);
    mm.Add("DRCB", model.Model().BEML_EMU_U.IOControlsInput[0].DRCB);
    mm.Add("DPLCB", model.Model().BEML_EMU_U.IOControlsInput[0].DPLCB);
    mm.Add("DMICB", model.Model().BEML_EMU_U.IOControlsInput[0].DMICB);
    mm.Add("DLCB", model.Model().BEML_EMU_U.IOControlsInput[0].DLCB);
    mm.Add("DIOCB2", model.Model().BEML_EMU_U.IOControlsInput[0].DIOCB2);
    mm.Add("DIOCB1", model.Model().BEML_EMU_U.IOControlsInput[0].DIOCB1);
    mm.Add("CSCCB", model.Model().BEML_EMU_U.IOControlsInput[0].CSCCB);
    mm.Add("CSBCB", model.Model().BEML_EMU_U.IOControlsInput[0].CSBCB);
    mm.Add("CSACB", model.Model().BEML_EMU_U.IOControlsInput[0].CSACB);
    mm.Add("CRSBCB", model.Model().BEML_EMU_U.IOControlsInput[0].CRSBCB);
    mm.Add("SOCB2", model.Model().BEML_EMU_U.IOControlsInput[0].SOCB2);
    mm.Add("SOCB1", model.Model().BEML_EMU_U.IOControlsInput[0].SOCB1);
    mm.Add("MSOCB5", model.Model().BEML_EMU_U.IOControlsInput[0].MSOCB5);
    mm.Add("MSOCB4", model.Model().BEML_EMU_U.IOControlsInput[0].MSOCB4);
    mm.Add("MSOCB3", model.Model().BEML_EMU_U.IOControlsInput[0].MSOCB3);
    mm.Add("MSOCB2", model.Model().BEML_EMU_U.IOControlsInput[0].MSOCB2);
    mm.Add("MSOCB1", model.Model().BEML_EMU_U.IOControlsInput[0].MSOCB1);
    mm.Add("HVAC1", model.Model().BEML_EMU_U.IOControlsInput[0].HVAC1);
    mm.Add("SAC2CCB", model.Model().BEML_EMU_U.IOControlsInput[0].SAC2CCB);
    mm.Add("HVAC2", model.Model().BEML_EMU_U.IOControlsInput[0].HVAC2);
    mm.Add("SAC1CCB", model.Model().BEML_EMU_U.IOControlsInput[0].SAC1CCB);
    mm.Add("CMCB", model.Model().BEML_EMU_U.IOControlsInput[0].CMCB);
    mm.Add("AC2CB", model.Model().BEML_EMU_U.IOControlsInput[0].AC2CB);
    mm.Add("AC1CB", model.Model().BEML_EMU_U.IOControlsInput[0].AC1CB);
    mm.Add("FDSCB", model.Model().BEML_EMU_U.IOControlsInput[0].FDSCB);
    mm.Add("BCBCB", model.Model().BEML_EMU_U.IOControlsInput[0].BCBCB);
    mm.Add("ERVRCB1", model.Model().BEML_EMU_U.IOControlsInput[0].ERVRCB1);
    mm.Add("ERVRCB2", model.Model().BEML_EMU_U.IOControlsInput[0].ERVRCB2);
    mm.Add("ESKCB", model.Model().BEML_EMU_U.IOControlsInput[0].ESKCB);
    mm.Add("HMCB", model.Model().BEML_EMU_U.IOControlsInput[0].HMCB);
    mm.Add("SP1CB", model.Model().BEML_EMU_U.IOControlsInput[0].SP1CB);
    mm.Add("SP2CB", model.Model().BEML_EMU_U.IOControlsInput[0].SP2CB);
    mm.Add("SP3CB", model.Model().BEML_EMU_U.IOControlsInput[0].SP3CB);
    mm.Add("SP4CB", model.Model().BEML_EMU_U.IOControlsInput[0].SP4CB);
    mm.Add("SP5CB", model.Model().BEML_EMU_U.IOControlsInput[0].SP5CB);
    mm.Add("SPCB6", model.Model().BEML_EMU_U.IOControlsInput[0].SPCB6);
    mm.Add("SPCB7", model.Model().BEML_EMU_U.IOControlsInput[0].SPCB7);
    mm.Add("SPCB8", model.Model().BEML_EMU_U.IOControlsInput[0].SPCB8);
    mm.Add("RPTCB", model.Model().BEML_EMU_U.IOControlsInput[0].RPTCB);
    mm.Add("TERCB1", model.Model().BEML_EMU_U.IOControlsInput[0].TERCB1);
    mm.Add("TERCB2", model.Model().BEML_EMU_U.IOControlsInput[0].TERCB2);
    mm.Add("SPSW", model.Model().BEML_EMU_U.IOControlsInput[0].SPSW);
    mm.Add("SPPB", model.Model().BEML_EMU_U.IOControlsInput[0].SPPB);
    mm.Add("APSCB", model.Model().BEML_EMU_U.IOControlsInput[0].APSCB);
    mm.Add("APSICB", model.Model().BEML_EMU_U.IOControlsInput[0].APSICB);
    mm.Add("BCGCB", model.Model().BEML_EMU_U.IOControlsInput[0].BCGCB);
    mm.Add("DSCB", model.Model().BEML_EMU_U.IOControlsInput[0].DSCB);
    mm.Add("MTBMCCB", model.Model().BEML_EMU_U.IOControlsInput[0].MTBMCCB);
    mm.Add("PADCB", model.Model().BEML_EMU_U.IOControlsInput[0].PADCB);
    mm.Add("PANCB", model.Model().BEML_EMU_U.IOControlsInput[0].PANCB);
    mm.Add("SSCB", model.Model().BEML_EMU_U.IOControlsInput[0].SSCB);
    mm.Add("PTCB", model.Model().BEML_EMU_U.IOControlsInput[0].PTCB);
    mm.Add("VCBCB", model.Model().BEML_EMU_U.IOControlsInput[0].VCBCB);
    mm.Add("SP12CB", model.Model().BEML_EMU_U.IOControlsInput[0].SP12CB);
    mm.Add("MTBM1CB", model.Model().BEML_EMU_U.IOControlsInput[0].MTBM1CB);
    mm.Add("MTBM2CB", model.Model().BEML_EMU_U.IOControlsInput[0].MTBM2CB);
    mm.Add("SP11CB", model.Model().BEML_EMU_U.IOControlsInput[0].SP11CB);
    mm.Add("SP6CB", model.Model().BEML_EMU_U.IOControlsInput[0].SP6CB);
    mm.Add("MTOPCB", model.Model().BEML_EMU_U.IOControlsInput[0].MTOPCB);
    mm.Add("ORDCOS", model.Model().BEML_EMU_U.IOControlsInput[0].ORDCOS);
    mm.Add("ADDCOS", model.Model().BEML_EMU_U.IOControlsInput[0].ADDCOS);
    mm.Add("LeftDoor1DCUCB", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor1DCUCB);
    mm.Add("LeftDoor2DCUCB", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor2DCUCB);
    mm.Add("LeftDoor3DCUCB", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor3DCUCB);
    mm.Add("LeftDoor4DCUCB", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor4DCUCB);
    mm.Add("RightDoor1DCUCB", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor1DCUCB);
    mm.Add("RightDoor2DCUCB", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor2DCUCB);
    mm.Add("RightDoor3DCUCB", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor3DCUCB);
    mm.Add("RightDoor4DCUCB", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor4DCUCB);
    mm.Add("LeftDoor1Coving", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor1Coving);
    mm.Add("LeftDoor2Coving", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor2Coving);
    mm.Add("LeftDoor3Coving", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor3Coving);
    mm.Add("LeftDoor4Coving", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor4Coving);
    mm.Add("RightDoor1Coving", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor1Coving);
    mm.Add("RightDoor2Coving", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor2Coving);
    mm.Add("RightDoor3Coving", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor3Coving);
    mm.Add("RightDoor4Coving", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor4Coving);
    mm.Add("LeftDoor1EED", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor1EED);
    mm.Add("LeftDoor2EED", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor2EED);
    mm.Add("LeftDoor3EED", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor3EED);
    mm.Add("LeftDoor4EED", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor4EED);
    mm.Add("RightDoor1EED", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor1EED);
    mm.Add("RightDoor2EED", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor2EED);
    mm.Add("RightDoor3EED", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor3EED);
    mm.Add("RightDoor4EED", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor4EED);
    mm.Add("LeftDoor1ManualClose", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor1ManualClose);
    mm.Add("LeftDoor2ManualClose", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor2ManualClose);
    mm.Add("LeftDoor3ManualClose", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor3ManualClose);
    mm.Add("LeftDoor4ManualClose", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor4ManualClose);
    mm.Add("RightDoor1ManualClose", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor1ManualClose);
    mm.Add("RightDoor2ManualClose", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor2ManualClose);
    mm.Add("RightDoor3ManualClose", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor3ManualClose);
    mm.Add("RightDoor4ManualClose", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor4ManualClose);
    mm.Add("LeftDoor1ManualOpen", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor1ManualOpen);
    mm.Add("LeftDoor2ManualOpen", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor2ManualOpen);
    mm.Add("LeftDoor3ManualOpen", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor3ManualOpen);
    mm.Add("LeftDoor4ManualOpen", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor4ManualOpen);
    mm.Add("RightDoor1ManualOpen", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor1ManualOpen);
    mm.Add("RightDoor2ManualOpen", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor2ManualOpen);
    mm.Add("RightDoor3ManualOpen", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor3ManualOpen);
    mm.Add("RightDoor4ManualOpen", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor4ManualOpen);
    mm.Add("LeftDoor1Lockout", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor1Lockout);
    mm.Add("LeftDoor2Lockout", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor2Lockout);
    mm.Add("LeftDoor3Lockout", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor3Lockout);
    mm.Add("LeftDoor4Lockout", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoor4Lockout);
    mm.Add("RightDoor1Lockout", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor1Lockout);
    mm.Add("RightDoor2Lockout", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor2Lockout);
    mm.Add("RightDoor3Lockout", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor3Lockout);
    mm.Add("RightDoor4Lockout", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoor4Lockout);
    mm.Add("LeftDoorEADCover", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoorEADCover);
    mm.Add("RightDoorEADCover", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoorEADCover);
    mm.Add("LeftDoorEAD", model.Model().BEML_EMU_U.IOControlsInput[0].LeftDoorEAD);
    mm.Add("RightDoorEAD", model.Model().BEML_EMU_U.IOControlsInput[0].RightDoorEAD);
    mm.Add("ParkBrakeIsolationCockBogie1", model.Model().BEML_EMU_U.IOControlsInput[0].ParkBrakeIsolationCockBogie1);
    mm.Add("ParkBrakeIsolationCockBogie2", model.Model().BEML_EMU_U.IOControlsInput[0].ParkBrakeIsolationCockBogie2);
    mm.Add("MRIsolationCock", model.Model().BEML_EMU_U.IOControlsInput[0].MRIsolationCock);
    mm.Add("UncouplingCock", model.Model().BEML_EMU_U.IOControlsInput[0].UncouplingCock);
    mm.Add("Horn1IsolationCock", model.Model().BEML_EMU_U.IOControlsInput[0].Horn1IsolationCock);
    mm.Add("Horn2IsolationCock", model.Model().BEML_EMU_U.IOControlsInput[0].Horn2IsolationCock);
    mm.Add("MREPIsolationCockEnd1", model.Model().BEML_EMU_U.IOControlsInput[0].MREPIsolationCockEnd1);
    mm.Add("BIC1Inside", model.Model().BEML_EMU_U.IOControlsInput[0].BIC1Inside);
    mm.Add("BIC1Outside", model.Model().BEML_EMU_U.IOControlsInput[0].BIC1Outside);
    mm.Add("BIC2Inside", model.Model().BEML_EMU_U.IOControlsInput[0].BIC2Inside);
    mm.Add("BIC2Outside", model.Model().BEML_EMU_U.IOControlsInput[0].BIC2Outside);
    mm.Add("MREPIsolationCockEnd2", model.Model().BEML_EMU_U.IOControlsInput[0].MREPIsolationCockEnd2);
    mm.Add("EPIC", model.Model().BEML_EMU_U.IOControlsInput[0].EPIC);
    mm.Add("ASCOEnd1", model.Model().BEML_EMU_U.IOControlsInput[0].ASCOEnd1);
    mm.Add("ASCOEnd2", model.Model().BEML_EMU_U.IOControlsInput[0].ASCOEnd2);
    mm.Add("ASIsolationCock", model.Model().BEML_EMU_U.IOControlsInput[0].ASIsolationCock);
    mm.Add("SR", model.Model().BEML_EMU_U.IOControlsInput[0].SR);
    mm.Add("ParkingBrakeManualReleaseBogie1Handle1", model.Model().BEML_EMU_U.IOControlsInput[0].ParkingBrakeManualReleaseBogie1Handle1);
    mm.Add("ParkingBrakeManualReleaseBogie1Handle2", model.Model().BEML_EMU_U.IOControlsInput[0].ParkingBrakeManualReleaseBogie1Handle2);
    mm.Add("ParkingBrakeManualReleaseBogie2Handle1", model.Model().BEML_EMU_U.IOControlsInput[0].ParkingBrakeManualReleaseBogie2Handle1);
    mm.Add("ParkingBrakeManualReleaseBogie2Handle2", model.Model().BEML_EMU_U.IOControlsInput[0].ParkingBrakeManualReleaseBogie2Handle2);
    mm.Add("PECUPushButton", model.Model().BEML_EMU_U.IOControlsInput[0].PECUPushButton);
    mm.Add("Microphone", model.Model().BEML_EMU_U.IOControlsInput[0].Microphone);
    mm.Add("DriversBackDoor", model.Model().BEML_EMU_U.IOControlsInput[0].DriversBackDoor);
    mm.Add("PantographIsolationCock", model.Model().BEML_EMU_U.IOControlsInput[0].PantographIsolationCock);
    mm.Add("VCBIsolationCock", model.Model().BEML_EMU_U.IOControlsInput[0].VCBIsolationCock);
    mm.Add("ORDPlunger", model.Model().BEML_EMU_U.IOControlsInput[0].ORDPlunger);
    mm.RegisterStruct(model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Effects);
    mm.Add("DegradedTrack", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Effects.DegradedTrack);
    mm.Add("OnRoughTrack", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Effects.OnRoughTrack);
    mm.RegisterStruct(model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning);
    mm.Add("HeadingRateLimit", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.HeadingRateLimit);
    mm.Add("PitchRateLimit", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.PitchRateLimit);
    mm.Add("RollRateLimit", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.RollRateLimit);
    mm.Add("LinearVelocitySaturation", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.LinearVelocitySaturation);
    mm.Add("LinearAccelerationSaturation", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.LinearAccelerationSaturation);
    mm.Add("LinearVelocityLPFConstant", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.LinearVelocityLPFConstant);
    mm.Add("LinearAccelerationLPFConstant", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.LinearAccelerationLPFConstant);
    mm.Add("AngularVelocitySaturation", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.AngularVelocitySaturation);
    mm.Add("AngularAccelerationSaturation", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.AngularAccelerationSaturation);
    mm.Add("AngularVelocityLPFConstant", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.AngularVelocityLPFConstant);
    mm.Add("AngularAccelerationLPFConstant", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.AngularAccelerationLPFConstant);
    mm.Add("RoughnessProfileType", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.RoughnessProfileType);
    mm.Add("RoughnessProfileFactor", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.RoughnessProfileFactor);
    mm.Add("RoughnessProfileFrequencyFactor", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.RoughnessProfileFrequencyFactor);
    mm.Add("RoughnessProfileSpeedFactor", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.RoughnessProfileSpeedFactor);
    mm.Add("RoughnessProfileSpeedSaturation", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning.RoughnessProfileSpeedSaturation);
    mm.RegisterStruct(model.Model().BEML_EMU_U.MotionBaseControllerInput[0]);
    mm.Add("Effects", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Effects);
    mm.Add("Tuning", model.Model().BEML_EMU_U.MotionBaseControllerInput[0].Tuning);
    mm.RegisterStruct(model.Model().BEML_EMU_U);
    mm.Add("SimData", model.Model().BEML_EMU_U.SimData);
    mm.Add("VehicleConfig", model.Model().BEML_EMU_U.VehicleConfig);
    mm.Add("TrainInput", model.Model().BEML_EMU_U.TrainInput);
    mm.Add("VehicleInput", model.Model().BEML_EMU_U.VehicleInput);
    mm.Add("IOControlsInput", model.Model().BEML_EMU_U.IOControlsInput);
    mm.Add("MotionBaseControllerInput", model.Model().BEML_EMU_U.MotionBaseControllerInput);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ModelStatus);
    mm.Add("IsInitialized", model.Model().BEML_EMU_Y.ModelStatus.IsInitialized);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates);
    mm.Add("VCBClosePBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.VCBClosePBLamp);
    mm.Add("VCBOpenPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.VCBOpenPBLamp);
    mm.Add("AllDoorsClosedLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.AllDoorsClosedLight);
    mm.Add("EmergencyBrakePBLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.EmergencyBrakePBLight);
    mm.Add("ParkBrakeApplyPBLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.ParkBrakeApplyPBLight);
    mm.Add("BatteryVoltageGauge", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.BatteryVoltageGauge);
    mm.Add("OverheadLineVoltageGauge", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.OverheadLineVoltageGauge);
    mm.Add("FloodLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.FloodLight);
    mm.Add("FlasherLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.FlasherLight);
    mm.Add("UTOOrRMLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.UTOOrRMLight);
    mm.Add("MarkerOrTailLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.MarkerOrTailLight);
    mm.Add("HeadLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.HeadLight);
    mm.Add("SignallingLights", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.SignallingLights);
    mm.Add("IdentificationLights", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.IdentificationLights);
    mm.Add("Speedometer", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.Speedometer);
    mm.Add("WiperPosition", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.WiperPosition);
    mm.Add("HornPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.HornPBLamp);
    mm.Add("LeftDoorClosePBOperatingPanel1Lamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LeftDoorClosePBOperatingPanel1Lamp);
    mm.Add("LeftDoorOpenPBOperatingPanel1Lamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LeftDoorOpenPBOperatingPanel1Lamp);
    mm.Add("RightDoorOpenPBOperatingPanel1Lamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.RightDoorOpenPBOperatingPanel1Lamp);
    mm.Add("RightDoorClosePBOperatingPanel1Lamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.RightDoorClosePBOperatingPanel1Lamp);
    mm.Add("CabMainLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.CabMainLight);
    mm.Add("CabConsoleLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.CabConsoleLight);
    mm.Add("DoorCloseAnnouncementLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.DoorCloseAnnouncementLamp);
    mm.Add("LampTestPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LampTestPBLamp);
    mm.Add("UncouplePBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.UncouplePBLamp);
    mm.Add("FlasherLightPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.FlasherLightPBLamp);
    mm.Add("FloodLightPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.FloodLightPBLamp);
    mm.Add("BatteryResetPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.BatteryResetPBLamp);
    mm.Add("RightDoorOpenPBOperatingPanel5Lamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.RightDoorOpenPBOperatingPanel5Lamp);
    mm.Add("RightDoorClosePBOperatingPanel5Lamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.RightDoorClosePBOperatingPanel5Lamp);
    mm.Add("WFLTestPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.WFLTestPBLamp);
    mm.Add("SaloonDoorCloseIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.SaloonDoorCloseIndicator);
    mm.Add("ParkBrakeOnPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.ParkBrakeOnPBLamp);
    mm.Add("ParkBrakeOffPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.ParkBrakeOffPBLamp);
    mm.Add("LineVoltageIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LineVoltageIndicator);
    mm.Add("LeftDoorOpenPBOperatingPanel2Lamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LeftDoorOpenPBOperatingPanel2Lamp);
    mm.Add("LeftDoorClosePBOperatingPanel2Lamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LeftDoorClosePBOperatingPanel2Lamp);
    mm.Add("PantoUpPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.PantoUpPBLamp);
    mm.Add("PantoDownPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.PantoDownPBLamp);
    mm.Add("LIMPHomePBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LIMPHomePBLamp);
    mm.Add("PowerOFFPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.PowerOFFPBLamp);
    mm.Add("CallOnLightPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.CallOnLightPBLamp);
    mm.Add("APSFaultIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.APSFaultIndicator);
    mm.Add("PowerFaultIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.PowerFaultIndicator);
    mm.Add("EmergencyBrakeIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.EmergencyBrakeIndicator);
    mm.Add("VCBTripIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.VCBTripIndicator);
    mm.Add("OtherCabOccupiedIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.OtherCabOccupiedIndicator);
    mm.Add("HVACFaultIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.HVACFaultIndicator);
    mm.Add("ROSPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.ROSPBLamp);
    mm.Add("UTOPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.UTOPBLamp);
    mm.Add("ATOStartPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.ATOStartPBLamp);
    mm.Add("EBResetPBLamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.EBResetPBLamp);
    mm.Add("AuxModuleON", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.AuxModuleON);
    mm.Add("LeftDoorOpenPB1OperatingPanel2Lamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LeftDoorOpenPB1OperatingPanel2Lamp);
    mm.Add("RightDoorOpenPB1OperatingPanel5Lamp", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.RightDoorOpenPB1OperatingPanel5Lamp);
    mm.Add("LeftDoor1LEDIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LeftDoor1LEDIndicator);
    mm.Add("LeftDoor2LEDIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LeftDoor2LEDIndicator);
    mm.Add("LeftDoor3LEDIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LeftDoor3LEDIndicator);
    mm.Add("LeftDoor4LEDIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.LeftDoor4LEDIndicator);
    mm.Add("RightDoor1LEDIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.RightDoor1LEDIndicator);
    mm.Add("RightDoor2LEDIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.RightDoor2LEDIndicator);
    mm.Add("RightDoor3LEDIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.RightDoor3LEDIndicator);
    mm.Add("RightDoor4LEDIndicator", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.RightDoor4LEDIndicator);
    mm.Add("WiperPositionLeft", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.WiperPositionLeft);
    mm.Add("WiperPositionCenter", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.WiperPositionCenter);
    mm.Add("WiperPositionRight", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.WiperPositionRight);
    mm.Add("WiperWash", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates.WiperWash);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction);
    mm.Add("TCUPowerAvailable", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction.TCUPowerAvailable);
    mm.Add("MotorPowerAvailable", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction.MotorPowerAvailable);
    mm.Add("ForwardDirection", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction.ForwardDirection);
    mm.Add("ReverseDirection", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction.ReverseDirection);
    mm.Add("TBCTraction", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction.TBCTraction);
    mm.Add("TBCNotBraking", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction.TBCNotBraking);
    mm.Add("TractionSafe", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction.TractionSafe);
    mm.Add("NoEmergencyBrake", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction.NoEmergencyBrake);
    mm.Add("VCBStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction.VCBStatus);
    mm.Add("ContactorsFailure", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction.ContactorsFailure);
    mm.Add("CIIsolated", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction.CIIsolated);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].Braking);
    mm.Add("BCUPower", model.Model().BEML_EMU_Y.ElectricalOutput[0].Braking.BCUPower);
    mm.Add("TBCTraction", model.Model().BEML_EMU_Y.ElectricalOutput[0].Braking.TBCTraction);
    mm.Add("TBCNotBraking", model.Model().BEML_EMU_Y.ElectricalOutput[0].Braking.TBCNotBraking);
    mm.Add("NoEB", model.Model().BEML_EMU_Y.ElectricalOutput[0].Braking.NoEB);
    mm.Add("DeadmanVigilance", model.Model().BEML_EMU_Y.ElectricalOutput[0].Braking.DeadmanVigilance);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS);
    mm.Add("TCMSPowerAvailable", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.TCMSPowerAvailable);
    mm.Add("HMIPower", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HMIPower);
    mm.Add("CabActive", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.CabActive);
    mm.Add("ForwardDirection", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ForwardDirection);
    mm.Add("ReverseDirection", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ReverseDirection);
    mm.Add("TractionOn", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.TractionOn);
    mm.Add("BrakeOn", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BrakeOn);
    mm.Add("TractionSafe", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.TractionSafe);
    mm.Add("AllRightDoorsClosed", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.AllRightDoorsClosed);
    mm.Add("AllLeftDoorsClosed", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.AllLeftDoorsClosed);
    mm.Add("ServiceBrakesReleased", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ServiceBrakesReleased);
    mm.Add("ParkBrakesReleased", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ParkBrakesReleased);
    mm.Add("ParkBrakeApplication", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ParkBrakeApplication);
    mm.Add("ServiceBrakeApplication", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ServiceBrakeApplication);
    mm.Add("PantoLowered", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PantoLowered);
    mm.Add("PantoRaised", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PantoRaised);
    mm.Add("PantoPowerDetected", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PantoPowerDetected);
    mm.Add("ZeroSpeed", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ZeroSpeed);
    mm.Add("Speedometer", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.Speedometer);
    mm.Add("VCBState", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.VCBState);
    mm.Add("APSKContactorState", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.APSKContactorState);
    mm.Add("APSAKContactorState", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.APSAKContactorState);
    mm.Add("FilterVoltage", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.FilterVoltage);
    mm.Add("APS1Status", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.APS1Status);
    mm.Add("APS2Status", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.APS2Status);
    mm.Add("BCG1Status", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BCG1Status);
    mm.Add("BCG2Status", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BCG2Status);
    mm.Add("BCGOutputVoltage", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BCGOutputVoltage);
    mm.Add("BatteryVoltage", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BatteryVoltage);
    mm.Add("BatteryCurrent", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BatteryCurrent);
    mm.Add("BatteryTemperature", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BatteryTemperature);
    mm.Add("BCG1OutputCurrent", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BCG1OutputCurrent);
    mm.Add("BCG2OutputCurrent", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BCG2OutputCurrent);
    mm.Add("NoBrakeTrainLine", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.NoBrakeTrainLine);
    mm.Add("MotorTrainLine", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MotorTrainLine);
    mm.Add("NoFSB1Line", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.NoFSB1Line);
    mm.Add("NoFSB2Line", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.NoFSB2Line);
    mm.Add("NoEB1Line", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.NoEB1Line);
    mm.Add("NoEB2Line", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.NoEB2Line);
    mm.Add("LineVoltage", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.LineVoltage);
    mm.Add("NoEB", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.NoEB);
    mm.Add("APS1OutputVoltage", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.APS1OutputVoltage);
    mm.Add("APS2OutputVoltage", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.APS2OutputVoltage);
    mm.Add("HLSwitchStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HLSwitchStatus);
    mm.Add("MarkerAndTailLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MarkerAndTailLight);
    mm.Add("TCMS_FL_Status", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.TCMS_FL_Status);
    mm.Add("TCMS_CallOn_Status", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.TCMS_CallOn_Status);
    mm.Add("UTOOrRMLight", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.UTOOrRMLight);
    mm.Add("PADPBStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PADPBStatus);
    mm.Add("PADRStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PADRStatus);
    mm.Add("TPOR_ON", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.TPOR_ON);
    mm.Add("TSDR_ON", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.TSDR_ON);
    mm.Add("PowerONPBPressed", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PowerONPBPressed);
    mm.Add("PowerOFFPBPressed", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PowerOFFPBPressed);
    mm.Add("LeftDoorEnable", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.LeftDoorEnable);
    mm.Add("RightDoorEnable", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.RightDoorEnable);
    mm.Add("LeftHoldDoorClose", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.LeftHoldDoorClose);
    mm.Add("RightHoldDoorClose", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.RightHoldDoorClose);
    mm.Add("LimpHomeMode", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.LimpHomeMode);
    mm.Add("FwdRevTrainLineMismatchMessage", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.FwdRevTrainLineMismatchMessage);
    mm.Add("LowMRPressureFaultMessage", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.LowMRPressureFaultMessage);
    mm.Add("BCUPower", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BCUPower);
    mm.Add("APS1Fault", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.APS1Fault);
    mm.Add("APS2Fault", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.APS2Fault);
    mm.Add("APS1Isolated", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.APS1Isolated);
    mm.Add("APS2Isolated", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.APS2Isolated);
    mm.Add("SaloonLightGroupStatus1", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.SaloonLightGroupStatus1);
    mm.Add("SaloonLightGroupStatus2", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.SaloonLightGroupStatus2);
    mm.Add("WFLStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.WFLStatus);
    mm.Add("WFLOilLevelStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.WFLOilLevelStatus);
    mm.Add("WFLPump1Status", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.WFLPump1Status);
    mm.Add("WFLPump2Status", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.WFLPump2Status);
    mm.Add("WFLFailure", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.WFLFailure);
    mm.Add("BatteryIsolationContactor", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BatteryIsolationContactor);
    mm.Add("TrainControlContactor", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.TrainControlContactor);
    mm.Add("MainCompressor", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MainCompressor);
    mm.Add("AuxCompressor", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.AuxCompressor);
    mm.Add("HVAC1Status", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC1Status);
    mm.Add("HVAC1SetPointTemperature", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC1SetPointTemperature);
    mm.Add("HVAC1IntTemperature", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC1IntTemperature);
    mm.Add("HVAC1ExtTemperature", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC1ExtTemperature);
    mm.Add("HVAC1Faulty", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC1Faulty);
    mm.Add("HVAC1Isolated", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC1Isolated);
    mm.Add("HVAC2Status", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC2Status);
    mm.Add("HVAC2SetPointTemperature", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC2SetPointTemperature);
    mm.Add("HVAC2IntTemperature", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC2IntTemperature);
    mm.Add("HVAC2ExtTemperature", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC2ExtTemperature);
    mm.Add("HVAC2Faulty", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC2Faulty);
    mm.Add("HVAC2Isolated", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVAC2Isolated);
    mm.Add("PECStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PECStatus);
    mm.Add("EBbyNonCabEnabled", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.EBbyNonCabEnabled);
    mm.Add("EBbyMC", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.EBbyMC);
    mm.Add("EBbyBrakeLoop", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.EBbyBrakeLoop);
    mm.Add("EBbyDeadMan", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.EBbyDeadMan);
    mm.Add("NoLineVoltage", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.NoLineVoltage);
    mm.Add("D1Power", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.D1Power);
    mm.Add("EBbyCC", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.EBbyCC);
    mm.Add("EBdueToATCZeroSpeed", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.EBdueToATCZeroSpeed);
    mm.Add("HVACFaults", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HVACFaults);
    mm.Add("ADDCOSStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ADDCOSStatus);
    mm.Add("ORDCOSStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ORDCOSStatus);
    mm.Add("MRIsolation", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MRIsolation);
    mm.Add("MCBPAGroup", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCBPAGroup);
    mm.Add("MCB110VDCGroup", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCB110VDCGroup);
    mm.Add("MCBLightGroup", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCBLightGroup);
    mm.Add("MCBLightSaloonGroup", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCBLightSaloonGroup);
    mm.Add("MCBDoorGroup", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCBDoorGroup);
    mm.Add("MCBBrakeGroup", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCBBrakeGroup);
    mm.Add("MCBAPSGroup", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCBAPSGroup);
    mm.Add("MCBTCMSGroup", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCBTCMSGroup);
    mm.Add("MCBSignallingGroup", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCBSignallingGroup);
    mm.Add("VCBTripCommand", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.VCBTripCommand);
    mm.Add("CECBTripped", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.CECBTripped);
    mm.Add("UCCBTripped", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.UCCBTripped);
    mm.Add("PANCBTripped", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PANCBTripped);
    mm.Add("ELCB1Tripped", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ELCB1Tripped);
    mm.Add("ELCB2Tripped", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ELCB2Tripped);
    mm.Add("ILCB1Tripped", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ILCB1Tripped);
    mm.Add("ILCB2Tripped", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ILCB2Tripped);
    mm.Add("APSCBTripped", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.APSCBTripped);
    mm.Add("FDUFailure", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.FDUFailure);
    mm.Add("InternalFireAlarmTLActive", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.InternalFireAlarmTLActive);
    mm.Add("SmokeAlarmCABArea", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.SmokeAlarmCABArea);
    mm.Add("HeatAlarmEDB", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.HeatAlarmEDB);
    mm.Add("FDUStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.FDUStatus);
    mm.Add("SFARStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.SFARStatus);
    mm.Add("UFARStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.UFARStatus);
    mm.Add("BUVDR_Active", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BUVDR_Active);
    mm.Add("CMCActivationFault", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.CMCActivationFault);
    mm.Add("CMCDeactivationFault", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.CMCDeactivationFault);
    mm.Add("UW_VCB", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.UW_VCB);
    mm.Add("PantoIsolated", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PantoIsolated);
    mm.Add("VCBIsolated", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.VCBIsolated);
    mm.Add("PantoDownPBCmd", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PantoDownPBCmd);
    mm.Add("VCBTripByCI", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.VCBTripByCI);
    mm.Add("CIIsolated", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.CIIsolated);
    mm.Add("BCG1Fault", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BCG1Fault);
    mm.Add("BCG2Fault", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BCG2Fault);
    mm.Add("BCG1Isolated", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BCG1Isolated);
    mm.Add("BCG2Isolated", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BCG2Isolated);
    mm.Add("BCG1IsolationFailed", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BCG1IsolationFailed);
    mm.Add("EBbyPB", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.EBbyPB);
    mm.Add("VCBTripByAPS", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.VCBTripByAPS);
    mm.Add("MCDR", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCDR);
    mm.Add("MCDRFaulty", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCDRFaulty);
    mm.Add("ObstacleDetected", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ObstacleDetected);
    mm.Add("ODDFailure", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.ODDFailure);
    mm.Add("MCBHVACGroupTripped", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.MCBHVACGroupTripped);
    mm.Add("PANPSR", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.PANPSR);
    mm.Add("Key_Switch_Status", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.Key_Switch_Status);
    mm.Add("VCBI_ACOvercurrent", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.VCBI_ACOvercurrent);
    mm.Add("VCBI_KAKContactorCI", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.VCBI_KAKContactorCI);
    mm.Add("EmergencyDoorNotOpenStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.EmergencyDoorNotOpenStatus);
    mm.Add("DoorProvenLoopOK", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.DoorProvenLoopOK);
    mm.Add("BrakeLoopCBTripped", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BrakeLoopCBTripped);
    mm.Add("DeadmanBypassStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.DeadmanBypassStatus);
    mm.Add("BLCOSwitchStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.BLCOSwitchStatus);
    mm.Add("WFLIsolated", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS.WFLIsolated);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics);
    mm.Add("ParkBrakeApplicationValve", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics.ParkBrakeApplicationValve);
    mm.Add("ParkBrakeRelease", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics.ParkBrakeRelease);
    mm.Add("PantographRaiseValve", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics.PantographRaiseValve);
    mm.Add("MainCompressorMotorPower", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics.MainCompressorMotorPower);
    mm.Add("AuxCompressorMotorPower", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics.AuxCompressorMotorPower);
    mm.Add("RemoteMagnetValve1", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics.RemoteMagnetValve1);
    mm.Add("RemoteMagnetValve2", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics.RemoteMagnetValve2);
    mm.Add("HornLow", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics.HornLow);
    mm.Add("HornHigh", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics.HornHigh);
    mm.Add("RemoteHornIsolate", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics.RemoteHornIsolate);
    mm.Add("VCBCloseCmd", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics.VCBCloseCmd);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors);
    mm.Add("LeftDoorClose", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.LeftDoorClose);
    mm.Add("RightDoorClose", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.RightDoorClose);
    mm.Add("LeftDoorOpen", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.LeftDoorOpen);
    mm.Add("RightDoorOpen", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.RightDoorOpen);
    mm.Add("LeftDoorRelease", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.LeftDoorRelease);
    mm.Add("RightDoorRelease", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.RightDoorRelease);
    mm.Add("ObstacleDetectionDisabled", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.ObstacleDetectionDisabled);
    mm.Add("ZeroSpeed", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.ZeroSpeed);
    mm.Add("DCUPower", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.DCUPower);
    mm.Add("DoorMotorPower", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.DoorMotorPower);
    mm.Add("LeftDoorOpenCmdInLimpHome", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.LeftDoorOpenCmdInLimpHome);
    mm.Add("RightDoorOpenCmdInLimpHome", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.RightDoorOpenCmdInLimpHome);
    mm.Add("LeftDoorEnable", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.LeftDoorEnable);
    mm.Add("RightDoorEnable", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.RightDoorEnable);
    mm.Add("LeftHoldDoorClose", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.LeftHoldDoorClose);
    mm.Add("RightHoldDoorClose", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.RightHoldDoorClose);
    mm.Add("EmerDoorLatched", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.EmerDoorLatched);
    mm.Add("EmerDoorOpenFault", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors.EmerDoorOpenFault);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].Pantograph);
    mm.Add("PantoUpCommand", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pantograph.PantoUpCommand);
    mm.Add("PantoDownCommand", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pantograph.PantoDownCommand);
    mm.Add("PantoControlPower", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pantograph.PantoControlPower);
    mm.Add("PantoMotorPower", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pantograph.PantoMotorPower);
    mm.Add("PantoADDFault", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pantograph.PantoADDFault);
    mm.Add("PantoORDFault", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pantograph.PantoORDFault);
    mm.Add("PantoRaiseFailure", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pantograph.PantoRaiseFailure);
    mm.Add("PantoLoweringFailure", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pantograph.PantoLoweringFailure);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys);
    mm.Add("ATCPower", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.ATCPower);
    mm.Add("ATOStartPB", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.ATOStartPB);
    mm.Add("UTOStartPB", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.UTOStartPB);
    mm.Add("ATCSafetyBrakeResetPB", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.ATCSafetyBrakeResetPB);
    mm.Add("NotSafetyBrake", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.NotSafetyBrake);
    mm.Add("CabActive", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.CabActive);
    mm.Add("UTOMode", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.UTOMode);
    mm.Add("TBCInFSB", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.TBCInFSB);
    mm.Add("RMFMode", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.RMFMode);
    mm.Add("DoorEnableBypass", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.DoorEnableBypass);
    mm.Add("TrainDoorClosedAndLocked", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.TrainDoorClosedAndLocked);
    mm.Add("RMRMode", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.RMRMode);
    mm.Add("NoATCBypass", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.NoATCBypass);
    mm.Add("TrainIntegrity", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.TrainIntegrity);
    mm.Add("DMIPower", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.DMIPower);
    mm.Add("ATOMode", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.ATOMode);
    mm.Add("ATBMode", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.ATBMode);
    mm.Add("ROSMode", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.ROSMode);
    mm.Add("ATPMode", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.ATPMode);
    mm.Add("EmergencyDoorNotOpen", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.EmergencyDoorNotOpen);
    mm.Add("WakeUpStatus", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.WakeUpStatus);
    mm.Add("PassengerEmergencyAlarm", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.PassengerEmergencyAlarm);
    mm.Add("FireSmokeInd", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.FireSmokeInd);
    mm.Add("MechanicalCoupling", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.MechanicalCoupling);
    mm.Add("ROSPB", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.ROSPB);
    mm.Add("UTBPB", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.UTBPB);
    mm.Add("LeftDoorOpenPB", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.LeftDoorOpenPB);
    mm.Add("RightDoorOpenPB", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.RightDoorOpenPB);
    mm.Add("LeftDoorClosePB", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.LeftDoorClosePB);
    mm.Add("RightDoorClosePB", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys.RightDoorClosePB);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].CouplingSystem);
    mm.Add("ElectricalCouplerState", model.Model().BEML_EMU_Y.ElectricalOutput[0].CouplingSystem.ElectricalCouplerState);
    mm.Add("UncoupleCmd", model.Model().BEML_EMU_Y.ElectricalOutput[0].CouplingSystem.UncoupleCmd);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].Audio);
    mm.Add("VCBOpen", model.Model().BEML_EMU_Y.ElectricalOutput[0].Audio.VCBOpen);
    mm.Add("VCBClose", model.Model().BEML_EMU_Y.ElectricalOutput[0].Audio.VCBClose);
    mm.Add("CompressorOn", model.Model().BEML_EMU_Y.ElectricalOutput[0].Audio.CompressorOn);
    mm.Add("WiperOn", model.Model().BEML_EMU_Y.ElectricalOutput[0].Audio.WiperOn);
    mm.Add("DeadmanVigilance", model.Model().BEML_EMU_Y.ElectricalOutput[0].Audio.DeadmanVigilance);
    mm.Add("FlasherLightSound", model.Model().BEML_EMU_Y.ElectricalOutput[0].Audio.FlasherLightSound);
    mm.Add("ObstacleSoftCollision", model.Model().BEML_EMU_Y.ElectricalOutput[0].Audio.ObstacleSoftCollision);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].Scoring);
    mm.Add("DeadmanRelay", model.Model().BEML_EMU_Y.ElectricalOutput[0].Scoring.DeadmanRelay);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS);
    mm.Add("PAPIS_CCTV_Power", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS.PAPIS_CCTV_Power);
    mm.Add("DoorCloseAnnouncement", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS.DoorCloseAnnouncement);
    mm.Add("DoorOpen", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS.DoorOpen);
    mm.Add("DoorClose", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS.DoorClose);
    mm.Add("EmergencyDoorOpen", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS.EmergencyDoorOpen);
    mm.Add("CabActive", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS.CabActive);
    mm.Add("AllDoorClose", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS.AllDoorClose);
    mm.Add("ZeroSpeed", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS.ZeroSpeed);
    mm.Add("PECUAlarmActive", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS.PECUAlarmActive);
    mm.Add("Couple", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS.Couple);
    mm.Add("FrontObstacleDetected", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS.FrontObstacleDetected);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs);
    mm.Add("PAPIS", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs.PAPIS);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ElectricalOutput[0]);
    mm.Add("OutputControlStates", model.Model().BEML_EMU_Y.ElectricalOutput[0].OutputControlStates);
    mm.Add("Traction", model.Model().BEML_EMU_Y.ElectricalOutput[0].Traction);
    mm.Add("Braking", model.Model().BEML_EMU_Y.ElectricalOutput[0].Braking);
    mm.Add("TCMS", model.Model().BEML_EMU_Y.ElectricalOutput[0].TCMS);
    mm.Add("Pneumatics", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pneumatics);
    mm.Add("Doors", model.Model().BEML_EMU_Y.ElectricalOutput[0].Doors);
    mm.Add("Pantograph", model.Model().BEML_EMU_Y.ElectricalOutput[0].Pantograph);
    mm.Add("SignalSys", model.Model().BEML_EMU_Y.ElectricalOutput[0].SignalSys);
    mm.Add("CouplingSystem", model.Model().BEML_EMU_Y.ElectricalOutput[0].CouplingSystem);
    mm.Add("Audio", model.Model().BEML_EMU_Y.ElectricalOutput[0].Audio);
    mm.Add("Scoring", model.Model().BEML_EMU_Y.ElectricalOutput[0].Scoring);
    mm.Add("MiscOutputs", model.Model().BEML_EMU_Y.ElectricalOutput[0].MiscOutputs);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem);
    mm.Add("RightDoorEmergencyRelease", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.RightDoorEmergencyRelease);
    mm.Add("LeftDoorEmergencyRelease", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.LeftDoorEmergencyRelease);
    mm.Add("DoorRight1Isolation", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.DoorRight1Isolation);
    mm.Add("DoorLeft1Isolation", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.DoorLeft1Isolation);
    mm.Add("DoorRight2Isolation", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.DoorRight2Isolation);
    mm.Add("DoorLeft2Isolation", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.DoorLeft2Isolation);
    mm.Add("DoorRight3Isolation", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.DoorRight3Isolation);
    mm.Add("DoorLeft3Isolation", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.DoorLeft3Isolation);
    mm.Add("DoorRight4Isolation", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.DoorRight4Isolation);
    mm.Add("DoorLeft4Isolation", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.DoorLeft4Isolation);
    mm.Add("LeftSideDoorOpenRequest", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.LeftSideDoorOpenRequest);
    mm.Add("LeftSideDoorCloseRequest", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.LeftSideDoorCloseRequest);
    mm.Add("RightSideDoorOpenRequest", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.RightSideDoorOpenRequest);
    mm.Add("RightSideDoorCloseRequest", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.RightSideDoorCloseRequest);
    mm.Add("LeftSideDoorRelease", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.LeftSideDoorRelease);
    mm.Add("RightSideDoorRelease", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem.RightSideDoorRelease);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PantographSystem);
    mm.Add("PantoIsolationCommand", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PantographSystem.PantoIsolationCommand);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.Bogie[0]);
    mm.Add("EPBrakingDemand", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.Bogie[0].EPBrakingDemand);
    mm.Add("TractionInhibit", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.Bogie[0].TractionInhibit);
    mm.Add("EDBrakingInhibit", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.Bogie[0].EDBrakingInhibit);
    mm.Add("EPBrakingInhibit", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.Bogie[0].EPBrakingInhibit);
    mm.Add("BogieSupportedMass", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.Bogie[0].BogieSupportedMass);
    mm.Add("BogieIsolationStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.Bogie[0].BogieIsolationStatus);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking);
    mm.Add("PWRandBRKBothApplied", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.PWRandBRKBothApplied);
    mm.Add("TractionCutModeSelectorInATPATOUTO", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.TractionCutModeSelectorInATPATOUTO);
    mm.Add("BECUFaulty", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.BECUFaulty);
    mm.Add("TractionCommand", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.TractionCommand);
    mm.Add("EDBrakingCommand", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.EDBrakingCommand);
    mm.Add("HTERequired", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.HTERequired);
    mm.Add("VehicleDerailed", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.VehicleDerailed);
    mm.Add("TCMSIsolateCI", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.TCMSIsolateCI);
    mm.Add("CIIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.CIIsolated);
    mm.Add("Bogie", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.Bogie);
    mm.Add("SpeedSensorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.SpeedSensorFault);
    mm.Add("TCMSSpeedLimit", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.TCMSSpeedLimit);
    mm.Add("TCMSSpeedLimitCause", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.TCMSSpeedLimitCause);
    mm.Add("BECU1AxleLockedWheelSet1", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.BECU1AxleLockedWheelSet1);
    mm.Add("BECU2AxleLockedWheelSet2", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking.BECU2AxleLockedWheelSet2);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem);
    mm.Add("Overspeed", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.Overspeed);
    mm.Add("EnergizeTLWR", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.EnergizeTLWR);
    mm.Add("EnergizeTLRR", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.EnergizeTLRR);
    mm.Add("EnergizeHLHBR", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.EnergizeHLHBR);
    mm.Add("EnergizeHLLBR", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.EnergizeHLLBR);
    mm.Add("EnergizeFLR", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.EnergizeFLR);
    mm.Add("EnergizeFLDR", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.EnergizeFLDR);
    mm.Add("EnergizeUTO", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.EnergizeUTO);
    mm.Add("EnergizeRM", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.EnergizeRM);
    mm.Add("EnergizeCOLR", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.EnergizeCOLR);
    mm.Add("PantoDownCmdTrip", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.PantoDownCmdTrip);
    mm.Add("PantoMVSet", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.PantoMVSet);
    mm.Add("NeutralSection", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.NeutralSection);
    mm.Add("RecloseAfterNeutralSection", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.RecloseAfterNeutralSection);
    mm.Add("TCMS_TPOR", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMS_TPOR);
    mm.Add("TCMS_TSDR", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMS_TSDR);
    mm.Add("TCMS_VCBClose", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMS_VCBClose);
    mm.Add("TCMS_VCBOpen", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMS_VCBOpen);
    mm.Add("TCMS_PBR", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMS_PBR);
    mm.Add("LeftDoorAuth_Closed", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.LeftDoorAuth_Closed);
    mm.Add("LeftDoorAuth_Opened", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.LeftDoorAuth_Opened);
    mm.Add("RightDoorAuth_Closed", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.RightDoorAuth_Closed);
    mm.Add("RightDoorAuth_Opened", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.RightDoorAuth_Opened);
    mm.Add("TCMSIsolateBCG1", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSIsolateBCG1);
    mm.Add("TCMSIsolateBCG2", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSIsolateBCG2);
    mm.Add("ParkBrakeApplyVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.ParkBrakeApplyVDUReq);
    mm.Add("ParkBrakeBypassVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.ParkBrakeBypassVDUReq);
    mm.Add("Bogie1IsolateVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.Bogie1IsolateVDUReq);
    mm.Add("Bogie2IsolateVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.Bogie2IsolateVDUReq);
    mm.Add("RightDoorAuth_Opened_Op2_5", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.RightDoorAuth_Opened_Op2_5);
    mm.Add("LeftDoorAuth_Opened_Op2_5", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.LeftDoorAuth_Opened_Op2_5);
    mm.Add("HornHighVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.HornHighVDUReq);
    mm.Add("HornLowVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.HornLowVDUReq);
    mm.Add("HornIsolateReinstateVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.HornIsolateReinstateVDUReq);
    mm.Add("NeutralZoneBackupModeActive", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.NeutralZoneBackupModeActive);
    mm.Add("BatteryLowFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.BatteryLowFault);
    mm.Add("BUVDR_Active", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.BUVDR_Active);
    mm.Add("CMCActivationFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.CMCActivationFault);
    mm.Add("CMCDeactivationFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.CMCDeactivationFault);
    mm.Add("OHLHighVoltageLevel3", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.OHLHighVoltageLevel3);
    mm.Add("OHLLowVoltageLevel2", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.OHLLowVoltageLevel2);
    mm.Add("VCBOpenedByCI", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.VCBOpenedByCI);
    mm.Add("VCBOpenedByACOvercurrent", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.VCBOpenedByACOvercurrent);
    mm.Add("VCBOpenedByMTrProtection", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.VCBOpenedByMTrProtection);
    mm.Add("VCBOpenedByAPS", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.VCBOpenedByAPS);
    mm.Add("DCLinkOverVoltageLevel1", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.DCLinkOverVoltageLevel1);
    mm.Add("DCLinkLowVoltageLevel1", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.DCLinkLowVoltageLevel1);
    mm.Add("BICContactorActivationFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.BICContactorActivationFault);
    mm.Add("ShutdownFailureVCBNotOpening", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.ShutdownFailureVCBNotOpening);
    mm.Add("PantographRisingMissing", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.PantographRisingMissing);
    mm.Add("PantographLoweringMissing", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.PantographLoweringMissing);
    mm.Add("PantographRisingInhibited", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.PantographRisingInhibited);
    mm.Add("PantographLoweringFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.PantographLoweringFailure);
    mm.Add("AKOpenFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.AKOpenFailure);
    mm.Add("KOpenFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.KOpenFailure);
    mm.Add("TCMSIsolatePanto", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSIsolatePanto);
    mm.Add("TCMSIsolateVCB", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSIsolateVCB);
    mm.Add("TCMSIsolateAPS1", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSIsolateAPS1);
    mm.Add("TCMSIsolateAPS2", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSIsolateAPS2);
    mm.Add("VCBMissingClosing", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.VCBMissingClosing);
    mm.Add("VCBMissingOpening", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.VCBMissingOpening);
    mm.Add("FwdRevTrainLineMismatchMessage", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.FwdRevTrainLineMismatchMessage);
    mm.Add("LowMRPressureFaultMessage", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.LowMRPressureFaultMessage);
    mm.Add("DeadmanBypass", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.DeadmanBypass);
    mm.Add("ADDCOSStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.ADDCOSStatus);
    mm.Add("ORDCOSStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.ORDCOSStatus);
    mm.Add("AirSupplyIC", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.AirSupplyIC);
    mm.Add("MCBPAGroupStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.MCBPAGroupStatus);
    mm.Add("MCB110VDCGroup", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.MCB110VDCGroup);
    mm.Add("MCBLightGroup", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.MCBLightGroup);
    mm.Add("MCBLightSaloonGroup", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.MCBLightSaloonGroup);
    mm.Add("MCBDoorGroup", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.MCBDoorGroup);
    mm.Add("MCBBrakeGroup", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.MCBBrakeGroup);
    mm.Add("MCBAPSGroup", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.MCBAPSGroup);
    mm.Add("MCBTCMSGroup", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.MCBTCMSGroup);
    mm.Add("MCBSignallingGroup", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.MCBSignallingGroup);
    mm.Add("DoubleCabKeyInsertion", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.DoubleCabKeyInsertion);
    mm.Add("CabEnableNotEnergized", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.CabEnableNotEnergized);
    mm.Add("CouplingCircuitNotEnergized", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.CouplingCircuitNotEnergized);
    mm.Add("PantoCircuitNotEnergized", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.PantoCircuitNotEnergized);
    mm.Add("ExternalLightCB1Tripped", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.ExternalLightCB1Tripped);
    mm.Add("ExternalLightCB2Tripped", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.ExternalLightCB2Tripped);
    mm.Add("InternalLightCB1Tripped", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.InternalLightCB1Tripped);
    mm.Add("InternalLightCB2Tripped", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.InternalLightCB2Tripped);
    mm.Add("APSCBTripped", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.APSCBTripped);
    mm.Add("ReverseMotionInForwardCommandMessage", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.ReverseMotionInForwardCommandMessage);
    mm.Add("MCDRFaulty", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.MCDRFaulty);
    mm.Add("ObstacleDetected", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.ObstacleDetected);
    mm.Add("ODDFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.ODDFailure);
    mm.Add("VehiclesPassedNS", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.VehiclesPassedNS);
    mm.Add("TW_TSDDR", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TW_TSDDR);
    mm.Add("TrainInNeutralSection", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TrainInNeutralSection);
    mm.Add("LeftDoorAuth_OpenedOP1", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.LeftDoorAuth_OpenedOP1);
    mm.Add("RightDoorAuth_OpenedOP1", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.RightDoorAuth_OpenedOP1);
    mm.Add("TCMSCompressorCmd", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSCompressorCmd);
    mm.Add("TCMSFireAlarmReset", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSFireAlarmReset);
    mm.Add("TCMSFDUReset", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSFDUReset);
    mm.Add("TCMSHVACSmokeReset", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSHVACSmokeReset);
    mm.Add("TCMSIsolateHVAC1", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSIsolateHVAC1);
    mm.Add("TCMSIsolateHVAC2", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSIsolateHVAC2);
    mm.Add("TCMSResetHVAC1", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSResetHVAC1);
    mm.Add("TCMSResetHVAC2", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSResetHVAC2);
    mm.Add("TCMSAPSCBTripCmd", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSAPSCBTripCmd);
    mm.Add("TCMSFDSCBTripCmd", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSFDSCBTripCmd);
    mm.Add("TCMSHVAC1CBTripCmd", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSHVAC1CBTripCmd);
    mm.Add("TCMSHVAC2CBTripCmd", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSHVAC2CBTripCmd);
    mm.Add("DeadmanBypassStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.DeadmanBypassStatus);
    mm.Add("BLCOSwitchStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.BLCOSwitchStatus);
    mm.Add("TooManyBogiesIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TooManyBogiesIsolated);
    mm.Add("TooManyEPICCutout", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TooManyEPICCutout);
    mm.Add("TCMSWFLIsolation", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSWFLIsolation);
    mm.Add("TCMSPABORBypass", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.TCMSPABORBypass);
    mm.Add("WFLIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.WFLIsolated);
    mm.Add("HVAC1FireDetectorDisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.HVAC1FireDetectorDisableVDUReq);
    mm.Add("EDBHeatAlarmDisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.EDBHeatAlarmDisableVDUReq);
    mm.Add("CABSmokeDetectorDisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.CABSmokeDetectorDisableVDUReq);
    mm.Add("SHDEndCubicleRearRight1DisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.SHDEndCubicleRearRight1DisableVDUReq);
    mm.Add("SHDEndCubicleRearRight2DisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.SHDEndCubicleRearRight2DisableVDUReq);
    mm.Add("SHDEndCubicleRearLeft1DisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.SHDEndCubicleRearLeft1DisableVDUReq);
    mm.Add("SHDEndCubicleRearLeft2DisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.SHDEndCubicleRearLeft2DisableVDUReq);
    mm.Add("LHDDriverDeskDisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.LHDDriverDeskDisableVDUReq);
    mm.Add("LHDCIDisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.LHDCIDisableVDUReq);
    mm.Add("LHDLTJBDisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.LHDLTJBDisableVDUReq);
    mm.Add("SaloonR1FireDetectorDisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.SaloonR1FireDetectorDisableVDUReq);
    mm.Add("SaloonR2FireDetectorDisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.SaloonR2FireDetectorDisableVDUReq);
    mm.Add("AuxiliaryDeskFireDetectorDisableVDUReq", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.AuxiliaryDeskFireDetectorDisableVDUReq);
    mm.Add("RemoteMagnetValve1", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.RemoteMagnetValve1);
    mm.Add("RemoteMagnetValve2", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem.RemoteMagnetValve2);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PneumaticSystem);
    mm.Add("BrakingDemand", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PneumaticSystem.BrakingDemand);
    mm.Add("ASCOEnd1", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PneumaticSystem.ASCOEnd1);
    mm.Add("ASCOEnd2", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PneumaticSystem.ASCOEnd2);
    mm.Add("HornManuallyIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PneumaticSystem.HornManuallyIsolated);
    mm.Add("BIC1Inside", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PneumaticSystem.BIC1Inside);
    mm.Add("BIC1Outside", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PneumaticSystem.BIC1Outside);
    mm.Add("BIC2Inside", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PneumaticSystem.BIC2Inside);
    mm.Add("BIC2Outside", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PneumaticSystem.BIC2Outside);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Control);
    mm.Add("DoorSystem", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.DoorSystem);
    mm.Add("PantographSystem", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PantographSystem);
    mm.Add("TractionSBraking", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.TractionSBraking);
    mm.Add("ElectricalSystem", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.ElectricalSystem);
    mm.Add("PneumaticSystem", model.Model().BEML_EMU_Y.TCMSOutput[0].Control.PneumaticSystem);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors);
    mm.Add("DoorA1Open", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1Open);
    mm.Add("DoorA2Open", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2Open);
    mm.Add("DoorA3Open", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3Open);
    mm.Add("DoorA4Open", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4Open);
    mm.Add("DoorB1Open", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1Open);
    mm.Add("DoorB2Open", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2Open);
    mm.Add("DoorB3Open", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3Open);
    mm.Add("DoorB4Open", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4Open);
    mm.Add("DoorA1Locked", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1Locked);
    mm.Add("DoorA2Locked", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2Locked);
    mm.Add("DoorA3Locked", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3Locked);
    mm.Add("DoorA4Locked", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4Locked);
    mm.Add("DoorB1Locked", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1Locked);
    mm.Add("DoorB2Locked", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2Locked);
    mm.Add("DoorB3Locked", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3Locked);
    mm.Add("DoorB4Locked", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4Locked);
    mm.Add("DoorA1Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1Isolated);
    mm.Add("DoorA2Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2Isolated);
    mm.Add("DoorA3Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3Isolated);
    mm.Add("DoorA4Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4Isolated);
    mm.Add("DoorB1Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1Isolated);
    mm.Add("DoorB2Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2Isolated);
    mm.Add("DoorB3Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3Isolated);
    mm.Add("DoorB4Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4Isolated);
    mm.Add("DoorA1Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1Fault);
    mm.Add("DoorA2Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2Fault);
    mm.Add("DoorA3Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3Fault);
    mm.Add("DoorA4Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4Fault);
    mm.Add("DoorB1Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1Fault);
    mm.Add("DoorB2Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2Fault);
    mm.Add("DoorB3Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3Fault);
    mm.Add("DoorB4Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4Fault);
    mm.Add("DoorA1EmergencyReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1EmergencyReleased);
    mm.Add("DoorA2EmergencyReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2EmergencyReleased);
    mm.Add("DoorA3EmergencyReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3EmergencyReleased);
    mm.Add("DoorA4EmergencyReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4EmergencyReleased);
    mm.Add("DoorB1EmergencyReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1EmergencyReleased);
    mm.Add("DoorB2EmergencyReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2EmergencyReleased);
    mm.Add("DoorB3EmergencyReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3EmergencyReleased);
    mm.Add("DoorB4EmergencyReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4EmergencyReleased);
    mm.Add("DCU1Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU1Status);
    mm.Add("DCU2Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU2Status);
    mm.Add("DCU3Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU3Status);
    mm.Add("DCU4Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU4Status);
    mm.Add("DCU5Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU5Status);
    mm.Add("DCU6Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU6Status);
    mm.Add("DCU7Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU7Status);
    mm.Add("DCU8Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU8Status);
    mm.Add("DoorA1CloseObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1CloseObstruction);
    mm.Add("DoorA2CloseObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2CloseObstruction);
    mm.Add("DoorA3CloseObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3CloseObstruction);
    mm.Add("DoorA4CloseObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4CloseObstruction);
    mm.Add("DoorB1CloseObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1CloseObstruction);
    mm.Add("DoorB2CloseObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2CloseObstruction);
    mm.Add("DoorB3CloseObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3CloseObstruction);
    mm.Add("DoorB4CloseObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4CloseObstruction);
    mm.Add("DoorA1OpenObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1OpenObstruction);
    mm.Add("DoorA2OpenObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2OpenObstruction);
    mm.Add("DoorA3OpenObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3OpenObstruction);
    mm.Add("DoorA4OpenObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4OpenObstruction);
    mm.Add("DoorB1OpenObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1OpenObstruction);
    mm.Add("DoorB2OpenObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2OpenObstruction);
    mm.Add("DoorB3OpenObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3OpenObstruction);
    mm.Add("DoorB4OpenObstruction", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4OpenObstruction);
    mm.Add("DoorA1OpenDummyForLeaf", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1OpenDummyForLeaf);
    mm.Add("DoorA1MotorCircuitFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1MotorCircuitFailure);
    mm.Add("DoorA2MotorCircuitFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2MotorCircuitFailure);
    mm.Add("DoorA3MotorCircuitFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3MotorCircuitFailure);
    mm.Add("DoorA4MotorCircuitFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4MotorCircuitFailure);
    mm.Add("DoorB1MotorCircuitFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1MotorCircuitFailure);
    mm.Add("DoorB2MotorCircuitFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2MotorCircuitFailure);
    mm.Add("DoorB3MotorCircuitFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3MotorCircuitFailure);
    mm.Add("DoorB4MotorCircuitFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4MotorCircuitFailure);
    mm.Add("DoorA1FailedToLock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1FailedToLock);
    mm.Add("DoorA2FailedToLock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2FailedToLock);
    mm.Add("DoorA3FailedToLock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3FailedToLock);
    mm.Add("DoorA4FailedToLock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4FailedToLock);
    mm.Add("DoorB1FailedToLock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1FailedToLock);
    mm.Add("DoorB2FailedToLock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2FailedToLock);
    mm.Add("DoorB3FailedToLock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3FailedToLock);
    mm.Add("DoorB4FailedToLock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4FailedToLock);
    mm.Add("DoorA1FailedToUnlock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1FailedToUnlock);
    mm.Add("DoorA2FailedToUnlock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2FailedToUnlock);
    mm.Add("DoorA3FailedToUnlock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3FailedToUnlock);
    mm.Add("DoorA4FailedToUnlock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4FailedToUnlock);
    mm.Add("DoorB1FailedToUnlock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1FailedToUnlock);
    mm.Add("DoorB2FailedToUnlock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2FailedToUnlock);
    mm.Add("DoorB3FailedToUnlock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3FailedToUnlock);
    mm.Add("DoorB4FailedToUnlock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4FailedToUnlock);
    mm.Add("DoorA1UnexpectedUnlocking", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1UnexpectedUnlocking);
    mm.Add("DoorA2UnexpectedUnlocking", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2UnexpectedUnlocking);
    mm.Add("DoorA3UnexpectedUnlocking", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3UnexpectedUnlocking);
    mm.Add("DoorA4UnexpectedUnlocking", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4UnexpectedUnlocking);
    mm.Add("DoorB1UnexpectedUnlocking", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1UnexpectedUnlocking);
    mm.Add("DoorB2UnexpectedUnlocking", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2UnexpectedUnlocking);
    mm.Add("DoorB3UnexpectedUnlocking", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3UnexpectedUnlocking);
    mm.Add("DoorB4UnexpectedUnlocking", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4UnexpectedUnlocking);
    mm.Add("DoorA1DCSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1DCSRFailure);
    mm.Add("DoorA2DCSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2DCSRFailure);
    mm.Add("DoorA3DCSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3DCSRFailure);
    mm.Add("DoorA4DCSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4DCSRFailure);
    mm.Add("DoorB1DCSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1DCSRFailure);
    mm.Add("DoorB2DCSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2DCSRFailure);
    mm.Add("DoorB3DCSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3DCSRFailure);
    mm.Add("DoorB4DCSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4DCSRFailure);
    mm.Add("DoorA1DCSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1DCSLFailure);
    mm.Add("DoorA2DCSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2DCSLFailure);
    mm.Add("DoorA3DCSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3DCSLFailure);
    mm.Add("DoorA4DCSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4DCSLFailure);
    mm.Add("DoorB1DCSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1DCSLFailure);
    mm.Add("DoorB2DCSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2DCSLFailure);
    mm.Add("DoorB3DCSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3DCSLFailure);
    mm.Add("DoorB4DCSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4DCSLFailure);
    mm.Add("DoorA1DLSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1DLSRFailure);
    mm.Add("DoorA2DLSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2DLSRFailure);
    mm.Add("DoorA3DLSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3DLSRFailure);
    mm.Add("DoorA4DLSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4DLSRFailure);
    mm.Add("DoorB1DLSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1DLSRFailure);
    mm.Add("DoorB2DLSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2DLSRFailure);
    mm.Add("DoorB3DLSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3DLSRFailure);
    mm.Add("DoorB4DLSRFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4DLSRFailure);
    mm.Add("DoorA1DLSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1DLSLFailure);
    mm.Add("DoorA2DLSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2DLSLFailure);
    mm.Add("DoorA3DLSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3DLSLFailure);
    mm.Add("DoorA4DLSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4DLSLFailure);
    mm.Add("DoorB1DLSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1DLSLFailure);
    mm.Add("DoorB2DLSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2DLSLFailure);
    mm.Add("DoorB3DLSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3DLSLFailure);
    mm.Add("DoorB4DLSLFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4DLSLFailure);
    mm.Add("DoorA1DoorMajorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1DoorMajorFault);
    mm.Add("DoorA2DoorMajorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2DoorMajorFault);
    mm.Add("DoorA3DoorMajorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3DoorMajorFault);
    mm.Add("DoorA4DoorMajorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4DoorMajorFault);
    mm.Add("DoorB1DoorMajorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1DoorMajorFault);
    mm.Add("DoorB2DoorMajorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2DoorMajorFault);
    mm.Add("DoorB3DoorMajorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3DoorMajorFault);
    mm.Add("DoorB4DoorMajorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4DoorMajorFault);
    mm.Add("DoorA1DCUFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1DCUFailure);
    mm.Add("DoorA2DCUFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2DCUFailure);
    mm.Add("DoorA3DCUFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3DCUFailure);
    mm.Add("DoorA4DCUFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4DCUFailure);
    mm.Add("DoorB1DCUFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1DCUFailure);
    mm.Add("DoorB2DCUFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2DCUFailure);
    mm.Add("DoorB3DCUFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3DCUFailure);
    mm.Add("DoorB4DCUFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4DCUFailure);
    mm.Add("DCU1Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU1Fault);
    mm.Add("DCU2Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU2Fault);
    mm.Add("DCU3Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU3Fault);
    mm.Add("DCU4Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU4Fault);
    mm.Add("DCU5Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU5Fault);
    mm.Add("DCU6Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU6Fault);
    mm.Add("DCU7Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU7Fault);
    mm.Add("DCU8Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DCU8Fault);
    mm.Add("DoorA1UnexpectedOpen", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1UnexpectedOpen);
    mm.Add("DoorA2UnexpectedOpen", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2UnexpectedOpen);
    mm.Add("DoorA3UnexpectedOpen", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3UnexpectedOpen);
    mm.Add("DoorA4UnexpectedOpen", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4UnexpectedOpen);
    mm.Add("DoorB1UnexpectedOpen", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1UnexpectedOpen);
    mm.Add("DoorB2UnexpectedOpen", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2UnexpectedOpen);
    mm.Add("DoorB3UnexpectedOpen", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3UnexpectedOpen);
    mm.Add("DoorB4UnexpectedOpen", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4UnexpectedOpen);
    mm.Add("DoorA1LocalEED", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA1LocalEED);
    mm.Add("DoorA2LocalEED", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA2LocalEED);
    mm.Add("DoorA3LocalEED", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA3LocalEED);
    mm.Add("DoorA4LocalEED", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorA4LocalEED);
    mm.Add("DoorB1LocalEED", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB1LocalEED);
    mm.Add("DoorB2LocalEED", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB2LocalEED);
    mm.Add("DoorB3LocalEED", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB3LocalEED);
    mm.Add("DoorB4LocalEED", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors.DoorB4LocalEED);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem);
    mm.Add("AllRightDoorsClosed", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.AllRightDoorsClosed);
    mm.Add("AllLeftDoorsClosed", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.AllLeftDoorsClosed);
    mm.Add("AllDoorsClosed", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.AllDoorsClosed);
    mm.Add("EmerDoorFaultMessage", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.EmerDoorFaultMessage);
    mm.Add("EmergencyEscapeDoorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.EmergencyEscapeDoorFault);
    mm.Add("EmergencyEscapeDoorIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.EmergencyEscapeDoorIsolated);
    mm.Add("EmergencyEscapeDoorLocked", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.EmergencyEscapeDoorLocked);
    mm.Add("EmergencyEscapeDoorUnlocked", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.EmergencyEscapeDoorUnlocked);
    mm.Add("EmergencyEscapeDoorOpen", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.EmergencyEscapeDoorOpen);
    mm.Add("EmergencyEscapeDoorReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.EmergencyEscapeDoorReleased);
    mm.Add("CabSaloonPartitionDoorOpen", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.CabSaloonPartitionDoorOpen);
    mm.Add("EmergencyDoorCoverRemoved", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.EmergencyDoorCoverRemoved);
    mm.Add("DoorLoopBypassActive", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.DoorLoopBypassActive);
    mm.Add("LeftDoor1Lockout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.LeftDoor1Lockout);
    mm.Add("LeftDoor2Lockout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.LeftDoor2Lockout);
    mm.Add("LeftDoor3Lockout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.LeftDoor3Lockout);
    mm.Add("LeftDoor4Lockout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.LeftDoor4Lockout);
    mm.Add("RightDoor1Lockout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.RightDoor1Lockout);
    mm.Add("RightDoor2Lockout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.RightDoor2Lockout);
    mm.Add("RightDoor3Lockout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.RightDoor3Lockout);
    mm.Add("RightDoor4Lockout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.RightDoor4Lockout);
    mm.Add("UnexpectedDoorOpeningDetectedByCC", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.UnexpectedDoorOpeningDetectedByCC);
    mm.Add("Doors", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem.Doors);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem);
    mm.Add("UnitAtLeastOnePantoUp", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.UnitAtLeastOnePantoUp);
    mm.Add("UnitAllPantoDown", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.UnitAllPantoDown);
    mm.Add("UnitPantoPowerDetected", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.UnitPantoPowerDetected);
    mm.Add("VehiclePantoUp", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.VehiclePantoUp);
    mm.Add("VehiclePantoDown", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.VehiclePantoDown);
    mm.Add("PantographIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.PantographIsolated);
    mm.Add("VehiclePantoRising", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.VehiclePantoRising);
    mm.Add("VehiclePantoLowering", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.VehiclePantoLowering);
    mm.Add("PantographPosition", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.PantographPosition);
    mm.Add("PantographFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.PantographFault);
    mm.Add("PantoADDFaultMessage", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.PantoADDFaultMessage);
    mm.Add("PantoORDFaultMessage", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.PantoORDFaultMessage);
    mm.Add("PantoRaiseFailureMessage", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem.PantoRaiseFailureMessage);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie[0]);
    mm.Add("BrakeCylinderPressureGauge", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie[0].BrakeCylinderPressureGauge);
    mm.Add("ParkBrakePressureGauge", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie[0].ParkBrakePressureGauge);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem);
    mm.Add("AllServiceBrakesReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.AllServiceBrakesReleased);
    mm.Add("ServiceBrakesApplied", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.ServiceBrakesApplied);
    mm.Add("AllParkBrakesReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.AllParkBrakesReleased);
    mm.Add("ParkBrakeApplied", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.ParkBrakeApplied);
    mm.Add("MainPipePressure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.MainPipePressure);
    mm.Add("BrakeCylinderPressure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.BrakeCylinderPressure);
    mm.Add("Bogie1BrakeCylinderPressure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie1BrakeCylinderPressure);
    mm.Add("Bogie2BrakeCylinderPressure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie2BrakeCylinderPressure);
    mm.Add("AirSuspensionPressure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.AirSuspensionPressure);
    mm.Add("MainReservoirPressureGauge", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.MainReservoirPressureGauge);
    mm.Add("ParkBrakeIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.ParkBrakeIsolated);
    mm.Add("ParkBrakeApplyFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.ParkBrakeApplyFailure);
    mm.Add("ParkBrakeReleaseFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.ParkBrakeReleaseFailure);
    mm.Add("Bogie", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie);
    mm.Add("Bogie1ServiceBrakeStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie1ServiceBrakeStatus);
    mm.Add("Bogie2ServiceBrakeStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie2ServiceBrakeStatus);
    mm.Add("Bogie1ServiceBrakeIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie1ServiceBrakeIsolated);
    mm.Add("Bogie2ServiceBrakeIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie2ServiceBrakeIsolated);
    mm.Add("Bogie1ParkingBrakeStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie1ParkingBrakeStatus);
    mm.Add("Bogie2ParkingBrakeStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie2ParkingBrakeStatus);
    mm.Add("Bogie1ParkingBrakeIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie1ParkingBrakeIsolated);
    mm.Add("Bogie2ParkingBrakeIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie2ParkingBrakeIsolated);
    mm.Add("Bogie1IsolationStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie1IsolationStatus);
    mm.Add("Bogie2IsolationStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie2IsolationStatus);
    mm.Add("Bogie1SUSPStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie1SUSPStatus);
    mm.Add("Bogie2SUSPStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie2SUSPStatus);
    mm.Add("Bogie1SUSPFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie1SUSPFault);
    mm.Add("Bogie2SUSPFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie2SUSPFault);
    mm.Add("BrakeDemandSignalFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.BrakeDemandSignalFailure);
    mm.Add("BECU1EmergencyBrakeFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.BECU1EmergencyBrakeFailure);
    mm.Add("BECU2EmergencyBrakeFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.BECU2EmergencyBrakeFailure);
    mm.Add("BECU1ServiceBrakeFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.BECU1ServiceBrakeFailure);
    mm.Add("BECU1BrakeNotApplied", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.BECU1BrakeNotApplied);
    mm.Add("BECU1BrakeNotReleased", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.BECU1BrakeNotReleased);
    mm.Add("BECU1CarLoadPressureLow", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.BECU1CarLoadPressureLow);
    mm.Add("BECU2CarLoadPressureLow", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.BECU2CarLoadPressureLow);
    mm.Add("BECULowRPressure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.BECULowRPressure);
    mm.Add("Bogie1ServiceBrakeFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.Bogie1ServiceBrakeFault);
    mm.Add("BECU1LoadPressureLow", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.BECU1LoadPressureLow);
    mm.Add("AirSuspensionBogie1Deflated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.AirSuspensionBogie1Deflated);
    mm.Add("PantographPipePressureLow", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.PantographPipePressureLow);
    mm.Add("MainReservoirPressureLow", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem.MainReservoirPressureLow);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking);
    mm.Add("ForwardDirection", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.ForwardDirection);
    mm.Add("ReverseDirection", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.ReverseDirection);
    mm.Add("TrainSpeed", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.TrainSpeed);
    mm.Add("ZeroSpeed", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.ZeroSpeed);
    mm.Add("TCMSSpeedLimit", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.TCMSSpeedLimit);
    mm.Add("TractionOn", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.TractionOn);
    mm.Add("BrakeOn", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.BrakeOn);
    mm.Add("TractionSafe", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.TractionSafe);
    mm.Add("UnitTractiveEffortAchieved", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.UnitTractiveEffortAchieved);
    mm.Add("UnitTractiveEffortPossible", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.UnitTractiveEffortPossible);
    mm.Add("UnitEDBrakingEffortAchieved", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.UnitEDBrakingEffortAchieved);
    mm.Add("UnitEDBrakingEffortPossible", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.UnitEDBrakingEffortPossible);
    mm.Add("UnitTractivePower", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.UnitTractivePower);
    mm.Add("UnitTractivePowerPossible", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.UnitTractivePowerPossible);
    mm.Add("UnitEDBrakingPower", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.UnitEDBrakingPower);
    mm.Add("UnitEDBrakingPowerPossible", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.UnitEDBrakingPowerPossible);
    mm.Add("VehicleTractiveEffortAchieved", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.VehicleTractiveEffortAchieved);
    mm.Add("VehicleTractiveEffortPossible", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.VehicleTractiveEffortPossible);
    mm.Add("VehicleEDBrakingEffortAchieved", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.VehicleEDBrakingEffortAchieved);
    mm.Add("VehicleEDBrakingEffortPossible", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.VehicleEDBrakingEffortPossible);
    mm.Add("VehicleTractivePower", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.VehicleTractivePower);
    mm.Add("VehicleTractivePowerPossible", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.VehicleTractivePowerPossible);
    mm.Add("VehicleEDBrakingPower", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.VehicleEDBrakingPower);
    mm.Add("VehicleEDBrakingPowerPossible", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.VehicleEDBrakingPowerPossible);
    mm.Add("ServiceBrakeActive", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.ServiceBrakeActive);
    mm.Add("ServiceBrakeFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.ServiceBrakeFault);
    mm.Add("TEBEFeedback", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.TEBEFeedback);
    mm.Add("BELOW_SIGNALS_ARE_PROPULSION_SCREEN_SIGNALS", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.BELOW_SIGNALS_ARE_PROPULSION_SCREEN_SIGNALS);
    mm.Add("PropulsionActive", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.PropulsionActive);
    mm.Add("PropulsionFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.PropulsionFault);
    mm.Add("PropulsionIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.PropulsionIsolated);
    mm.Add("PropulsionEnableStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.PropulsionEnableStatus);
    mm.Add("EDBrakeStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.EDBrakeStatus);
    mm.Add("TractiveEffort", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.TractiveEffort);
    mm.Add("AKContactorStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.AKContactorStatus);
    mm.Add("KContactorStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.KContactorStatus);
    mm.Add("FilterVoltage", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.FilterVoltage);
    mm.Add("BELOW_SIGNALS_ARE_BRAKE_SCREEN_SIGNALS", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.BELOW_SIGNALS_ARE_BRAKE_SCREEN_SIGNALS);
    mm.Add("HoldingBrakeStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.HoldingBrakeStatus);
    mm.Add("BECUStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.BECUStatus);
    mm.Add("BECUMinorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.BECUMinorFault);
    mm.Add("BECUMajorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.BECUMajorFault);
    mm.Add("EPBrakeDelivered", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.EPBrakeDelivered);
    mm.Add("EDBrakeRequested", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.EDBrakeRequested);
    mm.Add("EPICIsolationStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.EPICIsolationStatus);
    mm.Add("EDCutoutStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.EDCutoutStatus);
    mm.Add("RPRESSIsolationStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.RPRESSIsolationStatus);
    mm.Add("CarWeight", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.CarWeight);
    mm.Add("TotalWeight", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.TotalWeight);
    mm.Add("CIStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.CIStatus);
    mm.Add("CIFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.CIFault);
    mm.Add("CIIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.CIIsolated);
    mm.Add("BELOW_SIGNALS_ARE_FOR_SPEEDLIMIT_INTERLOCK_SCREEN", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.BELOW_SIGNALS_ARE_FOR_SPEEDLIMIT_INTERLOCK_SCREEN);
    mm.Add("SpeedLimitASCutout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitASCutout);
    mm.Add("SpeedLimitASDeflated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitASDeflated);
    mm.Add("SpeedLimitBogieIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitBogieIsolated);
    mm.Add("SpeedLimitBrakeFailure", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitBrakeFailure);
    mm.Add("SpeedLimitEPICCutout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitEPICCutout);
    mm.Add("SpeedLimitExcessiveSlip", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitExcessiveSlip);
    mm.Add("SpeedLimitJogMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitJogMode);
    mm.Add("SpeedLimitLowSpeedCutoutMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitLowSpeedCutoutMode);
    mm.Add("SpeedLimitNoEDAvailable", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitNoEDAvailable);
    mm.Add("SpeedLimitOverrideTractionBlock", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitOverrideTractionBlock);
    mm.Add("SpeedLimitRPRESSIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitRPRESSIsolated);
    mm.Add("SpeedLimitSCSMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.SpeedLimitSCSMode);
    mm.Add("CIKAKContactor", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.CIKAKContactor);
    mm.Add("BELOW_SIGNALS_ARE_AT_BOGIE_LEVEL", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.BELOW_SIGNALS_ARE_AT_BOGIE_LEVEL);
    mm.Add("Bogie1WSPStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.Bogie1WSPStatus);
    mm.Add("Bogie2WSPStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.Bogie2WSPStatus);
    mm.Add("HeavyWheelSlipDetected", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.HeavyWheelSlipDetected);
    mm.Add("DynamicBrakeCutoutDueToSlide", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.DynamicBrakeCutoutDueToSlide);
    mm.Add("RollbackDetected", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.RollbackDetected);
    mm.Add("HTERequired", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.HTERequired);
    mm.Add("WashingModeStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.WashingModeStatus);
    mm.Add("ShuntModeStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.ShuntModeStatus);
    mm.Add("ATPLowSpeedCutoutStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking.ATPLowSpeedCutoutStatus);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem);
    mm.Add("HMIPower", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HMIPower);
    mm.Add("CabActive", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.CabActive);
    mm.Add("TBCPosition", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TBCPosition);
    mm.Add("UTOMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.UTOMode);
    mm.Add("ATOMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ATOMode);
    mm.Add("ATPMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ATPMode);
    mm.Add("ROSMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ROSMode);
    mm.Add("RMRMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.RMRMode);
    mm.Add("ATBMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ATBMode);
    mm.Add("RMFMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.RMFMode);
    mm.Add("APS1Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.APS1Status);
    mm.Add("APS2Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.APS2Status);
    mm.Add("APS1Active", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.APS1Active);
    mm.Add("APS2Active", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.APS2Active);
    mm.Add("APS1Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.APS1Fault);
    mm.Add("APS2Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.APS2Fault);
    mm.Add("APS1Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.APS1Isolated);
    mm.Add("APS2Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.APS2Isolated);
    mm.Add("APS1OutputVoltage", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.APS1OutputVoltage);
    mm.Add("APS2OutputVoltage", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.APS2OutputVoltage);
    mm.Add("AK1Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.AK1Status);
    mm.Add("K1Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.K1Status);
    mm.Add("AK2Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.AK2Status);
    mm.Add("K2Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.K2Status);
    mm.Add("BCG1Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BCG1Status);
    mm.Add("BCG2Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BCG2Status);
    mm.Add("BCG1Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BCG1Fault);
    mm.Add("BCG2Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BCG2Fault);
    mm.Add("BCGOutputVoltage", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BCGOutputVoltage);
    mm.Add("BatteryVoltage", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BatteryVoltage);
    mm.Add("TotalOutputCurrent", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TotalOutputCurrent);
    mm.Add("OutputCurrent", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.OutputCurrent);
    mm.Add("BatteryCurrent", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BatteryCurrent);
    mm.Add("BatteryTemperature", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BatteryTemperature);
    mm.Add("BCG1OutputCurrent", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BCG1OutputCurrent);
    mm.Add("BCG2OutputCurrent", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BCG2OutputCurrent);
    mm.Add("ATCBypassMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ATCBypassMode);
    mm.Add("BrakeTrainLineStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BrakeTrainLineStatus);
    mm.Add("MotorTrainLineStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.MotorTrainLineStatus);
    mm.Add("FSB1LineStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.FSB1LineStatus);
    mm.Add("FSB2LineStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.FSB2LineStatus);
    mm.Add("EB1LineStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EB1LineStatus);
    mm.Add("EB2LineStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EB2LineStatus);
    mm.Add("VCBFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.VCBFault);
    mm.Add("VCBIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.VCBIsolated);
    mm.Add("VCBState", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.VCBState);
    mm.Add("LineVoltage", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.LineVoltage);
    mm.Add("Odometer", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.Odometer);
    mm.Add("TotalWeight", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TotalWeight);
    mm.Add("OperationalMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.OperationalMode);
    mm.Add("RescueMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.RescueMode);
    mm.Add("JogMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.JogMode);
    mm.Add("EnableToRun", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EnableToRun);
    mm.Add("ShoreSupply", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ShoreSupply);
    mm.Add("Coupled", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.Coupled);
    mm.Add("VCBTripCommandStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.VCBTripCommandStatus);
    mm.Add("StandbyMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.StandbyMode);
    mm.Add("SaloonLightGroupStatus1", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.SaloonLightGroupStatus1);
    mm.Add("SaloonLightGroupStatus2", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.SaloonLightGroupStatus2);
    mm.Add("FlasherLightStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.FlasherLightStatus);
    mm.Add("WFLStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.WFLStatus);
    mm.Add("WFLFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.WFLFault);
    mm.Add("WFLOilLevelStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.WFLOilLevelStatus);
    mm.Add("WFLPump1Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.WFLPump1Status);
    mm.Add("WFLPump2Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.WFLPump2Status);
    mm.Add("TrainControlContactor", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TrainControlContactor);
    mm.Add("BatteryIsolationContactor", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BatteryIsolationContactor);
    mm.Add("DUMMY_HVAC_SCREEN_SIGNALS_BELOW", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.DUMMY_HVAC_SCREEN_SIGNALS_BELOW);
    mm.Add("HVAC1Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC1Status);
    mm.Add("HVAC2Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC2Status);
    mm.Add("HVAC1ReducedMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC1ReducedMode);
    mm.Add("HVAC2ReducedMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC2ReducedMode);
    mm.Add("HVAC1Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC1Fault);
    mm.Add("HVAC2Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC2Fault);
    mm.Add("HVAC1Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC1Isolated);
    mm.Add("HVAC2Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC2Isolated);
    mm.Add("HVAC1SetPointTemperature", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC1SetPointTemperature);
    mm.Add("HVAC2SetPointTemperature", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC2SetPointTemperature);
    mm.Add("HVAC1InternalTemperature", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC1InternalTemperature);
    mm.Add("HVAC2InternalTemperature", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC2InternalTemperature);
    mm.Add("HVAC1ExternalTemperature", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC1ExternalTemperature);
    mm.Add("HVAC2ExternalTemperature", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC2ExternalTemperature);
    mm.Add("DUMMY_MV_SCREEN_SIGNALS_BELOW", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.DUMMY_MV_SCREEN_SIGNALS_BELOW);
    mm.Add("MainCompressor", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.MainCompressor);
    mm.Add("PowerExtensionContactor", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.PowerExtensionContactor);
    mm.Add("AuxCompressor", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.AuxCompressor);
    mm.Add("DUMMY_TCMS_ECN_SCREEN_SIGNALS_BELOW", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.DUMMY_TCMS_ECN_SCREEN_SIGNALS_BELOW);
    mm.Add("ComponentSwitchStatusA", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ComponentSwitchStatusA);
    mm.Add("ComponentSwitchStatusB", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ComponentSwitchStatusB);
    mm.Add("ComponentSwitchStatusC", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ComponentSwitchStatusC);
    mm.Add("TrainEthernetRepeaterStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TrainEthernetRepeaterStatus);
    mm.Add("TrainBackboneNodeStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TrainBackboneNodeStatus);
    mm.Add("ECNALGStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ECNALGStatus);
    mm.Add("DUMMY_FIRE_DETECTION_SCREEN_SIGNALS_BELOW", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.DUMMY_FIRE_DETECTION_SCREEN_SIGNALS_BELOW);
    mm.Add("UnderframeFireAlarmStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.UnderframeFireAlarmStatus);
    mm.Add("SaloonFireAlarmStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.SaloonFireAlarmStatus);
    mm.Add("SensorFireAlarmStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.SensorFireAlarmStatus);
    mm.Add("FireDetectionUnit", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.FireDetectionUnit);
    mm.Add("ExternalSmoke", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ExternalSmoke);
    mm.Add("InternalFire", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.InternalFire);
    mm.Add("DUMMY_EB_INTERLOCK_SCREEN_SIGNALS_BELOW", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.DUMMY_EB_INTERLOCK_SCREEN_SIGNALS_BELOW);
    mm.Add("EBForNonCabEnabled", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EBForNonCabEnabled);
    mm.Add("EBDueToATCZeroSpeed", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EBDueToATCZeroSpeed);
    mm.Add("EBByCC", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EBByCC);
    mm.Add("EBForNonDirectionSelected", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EBForNonDirectionSelected);
    mm.Add("EBDueToPushButton", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EBDueToPushButton);
    mm.Add("EBByMC", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EBByMC);
    mm.Add("EBByBrakeLoop", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EBByBrakeLoop);
    mm.Add("EBDueToDeadman", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EBDueToDeadman);
    mm.Add("DUMMY_PANTO_INTERLOCK_SCREEN_SIGNALS_BELOW", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.DUMMY_PANTO_INTERLOCK_SCREEN_SIGNALS_BELOW);
    mm.Add("EGSOperatedACPM", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EGSOperatedACPM);
    mm.Add("EGSOperatedOSPM", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EGSOperatedOSPM);
    mm.Add("DUMMY_VCB_INTERLOCK_SCREEN_SIGNALS_BELOW", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.DUMMY_VCB_INTERLOCK_SCREEN_SIGNALS_BELOW);
    mm.Add("TransformerOilTemperature", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TransformerOilTemperature);
    mm.Add("VCBOpenedByACOverCurrent", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.VCBOpenedByACOverCurrent);
    mm.Add("VCBOpenedByMTrProtection", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.VCBOpenedByMTrProtection);
    mm.Add("VCBOpenedByICM", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.VCBOpenedByICM);
    mm.Add("VCBOpenedByICDM", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.VCBOpenedByICDM);
    mm.Add("VCBOpenedByAPS", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.VCBOpenedByAPS);
    mm.Add("NoLineVoltage", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.NoLineVoltage);
    mm.Add("APSKAKContactor", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.APSKAKContactor);
    mm.Add("RCCBTripped", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.RCCBTripped);
    mm.Add("SupplyFanTripped", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.SupplyFanTripped);
    mm.Add("ExtSmokeDetectedinHVAC", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ExtSmokeDetectedinHVAC);
    mm.Add("EmergencyInverterTripped", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EmergencyInverterTripped);
    mm.Add("HVACFireMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVACFireMode);
    mm.Add("HVACReducedMode", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVACReducedMode);
    mm.Add("HVACGroupMCBTripped", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVACGroupMCBTripped);
    mm.Add("HVACMajorFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVACMajorFault);
    mm.Add("SmokeAlarmCABArea", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.SmokeAlarmCABArea);
    mm.Add("HeatAlarmEDB", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HeatAlarmEDB);
    mm.Add("FDUFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.FDUFault);
    mm.Add("SFARFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.SFARFault);
    mm.Add("BCG1Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BCG1Isolated);
    mm.Add("BCG2Isolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BCG2Isolated);
    mm.Add("BCG1IsolationFailed", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BCG1IsolationFailed);
    mm.Add("PowerOffPressed", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.PowerOffPressed);
    mm.Add("ObstructionDetectedLeft", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ObstructionDetectedLeft);
    mm.Add("ObstructionDetectedRight", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ObstructionDetectedRight);
    mm.Add("DerailmentDetectedLeft", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.DerailmentDetectedLeft);
    mm.Add("DerailmentDetectedRight", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.DerailmentDetectedRight);
    mm.Add("HighVoltageMissing", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HighVoltageMissing);
    mm.Add("CabNotEnabled", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.CabNotEnabled);
    mm.Add("DrivingModeNotOK", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.DrivingModeNotOK);
    mm.Add("TrainDirectionMissing", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TrainDirectionMissing);
    mm.Add("ATCStatusNotOK", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ATCStatusNotOK);
    mm.Add("TrainReadyNotOK", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TrainReadyNotOK);
    mm.Add("TooManyRPressureCutout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TooManyRPressureCutout);
    mm.Add("TooManyEPICCutout", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TooManyEPICCutout);
    mm.Add("TooManyBogieIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.TooManyBogieIsolated);
    mm.Add("ZVRDNotActive", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ZVRDNotActive);
    mm.Add("MotoringTLDeenergized", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.MotoringTLDeenergized);
    mm.Add("BrakeLoopOpenTL", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BrakeLoopOpenTL);
    mm.Add("ParkingBrakeActiveTL", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ParkingBrakeActiveTL);
    mm.Add("DoorLoopOpenTL", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.DoorLoopOpenTL);
    mm.Add("ADDIntervention", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.ADDIntervention);
    mm.Add("BrakeLoopCBTripped", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.BrakeLoopCBTripped);
    mm.Add("WFLIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.WFLIsolated);
    mm.Add("HVAC1FireSmokeActive", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.HVAC1FireSmokeActive);
    mm.Add("EDBHeatAlarmActive", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.EDBHeatAlarmActive);
    mm.Add("CABSmokeAlarmActive", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem.CABSmokeAlarmActive);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem);
    mm.Add("ConsistSwitchStatusA", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.ConsistSwitchStatusA);
    mm.Add("ConsistSwitchStatusB", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.ConsistSwitchStatusB);
    mm.Add("ConsistSwitchStatusC", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.ConsistSwitchStatusC);
    mm.Add("TrainEthernetRepeaterStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.TrainEthernetRepeaterStatus);
    mm.Add("TrainBackboneNodeStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.TrainBackboneNodeStatus);
    mm.Add("ECNALGStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.ECNALGStatus);
    mm.Add("RemoteHornIsolated", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.RemoteHornIsolated);
    mm.Add("CCUFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.CCUFault);
    mm.Add("RIO1Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.RIO1Fault);
    mm.Add("RIO1Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.RIO1Status);
    mm.Add("RIO2Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.RIO2Fault);
    mm.Add("RIO2Status", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.RIO2Status);
    mm.Add("RIO1RIO2Fault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.RIO1RIO2Fault);
    mm.Add("ERFault", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem.ERFault);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Display.MessageList.Message[0]);
    mm.Add("MessageID", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.MessageList.Message[0].MessageID);
    mm.Add("MessageStatus", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.MessageList.Message[0].MessageStatus);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Display.MessageList);
    mm.Add("Message", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.MessageList.Message);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0].Display);
    mm.Add("DoorSystem", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.DoorSystem);
    mm.Add("PantographSystem", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PantographSystem);
    mm.Add("PneumaticsSystem", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.PneumaticsSystem);
    mm.Add("TractionBraking", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TractionBraking);
    mm.Add("ElectricalSystem", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.ElectricalSystem);
    mm.Add("TCMSSystem", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.TCMSSystem);
    mm.Add("MessageList", model.Model().BEML_EMU_Y.TCMSOutput[0].Display.MessageList);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TCMSOutput[0]);
    mm.Add("Control", model.Model().BEML_EMU_Y.TCMSOutput[0].Control);
    mm.Add("Display", model.Model().BEML_EMU_Y.TCMSOutput[0].Display);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PantographVehicleOut[0].TCMS.Messages);
    mm.Add("PantoADDFaultMessage", model.Model().BEML_EMU_Y.PantographVehicleOut[0].TCMS.Messages.PantoADDFaultMessage);
    mm.Add("PantoORDFaultMessage", model.Model().BEML_EMU_Y.PantographVehicleOut[0].TCMS.Messages.PantoORDFaultMessage);
    mm.Add("PantoRaiseFailureMessage", model.Model().BEML_EMU_Y.PantographVehicleOut[0].TCMS.Messages.PantoRaiseFailureMessage);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PantographVehicleOut[0].TCMS);
    mm.Add("Messages", model.Model().BEML_EMU_Y.PantographVehicleOut[0].TCMS.Messages);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PantographVehicleOut[0]);
    mm.Add("PantographPosition", model.Model().BEML_EMU_Y.PantographVehicleOut[0].PantographPosition);
    mm.Add("PantoUpStatus", model.Model().BEML_EMU_Y.PantographVehicleOut[0].PantoUpStatus);
    mm.Add("PantoDownStatus", model.Model().BEML_EMU_Y.PantographVehicleOut[0].PantoDownStatus);
    mm.Add("PantoIsolatedStatus", model.Model().BEML_EMU_Y.PantographVehicleOut[0].PantoIsolatedStatus);
    mm.Add("PantoRising", model.Model().BEML_EMU_Y.PantographVehicleOut[0].PantoRising);
    mm.Add("PantoLowering", model.Model().BEML_EMU_Y.PantographVehicleOut[0].PantoLowering);
    mm.Add("DetectedLineVoltage", model.Model().BEML_EMU_Y.PantographVehicleOut[0].DetectedLineVoltage);
    mm.Add("NoOverheadLineDetected", model.Model().BEML_EMU_Y.PantographVehicleOut[0].NoOverheadLineDetected);
    mm.Add("PantographFault", model.Model().BEML_EMU_Y.PantographVehicleOut[0].PantographFault);
    mm.Add("TCMS", model.Model().BEML_EMU_Y.PantographVehicleOut[0].TCMS);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DoorsVehicleOut[0].VehicleElectrical);
    mm.Add("TrainDoorInterlockOk", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].VehicleElectrical.TrainDoorInterlockOk);
    mm.Add("VehicleDoorInterlockOk", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].VehicleElectrical.VehicleDoorInterlockOk);
    mm.Add("TrainLeftDoorInterlockOk", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].VehicleElectrical.TrainLeftDoorInterlockOk);
    mm.Add("TrainRightDoorInterlockOk", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].VehicleElectrical.TrainRightDoorInterlockOk);
    mm.Add("VehicleLeftDoorInterlockOk", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].VehicleElectrical.VehicleLeftDoorInterlockOk);
    mm.Add("VehicleRightDoorInterlockOk", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].VehicleElectrical.VehicleRightDoorInterlockOk);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].ElectricalSignals);
    mm.Add("DoorCloseInterlock", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].ElectricalSignals.DoorCloseInterlock);
    mm.Add("DoorClosed", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].ElectricalSignals.DoorClosed);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].OutputControlStates);
    mm.Add("DoorPosition", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].OutputControlStates.DoorPosition);
    mm.Add("DoorOutsideLamp", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].OutputControlStates.DoorOutsideLamp);
    mm.Add("DoorInsideLamp", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].OutputControlStates.DoorInsideLamp);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].Audio);
    mm.Add("DoorOpeningAuthorised", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].Audio.DoorOpeningAuthorised);
    mm.Add("DoorOpeningAlarm", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].Audio.DoorOpeningAlarm);
    mm.Add("DoorClosingAlarm", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].Audio.DoorClosingAlarm);
    mm.Add("DoorEmergencyReleased", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].Audio.DoorEmergencyReleased);
    mm.Add("DoorIsolated", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].Audio.DoorIsolated);
    mm.Add("DoorClosing", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].Audio.DoorClosing);
    mm.Add("DoorOpening", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].Audio.DoorOpening);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages);
    mm.Add("DoorOpenObstacleDetected", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DoorOpenObstacleDetected);
    mm.Add("DoorCloseObstacleDetected", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DoorCloseObstacleDetected);
    mm.Add("DoorFailedToLock", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DoorFailedToLock);
    mm.Add("DoorFailedToUnlock", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DoorFailedToUnlock);
    mm.Add("DoorMotorFailure", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DoorMotorFailure);
    mm.Add("DoorMajorFault", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DoorMajorFault);
    mm.Add("DCSRFailure", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DCSRFailure);
    mm.Add("DCSLFailure", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DCSLFailure);
    mm.Add("DLSRFailure", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DLSRFailure);
    mm.Add("DLSLFailure", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DLSLFailure);
    mm.Add("DCUFailure", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DCUFailure);
    mm.Add("DoorUnexpectedUnlocking", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DoorUnexpectedUnlocking);
    mm.Add("DoorIsolatedWire", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DoorIsolatedWire);
    mm.Add("DoorEmergencyHandleWire", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.DoorEmergencyHandleWire);
    mm.Add("UnexpectedDoorOpeningDetectedByCC", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages.UnexpectedDoorOpeningDetectedByCC);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS);
    mm.Add("DoorClosedStatus", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.DoorClosedStatus);
    mm.Add("DoorOpenStatus", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.DoorOpenStatus);
    mm.Add("DoorReleasedAuthorisedToOpenStatus", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.DoorReleasedAuthorisedToOpenStatus);
    mm.Add("DoorEmergencyReleasedStatus", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.DoorEmergencyReleasedStatus);
    mm.Add("DoorIsolatedStatus", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.DoorIsolatedStatus);
    mm.Add("DoorFaultStatus", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.DoorFaultStatus);
    mm.Add("DoorObstacleDetected", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.DoorObstacleDetected);
    mm.Add("DoorObstacleUnableToClose", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.DoorObstacleUnableToClose);
    mm.Add("DoorLockedStatus", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.DoorLockedStatus);
    mm.Add("DoorOpenPBLight", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.DoorOpenPBLight);
    mm.Add("DoorClosedPBLight", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.DoorClosedPBLight);
    mm.Add("Messages", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS.Messages);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0]);
    mm.Add("ElectricalSignals", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].ElectricalSignals);
    mm.Add("OutputControlStates", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].OutputControlStates);
    mm.Add("Audio", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].Audio);
    mm.Add("TCMS", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors[0].TCMS);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DoorsVehicleOut[0].EmergencyDoor);
    mm.Add("Ramp", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].EmergencyDoor.Ramp);
    mm.Add("EmergencyDoorOpen", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].EmergencyDoor.EmergencyDoorOpen);
    mm.Add("EmergencyDoorLocked", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].EmergencyDoor.EmergencyDoorLocked);
    mm.Add("GasSpringLocked", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].EmergencyDoor.GasSpringLocked);
    mm.Add("RampSupportDown", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].EmergencyDoor.RampSupportDown);
    mm.Add("LockingLeverUnlockAuth", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].EmergencyDoor.LockingLeverUnlockAuth);
    mm.Add("EmerDoorOpenFaultMessage", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].EmergencyDoor.EmerDoorOpenFaultMessage);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DoorsVehicleOut[0]);
    mm.Add("VehicleElectrical", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].VehicleElectrical);
    mm.Add("Doors", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].Doors);
    mm.Add("EmergencyDoor", model.Model().BEML_EMU_Y.DoorsVehicleOut[0].EmergencyDoor);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].AxleBrakes);
    mm.Add("BrakeCylinderPressures", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].AxleBrakes.BrakeCylinderPressures);
    mm.Add("ParkBrakePressures", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].AxleBrakes.ParkBrakePressures);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Audio);
    mm.Add("HornLow", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Audio.HornLow);
    mm.Add("HornHigh", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Audio.HornHigh);
    mm.Add("PneumaticPressureRelease", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Audio.PneumaticPressureRelease);
    mm.Add("EmergencyBrakeActive", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Audio.EmergencyBrakeActive);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.Bogie[0]);
    mm.Add("BrakeCylinderControlPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.Bogie[0].BrakeCylinderControlPressure);
    mm.Add("BrakeCylinderPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.Bogie[0].BrakeCylinderPressure);
    mm.Add("ParkBrakePressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.Bogie[0].ParkBrakePressure);
    mm.Add("SandingSystemPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.Bogie[0].SandingSystemPressure);
    mm.Add("AirSuspensionPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.Bogie[0].AirSuspensionPressure);
    mm.Add("AirSuspPressureDiff", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.Bogie[0].AirSuspPressureDiff);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug);
    mm.Add("BrakeReservoirPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.BrakeReservoirPressure);
    mm.Add("MainReservoirPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.MainReservoirPressure);
    mm.Add("MainReservoirPipePressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.MainReservoirPipePressure);
    mm.Add("AuxiliaryReservoirPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.AuxiliaryReservoirPressure);
    mm.Add("PantographCylinderPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.PantographCylinderPressure);
    mm.Add("VCBCylinderPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.VCBCylinderPressure);
    mm.Add("Bogie", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug.Bogie);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureGauges.Bogie[0]);
    mm.Add("BrakeCylinderPressureGauge", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureGauges.Bogie[0].BrakeCylinderPressureGauge);
    mm.Add("ParkBrakePressureGauge", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureGauges.Bogie[0].ParkBrakePressureGauge);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureGauges);
    mm.Add("MainReservoirPressureGauge", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureGauges.MainReservoirPressureGauge);
    mm.Add("SRPressureGauge", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureGauges.SRPressureGauge);
    mm.Add("Bogie", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureGauges.Bogie);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.Bogie[0]);
    mm.Add("BrakeCylinderPressureSwitch", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.Bogie[0].BrakeCylinderPressureSwitch);
    mm.Add("ParkBrakePressureSwitch", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.Bogie[0].ParkBrakePressureSwitch);
    mm.Add("AirSuspensionPressureSwitch", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.Bogie[0].AirSuspensionPressureSwitch);
    mm.Add("SandingSystemPressureSwitch", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.Bogie[0].SandingSystemPressureSwitch);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches);
    mm.Add("BrakeReservoirPressureSwitch", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.BrakeReservoirPressureSwitch);
    mm.Add("HornHighPressureSwitch", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.HornHighPressureSwitch);
    mm.Add("HornLowPressureSwitch", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.HornLowPressureSwitch);
    mm.Add("MainReservoirPressureSwitch", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.MainReservoirPressureSwitch);
    mm.Add("AuxiliaryReservoirPressureSwitch", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.AuxiliaryReservoirPressureSwitch);
    mm.Add("MainReservoirPipePressureSwitch", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.MainReservoirPipePressureSwitch);
    mm.Add("MRPS_TractionCutout", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.MRPS_TractionCutout);
    mm.Add("PS3", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.PS3);
    mm.Add("PS2", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.PS2);
    mm.Add("VCBPressureSwitch", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.VCBPressureSwitch);
    mm.Add("Bogie", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches.Bogie);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureTransducers.Bogie[0]);
    mm.Add("BrakeCylinderControlPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureTransducers.Bogie[0].BrakeCylinderControlPressure);
    mm.Add("BrakeCylinderControlVolumePressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureTransducers.Bogie[0].BrakeCylinderControlVolumePressure);
    mm.Add("BrakeReservoirPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureTransducers.Bogie[0].BrakeReservoirPressure);
    mm.Add("AirSuspensionLoadPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureTransducers.Bogie[0].AirSuspensionLoadPressure);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureTransducers);
    mm.Add("Bogie", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureTransducers.Bogie);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie[0]);
    mm.Add("BECU1EmergencyBrakeFailure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie[0].BECU1EmergencyBrakeFailure);
    mm.Add("BECU2EmergencyBrakeFailure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie[0].BECU2EmergencyBrakeFailure);
    mm.Add("BECU1ServiceBrakeFailure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie[0].BECU1ServiceBrakeFailure);
    mm.Add("BECU1BrakeNotApplied", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie[0].BECU1BrakeNotApplied);
    mm.Add("BECU1BrakeNotReleased", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie[0].BECU1BrakeNotReleased);
    mm.Add("BECU1CarLoadPressureLow", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie[0].BECU1CarLoadPressureLow);
    mm.Add("BECU2CarLoadPressureLow", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie[0].BECU2CarLoadPressureLow);
    mm.Add("BECULowRPressure", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie[0].BECULowRPressure);
    mm.Add("AirSuspensionBogie1Deflated", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie[0].AirSuspensionBogie1Deflated);
    mm.Add("BECU1LoadPressureLow", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie[0].BECU1LoadPressureLow);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS);
    mm.Add("Bogie", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS.Bogie);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0]);
    mm.Add("AxleBrakes", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].AxleBrakes);
    mm.Add("Audio", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Audio);
    mm.Add("Debug", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].Debug);
    mm.Add("PressureGauges", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureGauges);
    mm.Add("PressureSwitches", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureSwitches);
    mm.Add("PressureTransducers", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].PressureTransducers);
    mm.Add("TCMS", model.Model().BEML_EMU_Y.PneumaticsVehicleOut[0].TCMS);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.BrakesVehicleOut[0].Axle[0]);
    mm.Add("BrakingPower", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].Axle[0].BrakingPower);
    mm.Add("BrakingForce", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].Axle[0].BrakingForce);
    mm.Add("BrakeShoeForce", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].Axle[0].BrakeShoeForce);
    mm.Add("BrakeShoeTemperature", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].Axle[0].BrakeShoeTemperature);
    mm.Add("BrakeShoeEfficiency", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].Axle[0].BrakeShoeEfficiency);
    mm.Add("BrakeDiscForce", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].Axle[0].BrakeDiscForce);
    mm.Add("NormalBrakePistonForce", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].Axle[0].NormalBrakePistonForce);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.BrakesVehicleOut[0].States);
    mm.Add("BCPEngaged", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].States.BCPEngaged);
    mm.Add("BCPEngagedBogie1", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].States.BCPEngagedBogie1);
    mm.Add("BCPEngagedBogie2", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].States.BCPEngagedBogie2);
    mm.Add("WheelBrakeBlocks", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].States.WheelBrakeBlocks);
    mm.Add("WheelBrakeBlocksBogie1", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].States.WheelBrakeBlocksBogie1);
    mm.Add("WheelBrakeBlocksBogie2", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].States.WheelBrakeBlocksBogie2);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.BrakesVehicleOut[0]);
    mm.Add("Axle", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].Axle);
    mm.Add("States", model.Model().BEML_EMU_Y.BrakesVehicleOut[0].States);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.ElectricalSystem.Bogie[0]);
    mm.Add("Forward", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.ElectricalSystem.Bogie[0].Forward);
    mm.Add("Reverse", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.ElectricalSystem.Bogie[0].Reverse);
    mm.Add("BogieNotIsolated", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.ElectricalSystem.Bogie[0].BogieNotIsolated);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.ElectricalSystem);
    mm.Add("TractionContactorStatus", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.ElectricalSystem.TractionContactorStatus);
    mm.Add("Bogie", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.ElectricalSystem.Bogie);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0]);
    mm.Add("TCUStatus", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].TCUStatus);
    mm.Add("BogieFaulty", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].BogieFaulty);
    mm.Add("TractionNotIsolated", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].TractionNotIsolated);
    mm.Add("EDBrakeNotIsolated", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].EDBrakeNotIsolated);
    mm.Add("TCUSlideDetected", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].TCUSlideDetected);
    mm.Add("TCUSlipDetected", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].TCUSlipDetected);
    mm.Add("TractiveEffortAchieved", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].TractiveEffortAchieved);
    mm.Add("EDBrakingEffortAchieved", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].EDBrakingEffortAchieved);
    mm.Add("TractiveEffortPossible", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].TractiveEffortPossible);
    mm.Add("EDBrakingEffortPossible", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].EDBrakingEffortPossible);
    mm.Add("TractionPower", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].TractionPower);
    mm.Add("EDBrakingPower", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].EDBrakingPower);
    mm.Add("TractivePowerPossible", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].TractivePowerPossible);
    mm.Add("EDBrakingPowerPossible", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].EDBrakingPowerPossible);
    mm.Add("MotorSpeeds", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].MotorSpeeds);
    mm.Add("WSPTractionCutout", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].WSPTractionCutout);
    mm.Add("SpeedSensorFault", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie[0].SpeedSensorFault);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Trafo_TCU);
    mm.Add("TCU_KStatus", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Trafo_TCU.TCU_KStatus);
    mm.Add("TCU_AKStatus", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Trafo_TCU.TCU_AKStatus);
    mm.Add("FilterVoltage", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Trafo_TCU.FilterVoltage);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS);
    mm.Add("Bogie", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Bogie);
    mm.Add("Trafo_TCU", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.Trafo_TCU);
    mm.Add("VehicleDerailed", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.VehicleDerailed);
    mm.Add("VehicleBogieDerailed", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS.VehicleBogieDerailed);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.BCU.Bogie[0]);
    mm.Add("TCUWheelSlideControlActive", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.BCU.Bogie[0].TCUWheelSlideControlActive);
    mm.Add("EDBrakeStatus", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.BCU.Bogie[0].EDBrakeStatus);
    mm.Add("EDBrakingEffortAchieved", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.BCU.Bogie[0].EDBrakingEffortAchieved);
    mm.Add("EDBrakingEffortPossible", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.BCU.Bogie[0].EDBrakingEffortPossible);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.BCU);
    mm.Add("Bogie", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.BCU.Bogie);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl);
    mm.Add("ElectricalSystem", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.ElectricalSystem);
    mm.Add("TCMS", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.TCMS);
    mm.Add("BCU", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl.BCU);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TractionVehicleOut[0].Dynamics);
    mm.Add("TractionBrakingForce", model.Model().BEML_EMU_Y.TractionVehicleOut[0].Dynamics.TractionBrakingForce);
    mm.Add("TractionForce", model.Model().BEML_EMU_Y.TractionVehicleOut[0].Dynamics.TractionForce);
    mm.Add("BrakingForce", model.Model().BEML_EMU_Y.TractionVehicleOut[0].Dynamics.BrakingForce);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TractionVehicleOut[0].Audio);
    mm.Add("TractionEDPower", model.Model().BEML_EMU_Y.TractionVehicleOut[0].Audio.TractionEDPower);
    mm.Add("WheelAngularVelocity", model.Model().BEML_EMU_Y.TractionVehicleOut[0].Audio.WheelAngularVelocity);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.TractionVehicleOut[0]);
    mm.Add("TractionControl", model.Model().BEML_EMU_Y.TractionVehicleOut[0].TractionControl);
    mm.Add("Dynamics", model.Model().BEML_EMU_Y.TractionVehicleOut[0].Dynamics);
    mm.Add("Audio", model.Model().BEML_EMU_Y.TractionVehicleOut[0].Audio);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DynamicsOutput[0].Drag);
    mm.Add("AerodynamicDragForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Drag.AerodynamicDragForce);
    mm.Add("BearingDragForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Drag.BearingDragForce);
    mm.Add("LateralDragForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Drag.LateralDragForce);
    mm.Add("AdditionalNonWheelDragForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Drag.AdditionalNonWheelDragForce);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0]);
    mm.Add("Force", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0].Force);
    mm.Add("SpringForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0].SpringForce);
    mm.Add("DampingForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0].DampingForce);
    mm.Add("BuffForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0].BuffForce);
    mm.Add("DraftForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0].DraftForce);
    mm.Add("ImpactForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0].ImpactForce);
    mm.Add("Breakage", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0].Breakage);
    mm.Add("Extension", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0].Extension);
    mm.Add("ExtensionRate", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0].ExtensionRate);
    mm.Add("ExternalCoupling", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0].ExternalCoupling);
    mm.Add("Mimic", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers[0].Mimic);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DynamicsOutput[0].Inertia);
    mm.Add("Position", model.Model().BEML_EMU_Y.DynamicsOutput[0].Inertia.Position);
    mm.Add("Velocity", model.Model().BEML_EMU_Y.DynamicsOutput[0].Inertia.Velocity);
    mm.Add("Acceleration", model.Model().BEML_EMU_Y.DynamicsOutput[0].Inertia.Acceleration);
    mm.Add("Jerk", model.Model().BEML_EMU_Y.DynamicsOutput[0].Inertia.Jerk);
    mm.Add("PositionRear", model.Model().BEML_EMU_Y.DynamicsOutput[0].Inertia.PositionRear);
    mm.Add("MovingForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Inertia.MovingForce);
    mm.Add("Mass", model.Model().BEML_EMU_Y.DynamicsOutput[0].Inertia.Mass);
    mm.Add("LoadingMass", model.Model().BEML_EMU_Y.DynamicsOutput[0].Inertia.LoadingMass);
    mm.Add("BogieSupportedMass", model.Model().BEML_EMU_Y.DynamicsOutput[0].Inertia.BogieSupportedMass);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DynamicsOutput[0].TrackGeometry);
    mm.Add("GravitationalForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].TrackGeometry.GravitationalForce);
    mm.Add("LateralForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].TrackGeometry.LateralForce);
    mm.Add("LateralAcceleration", model.Model().BEML_EMU_Y.DynamicsOutput[0].TrackGeometry.LateralAcceleration);
    mm.Add("LateralAccelerationRate", model.Model().BEML_EMU_Y.DynamicsOutput[0].TrackGeometry.LateralAccelerationRate);
    mm.Add("RailReactionForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].TrackGeometry.RailReactionForce);
    mm.Add("DerailmentCoefficient", model.Model().BEML_EMU_Y.DynamicsOutput[0].TrackGeometry.DerailmentCoefficient);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DynamicsOutput[0].Wheel[0]);
    mm.Add("ForceTransmitted", model.Model().BEML_EMU_Y.DynamicsOutput[0].Wheel[0].ForceTransmitted);
    mm.Add("Speed", model.Model().BEML_EMU_Y.DynamicsOutput[0].Wheel[0].Speed);
    mm.Add("SpeedDelta", model.Model().BEML_EMU_Y.DynamicsOutput[0].Wheel[0].SpeedDelta);
    mm.Add("Spin", model.Model().BEML_EMU_Y.DynamicsOutput[0].Wheel[0].Spin);
    mm.Add("Skid", model.Model().BEML_EMU_Y.DynamicsOutput[0].Wheel[0].Skid);
    mm.Add("DrivingForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Wheel[0].DrivingForce);
    mm.Add("LateralFrictionForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Wheel[0].LateralFrictionForce);
    mm.Add("BrakingForce", model.Model().BEML_EMU_Y.DynamicsOutput[0].Wheel[0].BrakingForce);
    mm.Add("BrakePower", model.Model().BEML_EMU_Y.DynamicsOutput[0].Wheel[0].BrakePower);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.DynamicsOutput[0]);
    mm.Add("Drag", model.Model().BEML_EMU_Y.DynamicsOutput[0].Drag);
    mm.Add("Couplers", model.Model().BEML_EMU_Y.DynamicsOutput[0].Couplers);
    mm.Add("Inertia", model.Model().BEML_EMU_Y.DynamicsOutput[0].Inertia);
    mm.Add("TrackGeometry", model.Model().BEML_EMU_Y.DynamicsOutput[0].TrackGeometry);
    mm.Add("Wheel", model.Model().BEML_EMU_Y.DynamicsOutput[0].Wheel);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard);
    mm.Add("PowerSupply", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.PowerSupply);
    mm.Add("CabinActivation", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.CabinActivation);
    mm.Add("DriverModeSelection", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.DriverModeSelection);
    mm.Add("ModeSelectorPosition", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.ModeSelectorPosition);
    mm.Add("ATCBypassState", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.ATCBypassState);
    mm.Add("TBCPosition", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.TBCPosition);
    mm.Add("ATOStartButton", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.ATOStartButton);
    mm.Add("UTOStartButton", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.UTOStartButton);
    mm.Add("ATCSBResetButton", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.ATCSBResetButton);
    mm.Add("NoEmergencyBrake", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.NoEmergencyBrake);
    mm.Add("NoDoorEnableBypass", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.NoDoorEnableBypass);
    mm.Add("TrainDoorClosedAndLocked", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.TrainDoorClosedAndLocked);
    mm.Add("EmergencyDoorNotOpen", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.EmergencyDoorNotOpen);
    mm.Add("WakeUpStatus", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.WakeUpStatus);
    mm.Add("PassengerEmergencyAlarm", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.PassengerEmergencyAlarm);
    mm.Add("FireSmokeInd", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.FireSmokeInd);
    mm.Add("MechanicalCoupling", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.MechanicalCoupling);
    mm.Add("ROSPB", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.ROSPB);
    mm.Add("UTBPB", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.UTBPB);
    mm.Add("TrainIntegrity", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.TrainIntegrity);
    mm.Add("TCMSSpeedLimit", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.TCMSSpeedLimit);
    mm.Add("TCMSSpeedLimitCause", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard.TCMSSpeedLimitCause);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform);
    mm.Add("LeftSideDoorOpenRequest", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform.LeftSideDoorOpenRequest);
    mm.Add("RightSideDoorOpenRequest", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform.RightSideDoorOpenRequest);
    mm.Add("LeftSideDoorCloseRequest", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform.LeftSideDoorCloseRequest);
    mm.Add("RightSideDoorCloseRequest", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform.RightSideDoorCloseRequest);
    mm.Add("Door1Inhibited", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform.Door1Inhibited);
    mm.Add("Door2Inhibited", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform.Door2Inhibited);
    mm.Add("Door3Inhibited", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform.Door3Inhibited);
    mm.Add("Door4Inhibited", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform.Door4Inhibited);
    mm.Add("LeftSideDoorEnable", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform.LeftSideDoorEnable);
    mm.Add("RightSideDoorEnable", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform.RightSideDoorEnable);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical);
    mm.Add("ATOTraction", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.ATOTraction);
    mm.Add("ATONotBrake", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.ATONotBrake);
    mm.Add("ATOTBDemand", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.ATOTBDemand);
    mm.Add("NoEmergencyBrakeOrder", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.NoEmergencyBrakeOrder);
    mm.Add("ROSIndication", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.ROSIndication);
    mm.Add("ATOStartIndication", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.ATOStartIndication);
    mm.Add("ATCSBResetIndication", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.ATCSBResetIndication);
    mm.Add("LeftHoldDoorClose", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.LeftHoldDoorClose);
    mm.Add("RightHoldDoorClose", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.RightHoldDoorClose);
    mm.Add("ATCZeroSpeed", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.ATCZeroSpeed);
    mm.Add("WakeUpCommand", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.WakeUpCommand);
    mm.Add("UTOPBIndicator", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.UTOPBIndicator);
    mm.Add("UTOModeActive", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.UTOModeActive);
    mm.Add("ATCCabActivation", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.ATCCabActivation);
    mm.Add("NotImmobilise", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.NotImmobilise);
    mm.Add("TractionForward", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.TractionForward);
    mm.Add("EmergencyDetrainmentDoorLocked", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical.EmergencyDetrainmentDoorLocked);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS);
    mm.Add("ATOTraction", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.ATOTraction);
    mm.Add("ATOBrake", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.ATOBrake);
    mm.Add("ATOTBDemand", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.ATOTBDemand);
    mm.Add("NoServiceBrake", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.NoServiceBrake);
    mm.Add("NotImmobilise", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.NotImmobilise);
    mm.Add("ATOState", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.ATOState);
    mm.Add("RollbackDetected", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.RollbackDetected);
    mm.Add("LeftDoorCloseIndicator", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.LeftDoorCloseIndicator);
    mm.Add("RightDoorCloseIndicator", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.RightDoorCloseIndicator);
    mm.Add("LeftDoorOpenATCReq", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.LeftDoorOpenATCReq);
    mm.Add("RightDoorOpenATCReq", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.RightDoorOpenATCReq);
    mm.Add("LeftDoorCloseATCReq", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.LeftDoorCloseATCReq);
    mm.Add("RightDoorCloseATCReq", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS.RightDoorCloseATCReq);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CBTCVehicleOut[0].DMI);
    mm.Add("PowerOn", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].DMI.PowerOn);
    mm.Add("CabActive", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].DMI.CabActive);
    mm.Add("NeutralSection", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].DMI.NeutralSection);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CBTCVehicleOut[0]);
    mm.Add("OnBoard", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].OnBoard);
    mm.Add("Platform", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Platform);
    mm.Add("Electrical", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].Electrical);
    mm.Add("TCMS", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].TCMS);
    mm.Add("DMI", model.Model().BEML_EMU_Y.CBTCVehicleOut[0].DMI);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.AudioOutput[0]);
    mm.Add("VigilanceAlarm", model.Model().BEML_EMU_Y.AudioOutput[0].VigilanceAlarm);
    mm.Add("HornHigh", model.Model().BEML_EMU_Y.AudioOutput[0].HornHigh);
    mm.Add("HornLow", model.Model().BEML_EMU_Y.AudioOutput[0].HornLow);
    mm.Add("Bell", model.Model().BEML_EMU_Y.AudioOutput[0].Bell);
    mm.Add("SaloonDoorOpeningBuzzer", model.Model().BEML_EMU_Y.AudioOutput[0].SaloonDoorOpeningBuzzer);
    mm.Add("SaloonDoorClosingBuzzer", model.Model().BEML_EMU_Y.AudioOutput[0].SaloonDoorClosingBuzzer);
    mm.Add("DoorWarningBuzzer", model.Model().BEML_EMU_Y.AudioOutput[0].DoorWarningBuzzer);
    mm.Add("EEDEADOperated", model.Model().BEML_EMU_Y.AudioOutput[0].EEDEADOperated);
    mm.Add("VCBOpenSound", model.Model().BEML_EMU_Y.AudioOutput[0].VCBOpenSound);
    mm.Add("VCBCloseSound", model.Model().BEML_EMU_Y.AudioOutput[0].VCBCloseSound);
    mm.Add("CompressorStartAndRunSound", model.Model().BEML_EMU_Y.AudioOutput[0].CompressorStartAndRunSound);
    mm.Add("FlasherLightOperationSound", model.Model().BEML_EMU_Y.AudioOutput[0].FlasherLightOperationSound);
    mm.Add("DeadmanAlarm", model.Model().BEML_EMU_Y.AudioOutput[0].DeadmanAlarm);
    mm.Add("PantographLowering", model.Model().BEML_EMU_Y.AudioOutput[0].PantographLowering);
    mm.Add("WheelSlip", model.Model().BEML_EMU_Y.AudioOutput[0].WheelSlip);
    mm.Add("WheelSlide", model.Model().BEML_EMU_Y.AudioOutput[0].WheelSlide);
    mm.Add("AirBrakeRelease", model.Model().BEML_EMU_Y.AudioOutput[0].AirBrakeRelease);
    mm.Add("PantographRaising", model.Model().BEML_EMU_Y.AudioOutput[0].PantographRaising);
    mm.Add("WiperSound", model.Model().BEML_EMU_Y.AudioOutput[0].WiperSound);
    mm.Add("EmergencyBrakeApplicationSound", model.Model().BEML_EMU_Y.AudioOutput[0].EmergencyBrakeApplicationSound);
    mm.Add("BPVentAudio", model.Model().BEML_EMU_Y.AudioOutput[0].BPVentAudio);
    mm.Add("CollisionDetectionCoupling", model.Model().BEML_EMU_Y.AudioOutput[0].CollisionDetectionCoupling);
    mm.Add("Derailment", model.Model().BEML_EMU_Y.AudioOutput[0].Derailment);
    mm.Add("MechanicalUncouple", model.Model().BEML_EMU_Y.AudioOutput[0].MechanicalUncouple);
    mm.Add("PneumaticPressureRelease", model.Model().BEML_EMU_Y.AudioOutput[0].PneumaticPressureRelease);
    mm.Add("ObstacleSoftCollision", model.Model().BEML_EMU_Y.AudioOutput[0].ObstacleSoftCollision);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ScoringTrainOutput);
    mm.Add("TotalEnergyConsumption", model.Model().BEML_EMU_Y.ScoringTrainOutput.TotalEnergyConsumption);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.ScoringVehicleOutput[0]);
    mm.Add("VigilanceIntervention", model.Model().BEML_EMU_Y.ScoringVehicleOutput[0].VigilanceIntervention);
    mm.Add("HornActivation", model.Model().BEML_EMU_Y.ScoringVehicleOutput[0].HornActivation);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates);
    mm.Add("EmergencyBrakePB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.EmergencyBrakePB);
    mm.Add("HornPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.HornPB);
    mm.Add("CabConsoleLightPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CabConsoleLightPB);
    mm.Add("DoorProvenLoopCutoutPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DoorProvenLoopCutoutPB);
    mm.Add("LeftDoorClosePBOperatingPanel1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoorClosePBOperatingPanel1);
    mm.Add("RightDoorClosePBOperatingPanel1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoorClosePBOperatingPanel1);
    mm.Add("LeftDoorOpenPBOperatingPanel1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoorOpenPBOperatingPanel1);
    mm.Add("RightDoorOpenPBOperatingPanel1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoorOpenPBOperatingPanel1);
    mm.Add("CabMainLightPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CabMainLightPB);
    mm.Add("ParkingBrakeOnSwitch", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ParkingBrakeOnSwitch);
    mm.Add("ParkingBrakeOffSwitch", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ParkingBrakeOffSwitch);
    mm.Add("DoorCloseAnnouncementPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DoorCloseAnnouncementPB);
    mm.Add("ROSPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ROSPB);
    mm.Add("UTOPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.UTOPB);
    mm.Add("ATOStartPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ATOStartPB);
    mm.Add("EmergencyBrakeResetPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.EmergencyBrakeResetPB);
    mm.Add("ControlKey", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ControlKey);
    mm.Add("ModeSelector", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ModeSelector);
    mm.Add("MasterControllerHandle", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MasterControllerHandle);
    mm.Add("DeadmanSafetyDevice", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DeadmanSafetyDevice);
    mm.Add("CallOnLightPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CallOnLightPB);
    mm.Add("VCBOpenPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.VCBOpenPB);
    mm.Add("WiperSelectionSwitch", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.WiperSelectionSwitch);
    mm.Add("WiperPump", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.WiperPump);
    mm.Add("LIMPHomePB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LIMPHomePB);
    mm.Add("PowerOffPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PowerOffPB);
    mm.Add("PantoDownPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PantoDownPB);
    mm.Add("VCBClosePB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.VCBClosePB);
    mm.Add("LeftDoorOpenPBOperatingPanel2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoorOpenPBOperatingPanel2);
    mm.Add("LeftDoorOpenPB1OperatingPanel2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoorOpenPB1OperatingPanel2);
    mm.Add("LeftDoorClosePBOperatingPanel2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoorClosePBOperatingPanel2);
    mm.Add("PantoUpPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PantoUpPB);
    mm.Add("SafetyCutoutSS", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SafetyCutoutSS);
    mm.Add("BrakeLoopCutoutSS", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BrakeLoopCutoutSS);
    mm.Add("PantoSelector", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PantoSelector);
    mm.Add("DeadmanBypassSwitch", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DeadmanBypassSwitch);
    mm.Add("HeadLightSwitch", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.HeadLightSwitch);
    mm.Add("UncouplePB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.UncouplePB);
    mm.Add("FlasherLightPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.FlasherLightPB);
    mm.Add("FloodLightPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.FloodLightPB);
    mm.Add("BatteryResetPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BatteryResetPB);
    mm.Add("RightDoorOpenPBOperatingPanel5", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoorOpenPBOperatingPanel5);
    mm.Add("RightDoorOpenPB1OperatingPanel5", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoorOpenPB1OperatingPanel5);
    mm.Add("RightDoorClosePBOperatingPanel5", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoorClosePBOperatingPanel5);
    mm.Add("DoorProvenLoopOutputSwitch", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DoorProvenLoopOutputSwitch);
    mm.Add("LampTestPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LampTestPB);
    mm.Add("WFLTestPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.WFLTestPB);
    mm.Add("WiperControlSwitch", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.WiperControlSwitch);
    mm.Add("EmergencyStopPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.EmergencyStopPB);
    mm.Add("HoldDoorCloseBypassSS", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.HoldDoorCloseBypassSS);
    mm.Add("CabBoosterFanSS", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CabBoosterFanSS);
    mm.Add("EmergencyBrakePBBypassSS", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.EmergencyBrakePBBypassSS);
    mm.Add("CabEEDLeft", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CabEEDLeft);
    mm.Add("CabEEDRight", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CabEEDRight);
    mm.Add("SafetyCover", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SafetyCover);
    mm.Add("DummyCover", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DummyCover);
    mm.Add("RampCoverLockingLever", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RampCoverLockingLever);
    mm.Add("RampCover", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RampCover);
    mm.Add("RampHandle", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RampHandle);
    mm.Add("RampEndSupport", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RampEndSupport);
    mm.Add("RampMiddleSupport", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RampMiddleSupport);
    mm.Add("WinderHandlesAccessCover", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.WinderHandlesAccessCover);
    mm.Add("LargeHandle", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LargeHandle);
    mm.Add("RampWinder", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RampWinder);
    mm.Add("SmallHandle", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SmallHandle);
    mm.Add("EmergencyDoorGasSpring", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.EmergencyDoorGasSpring);
    mm.Add("DoorWinder", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DoorWinder);
    mm.Add("EBLR2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.EBLR2CB);
    mm.Add("EBMVCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.EBMVCB);
    mm.Add("EDCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.EDCB);
    mm.Add("ELCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ELCB1);
    mm.Add("ELCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ELCB2);
    mm.Add("ERCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ERCB);
    mm.Add("HCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.HCB);
    mm.Add("HLLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.HLLCB);
    mm.Add("HLRCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.HLRCB);
    mm.Add("ILCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ILCB1);
    mm.Add("ILCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ILCB2);
    mm.Add("LDICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LDICB);
    mm.Add("LDLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LDLCB);
    mm.Add("LDRCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LDRCB);
    mm.Add("MLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MLCB);
    mm.Add("MMCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MMCB);
    mm.Add("NBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.NBCB);
    mm.Add("NVICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.NVICB);
    mm.Add("OCCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.OCCB1);
    mm.Add("OCCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.OCCB2);
    mm.Add("ODDCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ODDCB);
    mm.Add("PBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PBCB);
    mm.Add("PISCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PISCB1);
    mm.Add("PISCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PISCB2);
    mm.Add("POCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.POCB);
    mm.Add("PPU1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PPU1CB);
    mm.Add("PPU2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PPU2CB);
    mm.Add("PPU3CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PPU3CB);
    mm.Add("RIO1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RIO1CB);
    mm.Add("RIO2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RIO2CB);
    mm.Add("SIOCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SIOCB1);
    mm.Add("SIOCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SIOCB2);
    mm.Add("SSICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SSICB);
    mm.Add("TBCCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.TBCCB1);
    mm.Add("TBCCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.TBCCB2);
    mm.Add("TBNCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.TBNCB);
    mm.Add("TDICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.TDICB);
    mm.Add("TLLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.TLLCB);
    mm.Add("TLRCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.TLRCB);
    mm.Add("TRIVCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.TRIVCB);
    mm.Add("TVDUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.TVDUCB);
    mm.Add("TWVCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.TWVCB);
    mm.Add("VCCBOrUCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.VCCBOrUCCB);
    mm.Add("VCBCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.VCBCCB);
    mm.Add("VIO1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.VIO1CB);
    mm.Add("VIO2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.VIO2CB);
    mm.Add("WFLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.WFLCB);
    mm.Add("WIFICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.WIFICB);
    mm.Add("WWCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.WWCB);
    mm.Add("BECUCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BECUCB1);
    mm.Add("BECUCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BECUCB2);
    mm.Add("BECUCB3", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BECUCB3);
    mm.Add("RSACB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RSACB);
    mm.Add("CMCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CMCCB);
    mm.Add("CILCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CILCB);
    mm.Add("CICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CICB);
    mm.Add("CELCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CELCB);
    mm.Add("CECB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CECB);
    mm.Add("CDUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CDUCB);
    mm.Add("CCNVIO1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CCNVIO1CB);
    mm.Add("CBTCCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CBTCCB1);
    mm.Add("CBFCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CBFCCB);
    mm.Add("CBFCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CBFCB);
    mm.Add("C1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.C1CB);
    mm.Add("BLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BLCB);
    mm.Add("ZVBACB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ZVBACB);
    mm.Add("EBLR1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.EBLR1CB);
    mm.Add("DRCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DRCB);
    mm.Add("DPLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DPLCB);
    mm.Add("DMICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DMICB);
    mm.Add("DLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DLCB);
    mm.Add("DIOCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DIOCB2);
    mm.Add("DIOCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DIOCB1);
    mm.Add("CSCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CSCCB);
    mm.Add("CSBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CSBCB);
    mm.Add("CSACB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CSACB);
    mm.Add("CRSBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CRSBCB);
    mm.Add("SOCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SOCB2);
    mm.Add("SOCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SOCB1);
    mm.Add("MSOCB5", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MSOCB5);
    mm.Add("MSOCB4", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MSOCB4);
    mm.Add("MSOCB3", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MSOCB3);
    mm.Add("MSOCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MSOCB2);
    mm.Add("MSOCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MSOCB1);
    mm.Add("HVAC1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.HVAC1);
    mm.Add("SAC2CCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SAC2CCB);
    mm.Add("HVAC2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.HVAC2);
    mm.Add("SAC1CCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SAC1CCB);
    mm.Add("CMCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.CMCB);
    mm.Add("AC2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.AC2CB);
    mm.Add("AC1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.AC1CB);
    mm.Add("FDSCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.FDSCB);
    mm.Add("BCBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BCBCB);
    mm.Add("ERVRCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ERVRCB1);
    mm.Add("ERVRCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ERVRCB2);
    mm.Add("ESKCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ESKCB);
    mm.Add("HMCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.HMCB);
    mm.Add("SP1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SP1CB);
    mm.Add("SP2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SP2CB);
    mm.Add("SP3CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SP3CB);
    mm.Add("SP4CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SP4CB);
    mm.Add("SP5CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SP5CB);
    mm.Add("SPCB6", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SPCB6);
    mm.Add("SPCB7", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SPCB7);
    mm.Add("SPCB8", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SPCB8);
    mm.Add("RPTCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RPTCB);
    mm.Add("TERCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.TERCB1);
    mm.Add("TERCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.TERCB2);
    mm.Add("SPSW", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SPSW);
    mm.Add("SPPB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SPPB);
    mm.Add("APSCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.APSCB);
    mm.Add("APSICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.APSICB);
    mm.Add("BCGCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BCGCB);
    mm.Add("DSCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DSCB);
    mm.Add("MTBMCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MTBMCCB);
    mm.Add("PADCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PADCB);
    mm.Add("PANCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PANCB);
    mm.Add("SSCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SSCB);
    mm.Add("PTCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PTCB);
    mm.Add("VCBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.VCBCB);
    mm.Add("SP12CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SP12CB);
    mm.Add("MTBM1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MTBM1CB);
    mm.Add("MTBM2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MTBM2CB);
    mm.Add("SP11CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SP11CB);
    mm.Add("SP6CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SP6CB);
    mm.Add("MTOPCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MTOPCB);
    mm.Add("ORDCOS", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ORDCOS);
    mm.Add("ADDCOS", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ADDCOS);
    mm.Add("LeftDoor1DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor1DCUCB);
    mm.Add("LeftDoor2DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor2DCUCB);
    mm.Add("LeftDoor3DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor3DCUCB);
    mm.Add("LeftDoor4DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor4DCUCB);
    mm.Add("RightDoor1DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor1DCUCB);
    mm.Add("RightDoor2DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor2DCUCB);
    mm.Add("RightDoor3DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor3DCUCB);
    mm.Add("RightDoor4DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor4DCUCB);
    mm.Add("LeftDoor1Coving", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor1Coving);
    mm.Add("LeftDoor2Coving", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor2Coving);
    mm.Add("LeftDoor3Coving", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor3Coving);
    mm.Add("LeftDoor4Coving", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor4Coving);
    mm.Add("RightDoor1Coving", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor1Coving);
    mm.Add("RightDoor2Coving", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor2Coving);
    mm.Add("RightDoor3Coving", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor3Coving);
    mm.Add("RightDoor4Coving", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor4Coving);
    mm.Add("LeftDoor1EED", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor1EED);
    mm.Add("LeftDoor2EED", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor2EED);
    mm.Add("LeftDoor3EED", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor3EED);
    mm.Add("LeftDoor4EED", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor4EED);
    mm.Add("RightDoor1EED", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor1EED);
    mm.Add("RightDoor2EED", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor2EED);
    mm.Add("RightDoor3EED", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor3EED);
    mm.Add("RightDoor4EED", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor4EED);
    mm.Add("LeftDoor1ManualClose", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor1ManualClose);
    mm.Add("LeftDoor2ManualClose", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor2ManualClose);
    mm.Add("LeftDoor3ManualClose", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor3ManualClose);
    mm.Add("LeftDoor4ManualClose", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor4ManualClose);
    mm.Add("RightDoor1ManualClose", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor1ManualClose);
    mm.Add("RightDoor2ManualClose", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor2ManualClose);
    mm.Add("RightDoor3ManualClose", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor3ManualClose);
    mm.Add("RightDoor4ManualClose", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor4ManualClose);
    mm.Add("LeftDoor1ManualOpen", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor1ManualOpen);
    mm.Add("LeftDoor2ManualOpen", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor2ManualOpen);
    mm.Add("LeftDoor3ManualOpen", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor3ManualOpen);
    mm.Add("LeftDoor4ManualOpen", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor4ManualOpen);
    mm.Add("RightDoor1ManualOpen", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor1ManualOpen);
    mm.Add("RightDoor2ManualOpen", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor2ManualOpen);
    mm.Add("RightDoor3ManualOpen", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor3ManualOpen);
    mm.Add("RightDoor4ManualOpen", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor4ManualOpen);
    mm.Add("LeftDoor1Lockout", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor1Lockout);
    mm.Add("LeftDoor2Lockout", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor2Lockout);
    mm.Add("LeftDoor3Lockout", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor3Lockout);
    mm.Add("LeftDoor4Lockout", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoor4Lockout);
    mm.Add("RightDoor1Lockout", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor1Lockout);
    mm.Add("RightDoor2Lockout", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor2Lockout);
    mm.Add("RightDoor3Lockout", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor3Lockout);
    mm.Add("RightDoor4Lockout", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoor4Lockout);
    mm.Add("LeftDoorEADCover", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoorEADCover);
    mm.Add("RightDoorEADCover", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoorEADCover);
    mm.Add("LeftDoorEAD", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.LeftDoorEAD);
    mm.Add("RightDoorEAD", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.RightDoorEAD);
    mm.Add("ParkBrakeIsolationCockBogie1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ParkBrakeIsolationCockBogie1);
    mm.Add("ParkBrakeIsolationCockBogie2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ParkBrakeIsolationCockBogie2);
    mm.Add("MRIsolationCock", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MRIsolationCock);
    mm.Add("UncouplingCock", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.UncouplingCock);
    mm.Add("Horn1IsolationCock", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.Horn1IsolationCock);
    mm.Add("Horn2IsolationCock", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.Horn2IsolationCock);
    mm.Add("MREPIsolationCockEnd1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MREPIsolationCockEnd1);
    mm.Add("BIC1Inside", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BIC1Inside);
    mm.Add("BIC1Outside", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BIC1Outside);
    mm.Add("BIC2Inside", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BIC2Inside);
    mm.Add("BIC2Outside", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.BIC2Outside);
    mm.Add("MREPIsolationCockEnd2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.MREPIsolationCockEnd2);
    mm.Add("EPIC", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.EPIC);
    mm.Add("ASCOEnd1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ASCOEnd1);
    mm.Add("ASCOEnd2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ASCOEnd2);
    mm.Add("ASIsolationCock", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ASIsolationCock);
    mm.Add("SR", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.SR);
    mm.Add("ParkingBrakeManualReleaseBogie1Handle1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ParkingBrakeManualReleaseBogie1Handle1);
    mm.Add("ParkingBrakeManualReleaseBogie1Handle2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ParkingBrakeManualReleaseBogie1Handle2);
    mm.Add("ParkingBrakeManualReleaseBogie2Handle1", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ParkingBrakeManualReleaseBogie2Handle1);
    mm.Add("ParkingBrakeManualReleaseBogie2Handle2", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ParkingBrakeManualReleaseBogie2Handle2);
    mm.Add("PECUPushButton", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PECUPushButton);
    mm.Add("Microphone", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.Microphone);
    mm.Add("DriversBackDoor", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.DriversBackDoor);
    mm.Add("PantographIsolationCock", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.PantographIsolationCock);
    mm.Add("VCBIsolationCock", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.VCBIsolationCock);
    mm.Add("ORDPlunger", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates.ORDPlunger);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates);
    mm.Add("EBLR2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.EBLR2CB);
    mm.Add("EBMVCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.EBMVCB);
    mm.Add("EDCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.EDCB);
    mm.Add("ELCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.ELCB1);
    mm.Add("ELCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.ELCB2);
    mm.Add("ERCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.ERCB);
    mm.Add("HCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.HCB);
    mm.Add("HLLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.HLLCB);
    mm.Add("HLRCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.HLRCB);
    mm.Add("ILCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.ILCB1);
    mm.Add("ILCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.ILCB2);
    mm.Add("LDICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.LDICB);
    mm.Add("LDLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.LDLCB);
    mm.Add("LDRCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.LDRCB);
    mm.Add("MLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.MLCB);
    mm.Add("MMCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.MMCB);
    mm.Add("NBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.NBCB);
    mm.Add("NVICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.NVICB);
    mm.Add("OCCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.OCCB1);
    mm.Add("OCCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.OCCB2);
    mm.Add("ODDCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.ODDCB);
    mm.Add("PBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.PBCB);
    mm.Add("PISCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.PISCB1);
    mm.Add("PISCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.PISCB2);
    mm.Add("POCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.POCB);
    mm.Add("PPU1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.PPU1CB);
    mm.Add("PPU2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.PPU2CB);
    mm.Add("PPU3CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.PPU3CB);
    mm.Add("RIO1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.RIO1CB);
    mm.Add("RIO2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.RIO2CB);
    mm.Add("SIOCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SIOCB1);
    mm.Add("SIOCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SIOCB2);
    mm.Add("SSICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SSICB);
    mm.Add("TBCCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.TBCCB1);
    mm.Add("TBCCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.TBCCB2);
    mm.Add("TBNCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.TBNCB);
    mm.Add("TDICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.TDICB);
    mm.Add("TLLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.TLLCB);
    mm.Add("TLRCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.TLRCB);
    mm.Add("TRIVCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.TRIVCB);
    mm.Add("TVDUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.TVDUCB);
    mm.Add("TWVCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.TWVCB);
    mm.Add("VCCBOrUCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.VCCBOrUCCB);
    mm.Add("VCBCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.VCBCCB);
    mm.Add("VIO1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.VIO1CB);
    mm.Add("VIO2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.VIO2CB);
    mm.Add("WFLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.WFLCB);
    mm.Add("WIFICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.WIFICB);
    mm.Add("WWCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.WWCB);
    mm.Add("BECUCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.BECUCB1);
    mm.Add("BECUCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.BECUCB2);
    mm.Add("BECUCB3", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.BECUCB3);
    mm.Add("RSACB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.RSACB);
    mm.Add("CMCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CMCCB);
    mm.Add("CILCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CILCB);
    mm.Add("CICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CICB);
    mm.Add("CELCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CELCB);
    mm.Add("CECB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CECB);
    mm.Add("CDUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CDUCB);
    mm.Add("CCNVIO1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CCNVIO1CB);
    mm.Add("CBTCCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CBTCCB1);
    mm.Add("CBFCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CBFCCB);
    mm.Add("CBFCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CBFCB);
    mm.Add("C1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.C1CB);
    mm.Add("BLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.BLCB);
    mm.Add("ZVBACB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.ZVBACB);
    mm.Add("EBLR1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.EBLR1CB);
    mm.Add("DRCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.DRCB);
    mm.Add("DPLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.DPLCB);
    mm.Add("DMICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.DMICB);
    mm.Add("DLCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.DLCB);
    mm.Add("DIOCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.DIOCB2);
    mm.Add("DIOCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.DIOCB1);
    mm.Add("CSCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CSCCB);
    mm.Add("CSBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CSBCB);
    mm.Add("CSACB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CSACB);
    mm.Add("CRSBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CRSBCB);
    mm.Add("SOCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SOCB2);
    mm.Add("SOCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SOCB1);
    mm.Add("MSOCB5", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.MSOCB5);
    mm.Add("MSOCB4", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.MSOCB4);
    mm.Add("MSOCB3", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.MSOCB3);
    mm.Add("MSOCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.MSOCB2);
    mm.Add("MSOCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.MSOCB1);
    mm.Add("HVAC1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.HVAC1);
    mm.Add("SAC2CCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SAC2CCB);
    mm.Add("HVAC2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.HVAC2);
    mm.Add("SAC1CCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SAC1CCB);
    mm.Add("CMCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.CMCB);
    mm.Add("AC2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.AC2CB);
    mm.Add("AC1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.AC1CB);
    mm.Add("FDSCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.FDSCB);
    mm.Add("BCBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.BCBCB);
    mm.Add("ERVRCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.ERVRCB1);
    mm.Add("ERVRCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.ERVRCB2);
    mm.Add("ESKCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.ESKCB);
    mm.Add("HMCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.HMCB);
    mm.Add("SP1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SP1CB);
    mm.Add("SP2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SP2CB);
    mm.Add("SP3CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SP3CB);
    mm.Add("SP4CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SP4CB);
    mm.Add("SP5CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SP5CB);
    mm.Add("SPCB6", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SPCB6);
    mm.Add("SPCB7", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SPCB7);
    mm.Add("SPCB8", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SPCB8);
    mm.Add("RPTCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.RPTCB);
    mm.Add("TERCB1", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.TERCB1);
    mm.Add("TERCB2", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.TERCB2);
    mm.Add("APSCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.APSCB);
    mm.Add("APSICB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.APSICB);
    mm.Add("BCGCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.BCGCB);
    mm.Add("DSCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.DSCB);
    mm.Add("MTBMCCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.MTBMCCB);
    mm.Add("PADCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.PADCB);
    mm.Add("PANCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.PANCB);
    mm.Add("SSCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SSCB);
    mm.Add("PTCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.PTCB);
    mm.Add("VCBCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.VCBCB);
    mm.Add("SP12CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SP12CB);
    mm.Add("MTBM1CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.MTBM1CB);
    mm.Add("MTBM2CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.MTBM2CB);
    mm.Add("SP11CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SP11CB);
    mm.Add("SP6CB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.SP6CB);
    mm.Add("MTOPCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.MTOPCB);
    mm.Add("LeftDoor1DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.LeftDoor1DCUCB);
    mm.Add("LeftDoor2DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.LeftDoor2DCUCB);
    mm.Add("LeftDoor3DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.LeftDoor3DCUCB);
    mm.Add("LeftDoor4DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.LeftDoor4DCUCB);
    mm.Add("RightDoor1DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.RightDoor1DCUCB);
    mm.Add("RightDoor2DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.RightDoor2DCUCB);
    mm.Add("RightDoor3DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.RightDoor3DCUCB);
    mm.Add("RightDoor4DCUCB", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates.RightDoor4DCUCB);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates);
    mm.Add("HornPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.HornPBLamp);
    mm.Add("CabConsoleLightPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.CabConsoleLightPBLamp);
    mm.Add("CabConsoleLight", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.CabConsoleLight);
    mm.Add("LeftDoorClosePBOperatingPanel1Lamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoorClosePBOperatingPanel1Lamp);
    mm.Add("RightDoorClosePBOperatingPanel1Lamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoorClosePBOperatingPanel1Lamp);
    mm.Add("LeftDoorOpenPBOperatingPanel1Lamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoorOpenPBOperatingPanel1Lamp);
    mm.Add("RightDoorOpenPBOperatingPanel1Lamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoorOpenPBOperatingPanel1Lamp);
    mm.Add("CabMainLightPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.CabMainLightPBLamp);
    mm.Add("CabMainLight", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.CabMainLight);
    mm.Add("ParkingBrakeOnSwitchLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.ParkingBrakeOnSwitchLamp);
    mm.Add("ParkingBrakeOffSwitchLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.ParkingBrakeOffSwitchLamp);
    mm.Add("DoorCloseAnnouncementPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.DoorCloseAnnouncementPBLamp);
    mm.Add("ROSPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.ROSPBLamp);
    mm.Add("UTOPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.UTOPBLamp);
    mm.Add("ATOStartPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.ATOStartPBLamp);
    mm.Add("EmergencyBrakeResetPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.EmergencyBrakeResetPBLamp);
    mm.Add("MRAirGaugeMRPressure", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.MRAirGaugeMRPressure);
    mm.Add("BCSRDualPressureGaugeBCPressure", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.BCSRDualPressureGaugeBCPressure);
    mm.Add("BCSRDualPressureGaugeSRPressure", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.BCSRDualPressureGaugeSRPressure);
    mm.Add("CallOnLightPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.CallOnLightPBLamp);
    mm.Add("VCBOpenPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.VCBOpenPBLamp);
    mm.Add("LIMPHomePBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LIMPHomePBLamp);
    mm.Add("PowerOffPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.PowerOffPBLamp);
    mm.Add("PantoDownPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.PantoDownPBLamp);
    mm.Add("VCBClosePBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.VCBClosePBLamp);
    mm.Add("LeftDoorOpenPBOperatingPanel2Lamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoorOpenPBOperatingPanel2Lamp);
    mm.Add("LeftDoorOpenPB1OperatingPanel2Lamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoorOpenPB1OperatingPanel2Lamp);
    mm.Add("LeftDoorClosePBOperatingPanel2Lamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoorClosePBOperatingPanel2Lamp);
    mm.Add("PantoUpPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.PantoUpPBLamp);
    mm.Add("APSFaultIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.APSFaultIndicator);
    mm.Add("PowerFaultIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.PowerFaultIndicator);
    mm.Add("EmergencyBrakeIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.EmergencyBrakeIndicator);
    mm.Add("VCBTripIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.VCBTripIndicator);
    mm.Add("LineVoltageIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LineVoltageIndicator);
    mm.Add("OtherCabOccupiedIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.OtherCabOccupiedIndicator);
    mm.Add("ParkingBrakeIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.ParkingBrakeIndicator);
    mm.Add("AllDoorCloseIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.AllDoorCloseIndicator);
    mm.Add("HVACFaultIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.HVACFaultIndicator);
    mm.Add("SaloonDoorCloseIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.SaloonDoorCloseIndicator);
    mm.Add("UncouplePBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.UncouplePBLamp);
    mm.Add("FlasherLightPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.FlasherLightPBLamp);
    mm.Add("FloodLightPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.FloodLightPBLamp);
    mm.Add("BatteryResetPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.BatteryResetPBLamp);
    mm.Add("RightDoorOpenPBOperatingPanel5Lamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoorOpenPBOperatingPanel5Lamp);
    mm.Add("RightDoorOpenPB1OperatingPanel5Lamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoorOpenPB1OperatingPanel5Lamp);
    mm.Add("RightDoorClosePBOperatingPanel5Lamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoorClosePBOperatingPanel5Lamp);
    mm.Add("LampTestPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LampTestPBLamp);
    mm.Add("WFLTestPBLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.WFLTestPBLamp);
    mm.Add("DoorIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.DoorIndicator);
    mm.Add("Ramp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.Ramp);
    mm.Add("EmergencyDoor", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.EmergencyDoor);
    mm.Add("RampSupportDown", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RampSupportDown);
    mm.Add("GasSpringLocked", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.GasSpringLocked);
    mm.Add("LeftDoor1Position", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor1Position);
    mm.Add("LeftDoor2Position", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor2Position);
    mm.Add("LeftDoor3Position", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor3Position);
    mm.Add("LeftDoor4Position", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor4Position);
    mm.Add("RightDoor1Position", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor1Position);
    mm.Add("RightDoor2Position", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor2Position);
    mm.Add("RightDoor3Position", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor3Position);
    mm.Add("RightDoor4Position", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor4Position);
    mm.Add("LeftDoor1aPosition", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor1aPosition);
    mm.Add("LeftDoor1InsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor1InsideLamp);
    mm.Add("LeftDoor2InsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor2InsideLamp);
    mm.Add("LeftDoor3InsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor3InsideLamp);
    mm.Add("LeftDoor4InsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor4InsideLamp);
    mm.Add("RightDoor1InsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor1InsideLamp);
    mm.Add("RightDoor2InsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor2InsideLamp);
    mm.Add("RightDoor3InsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor3InsideLamp);
    mm.Add("RightDoor4InsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor4InsideLamp);
    mm.Add("LeftDoor1OutsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor1OutsideLamp);
    mm.Add("LeftDoor2OutsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor2OutsideLamp);
    mm.Add("LeftDoor3OutsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor3OutsideLamp);
    mm.Add("LeftDoor4OutsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.LeftDoor4OutsideLamp);
    mm.Add("RightDoor1OutsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor1OutsideLamp);
    mm.Add("RightDoor2OutsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor2OutsideLamp);
    mm.Add("RightDoor3OutsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor3OutsideLamp);
    mm.Add("RightDoor4OutsideLamp", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.RightDoor4OutsideLamp);
    mm.Add("FloodLight", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.FloodLight);
    mm.Add("FlasherLight", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.FlasherLight);
    mm.Add("UTOOrRMLight", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.UTOOrRMLight);
    mm.Add("MarkerOrTailLight", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.MarkerOrTailLight);
    mm.Add("HeadLight", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.HeadLight);
    mm.Add("WaitIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.WaitIndicator);
    mm.Add("CallIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.CallIndicator);
    mm.Add("TalkIndicator", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.TalkIndicator);
    mm.Add("PantographPosition", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.PantographPosition);
    mm.Add("WiperPositionLeft", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.WiperPositionLeft);
    mm.Add("WiperPositionCenter", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.WiperPositionCenter);
    mm.Add("WiperPositionRight", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.WiperPositionRight);
    mm.Add("WiperWash", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.WiperWash);
    mm.Add("VehicleDerailed", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.VehicleDerailed);
    mm.Add("VehicleBogieDerailed", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates.VehicleBogieDerailed);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.IOControlsOutput[0]);
    mm.Add("InputStates", model.Model().BEML_EMU_Y.IOControlsOutput[0].InputStates);
    mm.Add("MCBTripStates", model.Model().BEML_EMU_Y.IOControlsOutput[0].MCBTripStates);
    mm.Add("OutputStates", model.Model().BEML_EMU_Y.IOControlsOutput[0].OutputStates);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CouplingOutput[0].Couplers.Coupler[0].PhysicalSignals);
    mm.Add("MechanicalCouplerState", model.Model().BEML_EMU_Y.CouplingOutput[0].Couplers.Coupler[0].PhysicalSignals.MechanicalCouplerState);
    mm.Add("PneumaticCouplerState", model.Model().BEML_EMU_Y.CouplingOutput[0].Couplers.Coupler[0].PhysicalSignals.PneumaticCouplerState);
    mm.Add("CouplerDamaged", model.Model().BEML_EMU_Y.CouplingOutput[0].Couplers.Coupler[0].PhysicalSignals.CouplerDamaged);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CouplingOutput[0].Couplers.Coupler[0]);
    mm.Add("PhysicalSignals", model.Model().BEML_EMU_Y.CouplingOutput[0].Couplers.Coupler[0].PhysicalSignals);
    mm.Add("CouplingInterface", model.Model().BEML_EMU_Y.CouplingOutput[0].Couplers.Coupler[0].CouplingInterface);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CouplingOutput[0].Couplers);
    mm.Add("Coupler", model.Model().BEML_EMU_Y.CouplingOutput[0].Couplers.Coupler);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CouplingOutput[0].CouplerAudio);
    mm.Add("MechanicalCouple", model.Model().BEML_EMU_Y.CouplingOutput[0].CouplerAudio.MechanicalCouple);
    mm.Add("MechanicalUncouple", model.Model().BEML_EMU_Y.CouplingOutput[0].CouplerAudio.MechanicalUncouple);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CouplingOutput[0].OutputControlStates);
    mm.Add("MechanicalCouplerState", model.Model().BEML_EMU_Y.CouplingOutput[0].OutputControlStates.MechanicalCouplerState);
    mm.Add("ExternalCoupling", model.Model().BEML_EMU_Y.CouplingOutput[0].OutputControlStates.ExternalCoupling);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler[0]);
    mm.Add("AutoCouple", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler[0].AutoCouple);
    mm.Add("AvailableReady", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler[0].AvailableReady);
    mm.Add("OurCoupled", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler[0].OurCoupled);
    mm.Add("Uncoupled", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler[0].Uncoupled);
    mm.Add("TheirsCoupled", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler[0].TheirsCoupled);
    mm.Add("BothCoupled", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler[0].BothCoupled);
    mm.Add("CouplerTypeMatched", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler[0].CouplerTypeMatched);
    mm.Add("TheirsExtensionRate", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler[0].TheirsExtensionRate);
    mm.Add("ModelledTrainCouplerType", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler[0].ModelledTrainCouplerType);
    mm.Add("OtherTrainCouplerType", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler[0].OtherTrainCouplerType);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CouplingOutput[0].Debug);
    mm.Add("EPVState", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.EPVState);
    mm.Add("ElectricalHeadCommand", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.ElectricalHeadCommand);
    mm.Add("MainResPressureOk", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.MainResPressureOk);
    mm.Add("PneuUncouplingCommand", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.PneuUncouplingCommand);
    mm.Add("MechUncouplingCommand", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.MechUncouplingCommand);
    mm.Add("ElectUncouplingCommand", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.ElectUncouplingCommand);
    mm.Add("ElectCouplingCommand", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.ElectCouplingCommand);
    mm.Add("VehicleOnAnEnd", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.VehicleOnAnEnd);
    mm.Add("CouplerTypesAcrossUnit", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.CouplerTypesAcrossUnit);
    mm.Add("DebugPerCoupler", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug.DebugPerCoupler);
    mm.RegisterStruct(model.Model().BEML_EMU_Y.CouplingOutput[0]);
    mm.Add("Couplers", model.Model().BEML_EMU_Y.CouplingOutput[0].Couplers);
    mm.Add("CouplerAudio", model.Model().BEML_EMU_Y.CouplingOutput[0].CouplerAudio);
    mm.Add("OutputControlStates", model.Model().BEML_EMU_Y.CouplingOutput[0].OutputControlStates);
    mm.Add("Debug", model.Model().BEML_EMU_Y.CouplingOutput[0].Debug);
    mm.Add("PhysicalSignals", model.Model().BEML_EMU_Y.CouplingOutput[0].PhysicalSignals);
    mm.Add("ElectricalTrainConnection", model.Model().BEML_EMU_Y.CouplingOutput[0].ElectricalTrainConnection);
    mm.Add("ElectricalUnitConnection", model.Model().BEML_EMU_Y.CouplingOutput[0].ElectricalUnitConnection);
    mm.Add("ElectricalCoupledCabsConnection", model.Model().BEML_EMU_Y.CouplingOutput[0].ElectricalCoupledCabsConnection);
    mm.RegisterStruct(model.Model().BEML_EMU_Y);
    mm.Add("ModelStatus", model.Model().BEML_EMU_Y.ModelStatus);
    mm.Add("ElectricalOutput", model.Model().BEML_EMU_Y.ElectricalOutput);
    mm.Add("TCMSOutput", model.Model().BEML_EMU_Y.TCMSOutput);
    mm.Add("PantographVehicleOut", model.Model().BEML_EMU_Y.PantographVehicleOut);
    mm.Add("DoorsVehicleOut", model.Model().BEML_EMU_Y.DoorsVehicleOut);
    mm.Add("PneumaticsVehicleOut", model.Model().BEML_EMU_Y.PneumaticsVehicleOut);
    mm.Add("BrakesVehicleOut", model.Model().BEML_EMU_Y.BrakesVehicleOut);
    mm.Add("TractionVehicleOut", model.Model().BEML_EMU_Y.TractionVehicleOut);
    mm.Add("DynamicsOutput", model.Model().BEML_EMU_Y.DynamicsOutput);
    mm.Add("CBTCVehicleOut", model.Model().BEML_EMU_Y.CBTCVehicleOut);
    mm.Add("AudioOutput", model.Model().BEML_EMU_Y.AudioOutput);
    mm.Add("ScoringTrainOutput", model.Model().BEML_EMU_Y.ScoringTrainOutput);
    mm.Add("ScoringVehicleOutput", model.Model().BEML_EMU_Y.ScoringVehicleOutput);
    mm.Add("IOControlsOutput", model.Model().BEML_EMU_Y.IOControlsOutput);
    mm.Add("TrainFaultStates", model.Model().BEML_EMU_Y.TrainFaultStates);
    mm.Add("VehicleFaultStates", model.Model().BEML_EMU_Y.VehicleFaultStates);
    mm.Add("CouplingOutput", model.Model().BEML_EMU_Y.CouplingOutput);
    mm.Add("ProcessedVehConf", model.Model().BEML_EMU_Y.ProcessedVehConf);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates);
    mm.Add("TractionBrakeController", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.TractionBrakeController);
    mm.Add("HeadLightSwitch", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.HeadLightSwitch);
    mm.Add("ParkBrakeIsolationCockBogie1", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.ParkBrakeIsolationCockBogie1);
    mm.Add("ParkBrakeIsolationCockBogie2", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.ParkBrakeIsolationCockBogie2);
    mm.Add("Bogie1IsolationCmd", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.Bogie1IsolationCmd);
    mm.Add("Bogie2IsolationCmd", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.Bogie2IsolationCmd);
    mm.Add("EPIC", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.EPIC);
    mm.Add("ASCOEnd1", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.ASCOEnd1);
    mm.Add("ASCOEnd2", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.ASCOEnd2);
    mm.Add("ASIsolationCock", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.ASIsolationCock);
    mm.Add("SR", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.SR);
    mm.Add("ModeSelector", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.ModeSelector);
    mm.Add("EBPB", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.EBPB);
    mm.Add("SafetyCutoutSS", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.SafetyCutoutSS);
    mm.Add("MREPICEnd1", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.MREPICEnd1);
    mm.Add("MREPICEnd2", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.MREPICEnd2);
    mm.Add("CabSaloonPartitionDoorOpen", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.CabSaloonPartitionDoorOpen);
    mm.Add("EmergencyDoorCoverRemoved", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.EmergencyDoorCoverRemoved);
    mm.Add("DoorLoopBypassActive", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.DoorLoopBypassActive);
    mm.Add("DeadManBypass", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.DeadManBypass);
    mm.Add("ControlKey", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.ControlKey);
    mm.Add("LeftDoor1Lockout", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.LeftDoor1Lockout);
    mm.Add("LeftDoor2Lockout", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.LeftDoor2Lockout);
    mm.Add("LeftDoor3Lockout", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.LeftDoor3Lockout);
    mm.Add("LeftDoor4Lockout", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.LeftDoor4Lockout);
    mm.Add("RightDoor1Lockout", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.RightDoor1Lockout);
    mm.Add("RightDoor2Lockout", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.RightDoor2Lockout);
    mm.Add("RightDoor3Lockout", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.RightDoor3Lockout);
    mm.Add("RightDoor4Lockout", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.RightDoor4Lockout);
    mm.Add("LeftDoor1EED", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.LeftDoor1EED);
    mm.Add("LeftDoor2EED", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.LeftDoor2EED);
    mm.Add("LeftDoor3EED", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.LeftDoor3EED);
    mm.Add("LeftDoor4EED", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.LeftDoor4EED);
    mm.Add("RightDoor1EED", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.RightDoor1EED);
    mm.Add("RightDoor2EED", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.RightDoor2EED);
    mm.Add("RightDoor3EED", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.RightDoor3EED);
    mm.Add("RightDoor4EED", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.RightDoor4EED);
    mm.Add("RampCoverLockingLever", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.RampCoverLockingLever);
    mm.Add("HornManuallyIsolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.HornManuallyIsolated);
    mm.Add("BIC1Inside", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.BIC1Inside);
    mm.Add("BIC1Outside", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.BIC1Outside);
    mm.Add("BIC2Inside", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.BIC2Inside);
    mm.Add("BIC2Outside", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates.BIC2Outside);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].Environment);
    mm.Add("RightDoorsEnable", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].Environment.RightDoorsEnable);
    mm.Add("LeftDoorsEnable", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].Environment.LeftDoorsEnable);
    mm.Add("DoorsPairEnable", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].Environment.DoorsPairEnable);
    mm.Add("LineVoltage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].Environment.LineVoltage);
    mm.Add("OverheadLinePresent", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].Environment.OverheadLinePresent);
    mm.Add("NeutralSection", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].Environment.NeutralSection);
    mm.Add("VehiclesPassedNS", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].Environment.VehiclesPassedNS);
    mm.Add("DamagedOHE", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].Environment.DamagedOHE);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0]);
    mm.Add("BrakeCylinderPressureGauge", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].BrakeCylinderPressureGauge);
    mm.Add("ParkBrakePressureGauge", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].ParkBrakePressureGauge);
    mm.Add("AirSuspensionLoadPressure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].AirSuspensionLoadPressure);
    mm.Add("EstimatedBogieSupportedMass", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].EstimatedBogieSupportedMass);
    mm.Add("ServiceBrakeSwitchStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].ServiceBrakeSwitchStatus);
    mm.Add("PrakingBrakeSwitchStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].PrakingBrakeSwitchStatus);
    mm.Add("AirSuspensionSwitchStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].AirSuspensionSwitchStatus);
    mm.Add("AirSuspensionPressure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].AirSuspensionPressure);
    mm.Add("BECU1EmergencyBrakeFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].BECU1EmergencyBrakeFailure);
    mm.Add("BECU2EmergencyBrakeFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].BECU2EmergencyBrakeFailure);
    mm.Add("BECU1ServiceBrakeFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].BECU1ServiceBrakeFailure);
    mm.Add("BECU1BrakeNotApplied", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].BECU1BrakeNotApplied);
    mm.Add("BECU1BrakeNotReleased", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].BECU1BrakeNotReleased);
    mm.Add("BECU1CarLoadPressureLow", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].BECU1CarLoadPressureLow);
    mm.Add("BECU2CarLoadPressureLow", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].BECU2CarLoadPressureLow);
    mm.Add("BECULowRPressure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].BECULowRPressure);
    mm.Add("AirSuspensionBogie1Deflated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].AirSuspensionBogie1Deflated);
    mm.Add("BECU1LoadPressureLow", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie[0].BECU1LoadPressureLow);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem);
    mm.Add("MainReservoirPressureGauge", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.MainReservoirPressureGauge);
    mm.Add("MainReservoirPipePressure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.MainReservoirPipePressure);
    mm.Add("PantographPressure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.PantographPressure);
    mm.Add("Bogie", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.Bogie);
    mm.Add("BrakeDemandSignalFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.BrakeDemandSignalFailure);
    mm.Add("LowMRTractionCutoutSwitch", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem.LowMRTractionCutoutSwitch);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0]);
    mm.Add("DoorClosedStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorClosedStatus);
    mm.Add("DoorOpenStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorOpenStatus);
    mm.Add("DoorReleasedAuthorisedToOpenStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorReleasedAuthorisedToOpenStatus);
    mm.Add("DoorEmergencyReleasedStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorEmergencyReleasedStatus);
    mm.Add("DoorIsolatedStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorIsolatedStatus);
    mm.Add("DoorFaultStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorFaultStatus);
    mm.Add("DoorObstacleDetected", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorObstacleDetected);
    mm.Add("DoorObstacleUnableToClose", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorObstacleUnableToClose);
    mm.Add("DoorLockedStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorLockedStatus);
    mm.Add("DoorPosition", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorPosition);
    mm.Add("DoorOpenObstruction", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorOpenObstruction);
    mm.Add("DoorCloseObstruction", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorCloseObstruction);
    mm.Add("DoorOpenPBLight", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorOpenPBLight);
    mm.Add("DoorClosedPBLight", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorClosedPBLight);
    mm.Add("DoorMotorCircuitFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorMotorCircuitFailure);
    mm.Add("DoorFailedToLock", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorFailedToLock);
    mm.Add("DoorFailedToUnlock", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorFailedToUnlock);
    mm.Add("DoorUnexpectedUnlocking", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorUnexpectedUnlocking);
    mm.Add("DCUFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DCUFailure);
    mm.Add("DCSRFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DCSRFailure);
    mm.Add("DCSLFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DCSLFailure);
    mm.Add("DLSRFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DLSRFailure);
    mm.Add("DLSLFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DLSLFailure);
    mm.Add("DoorMajorFault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].DoorMajorFault);
    mm.Add("UnexpectedDoorOpeningDetectedByCC", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors[0].UnexpectedDoorOpeningDetectedByCC);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.EmergencyDoor);
    mm.Add("Ramp", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.EmergencyDoor.Ramp);
    mm.Add("EmergencyDoorOpen", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.EmergencyDoor.EmergencyDoorOpen);
    mm.Add("EmergencyDoorLocked", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.EmergencyDoor.EmergencyDoorLocked);
    mm.Add("EmerDoorOpenFaultMessage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.EmergencyDoor.EmerDoorOpenFaultMessage);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem);
    mm.Add("Doors", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.Doors);
    mm.Add("EmergencyDoor", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.EmergencyDoor);
    mm.Add("AllLeftDoorClosed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.AllLeftDoorClosed);
    mm.Add("AllRightDoorClosed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem.AllRightDoorClosed);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals);
    mm.Add("TCMSPowerAvailable", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.TCMSPowerAvailable);
    mm.Add("CabActive", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.CabActive);
    mm.Add("ForwardDirection", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ForwardDirection);
    mm.Add("ReverseDirection", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ReverseDirection);
    mm.Add("Speedometer", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.Speedometer);
    mm.Add("ZeroSpeed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ZeroSpeed);
    mm.Add("TractionOn", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.TractionOn);
    mm.Add("BrakeOn", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BrakeOn);
    mm.Add("TractionSafe", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.TractionSafe);
    mm.Add("AllRightDoorsClosed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.AllRightDoorsClosed);
    mm.Add("AllLeftDoorsClosed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.AllLeftDoorsClosed);
    mm.Add("ServiceBrakesReleased", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ServiceBrakesReleased);
    mm.Add("ParkBrakesReleased", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ParkBrakesReleased);
    mm.Add("ParkBrakeApplication", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ParkBrakeApplication);
    mm.Add("ServiceBrakeApplication", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ServiceBrakeApplication);
    mm.Add("PantoLowered", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.PantoLowered);
    mm.Add("PantoRaised", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.PantoRaised);
    mm.Add("PantoPowerDetected", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.PantoPowerDetected);
    mm.Add("VCBState", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.VCBState);
    mm.Add("AK1Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.AK1Status);
    mm.Add("AK2Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.AK2Status);
    mm.Add("K1Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.K1Status);
    mm.Add("K2Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.K2Status);
    mm.Add("FilterVoltage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.FilterVoltage);
    mm.Add("BCG1Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BCG1Status);
    mm.Add("BCG2Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BCG2Status);
    mm.Add("BCGOutputVoltage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BCGOutputVoltage);
    mm.Add("BatteryVoltage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BatteryVoltage);
    mm.Add("BatteryCurrent", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BatteryCurrent);
    mm.Add("BatteryTemperature", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BatteryTemperature);
    mm.Add("BCG1OutputCurrent", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BCG1OutputCurrent);
    mm.Add("BCG2OutputCurrent", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BCG2OutputCurrent);
    mm.Add("BrakeTrainLine", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BrakeTrainLine);
    mm.Add("MotorTrainLine", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MotorTrainLine);
    mm.Add("FSB1Line", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.FSB1Line);
    mm.Add("FSB2Line", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.FSB2Line);
    mm.Add("EB1Line", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.EB1Line);
    mm.Add("EB2Line", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.EB2Line);
    mm.Add("LineVoltage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.LineVoltage);
    mm.Add("NoEB", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.NoEB);
    mm.Add("VCBTripCommand", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.VCBTripCommand);
    mm.Add("MotorPowerAvailable", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MotorPowerAvailable);
    mm.Add("LeftDoorRelease", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.LeftDoorRelease);
    mm.Add("RightDoorRelease", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.RightDoorRelease);
    mm.Add("LeftDoorOpen", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.LeftDoorOpen);
    mm.Add("RightDoorOpen", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.RightDoorOpen);
    mm.Add("LeftDoorClose", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.LeftDoorClose);
    mm.Add("RightDoorClose", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.RightDoorClose);
    mm.Add("APS1Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.APS1Status);
    mm.Add("APS2Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.APS2Status);
    mm.Add("APS1Fault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.APS1Fault);
    mm.Add("APS2Fault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.APS2Fault);
    mm.Add("APS1Isolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.APS1Isolated);
    mm.Add("APS2Isolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.APS2Isolated);
    mm.Add("APS1OutputVoltage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.APS1OutputVoltage);
    mm.Add("APS2OutputVoltage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.APS2OutputVoltage);
    mm.Add("HLSwitchStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HLSwitchStatus);
    mm.Add("MarkerAndTailLight", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MarkerAndTailLight);
    mm.Add("FlasherLightStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.FlasherLightStatus);
    mm.Add("CallOnLightStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.CallOnLightStatus);
    mm.Add("UTOOrRMLight", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.UTOOrRMLight);
    mm.Add("PADPBStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.PADPBStatus);
    mm.Add("PADRStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.PADRStatus);
    mm.Add("PowerONPBPressed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.PowerONPBPressed);
    mm.Add("PowerOFFPBPressed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.PowerOFFPBPressed);
    mm.Add("TPOR_ON", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.TPOR_ON);
    mm.Add("TSDR_ON", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.TSDR_ON);
    mm.Add("LeftDoorOpenCmdInLimpHome", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.LeftDoorOpenCmdInLimpHome);
    mm.Add("RightDoorOpenCmdInLimpHome", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.RightDoorOpenCmdInLimpHome);
    mm.Add("LeftDoorEnable", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.LeftDoorEnable);
    mm.Add("RightDoorEnable", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.RightDoorEnable);
    mm.Add("LeftHoldDoorClose", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.LeftHoldDoorClose);
    mm.Add("RightHoldDoorClose", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.RightHoldDoorClose);
    mm.Add("LimpHomeMode", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.LimpHomeMode);
    mm.Add("FwdRevTrainLineMismatchMessage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.FwdRevTrainLineMismatchMessage);
    mm.Add("LowMRPressureFaultMessage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.LowMRPressureFaultMessage);
    mm.Add("BCUPower", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BCUPower);
    mm.Add("SaloonLightGroupStatus1", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.SaloonLightGroupStatus1);
    mm.Add("SaloonLightGroupStatus2", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.SaloonLightGroupStatus2);
    mm.Add("WFLStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.WFLStatus);
    mm.Add("WFLOilLevelStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.WFLOilLevelStatus);
    mm.Add("WFLPump1Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.WFLPump1Status);
    mm.Add("WFLPump2Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.WFLPump2Status);
    mm.Add("BatteryIsolationContactor", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BatteryIsolationContactor);
    mm.Add("TrainControlContactor", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.TrainControlContactor);
    mm.Add("MainCompressor", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MainCompressor);
    mm.Add("AuxCompressor", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.AuxCompressor);
    mm.Add("HVAC1Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC1Status);
    mm.Add("HVAC1SetPointTemperature", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC1SetPointTemperature);
    mm.Add("HVAC1IntTemperature", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC1IntTemperature);
    mm.Add("HVAC1ExtTemperature", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC1ExtTemperature);
    mm.Add("HVAC1Faulty", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC1Faulty);
    mm.Add("HVAC1Isolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC1Isolated);
    mm.Add("HVAC2Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC2Status);
    mm.Add("HVAC2SetPointTemperature", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC2SetPointTemperature);
    mm.Add("HVAC2IntTemperature", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC2IntTemperature);
    mm.Add("HVAC2ExtTemperature", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC2ExtTemperature);
    mm.Add("HVAC2Faulty", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC2Faulty);
    mm.Add("HVAC2Isolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVAC2Isolated);
    mm.Add("NoOfAPSFailed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.NoOfAPSFailed);
    mm.Add("PECStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.PECStatus);
    mm.Add("EBbyNonCabEnabled", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.EBbyNonCabEnabled);
    mm.Add("EBbyMC", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.EBbyMC);
    mm.Add("EBbyBrakeLoop", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.EBbyBrakeLoop);
    mm.Add("EBbyDeadMan", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.EBbyDeadMan);
    mm.Add("NoLineVoltage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.NoLineVoltage);
    mm.Add("D1Power", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.D1Power);
    mm.Add("EBApplied", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.EBApplied);
    mm.Add("EBbyCC", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.EBbyCC);
    mm.Add("EBdueToATCZeroSpeed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.EBdueToATCZeroSpeed);
    mm.Add("ADDCOSStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ADDCOSStatus);
    mm.Add("ORDCOSStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ORDCOSStatus);
    mm.Add("MRIsolation", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MRIsolation);
    mm.Add("MCBPAGroupStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCBPAGroupStatus);
    mm.Add("MCB110VDCGroup", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCB110VDCGroup);
    mm.Add("MCBLightGroup", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCBLightGroup);
    mm.Add("MCBLightSaloonGroup", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCBLightSaloonGroup);
    mm.Add("MCBDoorGroup", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCBDoorGroup);
    mm.Add("MCBBrakeGroup", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCBBrakeGroup);
    mm.Add("MCBAPSGroup", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCBAPSGroup);
    mm.Add("MCBTCMSGroup", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCBTCMSGroup);
    mm.Add("MCBSignallingGroup", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCBSignallingGroup);
    mm.Add("HVACFaults", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HVACFaults);
    mm.Add("WFLFault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.WFLFault);
    mm.Add("CECBTripped", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.CECBTripped);
    mm.Add("UCCBTripped", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.UCCBTripped);
    mm.Add("PANCBTripped", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.PANCBTripped);
    mm.Add("ELCB1Tripped", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ELCB1Tripped);
    mm.Add("ELCB2Tripped", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ELCB2Tripped);
    mm.Add("ILCB1Tripped", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ILCB1Tripped);
    mm.Add("ILCB2Tripped", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ILCB2Tripped);
    mm.Add("APSCBTripped", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.APSCBTripped);
    mm.Add("FDUFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.FDUFailure);
    mm.Add("InternalFireAlarmTLActive", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.InternalFireAlarmTLActive);
    mm.Add("SmokeAlarmCABArea", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.SmokeAlarmCABArea);
    mm.Add("HeatAlarmEDB", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HeatAlarmEDB);
    mm.Add("FDUStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.FDUStatus);
    mm.Add("SFARStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.SFARStatus);
    mm.Add("UFARStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.UFARStatus);
    mm.Add("BUVDR_Active", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BUVDR_Active);
    mm.Add("CMCActivationFault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.CMCActivationFault);
    mm.Add("CMCDeactivationFault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.CMCDeactivationFault);
    mm.Add("HMIPower", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.HMIPower);
    mm.Add("ReverseMotionInForwardCommandMessage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ReverseMotionInForwardCommandMessage);
    mm.Add("ParkBrakeApplyCommand", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ParkBrakeApplyCommand);
    mm.Add("ParkBrakeReleaseCommand", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ParkBrakeReleaseCommand);
    mm.Add("UW_VCB", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.UW_VCB);
    mm.Add("PantoDownPBCmd", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.PantoDownPBCmd);
    mm.Add("DCUPower", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.DCUPower);
    mm.Add("VCBTripByCI", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.VCBTripByCI);
    mm.Add("CIIsolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.CIIsolated);
    mm.Add("BCG1Fault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BCG1Fault);
    mm.Add("BCG2Fault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BCG2Fault);
    mm.Add("BCG1Isolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BCG1Isolated);
    mm.Add("BCG2Isolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BCG2Isolated);
    mm.Add("BCG1IsolationFailed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BCG1IsolationFailed);
    mm.Add("EBbyPB", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.EBbyPB);
    mm.Add("VCBTripByAPS", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.VCBTripByAPS);
    mm.Add("VCBIsolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.VCBIsolated);
    mm.Add("MCDR", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCDR);
    mm.Add("MCDRFaulty", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCDRFaulty);
    mm.Add("ObstacleDetected", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ObstacleDetected);
    mm.Add("ODDFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.ODDFailure);
    mm.Add("MCBHVACGroupTripped", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.MCBHVACGroupTripped);
    mm.Add("Key_Switch_Status", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.Key_Switch_Status);
    mm.Add("VCBI_ACOvercurrent", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.VCBI_ACOvercurrent);
    mm.Add("VCBI_KAKContactorCI", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.VCBI_KAKContactorCI);
    mm.Add("EmergencyDoorNotOpenStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.EmergencyDoorNotOpenStatus);
    mm.Add("DoorProvenLoopOK", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.DoorProvenLoopOK);
    mm.Add("BrakeLoopCBTripped", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BrakeLoopCBTripped);
    mm.Add("DeadmanBypassStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.DeadmanBypassStatus);
    mm.Add("BLCOSwitchStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.BLCOSwitchStatus);
    mm.Add("NoOfEPICCutout", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.NoOfEPICCutout);
    mm.Add("WFLIsolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.WFLIsolated);
    mm.Add("RemoteMagnetValve1", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.RemoteMagnetValve1);
    mm.Add("RemoteMagnetValve2", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals.RemoteMagnetValve2);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem);
    mm.Add("PantographPosition", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem.PantographPosition);
    mm.Add("PantoUpStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem.PantoUpStatus);
    mm.Add("PantoDownStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem.PantoDownStatus);
    mm.Add("PantoIsolatedStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem.PantoIsolatedStatus);
    mm.Add("PantoRising", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem.PantoRising);
    mm.Add("PantoLowering", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem.PantoLowering);
    mm.Add("PantographFault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem.PantographFault);
    mm.Add("PantoADDFaultMessage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem.PantoADDFaultMessage);
    mm.Add("PantoORDFaultMessage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem.PantoORDFaultMessage);
    mm.Add("PantoRaiseFailureMessage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem.PantoRaiseFailureMessage);
    mm.Add("BrakeLoopADDIntervention", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem.BrakeLoopADDIntervention);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0]);
    mm.Add("TCUStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].TCUStatus);
    mm.Add("BogieFaulty", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].BogieFaulty);
    mm.Add("TractionNotIsolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].TractionNotIsolated);
    mm.Add("EDBrakeNotIsolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].EDBrakeNotIsolated);
    mm.Add("TCUSlideDetected", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].TCUSlideDetected);
    mm.Add("TCUSlipDetected", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].TCUSlipDetected);
    mm.Add("TractiveEffortAchieved", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].TractiveEffortAchieved);
    mm.Add("EDBrakingEffortAchieved", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].EDBrakingEffortAchieved);
    mm.Add("TractiveEffortPossible", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].TractiveEffortPossible);
    mm.Add("EDBrakingEffortPossible", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].EDBrakingEffortPossible);
    mm.Add("TractionPower", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].TractionPower);
    mm.Add("EDBrakingPower", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].EDBrakingPower);
    mm.Add("TractivePowerPossible", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].TractivePowerPossible);
    mm.Add("EDBrakingPowerPossible", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].EDBrakingPowerPossible);
    mm.Add("MotorSpeeds", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].MotorSpeeds);
    mm.Add("WSPTractionCutout", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].WSPTractionCutout);
    mm.Add("SpeedSensorFault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie[0].SpeedSensorFault);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem);
    mm.Add("Bogie", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.Bogie);
    mm.Add("TCU_KStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.TCU_KStatus);
    mm.Add("TCU_AKStatus", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.TCU_AKStatus);
    mm.Add("FilterVoltage", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.FilterVoltage);
    mm.Add("VehicleDerailed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.VehicleDerailed);
    mm.Add("TractionForce", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem.TractionForce);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CouplingSystem);
    mm.Add("UnitConnection", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CouplingSystem.UnitConnection);
    mm.Add("TrainConnection", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CouplingSystem.TrainConnection);
    mm.Add("TrainsCoupled", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CouplingSystem.TrainsCoupled);
    mm.Add("RescueModeCondition", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CouplingSystem.RescueModeCondition);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC);
    mm.Add("LeftDoorOpenRequest", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.LeftDoorOpenRequest);
    mm.Add("RightDoorOpenRequest", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.RightDoorOpenRequest);
    mm.Add("LeftDoorCloseRequest", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.LeftDoorCloseRequest);
    mm.Add("RightDoorCloseRequest", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.RightDoorCloseRequest);
    mm.Add("ATOTBDemandPct", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.ATOTBDemandPct);
    mm.Add("NoServiceBrakeOrder", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.NoServiceBrakeOrder);
    mm.Add("ATOTraction", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.ATOTraction);
    mm.Add("ATOBraking", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.ATOBraking);
    mm.Add("NotImmobilise", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.NotImmobilise);
    mm.Add("DriverModeSelection", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.DriverModeSelection);
    mm.Add("ATCBypassState", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.ATCBypassState);
    mm.Add("LeftSideDoorEnable", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.LeftSideDoorEnable);
    mm.Add("RightSideDoorEnable", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.RightSideDoorEnable);
    mm.Add("ATCWakeup", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.ATCWakeup);
    mm.Add("RollbackDetected", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.RollbackDetected);
    mm.Add("LeftDoorCloseIndicator", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.LeftDoorCloseIndicator);
    mm.Add("RightDoorCloseIndicator", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC.RightDoorCloseIndicator);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].BrakingSystem);
    mm.Add("BrakingForce", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].BrakingSystem.BrakingForce);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DynamicsSystem);
    mm.Add("VehicleSpeed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DynamicsSystem.VehicleSpeed);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0]);
    mm.Add("InputControlStates", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].InputControlStates);
    mm.Add("DisplayControl", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DisplayControl);
    mm.Add("Environment", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].Environment);
    mm.Add("PneumaticsSystem", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PneumaticsSystem);
    mm.Add("DoorSystem", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DoorSystem);
    mm.Add("ElectricalSignals", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].ElectricalSignals);
    mm.Add("PantographSystem", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].PantographSystem);
    mm.Add("TractionSystem", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].TractionSystem);
    mm.Add("CouplingSystem", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CouplingSystem);
    mm.Add("CBTC", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].CBTC);
    mm.Add("BrakingSystem", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].BrakingSystem);
    mm.Add("DynamicsSystem", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0[0].DynamicsSystem);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].InputControlStates);
    mm.Add("LocalDoorOpenPB", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].InputControlStates.LocalDoorOpenPB);
    mm.Add("OpenCloseWidget", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].InputControlStates.OpenCloseWidget);
    mm.Add("EmergencyAccessDevice", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].InputControlStates.EmergencyAccessDevice);
    mm.Add("EmergencyEgressDevice", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].InputControlStates.EmergencyEgressDevice);
    mm.Add("LocalDoorIsolationLock", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].InputControlStates.LocalDoorIsolationLock);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].ElectricalSignals);
    mm.Add("DoorControlPower", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].ElectricalSignals.DoorControlPower);
    mm.Add("DoorMotorPower", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].ElectricalSignals.DoorMotorPower);
    mm.Add("DoorEnable", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].ElectricalSignals.DoorEnable);
    mm.Add("DoorRelease", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].ElectricalSignals.DoorRelease);
    mm.Add("DoorOpen", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].ElectricalSignals.DoorOpen);
    mm.Add("DoorClose", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].ElectricalSignals.DoorClose);
    mm.Add("DoorEmergencyRelease", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].ElectricalSignals.DoorEmergencyRelease);
    mm.Add("DoorIsolation", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].ElectricalSignals.DoorIsolation);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults);
    mm.Add("ObjectObstructingDoorWhileClosing", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.ObjectObstructingDoorWhileClosing);
    mm.Add("ObjectObstructingDoorWhileOpening", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.ObjectObstructingDoorWhileOpening);
    mm.Add("DoorFailToClose", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DoorFailToClose);
    mm.Add("DoorFailToOpen", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DoorFailToOpen);
    mm.Add("DoorMotorCircuitFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DoorMotorCircuitFailure);
    mm.Add("DoorFailedToLock", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DoorFailedToLock);
    mm.Add("DoorFailedToUnlock", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DoorFailedToUnlock);
    mm.Add("DoorUnexpectedUnlocking", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DoorUnexpectedUnlocking);
    mm.Add("DoorDCUFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DoorDCUFailure);
    mm.Add("DCSRFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DCSRFailure);
    mm.Add("DCSLFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DCSLFailure);
    mm.Add("DLSRFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DLSRFailure);
    mm.Add("DLSLFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DLSLFailure);
    mm.Add("DoorMajorFault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DoorMajorFault);
    mm.Add("DoorUnauthorisedOpen", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DoorUnauthorisedOpen);
    mm.Add("UnexpectedDoorOpeningDetectedByCC", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.UnexpectedDoorOpeningDetectedByCC);
    mm.Add("EmergencyDoorMechanicalUnlocked", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.EmergencyDoorMechanicalUnlocked);
    mm.Add("DoorEmergencyHandleActivation", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults.DoorEmergencyHandleActivation);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0]);
    mm.Add("Config", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Config);
    mm.Add("InputControlStates", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].InputControlStates);
    mm.Add("ElectricalSignals", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].ElectricalSignals);
    mm.Add("Faults", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors[0].Faults);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0]);
    mm.Add("Doors", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0[0].Doors);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires);
    mm.Add("TW_TLPC1", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_TLPC1);
    mm.Add("TW22502", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW22502);
    mm.Add("TW_UncoupleSignal", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_UncoupleSignal);
    mm.Add("TW_TLGC1", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_TLGC1);
    mm.Add("TW25102", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW25102);
    mm.Add("TW25103", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW25103);
    mm.Add("TW26201", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW26201);
    mm.Add("TDI_110VDC", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TDI_110VDC);
    mm.Add("TW31203", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW31203);
    mm.Add("TW51204", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW51204);
    mm.Add("TW51206", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW51206);
    mm.Add("TW_ZeroSpeed", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_ZeroSpeed);
    mm.Add("TW81201", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW81201);
    mm.Add("TW81203", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW81203);
    mm.Add("TWPantoDNCmd", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TWPantoDNCmd);
    mm.Add("TW99102", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW99102);
    mm.Add("TW99103", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW99103);
    mm.Add("TW99104", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW99104);
    mm.Add("TW99105", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW99105);
    mm.Add("TW_LHPBR", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_LHPBR);
    mm.Add("TW_PADR", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_PADR);
    mm.Add("TW_CC_TrainWakeup", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_CC_TrainWakeup);
    mm.Add("TW41701", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW41701);
    mm.Add("TW41704", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW41704);
    mm.Add("TW41A04", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW41A04);
    mm.Add("TW_ATOState", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_ATOState);
    mm.Add("TWNotBraking", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TWNotBraking);
    mm.Add("TWMotoring", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TWMotoring);
    mm.Add("TWNotFSB", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TWNotFSB);
    mm.Add("TWCabASelected", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TWCabASelected);
    mm.Add("TWCabAKeySwitchON", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TWCabAKeySwitchON);
    mm.Add("TWCabBSelected", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TWCabBSelected);
    mm.Add("TWCabBKeySwitchON", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TWCabBKeySwitchON);
    mm.Add("TW31101", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW31101);
    mm.Add("TW31101V", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW31101V);
    mm.Add("TW31102", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW31102);
    mm.Add("TW31103", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW31103);
    mm.Add("TW22212", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW22212);
    mm.Add("TW11105", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW11105);
    mm.Add("TW_TSDR", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_TSDR);
    mm.Add("TW_TLGC3", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_TLGC3);
    mm.Add("TW_TLGC2", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_TLGC2);
    mm.Add("TW_TLGC9", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_TLGC9);
    mm.Add("TW_TLGC10", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_TLGC10);
    mm.Add("TW_TLGC11", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_TLGC11);
    mm.Add("TW_SaloonFire", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_SaloonFire);
    mm.Add("TW_Integrity", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_Integrity);
    mm.Add("TW22204", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW22204);
    mm.Add("TW_VCBTripByCI", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_VCBTripByCI);
    mm.Add("TW_APSFault", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_APSFault);
    mm.Add("TW_VCBTripByAPS", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_VCBTripByAPS);
    mm.Add("TW_LDISRR", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_LDISRR);
    mm.Add("TW_LDISLR", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_LDISLR);
    mm.Add("TW_11104", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires.TW_11104);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires);
    mm.Add("UW11104", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW11104);
    mm.Add("UW26101", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW26101);
    mm.Add("UW33101", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW33101);
    mm.Add("LW32101_02_03V", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.LW32101_02_03V);
    mm.Add("UW_TPOR", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_TPOR);
    mm.Add("UW_BCGPower", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_BCGPower);
    mm.Add("UW_VCB", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_VCB);
    mm.Add("UW_TCU_KStatus", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_TCU_KStatus);
    mm.Add("UW_TCU_AKStatus", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_TCU_AKStatus);
    mm.Add("KContactorState", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.KContactorState);
    mm.Add("AKContactorState", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.AKContactorState);
    mm.Add("APSPower", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.APSPower);
    mm.Add("Contactor_Fault", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.Contactor_Fault);
    mm.Add("UW_DC110VLowFault", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_DC110VLowFault);
    mm.Add("UW_VCBTrip", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_VCBTrip);
    mm.Add("UW_PADR", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_PADR);
    mm.Add("UW_BUVDR", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_BUVDR);
    mm.Add("UW_PantoDown", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_PantoDown);
    mm.Add("UW_ACOvercurrent", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_ACOvercurrent);
    mm.Add("UW_KAKContactorCI", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_KAKContactorCI);
    mm.Add("UW_VCBTripByCI", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_VCBTripByCI);
    mm.Add("UW_APSFault", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_APSFault);
    mm.Add("UW_VCBTripByAPS", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_VCBTripByAPS);
    mm.Add("UW_TSDR", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires.UW_TSDR);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires);
    mm.Add("TWForward", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TWForward);
    mm.Add("TWReverse", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TWReverse);
    mm.Add("TW_LeftDoorClose", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW_LeftDoorClose);
    mm.Add("TW_RightDoorClose", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW_RightDoorClose);
    mm.Add("TW_LeftDoorOpen", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW_LeftDoorOpen);
    mm.Add("TW_RightDoorOpen", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW_RightDoorOpen);
    mm.Add("TW81114", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW81114);
    mm.Add("TW81115", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW81115);
    mm.Add("TW_LDE", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW_LDE);
    mm.Add("TW_RDE", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW_RDE);
    mm.Add("TW_LHDC", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW_LHDC);
    mm.Add("TW_RHDC", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW_RHDC);
    mm.Add("TW_LDO_LH", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW_LDO_LH);
    mm.Add("TW_RDO_LH", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires.TW_RDO_LH);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ElectricalSystem_o2[0].CoupledCabsWires);
    mm.Add("TWCouplingForward", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].CoupledCabsWires.TWCouplingForward);
    mm.Add("TWCouplingReturn", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].CoupledCabsWires.TWCouplingReturn);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ElectricalSystem_o2[0].MiscWires);
    mm.Add("TW_TLGC3", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].MiscWires.TW_TLGC3);
    mm.Add("Dummy", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].MiscWires.Dummy);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ElectricalSystem_o2[0]);
    mm.Add("TrainWires", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].TrainWires);
    mm.Add("UnitWires", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].UnitWires);
    mm.Add("OrientationWires", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].OrientationWires);
    mm.Add("CoupledCabsWires", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].CoupledCabsWires);
    mm.Add("MiscWires", model.Model().BEML_EMU_B.ElectricalSystem_o2[0].MiscWires);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.Transform);
    mm.Add("Position", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.Transform.Position);
    mm.Add("OrientationDCM", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.Transform.OrientationDCM);
    mm.Add("OrientationQ", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.Transform.OrientationQ);
    mm.Add("H", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.Transform.H);
    mm.Add("P", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.Transform.P);
    mm.Add("R", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.Transform.R);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics);
    mm.Add("Transform", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.Transform);
    mm.Add("Velocity", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.Velocity);
    mm.Add("AngularVelocity", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.AngularVelocity);
    mm.Add("Acceleration", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.Acceleration);
    mm.Add("AngularAcceleration", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics.AngularAcceleration);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Effects);
    mm.Add("ExternalEffects", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Effects.ExternalEffects);
    mm.Add("LongitudinalJolt", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Effects.LongitudinalJolt);
    mm.Add("LateralJolt", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Effects.LateralJolt);
    mm.Add("VerticalJolt", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Effects.VerticalJolt);
    mm.Add("VerticalJoltDown", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Effects.VerticalJoltDown);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Environment);
    mm.Add("Contact", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Environment.Contact);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0]);
    mm.Add("Dynamics", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Dynamics);
    mm.Add("Effects", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Effects);
    mm.Add("Environment", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Environment);
    mm.Add("Tuning", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].Tuning);
    mm.Add("MotionBaseSafetyCutout", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0[0].MotionBaseSafetyCutout);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_BrakesVehicleInput_at_inport_0[0]);
    mm.Add("VehicleVelocity", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_BrakesVehicleInput_at_inport_0[0].VehicleVelocity);
    mm.Add("WheelSpeed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_BrakesVehicleInput_at_inport_0[0].WheelSpeed);
    mm.Add("BrakeCylinderPressure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_BrakesVehicleInput_at_inport_0[0].BrakeCylinderPressure);
    mm.Add("ParkBrakePressure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_BrakesVehicleInput_at_inport_0[0].ParkBrakePressure);
    mm.Add("ManualHandBrakeApplication", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_BrakesVehicleInput_at_inport_0[0].ManualHandBrakeApplication);
    mm.Add("ElectricParkBrakeApplication", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_BrakesVehicleInput_at_inport_0[0].ElectricParkBrakeApplication);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].Bogie[0]);
    mm.Add("TractionBogieFaulty", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].Bogie[0].TractionBogieFaulty);
    mm.Add("DynamicBrakeNotAvailable", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].Bogie[0].DynamicBrakeNotAvailable);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0]);
    mm.Add("Bogie", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].Bogie);
    mm.Add("PCUFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].PCUFailure);
    mm.Add("CIFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].CIFailure);
    mm.Add("CIIsolated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].CIIsolated);
    mm.Add("CIMicroprocessorAbnormal", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].CIMicroprocessorAbnormal);
    mm.Add("CILocalCommunicationFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].CILocalCommunicationFailure);
    mm.Add("CIGateSignalAbnormal", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].CIGateSignalAbnormal);
    mm.Add("CITCMSCommunicationFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].CITCMSCommunicationFailure);
    mm.Add("DCLinkOverVoltageLevel1", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].DCLinkOverVoltageLevel1);
    mm.Add("DCLinkLowVoltageLevel1", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].DCLinkLowVoltageLevel1);
    mm.Add("HeavyWheelSlide", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].HeavyWheelSlide);
    mm.Add("HeavyWheelSlip", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].HeavyWheelSlip);
    mm.Add("CIAKOpenFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].CIAKOpenFailure);
    mm.Add("CIKOpenFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].CIKOpenFailure);
    mm.Add("DerailmentDetectedRightSide", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].DerailmentDetectedRightSide);
    mm.Add("BogieDerailed", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].BogieDerailed);
    mm.Add("WSPActiveBogie1", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].WSPActiveBogie1);
    mm.Add("BECU1FailureAllSpeedSensors", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0[0].BECU1FailureAllSpeedSensors);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0]);
    mm.Add("MasterControllerandTrainLineIncongruence", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].MasterControllerandTrainLineIncongruence);
    mm.Add("TCMSDisplayHanged", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].TCMSDisplayHanged);
    mm.Add("TCMSFailure", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].TCMSFailure);
    mm.Add("NeutralZoneVCBBackupFunctionActivated", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].NeutralZoneVCBBackupFunctionActivated);
    mm.Add("CCUCommunicationError", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].CCUCommunicationError);
    mm.Add("UnexpectedDoorOpeningDetectedByCC", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].UnexpectedDoorOpeningDetectedByCC);
    mm.Add("RIO1Fault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].RIO1Fault);
    mm.Add("RIO1RIO2Fault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].RIO1RIO2Fault);
    mm.Add("ERFault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].ERFault);
    mm.Add("TractionCutModeSelectorInATPATOUTO", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].TractionCutModeSelectorInATPATOUTO);
    mm.Add("HighTractiveEffortRequired", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].HighTractiveEffortRequired);
    mm.Add("DynamicBrakeCutOut", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].DynamicBrakeCutOut);
    mm.Add("BECUPWRAndBRKCmdAtSameTime", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].BECUPWRAndBRKCmdAtSameTime);
    mm.Add("BECU2MinorFault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].BECU2MinorFault);
    mm.Add("BECUMajorFault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].BECUMajorFault);
    mm.Add("BECUMajorFaultWired", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0[0].BECUMajorFaultWired);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleConfig_at_inport_0[0]);
    mm.Add("HasCab", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleConfig_at_inport_0[0].HasCab);
    mm.Add("NumberOfTractionBogies", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleConfig_at_inport_0[0].NumberOfTractionBogies);
    mm.Add("NumberOfBrakingBogies", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleConfig_at_inport_0[0].NumberOfBrakingBogies);
    mm.Add("IsLastVehicle", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleConfig_at_inport_0[0].IsLastVehicle);
    mm.Add("IsFirstVehicle", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleConfig_at_inport_0[0].IsFirstVehicle);
    mm.Add("IsMCar", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleConfig_at_inport_0[0].IsMCar);
    mm.Add("IsTCar", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleConfig_at_inport_0[0].IsTCar);
    mm.Add("HasVCB", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleConfig_at_inport_0[0].HasVCB);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_VehConfig_at_inport_0[0]);
    mm.Add("Enabled", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_VehConfig_at_inport_0[0].Enabled);
    mm.Add("Orientation", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_VehConfig_at_inport_0[0].Orientation);
    mm.Add("HasCab", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_VehConfig_at_inport_0[0].HasCab);
    mm.Add("IsFirstVehicle", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_VehConfig_at_inport_0[0].IsFirstVehicle);
    mm.Add("IsLastVehicle", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_VehConfig_at_inport_0[0].IsLastVehicle);
    mm.Add("UnitConnection", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_VehConfig_at_inport_0[0].UnitConnection);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_i[0]);
    mm.Add("TractionForceVariation", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_i[0].TractionForceVariation);
    mm.Add("DynamicBrakeForceVariation", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_i[0].DynamicBrakeForceVariation);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_im[0]);
    mm.Add("Reset", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_im[0].Reset);
    mm.Add("StartupState", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_im[0].StartupState);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_j[0]);
    mm.Add("AllDoorsLeftOpen", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_j[0].AllDoorsLeftOpen);
    mm.Add("AllDoorsRightOpen", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_j[0].AllDoorsRightOpen);
    mm.RegisterStruct(model.Model().BEML_EMU_B.ImpAsg_InsertedFor_BrakesFaults_at_inport_0[0]);
    mm.Add("BrakeShoeOverheatFault", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_BrakesFaults_at_inport_0[0].BrakeShoeOverheatFault);
    mm.RegisterStruct(model.Model().BEML_EMU_B.CoreSubsys_m[0].JoltDuration_o);
    mm.Add("LogicalOperator1", model.Model().BEML_EMU_B.CoreSubsys_m[0].JoltDuration_o.LogicalOperator1);
    mm.RegisterStruct(model.Model().BEML_EMU_B.CoreSubsys_m[0]);
    mm.Add("ManualPosition", model.Model().BEML_EMU_B.CoreSubsys_m[0].ManualPosition);
    mm.Add("IC", model.Model().BEML_EMU_B.CoreSubsys_m[0].IC);
    mm.Add("VectorConcatenate1", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1);
    mm.Add("VectorConcatenate", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate);
    mm.Add("VectorConcatenate1_j", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_j);
    mm.Add("VectorConcatenate_p", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_p);
    mm.Add("VectorConcatenate1_jf", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_jf);
    mm.Add("VectorConcatenate_m", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_m);
    mm.Add("VectorConcatenate1_n", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_n);
    mm.Add("VectorConcatenate_k", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_k);
    mm.Add("VectorConcatenate1_i", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_i);
    mm.Add("VectorConcatenate_ko", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_ko);
    mm.Add("VectorConcatenate1_o", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_o);
    mm.Add("VectorConcatenate_a", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_a);
    mm.Add("VectorConcatenate1_c", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_c);
    mm.Add("VectorConcatenate_g", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_g);
    mm.Add("VectorConcatenate1_iu", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_iu);
    mm.Add("VectorConcatenate_o", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_o);
    mm.Add("VectorConcatenate1_h", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_h);
    mm.Add("VectorConcatenate_o4", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_o4);
    mm.Add("VectorConcatenate1_l", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_l);
    mm.Add("VectorConcatenate_ge", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_ge);
    mm.Add("VectorConcatenate1_l0", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_l0);
    mm.Add("VectorConcatenate_i", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_i);
    mm.Add("VectorConcatenate1_g", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_g);
    mm.Add("VectorConcatenate_go", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_go);
    mm.Add("VectorConcatenate1_om", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_om);
    mm.Add("VectorConcatenate_n", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_n);
    mm.Add("VectorConcatenate1_iv", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_iv);
    mm.Add("VectorConcatenate_i4", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_i4);
    mm.Add("VectorConcatenate1_hg", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_hg);
    mm.Add("VectorConcatenate_d", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_d);
    mm.Add("VectorConcatenate1_b", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate1_b);
    mm.Add("VectorConcatenate_oc", model.Model().BEML_EMU_B.CoreSubsys_m[0].VectorConcatenate_oc);
    mm.Add("JoltDuration_o", model.Model().BEML_EMU_B.CoreSubsys_m[0].JoltDuration_o);
    mm.Add("JoltDuration_n", model.Model().BEML_EMU_B.CoreSubsys_m[0].JoltDuration_n);
    mm.Add("JoltDuration_e", model.Model().BEML_EMU_B.CoreSubsys_m[0].JoltDuration_e);
    mm.Add("JoltDuration", model.Model().BEML_EMU_B.CoreSubsys_m[0].JoltDuration);
    mm.RegisterStruct(model.Model().BEML_EMU_B.CoreSubsys_h[0]);
    mm.Add("ATOTBDemand", model.Model().BEML_EMU_B.CoreSubsys_h[0].ATOTBDemand);
    mm.Add("ATOBrake", model.Model().BEML_EMU_B.CoreSubsys_h[0].ATOBrake);
    mm.Add("ATOTraction", model.Model().BEML_EMU_B.CoreSubsys_h[0].ATOTraction);
    mm.RegisterStruct(model.Model().BEML_EMU_B);
    mm.Add("ImpAsg_InsertedFor_ModelInputs_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_ModelInputs_at_inport_0);
    mm.Add("UnitDelay3", model.Model().BEML_EMU_B.UnitDelay3);
    mm.Add("UnitDelay6", model.Model().BEML_EMU_B.UnitDelay6);
    mm.Add("ProcessedVehicleInput", model.Model().BEML_EMU_B.ProcessedVehicleInput);
    mm.Add("ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleInput_at_inport_0);
    mm.Add("UnitDelay", model.Model().BEML_EMU_B.UnitDelay);
    mm.Add("UnitDelay_p", model.Model().BEML_EMU_B.UnitDelay_p);
    mm.Add("UnitDelay1", model.Model().BEML_EMU_B.UnitDelay1);
    mm.Add("UnitDelay3_m", model.Model().BEML_EMU_B.UnitDelay3_m);
    mm.Add("UnitDelay_n", model.Model().BEML_EMU_B.UnitDelay_n);
    mm.Add("UnitDelay5", model.Model().BEML_EMU_B.UnitDelay5);
    mm.Add("ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsVehicleInput_at_inport_0);
    mm.Add("UnitDelay_j", model.Model().BEML_EMU_B.UnitDelay_j);
    mm.Add("ImpAsg_InsertedFor_CouplingInput_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_CouplingInput_at_inport_0);
    mm.Add("ElectricalSystem_o2", model.Model().BEML_EMU_B.ElectricalSystem_o2);
    mm.Add("UnitDelay2", model.Model().BEML_EMU_B.UnitDelay2);
    mm.Add("UnitDelay1_k", model.Model().BEML_EMU_B.UnitDelay1_k);
    mm.Add("UnitDelay4", model.Model().BEML_EMU_B.UnitDelay4);
    mm.Add("ImpAsg_InsertedFor_MotionBaseInput_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_MotionBaseInput_at_inport_0);
    mm.Add("UnitDelay7", model.Model().BEML_EMU_B.UnitDelay7);
    mm.Add("BusAssignment", model.Model().BEML_EMU_B.BusAssignment);
    mm.Add("ImpAsg_InsertedFor_BrakesVehicleInput_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_BrakesVehicleInput_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_TractionFaults_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TractionFaults_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_TCMSFaults_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSFaults_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_TCMSVehicleConfig_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_TCMSVehicleConfig_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_VehConfig_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_VehConfig_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_Overrides_at_inport_0_i", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_i);
    mm.Add("ImpAsg_InsertedFor_Overrides_at_inport_0_im", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_im);
    mm.Add("ImpAsg_InsertedFor_Overrides_at_inport_0_j", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_Overrides_at_inport_0_j);
    mm.Add("ImpAsg_InsertedFor_DoorsConfig_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_DoorsConfig_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_BrakesFaults_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_BrakesFaults_at_inport_0);
    mm.Add("NOT", model.Model().BEML_EMU_B.NOT);
    mm.Add("ImpAsg_InsertedFor_HasCab_at_inport_0", model.Model().BEML_EMU_B.ImpAsg_InsertedFor_HasCab_at_inport_0);
    mm.Add("CoreSubsys_m", model.Model().BEML_EMU_B.CoreSubsys_m);
    mm.Add("CoreSubsys_h", model.Model().BEML_EMU_B.CoreSubsys_h);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.TrainWires_l[0].CoreSubsys.sf_EnumeratedVoltages);
    mm.Add("enum_volt", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.TrainWires_l[0].CoreSubsys.sf_EnumeratedVoltages.enum_volt);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.TrainWires_l[0].CoreSubsys);
    mm.Add("sf_EnumeratedVoltages", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.TrainWires_l[0].CoreSubsys.sf_EnumeratedVoltages);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.TrainWires_l[0]);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.TrainWires_l[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_ob);
    mm.Add("w", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_ob.w);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_lh);
    mm.Add("w1", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_lh.w1);
    mm.Add("w2", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_lh.w2);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb);
    mm.Add("UnitDelay", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.UnitDelay);
    mm.Add("TrainWires_l", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.TrainWires_l);
    mm.Add("TrainWires", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.TrainWires);
    mm.Add("sf_TrainWireMax_ob", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_ob);
    mm.Add("sf_EnumeratedVoltages_a", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_a);
    mm.Add("sf_TrainWireMax_d", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_d);
    mm.Add("sf_EnumeratedVoltages_k2", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_k2);
    mm.Add("sf_OrientationSwap_lh", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_lh);
    mm.Add("sf_OrientationSwap_as", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_as);
    mm.Add("sf_TrainWireMax_om", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_om);
    mm.Add("sf_EnumeratedVoltages_ga", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_ga);
    mm.Add("sf_TrainWireMax_nf", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_nf);
    mm.Add("sf_EnumeratedVoltages_oe", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_oe);
    mm.Add("sf_OrientationSwap_f", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_f);
    mm.Add("sf_OrientationSwap_in", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_in);
    mm.Add("sf_TrainWireMax_j", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_j);
    mm.Add("sf_EnumeratedVoltages_kl", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_kl);
    mm.Add("sf_TrainWireMax_aj", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_aj);
    mm.Add("sf_EnumeratedVoltages_p", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_p);
    mm.Add("sf_OrientationSwap_h2", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_h2);
    mm.Add("sf_OrientationSwap_df", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_df);
    mm.Add("sf_TrainWireMax_b", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_b);
    mm.Add("sf_EnumeratedVoltages_gb", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_gb);
    mm.Add("sf_TrainWireMax_ae", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_ae);
    mm.Add("sf_EnumeratedVoltages_hg", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_hg);
    mm.Add("sf_OrientationSwap_a", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_a);
    mm.Add("sf_OrientationSwap_dc", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_dc);
    mm.Add("sf_TrainWireMax_p", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_p);
    mm.Add("sf_EnumeratedVoltages_e", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_e);
    mm.Add("sf_TrainWireMax_o", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_o);
    mm.Add("sf_EnumeratedVoltages_kp", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_kp);
    mm.Add("sf_OrientationSwap_i", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_i);
    mm.Add("sf_OrientationSwap_l", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_l);
    mm.Add("sf_TrainWireMax_i0", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_i0);
    mm.Add("sf_EnumeratedVoltages_k", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_k);
    mm.Add("sf_TrainWireMax_i", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_i);
    mm.Add("sf_EnumeratedVoltages_o", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_o);
    mm.Add("sf_OrientationSwap_hz", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_hz);
    mm.Add("sf_OrientationSwap_k", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_k);
    mm.Add("sf_TrainWireMax_a", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_a);
    mm.Add("sf_EnumeratedVoltages_f", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_f);
    mm.Add("sf_TrainWireMax_n", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_n);
    mm.Add("sf_EnumeratedVoltages_g", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_g);
    mm.Add("sf_OrientationSwap_h", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_h);
    mm.Add("sf_OrientationSwap_dr", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_dr);
    mm.Add("sf_TrainWireMax_c", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax_c);
    mm.Add("sf_EnumeratedVoltages_h", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages_h);
    mm.Add("sf_TrainWireMax", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_TrainWireMax);
    mm.Add("sf_EnumeratedVoltages", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_EnumeratedVoltages);
    mm.Add("sf_OrientationSwap_d", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap_d);
    mm.Add("sf_OrientationSwap", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb.sf_OrientationSwap);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtdw);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtdw.UnitDelay_DSTATE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData);
    mm.Add("rtb", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtb);
    mm.Add("rtdw", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtdw);
    AddRTM(mm, model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtm);
    mm.Add("rtm", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData.rtm);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum);
    mm.Add("TractionBogiesEquipped", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.TractionBogiesEquipped);
    mm.Add("BrakingBogiesEquipped", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.BrakingBogiesEquipped);
    mm.Add("TractiveEffortAchieved", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.TractiveEffortAchieved);
    mm.Add("EDBrakingEffortAchieved", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.EDBrakingEffortAchieved);
    mm.Add("TractiveEffortPossible", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.TractiveEffortPossible);
    mm.Add("EDBrakingEffortPossible", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.EDBrakingEffortPossible);
    mm.Add("TractivePowerAchieved", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.TractivePowerAchieved);
    mm.Add("EDBrakingPowerAchieved", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.EDBrakingPowerAchieved);
    mm.Add("TractivePowerPossible", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.TractivePowerPossible);
    mm.Add("EDBrakingPowerPossible", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.EDBrakingPowerPossible);
    mm.Add("EstimatedMass", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.EstimatedMass);
    mm.Add("TractionBogiesAvailable", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.TractionBogiesAvailable);
    mm.Add("EDBrakingBogiesAvailable", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum.EDBrakingBogiesAvailable);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire);
    mm.Add("TractionPowerLimit", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.TractionPowerLimit);
    mm.Add("EDBrakingPowerLimit", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.EDBrakingPowerLimit);
    mm.Add("EnableTractionPowerLimit", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.EnableTractionPowerLimit);
    mm.Add("EnableEDBrakingPowerLimit", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.EnableEDBrakingPowerLimit);
    mm.Add("MaxTractionAccelerationTargetOverride", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.MaxTractionAccelerationTargetOverride);
    mm.Add("MaxBrakingDecelerationTargetOverride", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.MaxBrakingDecelerationTargetOverride);
    mm.Add("EnableTractionTargetOverride", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.EnableTractionTargetOverride);
    mm.Add("EnableBrakingTargetOverride", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.EnableBrakingTargetOverride);
    mm.Add("TractionCommand", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.TractionCommand);
    mm.Add("BrakingCommand", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.BrakingCommand);
    mm.Add("HoldingBrakeStatus", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.HoldingBrakeStatus);
    mm.Add("TCMSSpeedLimit", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.TCMSSpeedLimit);
    mm.Add("Overspeed", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.Overspeed);
    mm.Add("EstimatedMass", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.EstimatedMass);
    mm.Add("HTERequired", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.HTERequired);
    mm.Add("WashModeActive", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.WashModeActive);
    mm.Add("TractionForce", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.TractionForce);
    mm.Add("ShuntModeActive", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.ShuntModeActive);
    mm.Add("ATPLowSpeedCutoutModeActive", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire.ATPLowSpeedCutoutModeActive);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].DoorsTrainWire);
    mm.Add("LeftDoorOpenRequest", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].DoorsTrainWire.LeftDoorOpenRequest);
    mm.Add("RightDoorOpenRequest", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].DoorsTrainWire.RightDoorOpenRequest);
    mm.Add("LeftDoorCloseRequest", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].DoorsTrainWire.LeftDoorCloseRequest);
    mm.Add("RightDoorCloseRequest", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].DoorsTrainWire.RightDoorCloseRequest);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire);
    mm.Add("TW_EnergizeTLWRFb", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_EnergizeTLWRFb);
    mm.Add("TW_RMF_RMRFb", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_RMF_RMRFb);
    mm.Add("TW_ATPFb", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_ATPFb);
    mm.Add("TW_PantoDownCmdTrip", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_PantoDownCmdTrip);
    mm.Add("TW_TPOR", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_TPOR);
    mm.Add("TW_POFFPB", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_POFFPB);
    mm.Add("TW_TSDR", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_TSDR);
    mm.Add("TW_TSDDR", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_TSDDR);
    mm.Add("TW_ForwardDirection", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_ForwardDirection);
    mm.Add("TW_ReverseDirection", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_ReverseDirection);
    mm.Add("TW_HLSwitchStatus", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_HLSwitchStatus);
    mm.Add("TW_EmerDoorOpened", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_EmerDoorOpened);
    mm.Add("TW_CallOnLightStatus", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_CallOnLightStatus);
    mm.Add("TW_ZeroSpeed", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_ZeroSpeed);
    mm.Add("TW_UTOModeActive", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_UTOModeActive);
    mm.Add("TW_DriverModeSelection", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_DriverModeSelection);
    mm.Add("TW_KeySwitchStatus", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_KeySwitchStatus);
    mm.Add("TW_ShutdownFailure", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire.TW_ShutdownFailure);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitWire);
    mm.Add("PropulsionIsolated", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitWire.PropulsionIsolated);
    mm.Add("PropulsionFault", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitWire.PropulsionFault);
    mm.Add("PropulsionActive", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitWire.PropulsionActive);
    mm.Add("PropulsionEnabled", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitWire.PropulsionEnabled);
    mm.Add("CI_K_AK_Status", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitWire.CI_K_AK_Status);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].PneumaticTrainSum);
    mm.Add("NoOfBogieIsolated", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].PneumaticTrainSum.NoOfBogieIsolated);
    mm.Add("NoOfBrakesIsolated", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].PneumaticTrainSum.NoOfBrakesIsolated);
    mm.Add("NoOfRPressCutout", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].PneumaticTrainSum.NoOfRPressCutout);
    mm.Add("NoOfEPICCutout", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].PneumaticTrainSum.NoOfEPICCutout);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainSum);
    mm.Add("ControlKey", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainSum.ControlKey);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0]);
    mm.Add("TractionBrakingUnitSum", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitSum);
    mm.Add("TractionBrakingTrainWire", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingTrainWire);
    mm.Add("DoorsTrainWire", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].DoorsTrainWire);
    mm.Add("ElectricalTrainWire", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainWire);
    mm.Add("TractionBrakingUnitWire", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].TractionBrakingUnitWire);
    mm.Add("PneumaticTrainSum", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].PneumaticTrainSum);
    mm.Add("ElectricalTrainSum", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay[0].ElectricalTrainSum);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].sf_ReplaceZeros_j);
    mm.Add("y", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].sf_ReplaceZeros_j.y);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit_gt);
    mm.Add("Compare", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit_gt.Compare);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit_o);
    mm.Add("Compare", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit_o.Compare);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOffDelayNoInit_b);
    mm.Add("LogicalOperator1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOffDelayNoInit_b.LogicalOperator1);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOffDelayNoInit3);
    mm.Add("LogicalOperator1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOffDelayNoInit3.LogicalOperator1);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0]);
    mm.Add("BusAssignment", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].BusAssignment);
    mm.Add("Merge5", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].Merge5);
    mm.Add("BusCreator", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].BusCreator);
    mm.Add("Merge1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].Merge1);
    mm.Add("Merge3", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].Merge3);
    mm.Add("BusCreator_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].BusCreator_m);
    mm.Add("DoorsTrainWireSource", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].DoorsTrainWireSource);
    mm.Add("HMIPower", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].HMIPower);
    mm.Add("HMIPower_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].HMIPower_e);
    mm.Add("Merge", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].Merge);
    mm.Add("SpecialCaseOvSpd", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].SpecialCaseOvSpd);
    mm.Add("SpecialCaseSpeedLimit", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].SpecialCaseSpeedLimit);
    mm.Add("VCBCloseReq", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].VCBCloseReq);
    mm.Add("HMIPower_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].HMIPower_b);
    mm.Add("BusCreator1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].BusCreator1);
    mm.Add("sf_ReplaceZeros_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].sf_ReplaceZeros_j);
    mm.Add("sf_ReplaceZeros", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].sf_ReplaceZeros);
    mm.Add("TimerOnDelayNoInit_gt", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit_gt);
    mm.Add("TimerOnDelayNoInit_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit_o);
    mm.Add("TimerOnDelayNoInit2", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit2);
    mm.Add("TimerOnDelayNoInit1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit1);
    mm.Add("TimerOnDelayNoInit_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit_b);
    mm.Add("TimerOffDelayNoInit_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOffDelayNoInit_b);
    mm.Add("TimerOnDelayNoInit_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit_f);
    mm.Add("TimerOffDelayNoInit_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOffDelayNoInit_p);
    mm.Add("TimerOnDelayNoInit", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit);
    mm.Add("TimerOffDelayNoInit3", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOffDelayNoInit3);
    mm.Add("TimerOffDelayNoInit2", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOffDelayNoInit2);
    mm.Add("TimerOffDelayNoInit1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOffDelayNoInit1);
    mm.Add("TimerOffDelayNoInit", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOffDelayNoInit);
    mm.Add("TimerOnDelayNoInit9_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit9_h);
    mm.Add("TimerOnDelayNoInit8_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit8_b);
    mm.Add("TimerOnDelayNoInit7_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit7_h);
    mm.Add("TimerOnDelayNoInit6_dm", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit6_dm);
    mm.Add("TimerOnDelayNoInit5_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit5_o);
    mm.Add("TimerOnDelayNoInit4_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit4_h);
    mm.Add("TimerOnDelayNoInit3_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit3_b);
    mm.Add("TimerOnDelayNoInit23_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit23_o);
    mm.Add("TimerOnDelayNoInit22_ka", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit22_ka);
    mm.Add("TimerOnDelayNoInit21_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit21_d);
    mm.Add("TimerOnDelayNoInit20_hm", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit20_hm);
    mm.Add("TimerOnDelayNoInit2_k3", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit2_k3);
    mm.Add("TimerOnDelayNoInit19_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit19_a);
    mm.Add("TimerOnDelayNoInit18_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit18_k);
    mm.Add("TimerOnDelayNoInit17_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit17_e);
    mm.Add("TimerOnDelayNoInit16_ed", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit16_ed);
    mm.Add("TimerOnDelayNoInit15_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit15_o);
    mm.Add("TimerOnDelayNoInit14_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit14_e);
    mm.Add("TimerOnDelayNoInit13_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit13_g);
    mm.Add("TimerOnDelayNoInit12_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit12_b);
    mm.Add("TimerOnDelayNoInit11_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit11_a);
    mm.Add("TimerOnDelayNoInit10_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit10_i);
    mm.Add("TimerOnDelayNoInit1_kz", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit1_kz);
    mm.Add("TimerOnDelayNoInit7_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit7_e);
    mm.Add("TimerOnDelayNoInit6_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit6_l);
    mm.Add("TimerOnDelayNoInit5_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit5_h);
    mm.Add("TimerOnDelayNoInit4_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit4_b);
    mm.Add("TimerOnDelayNoInit3_dn", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit3_dn);
    mm.Add("TimerOnDelayNoInit2_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit2_j);
    mm.Add("TimerOnDelayNoInit1_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit1_j);
    mm.Add("TimerOnDelayNoInit2_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit2_n);
    mm.Add("TimerOnDelayNoInit1_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit1_f);
    mm.Add("TimerOnDelayNoInit_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit_g);
    mm.Add("TimerOnDelayNoInit8_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit8_d);
    mm.Add("TimerOnDelayNoInit7_id", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit7_id);
    mm.Add("TimerOnDelayNoInit6_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit6_o);
    mm.Add("TimerOnDelayNoInit56_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit56_p);
    mm.Add("TimerOnDelayNoInit55_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit55_i);
    mm.Add("TimerOnDelayNoInit54_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit54_f);
    mm.Add("TimerOnDelayNoInit53_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit53_m);
    mm.Add("TimerOnDelayNoInit51_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit51_p);
    mm.Add("TimerOnDelayNoInit5_a0", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit5_a0);
    mm.Add("TimerOnDelayNoInit48_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit48_m);
    mm.Add("TimerOnDelayNoInit47_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit47_h);
    mm.Add("TimerOnDelayNoInit46_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit46_o);
    mm.Add("TimerOnDelayNoInit45_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit45_p);
    mm.Add("TimerOnDelayNoInit44_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit44_o);
    mm.Add("TimerOnDelayNoInit41_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit41_n);
    mm.Add("TimerOnDelayNoInit4_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit4_p);
    mm.Add("TimerOnDelayNoInit38_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit38_l);
    mm.Add("TimerOnDelayNoInit37_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit37_d);
    mm.Add("TimerOnDelayNoInit35_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit35_l);
    mm.Add("TimerOnDelayNoInit34_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit34_g);
    mm.Add("TimerOnDelayNoInit33_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit33_o);
    mm.Add("TimerOnDelayNoInit32_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit32_i);
    mm.Add("TimerOnDelayNoInit3_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit3_j);
    mm.Add("TimerOnDelayNoInit29_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit29_p);
    mm.Add("TimerOnDelayNoInit28_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit28_o);
    mm.Add("TimerOnDelayNoInit27_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit27_h);
    mm.Add("TimerOnDelayNoInit26_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit26_p);
    mm.Add("TimerOnDelayNoInit24_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit24_g);
    mm.Add("TimerOnDelayNoInit23_cr", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit23_cr);
    mm.Add("TimerOnDelayNoInit22_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit22_k);
    mm.Add("TimerOnDelayNoInit21_fl", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit21_fl);
    mm.Add("TimerOnDelayNoInit20_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit20_g);
    mm.Add("TimerOnDelayNoInit2_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit2_k);
    mm.Add("TimerOnDelayNoInit19_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit19_d);
    mm.Add("TimerOnDelayNoInit15_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit15_h);
    mm.Add("TimerOnDelayNoInit14_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit14_k);
    mm.Add("TimerOnDelayNoInit13_jk", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit13_jk);
    mm.Add("TimerOnDelayNoInit10_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit10_n);
    mm.Add("TimerOnDelayNoInit1_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit1_o);
    mm.Add("TimerOnDelayNoInit_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit_n);
    mm.Add("TimerOnDelayNoInit8_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit8_o);
    mm.Add("TimerOnDelayNoInit7_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit7_o);
    mm.Add("TimerOnDelayNoInit6_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit6_g);
    mm.Add("TimerOnDelayNoInit5_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit5_d);
    mm.Add("TimerOnDelayNoInit4_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit4_m);
    mm.Add("TimerOnDelayNoInit3_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit3_d);
    mm.Add("TimerOnDelayNoInit2_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit2_d);
    mm.Add("TimerOnDelayNoInit1_km", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit1_km);
    mm.Add("TimerOnDelayNoInit9_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit9_n);
    mm.Add("TimerOnDelayNoInit8_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit8_e);
    mm.Add("TimerOnDelayNoInit72", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit72);
    mm.Add("TimerOnDelayNoInit71", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit71);
    mm.Add("TimerOnDelayNoInit70", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit70);
    mm.Add("TimerOnDelayNoInit7_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit7_i);
    mm.Add("TimerOnDelayNoInit69", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit69);
    mm.Add("TimerOnDelayNoInit68", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit68);
    mm.Add("TimerOnDelayNoInit67", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit67);
    mm.Add("TimerOnDelayNoInit66", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit66);
    mm.Add("TimerOnDelayNoInit65_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit65_e);
    mm.Add("TimerOnDelayNoInit64_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit64_l);
    mm.Add("TimerOnDelayNoInit63_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit63_n);
    mm.Add("TimerOnDelayNoInit62_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit62_h);
    mm.Add("TimerOnDelayNoInit61_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit61_f);
    mm.Add("TimerOnDelayNoInit60_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit60_g);
    mm.Add("TimerOnDelayNoInit6_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit6_d);
    mm.Add("TimerOnDelayNoInit59_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit59_n);
    mm.Add("TimerOnDelayNoInit58_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit58_i);
    mm.Add("TimerOnDelayNoInit57_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit57_c);
    mm.Add("TimerOnDelayNoInit56_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit56_i);
    mm.Add("TimerOnDelayNoInit55_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit55_g);
    mm.Add("TimerOnDelayNoInit54_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit54_g);
    mm.Add("TimerOnDelayNoInit53_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit53_g);
    mm.Add("TimerOnDelayNoInit52_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit52_g);
    mm.Add("TimerOnDelayNoInit51_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit51_e);
    mm.Add("TimerOnDelayNoInit50_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit50_m);
    mm.Add("TimerOnDelayNoInit5_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit5_a);
    mm.Add("TimerOnDelayNoInit49_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit49_i);
    mm.Add("TimerOnDelayNoInit48_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit48_k);
    mm.Add("TimerOnDelayNoInit47_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit47_o);
    mm.Add("TimerOnDelayNoInit46_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit46_b);
    mm.Add("TimerOnDelayNoInit45_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit45_b);
    mm.Add("TimerOnDelayNoInit44_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit44_c);
    mm.Add("TimerOnDelayNoInit43_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit43_a);
    mm.Add("TimerOnDelayNoInit42_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit42_b);
    mm.Add("TimerOnDelayNoInit41_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit41_o);
    mm.Add("TimerOnDelayNoInit40_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit40_h);
    mm.Add("TimerOnDelayNoInit4_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit4_l);
    mm.Add("TimerOnDelayNoInit39_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit39_b);
    mm.Add("TimerOnDelayNoInit38_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit38_d);
    mm.Add("TimerOnDelayNoInit37_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit37_j);
    mm.Add("TimerOnDelayNoInit36_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit36_a);
    mm.Add("TimerOnDelayNoInit35_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit35_m);
    mm.Add("TimerOnDelayNoInit34_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit34_i);
    mm.Add("TimerOnDelayNoInit33_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit33_g);
    mm.Add("TimerOnDelayNoInit32_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit32_j);
    mm.Add("TimerOnDelayNoInit31_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit31_o);
    mm.Add("TimerOnDelayNoInit30_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit30_h);
    mm.Add("TimerOnDelayNoInit3_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit3_g);
    mm.Add("TimerOnDelayNoInit29_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit29_h);
    mm.Add("TimerOnDelayNoInit28_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit28_n);
    mm.Add("TimerOnDelayNoInit27_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit27_e);
    mm.Add("TimerOnDelayNoInit26_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit26_j);
    mm.Add("TimerOnDelayNoInit25_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit25_o);
    mm.Add("TimerOnDelayNoInit24_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit24_m);
    mm.Add("TimerOnDelayNoInit23_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit23_d);
    mm.Add("TimerOnDelayNoInit22_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit22_p);
    mm.Add("TimerOnDelayNoInit21_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit21_g);
    mm.Add("TimerOnDelayNoInit20_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit20_h);
    mm.Add("TimerOnDelayNoInit2_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit2_p);
    mm.Add("TimerOnDelayNoInit19_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit19_l);
    mm.Add("TimerOnDelayNoInit18_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit18_f);
    mm.Add("TimerOnDelayNoInit17_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit17_m);
    mm.Add("TimerOnDelayNoInit16_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit16_e);
    mm.Add("TimerOnDelayNoInit15_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit15_k);
    mm.Add("TimerOnDelayNoInit14_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit14_o);
    mm.Add("TimerOnDelayNoInit13_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit13_j);
    mm.Add("TimerOnDelayNoInit12_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit12_m);
    mm.Add("TimerOnDelayNoInit11_o1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit11_o1);
    mm.Add("TimerOnDelayNoInit10_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit10_h);
    mm.Add("TimerOnDelayNoInit1_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit1_p);
    mm.Add("TimerOnDelayNoInit_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit_i);
    mm.Add("TimerOnDelayNoInit9_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit9_g);
    mm.Add("TimerOnDelayNoInit8_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit8_a);
    mm.Add("TimerOnDelayNoInit7_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit7_k);
    mm.Add("TimerOnDelayNoInit65", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit65);
    mm.Add("TimerOnDelayNoInit64", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit64);
    mm.Add("TimerOnDelayNoInit63", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit63);
    mm.Add("TimerOnDelayNoInit62", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit62);
    mm.Add("TimerOnDelayNoInit61", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit61);
    mm.Add("TimerOnDelayNoInit60", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit60);
    mm.Add("TimerOnDelayNoInit6_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit6_n);
    mm.Add("TimerOnDelayNoInit59", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit59);
    mm.Add("TimerOnDelayNoInit58", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit58);
    mm.Add("TimerOnDelayNoInit57", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit57);
    mm.Add("TimerOnDelayNoInit56", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit56);
    mm.Add("TimerOnDelayNoInit55", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit55);
    mm.Add("TimerOnDelayNoInit54", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit54);
    mm.Add("TimerOnDelayNoInit53", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit53);
    mm.Add("TimerOnDelayNoInit52", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit52);
    mm.Add("TimerOnDelayNoInit51", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit51);
    mm.Add("TimerOnDelayNoInit50", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit50);
    mm.Add("TimerOnDelayNoInit5_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit5_k);
    mm.Add("TimerOnDelayNoInit49", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit49);
    mm.Add("TimerOnDelayNoInit48", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit48);
    mm.Add("TimerOnDelayNoInit47", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit47);
    mm.Add("TimerOnDelayNoInit46", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit46);
    mm.Add("TimerOnDelayNoInit45", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit45);
    mm.Add("TimerOnDelayNoInit44", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit44);
    mm.Add("TimerOnDelayNoInit43", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit43);
    mm.Add("TimerOnDelayNoInit42", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit42);
    mm.Add("TimerOnDelayNoInit41", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit41);
    mm.Add("TimerOnDelayNoInit40", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit40);
    mm.Add("TimerOnDelayNoInit4_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit4_i);
    mm.Add("TimerOnDelayNoInit39", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit39);
    mm.Add("TimerOnDelayNoInit38", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit38);
    mm.Add("TimerOnDelayNoInit37", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit37);
    mm.Add("TimerOnDelayNoInit36", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit36);
    mm.Add("TimerOnDelayNoInit35", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit35);
    mm.Add("TimerOnDelayNoInit34", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit34);
    mm.Add("TimerOnDelayNoInit33", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit33);
    mm.Add("TimerOnDelayNoInit32", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit32);
    mm.Add("TimerOnDelayNoInit31", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit31);
    mm.Add("TimerOnDelayNoInit30", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit30);
    mm.Add("TimerOnDelayNoInit3_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit3_k);
    mm.Add("TimerOnDelayNoInit29", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit29);
    mm.Add("TimerOnDelayNoInit28", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit28);
    mm.Add("TimerOnDelayNoInit27", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit27);
    mm.Add("TimerOnDelayNoInit26", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit26);
    mm.Add("TimerOnDelayNoInit25_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit25_i);
    mm.Add("TimerOnDelayNoInit24_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit24_o);
    mm.Add("TimerOnDelayNoInit23_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit23_c);
    mm.Add("TimerOnDelayNoInit22_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit22_j);
    mm.Add("TimerOnDelayNoInit21_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit21_f);
    mm.Add("TimerOnDelayNoInit20_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit20_c);
    mm.Add("TimerOnDelayNoInit2_bn", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit2_bn);
    mm.Add("TimerOnDelayNoInit19_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit19_p);
    mm.Add("TimerOnDelayNoInit18_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit18_n);
    mm.Add("TimerOnDelayNoInit17_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit17_a);
    mm.Add("TimerOnDelayNoInit16_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit16_o);
    mm.Add("TimerOnDelayNoInit15_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit15_i);
    mm.Add("TimerOnDelayNoInit14_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit14_j);
    mm.Add("TimerOnDelayNoInit13_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit13_i);
    mm.Add("TimerOnDelayNoInit12_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit12_p);
    mm.Add("TimerOnDelayNoInit11_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit11_o);
    mm.Add("TimerOnDelayNoInit10_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit10_g);
    mm.Add("TimerOnDelayNoInit1_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit1_k);
    mm.Add("TimerOnDelayNoInit9", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit9);
    mm.Add("TimerOnDelayNoInit8", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit8);
    mm.Add("TimerOnDelayNoInit7", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit7);
    mm.Add("TimerOnDelayNoInit6", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit6);
    mm.Add("TimerOnDelayNoInit5", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit5);
    mm.Add("TimerOnDelayNoInit4", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit4);
    mm.Add("TimerOnDelayNoInit3", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit3);
    mm.Add("TimerOnDelayNoInit25", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit25);
    mm.Add("TimerOnDelayNoInit24", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit24);
    mm.Add("TimerOnDelayNoInit23", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit23);
    mm.Add("TimerOnDelayNoInit22", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit22);
    mm.Add("TimerOnDelayNoInit21", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit21);
    mm.Add("TimerOnDelayNoInit20", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit20);
    mm.Add("TimerOnDelayNoInit2_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit2_b);
    mm.Add("TimerOnDelayNoInit19", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit19);
    mm.Add("TimerOnDelayNoInit18", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit18);
    mm.Add("TimerOnDelayNoInit17", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit17);
    mm.Add("TimerOnDelayNoInit16", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit16);
    mm.Add("TimerOnDelayNoInit15", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit15);
    mm.Add("TimerOnDelayNoInit14", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit14);
    mm.Add("TimerOnDelayNoInit13", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit13);
    mm.Add("TimerOnDelayNoInit12", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit12);
    mm.Add("TimerOnDelayNoInit11", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit11);
    mm.Add("TimerOnDelayNoInit10", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit10);
    mm.Add("TimerOnDelayNoInit1_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae[0].TimerOnDelayNoInit1_d);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_l[0].CoreSubsys.sf_EnumeratedVoltages);
    mm.Add("enum_volt", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_l[0].CoreSubsys.sf_EnumeratedVoltages.enum_volt);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_l[0].CoreSubsys);
    mm.Add("sf_EnumeratedVoltages", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_l[0].CoreSubsys.sf_EnumeratedVoltages);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_l[0]);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_l[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_e[0].CoreSubsys);
    mm.Add("sf_EnumeratedVoltages", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_e[0].CoreSubsys.sf_EnumeratedVoltages);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_e[0]);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_e[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_TrainWireMax_o);
    mm.Add("w", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_TrainWireMax_o.w);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_OrientationSwap_d);
    mm.Add("w1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_OrientationSwap_d.w1);
    mm.Add("w2", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_OrientationSwap_d.w2);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_OrientationSwap_m);
    mm.Add("w1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_OrientationSwap_m.w1);
    mm.Add("w2", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_OrientationSwap_m.w2);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb);
    mm.Add("ImpAsg_InsertedFor_Out1_at_inport_0", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.ImpAsg_InsertedFor_Out1_at_inport_0);
    mm.Add("Merge4", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.Merge4);
    mm.Add("UnitDelay", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.UnitDelay);
    mm.Add("CoreSubsys_pnae", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.CoreSubsys_pnae);
    mm.Add("TrainWires_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_l);
    mm.Add("TrainWires_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_m);
    mm.Add("TrainWires_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_e);
    mm.Add("TrainWires_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_c);
    mm.Add("TrainWires_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires_g);
    mm.Add("TrainWires", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.TrainWires);
    mm.Add("sf_TrainWireMax_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_TrainWireMax_o);
    mm.Add("sf_EnumeratedVoltages_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_EnumeratedVoltages_k);
    mm.Add("sf_TrainWireMax_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_TrainWireMax_h);
    mm.Add("sf_EnumeratedVoltages_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_EnumeratedVoltages_o);
    mm.Add("sf_OrientationSwap_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_OrientationSwap_d);
    mm.Add("sf_OrientationSwap_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_OrientationSwap_m);
    mm.Add("sf_TrainWireMax_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_TrainWireMax_a);
    mm.Add("sf_EnumeratedVoltages_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_EnumeratedVoltages_g);
    mm.Add("sf_TrainWireMax", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_TrainWireMax);
    mm.Add("sf_EnumeratedVoltages", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_EnumeratedVoltages);
    mm.Add("sf_OrientationSwap_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_OrientationSwap_c);
    mm.Add("sf_OrientationSwap", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb.sf_OrientationSwap);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_gt);
    mm.Add("Timer_DSTATE", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_gt.Timer_DSTATE);
    mm.Add("Timer_PrevResetState", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_gt.Timer_PrevResetState);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].CoreSubsys_pnaevv[0]);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].CoreSubsys_pnaevv[0].Memory_PreviousInput);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_o);
    mm.Add("Timer_DSTATE", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_o.Timer_DSTATE);
    mm.Add("Timer_PrevResetState", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_o.Timer_PrevResetState);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit_b);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit_b.DiscreteTimeIntegrator_DSTATE);
    mm.Add("DiscreteTimeIntegrator_PrevResetState", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit_b.DiscreteTimeIntegrator_PrevResetState);
    mm.Add("DiscreteTimeIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit_b.DiscreteTimeIntegrator_IC_LOADING);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit_b.IC_FirstOutputTime);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit3);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit3.DiscreteTimeIntegrator_DSTATE);
    mm.Add("DiscreteTimeIntegrator_PrevResetState", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit3.DiscreteTimeIntegrator_PrevResetState);
    mm.Add("DiscreteTimeIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit3.DiscreteTimeIntegrator_IC_LOADING);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit3.IC_FirstOutputTime);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0]);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].UnitDelay_DSTATE);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_j);
    mm.Add("DelayInput1_DSTATE_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_f);
    mm.Add("DelayInput1_DSTATE_jo", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_jo);
    mm.Add("DelayInput1_DSTATE_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_b);
    mm.Add("DelayInput1_DSTATE_b0", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_b0);
    mm.Add("DelayInput1_DSTATE_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_d);
    mm.Add("DelayInput1_DSTATE_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_a);
    mm.Add("DelayInput1_DSTATE_fk", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_fk);
    mm.Add("DelayInput1_DSTATE_f2", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_f2);
    mm.Add("DelayInput1_DSTATE_a0", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_a0);
    mm.Add("DelayInput1_DSTATE_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_h);
    mm.Add("DelayInput1_DSTATE_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_n);
    mm.Add("DelayInput1_DSTATE_jd", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_jd);
    mm.Add("DelayInput1_DSTATE_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_l);
    mm.Add("DelayInput1_DSTATE_dj", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_dj);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DiscreteTimeIntegrator_DSTATE);
    mm.Add("DelayInput1_DSTATE_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_o);
    mm.Add("DelayInput1_DSTATE_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_c);
    mm.Add("Delay_DSTATE", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Delay_DSTATE);
    mm.Add("count", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].count);
    mm.Add("clockTickCounter", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].clockTickCounter);
    mm.Add("clockTickCounter_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].clockTickCounter_j);
    mm.Add("clockTickCounter_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].clockTickCounter_g);
    mm.Add("clockTickCounter_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].clockTickCounter_k);
    mm.Add("UnitDelay_DSTATE_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].UnitDelay_DSTATE_i);
    mm.Add("DelayInput1_DSTATE_b1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_b1);
    mm.Add("UnitDelay_DSTATE_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].UnitDelay_DSTATE_h);
    mm.Add("DelayInput1_DSTATE_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_k);
    mm.Add("DelayInput1_DSTATE_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_e);
    mm.Add("DelayInput1_DSTATE_nn", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_nn);
    mm.Add("DelayInput1_DSTATE_ky", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_ky);
    mm.Add("DelayInput1_DSTATE_eo", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_eo);
    mm.Add("DelayInput1_DSTATE_lw", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_lw);
    mm.Add("DelayInput1_DSTATE_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_p);
    mm.Add("DelayInput1_DSTATE_ow", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_ow);
    mm.Add("DelayInput1_DSTATE_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_i);
    mm.Add("DelayInput1_DSTATE_n4", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_n4);
    mm.Add("DelayInput1_DSTATE_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_m);
    mm.Add("DelayInput1_DSTATE_a2", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_a2);
    mm.Add("DelayInput1_DSTATE_ea", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_ea);
    mm.Add("DelayInput1_DSTATE_li", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_li);
    mm.Add("DelayInput1_DSTATE_jz", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_jz);
    mm.Add("DelayInput1_DSTATE_md", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].DelayInput1_DSTATE_md);
    mm.Add("is_active_c1_TCMSSystem", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].is_active_c1_TCMSSystem);
    mm.Add("is_c1_TCMSSystem", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].is_c1_TCMSSystem);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput);
    mm.Add("Memory_PreviousInput_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_c);
    mm.Add("Memory_PreviousInput_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_i);
    mm.Add("Memory_PreviousInput_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_h);
    mm.Add("Memory_PreviousInput_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_d);
    mm.Add("Memory_PreviousInput_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_a);
    mm.Add("Memory_PreviousInput_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_o);
    mm.Add("Memory_PreviousInput_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_p);
    mm.Add("Memory_PreviousInput_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_g);
    mm.Add("Memory_PreviousInput_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_n);
    mm.Add("Memory_PreviousInput_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_j);
    mm.Add("Memory_PreviousInput_dg", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_dg);
    mm.Add("Memory_PreviousInput_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_f);
    mm.Add("Memory_PreviousInput_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_m);
    mm.Add("Memory_PreviousInput_jh", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_jh);
    mm.Add("Memory_PreviousInput_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_b);
    mm.Add("Memory_PreviousInput_ff", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_ff);
    mm.Add("Memory_PreviousInput_i5", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_i5);
    mm.Add("Memory_PreviousInput_gm", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_gm);
    mm.Add("Memory_PreviousInput_np", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_np);
    mm.Add("Memory_PreviousInput_d0", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_d0);
    mm.Add("Memory_PreviousInput_ie", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_ie);
    mm.Add("Memory_PreviousInput_bs", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_bs);
    mm.Add("Memory_PreviousInput_iw", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_iw);
    mm.Add("ubar_7Bar_Mode", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].ubar_7Bar_Mode);
    mm.Add("Memory_PreviousInput_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_l);
    mm.Add("Memory_PreviousInput_ce", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_ce);
    mm.Add("Memory_PreviousInput_md", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_md);
    mm.Add("Memory_PreviousInput_nd", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_nd);
    mm.Add("Memory_PreviousInput_ai", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_ai);
    mm.Add("Memory_PreviousInput_mdq", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_mdq);
    mm.Add("Memory_PreviousInput_lj", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_lj);
    mm.Add("Memory_PreviousInput_f0", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_f0);
    mm.Add("Memory_PreviousInput_pz", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_pz);
    mm.Add("Memory_PreviousInput_jj", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_jj);
    mm.Add("Memory_PreviousInput_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_e);
    mm.Add("Memory_PreviousInput_e1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_e1);
    mm.Add("Memory_PreviousInput_on", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_on);
    mm.Add("Memory_PreviousInput_ix", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_ix);
    mm.Add("Memory_PreviousInput_hb", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_hb);
    mm.Add("Relay1_Mode", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Relay1_Mode);
    mm.Add("Memory_PreviousInput_p5", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Memory_PreviousInput_p5);
    mm.Add("Relay_Mode", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].Relay_Mode);
    mm.Add("TimerOnDelayNoInit_gt", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_gt);
    mm.Add("CoreSubsys_pnaevv", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].CoreSubsys_pnaevv);
    mm.Add("TimerOnDelayNoInit_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_o);
    mm.Add("TimerOnDelayNoInit2", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit2);
    mm.Add("TimerOnDelayNoInit1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit1);
    mm.Add("TimerOnDelayNoInit_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_b);
    mm.Add("TimerOffDelayNoInit_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit_b);
    mm.Add("TimerOnDelayNoInit_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_f);
    mm.Add("TimerOffDelayNoInit_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit_p);
    mm.Add("TimerOnDelayNoInit", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit);
    mm.Add("TimerOffDelayNoInit3", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit3);
    mm.Add("TimerOffDelayNoInit2", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit2);
    mm.Add("TimerOffDelayNoInit1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit1);
    mm.Add("TimerOffDelayNoInit", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOffDelayNoInit);
    mm.Add("TimerOnDelayNoInit9_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit9_h);
    mm.Add("TimerOnDelayNoInit8_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit8_b);
    mm.Add("TimerOnDelayNoInit7_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit7_h);
    mm.Add("TimerOnDelayNoInit6_dm", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit6_dm);
    mm.Add("TimerOnDelayNoInit5_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit5_o);
    mm.Add("TimerOnDelayNoInit4_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit4_h);
    mm.Add("TimerOnDelayNoInit3_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit3_b);
    mm.Add("TimerOnDelayNoInit23_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit23_o);
    mm.Add("TimerOnDelayNoInit22_ka", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit22_ka);
    mm.Add("TimerOnDelayNoInit21_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit21_d);
    mm.Add("TimerOnDelayNoInit20_hm", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit20_hm);
    mm.Add("TimerOnDelayNoInit2_k3", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit2_k3);
    mm.Add("TimerOnDelayNoInit19_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit19_a);
    mm.Add("TimerOnDelayNoInit18_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit18_k);
    mm.Add("TimerOnDelayNoInit17_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit17_e);
    mm.Add("TimerOnDelayNoInit16_ed", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit16_ed);
    mm.Add("TimerOnDelayNoInit15_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit15_o);
    mm.Add("TimerOnDelayNoInit14_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit14_e);
    mm.Add("TimerOnDelayNoInit13_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit13_g);
    mm.Add("TimerOnDelayNoInit12_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit12_b);
    mm.Add("TimerOnDelayNoInit11_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit11_a);
    mm.Add("TimerOnDelayNoInit10_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit10_i);
    mm.Add("TimerOnDelayNoInit1_kz", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit1_kz);
    mm.Add("TimerOnDelayNoInit7_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit7_e);
    mm.Add("TimerOnDelayNoInit6_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit6_l);
    mm.Add("TimerOnDelayNoInit5_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit5_h);
    mm.Add("TimerOnDelayNoInit4_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit4_b);
    mm.Add("TimerOnDelayNoInit3_dn", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit3_dn);
    mm.Add("TimerOnDelayNoInit2_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit2_j);
    mm.Add("TimerOnDelayNoInit1_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit1_j);
    mm.Add("TimerOnDelayNoInit2_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit2_n);
    mm.Add("TimerOnDelayNoInit1_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit1_f);
    mm.Add("TimerOnDelayNoInit_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_g);
    mm.Add("TimerOnDelayNoInit8_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit8_d);
    mm.Add("TimerOnDelayNoInit7_id", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit7_id);
    mm.Add("TimerOnDelayNoInit6_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit6_o);
    mm.Add("TimerOnDelayNoInit56_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit56_p);
    mm.Add("TimerOnDelayNoInit55_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit55_i);
    mm.Add("TimerOnDelayNoInit54_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit54_f);
    mm.Add("TimerOnDelayNoInit53_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit53_m);
    mm.Add("TimerOnDelayNoInit51_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit51_p);
    mm.Add("TimerOnDelayNoInit5_a0", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit5_a0);
    mm.Add("TimerOnDelayNoInit48_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit48_m);
    mm.Add("TimerOnDelayNoInit47_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit47_h);
    mm.Add("TimerOnDelayNoInit46_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit46_o);
    mm.Add("TimerOnDelayNoInit45_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit45_p);
    mm.Add("TimerOnDelayNoInit44_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit44_o);
    mm.Add("TimerOnDelayNoInit41_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit41_n);
    mm.Add("TimerOnDelayNoInit4_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit4_p);
    mm.Add("TimerOnDelayNoInit38_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit38_l);
    mm.Add("TimerOnDelayNoInit37_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit37_d);
    mm.Add("TimerOnDelayNoInit35_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit35_l);
    mm.Add("TimerOnDelayNoInit34_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit34_g);
    mm.Add("TimerOnDelayNoInit33_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit33_o);
    mm.Add("TimerOnDelayNoInit32_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit32_i);
    mm.Add("TimerOnDelayNoInit3_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit3_j);
    mm.Add("TimerOnDelayNoInit29_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit29_p);
    mm.Add("TimerOnDelayNoInit28_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit28_o);
    mm.Add("TimerOnDelayNoInit27_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit27_h);
    mm.Add("TimerOnDelayNoInit26_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit26_p);
    mm.Add("TimerOnDelayNoInit24_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit24_g);
    mm.Add("TimerOnDelayNoInit23_cr", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit23_cr);
    mm.Add("TimerOnDelayNoInit22_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit22_k);
    mm.Add("TimerOnDelayNoInit21_fl", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit21_fl);
    mm.Add("TimerOnDelayNoInit20_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit20_g);
    mm.Add("TimerOnDelayNoInit2_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit2_k);
    mm.Add("TimerOnDelayNoInit19_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit19_d);
    mm.Add("TimerOnDelayNoInit15_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit15_h);
    mm.Add("TimerOnDelayNoInit14_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit14_k);
    mm.Add("TimerOnDelayNoInit13_jk", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit13_jk);
    mm.Add("TimerOnDelayNoInit10_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit10_n);
    mm.Add("TimerOnDelayNoInit1_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit1_o);
    mm.Add("TimerOnDelayNoInit_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_n);
    mm.Add("TimerOnDelayNoInit8_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit8_o);
    mm.Add("TimerOnDelayNoInit7_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit7_o);
    mm.Add("TimerOnDelayNoInit6_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit6_g);
    mm.Add("TimerOnDelayNoInit5_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit5_d);
    mm.Add("TimerOnDelayNoInit4_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit4_m);
    mm.Add("TimerOnDelayNoInit3_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit3_d);
    mm.Add("TimerOnDelayNoInit2_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit2_d);
    mm.Add("TimerOnDelayNoInit1_km", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit1_km);
    mm.Add("TimerOnDelayNoInit9_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit9_n);
    mm.Add("TimerOnDelayNoInit8_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit8_e);
    mm.Add("TimerOnDelayNoInit72", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit72);
    mm.Add("TimerOnDelayNoInit71", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit71);
    mm.Add("TimerOnDelayNoInit70", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit70);
    mm.Add("TimerOnDelayNoInit7_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit7_i);
    mm.Add("TimerOnDelayNoInit69", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit69);
    mm.Add("TimerOnDelayNoInit68", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit68);
    mm.Add("TimerOnDelayNoInit67", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit67);
    mm.Add("TimerOnDelayNoInit66", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit66);
    mm.Add("TimerOnDelayNoInit65_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit65_e);
    mm.Add("TimerOnDelayNoInit64_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit64_l);
    mm.Add("TimerOnDelayNoInit63_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit63_n);
    mm.Add("TimerOnDelayNoInit62_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit62_h);
    mm.Add("TimerOnDelayNoInit61_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit61_f);
    mm.Add("TimerOnDelayNoInit60_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit60_g);
    mm.Add("TimerOnDelayNoInit6_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit6_d);
    mm.Add("TimerOnDelayNoInit59_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit59_n);
    mm.Add("TimerOnDelayNoInit58_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit58_i);
    mm.Add("TimerOnDelayNoInit57_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit57_c);
    mm.Add("TimerOnDelayNoInit56_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit56_i);
    mm.Add("TimerOnDelayNoInit55_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit55_g);
    mm.Add("TimerOnDelayNoInit54_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit54_g);
    mm.Add("TimerOnDelayNoInit53_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit53_g);
    mm.Add("TimerOnDelayNoInit52_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit52_g);
    mm.Add("TimerOnDelayNoInit51_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit51_e);
    mm.Add("TimerOnDelayNoInit50_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit50_m);
    mm.Add("TimerOnDelayNoInit5_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit5_a);
    mm.Add("TimerOnDelayNoInit49_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit49_i);
    mm.Add("TimerOnDelayNoInit48_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit48_k);
    mm.Add("TimerOnDelayNoInit47_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit47_o);
    mm.Add("TimerOnDelayNoInit46_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit46_b);
    mm.Add("TimerOnDelayNoInit45_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit45_b);
    mm.Add("TimerOnDelayNoInit44_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit44_c);
    mm.Add("TimerOnDelayNoInit43_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit43_a);
    mm.Add("TimerOnDelayNoInit42_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit42_b);
    mm.Add("TimerOnDelayNoInit41_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit41_o);
    mm.Add("TimerOnDelayNoInit40_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit40_h);
    mm.Add("TimerOnDelayNoInit4_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit4_l);
    mm.Add("TimerOnDelayNoInit39_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit39_b);
    mm.Add("TimerOnDelayNoInit38_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit38_d);
    mm.Add("TimerOnDelayNoInit37_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit37_j);
    mm.Add("TimerOnDelayNoInit36_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit36_a);
    mm.Add("TimerOnDelayNoInit35_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit35_m);
    mm.Add("TimerOnDelayNoInit34_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit34_i);
    mm.Add("TimerOnDelayNoInit33_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit33_g);
    mm.Add("TimerOnDelayNoInit32_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit32_j);
    mm.Add("TimerOnDelayNoInit31_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit31_o);
    mm.Add("TimerOnDelayNoInit30_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit30_h);
    mm.Add("TimerOnDelayNoInit3_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit3_g);
    mm.Add("TimerOnDelayNoInit29_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit29_h);
    mm.Add("TimerOnDelayNoInit28_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit28_n);
    mm.Add("TimerOnDelayNoInit27_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit27_e);
    mm.Add("TimerOnDelayNoInit26_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit26_j);
    mm.Add("TimerOnDelayNoInit25_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit25_o);
    mm.Add("TimerOnDelayNoInit24_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit24_m);
    mm.Add("TimerOnDelayNoInit23_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit23_d);
    mm.Add("TimerOnDelayNoInit22_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit22_p);
    mm.Add("TimerOnDelayNoInit21_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit21_g);
    mm.Add("TimerOnDelayNoInit20_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit20_h);
    mm.Add("TimerOnDelayNoInit2_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit2_p);
    mm.Add("TimerOnDelayNoInit19_l", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit19_l);
    mm.Add("TimerOnDelayNoInit18_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit18_f);
    mm.Add("TimerOnDelayNoInit17_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit17_m);
    mm.Add("TimerOnDelayNoInit16_e", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit16_e);
    mm.Add("TimerOnDelayNoInit15_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit15_k);
    mm.Add("TimerOnDelayNoInit14_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit14_o);
    mm.Add("TimerOnDelayNoInit13_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit13_j);
    mm.Add("TimerOnDelayNoInit12_m", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit12_m);
    mm.Add("TimerOnDelayNoInit11_o1", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit11_o1);
    mm.Add("TimerOnDelayNoInit10_h", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit10_h);
    mm.Add("TimerOnDelayNoInit1_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit1_p);
    mm.Add("TimerOnDelayNoInit_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit_i);
    mm.Add("TimerOnDelayNoInit9_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit9_g);
    mm.Add("TimerOnDelayNoInit8_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit8_a);
    mm.Add("TimerOnDelayNoInit7_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit7_k);
    mm.Add("TimerOnDelayNoInit65", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit65);
    mm.Add("TimerOnDelayNoInit64", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit64);
    mm.Add("TimerOnDelayNoInit63", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit63);
    mm.Add("TimerOnDelayNoInit62", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit62);
    mm.Add("TimerOnDelayNoInit61", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit61);
    mm.Add("TimerOnDelayNoInit60", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit60);
    mm.Add("TimerOnDelayNoInit6_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit6_n);
    mm.Add("TimerOnDelayNoInit59", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit59);
    mm.Add("TimerOnDelayNoInit58", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit58);
    mm.Add("TimerOnDelayNoInit57", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit57);
    mm.Add("TimerOnDelayNoInit56", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit56);
    mm.Add("TimerOnDelayNoInit55", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit55);
    mm.Add("TimerOnDelayNoInit54", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit54);
    mm.Add("TimerOnDelayNoInit53", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit53);
    mm.Add("TimerOnDelayNoInit52", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit52);
    mm.Add("TimerOnDelayNoInit51", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit51);
    mm.Add("TimerOnDelayNoInit50", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit50);
    mm.Add("TimerOnDelayNoInit5_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit5_k);
    mm.Add("TimerOnDelayNoInit49", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit49);
    mm.Add("TimerOnDelayNoInit48", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit48);
    mm.Add("TimerOnDelayNoInit47", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit47);
    mm.Add("TimerOnDelayNoInit46", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit46);
    mm.Add("TimerOnDelayNoInit45", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit45);
    mm.Add("TimerOnDelayNoInit44", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit44);
    mm.Add("TimerOnDelayNoInit43", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit43);
    mm.Add("TimerOnDelayNoInit42", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit42);
    mm.Add("TimerOnDelayNoInit41", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit41);
    mm.Add("TimerOnDelayNoInit40", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit40);
    mm.Add("TimerOnDelayNoInit4_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit4_i);
    mm.Add("TimerOnDelayNoInit39", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit39);
    mm.Add("TimerOnDelayNoInit38", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit38);
    mm.Add("TimerOnDelayNoInit37", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit37);
    mm.Add("TimerOnDelayNoInit36", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit36);
    mm.Add("TimerOnDelayNoInit35", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit35);
    mm.Add("TimerOnDelayNoInit34", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit34);
    mm.Add("TimerOnDelayNoInit33", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit33);
    mm.Add("TimerOnDelayNoInit32", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit32);
    mm.Add("TimerOnDelayNoInit31", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit31);
    mm.Add("TimerOnDelayNoInit30", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit30);
    mm.Add("TimerOnDelayNoInit3_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit3_k);
    mm.Add("TimerOnDelayNoInit29", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit29);
    mm.Add("TimerOnDelayNoInit28", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit28);
    mm.Add("TimerOnDelayNoInit27", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit27);
    mm.Add("TimerOnDelayNoInit26", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit26);
    mm.Add("TimerOnDelayNoInit25_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit25_i);
    mm.Add("TimerOnDelayNoInit24_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit24_o);
    mm.Add("TimerOnDelayNoInit23_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit23_c);
    mm.Add("TimerOnDelayNoInit22_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit22_j);
    mm.Add("TimerOnDelayNoInit21_f", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit21_f);
    mm.Add("TimerOnDelayNoInit20_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit20_c);
    mm.Add("TimerOnDelayNoInit2_bn", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit2_bn);
    mm.Add("TimerOnDelayNoInit19_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit19_p);
    mm.Add("TimerOnDelayNoInit18_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit18_n);
    mm.Add("TimerOnDelayNoInit17_a", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit17_a);
    mm.Add("TimerOnDelayNoInit16_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit16_o);
    mm.Add("TimerOnDelayNoInit15_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit15_i);
    mm.Add("TimerOnDelayNoInit14_j", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit14_j);
    mm.Add("TimerOnDelayNoInit13_i", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit13_i);
    mm.Add("TimerOnDelayNoInit12_p", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit12_p);
    mm.Add("TimerOnDelayNoInit11_o", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit11_o);
    mm.Add("TimerOnDelayNoInit10_g", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit10_g);
    mm.Add("TimerOnDelayNoInit1_k", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit1_k);
    mm.Add("TimerOnDelayNoInit9", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit9);
    mm.Add("TimerOnDelayNoInit8", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit8);
    mm.Add("TimerOnDelayNoInit7", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit7);
    mm.Add("TimerOnDelayNoInit6", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit6);
    mm.Add("TimerOnDelayNoInit5", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit5);
    mm.Add("TimerOnDelayNoInit4", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit4);
    mm.Add("TimerOnDelayNoInit3", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit3);
    mm.Add("TimerOnDelayNoInit25", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit25);
    mm.Add("TimerOnDelayNoInit24", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit24);
    mm.Add("TimerOnDelayNoInit23", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit23);
    mm.Add("TimerOnDelayNoInit22", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit22);
    mm.Add("TimerOnDelayNoInit21", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit21);
    mm.Add("TimerOnDelayNoInit20", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit20);
    mm.Add("TimerOnDelayNoInit2_b", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit2_b);
    mm.Add("TimerOnDelayNoInit19", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit19);
    mm.Add("TimerOnDelayNoInit18", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit18);
    mm.Add("TimerOnDelayNoInit17", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit17);
    mm.Add("TimerOnDelayNoInit16", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit16);
    mm.Add("TimerOnDelayNoInit15", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit15);
    mm.Add("TimerOnDelayNoInit14", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit14);
    mm.Add("TimerOnDelayNoInit13", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit13);
    mm.Add("TimerOnDelayNoInit12", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit12);
    mm.Add("TimerOnDelayNoInit11", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit11);
    mm.Add("TimerOnDelayNoInit10", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit10);
    mm.Add("TimerOnDelayNoInit1_d", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae[0].TimerOnDelayNoInit1_d);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.UnitDelay_DSTATE);
    mm.Add("UnitDelay_DSTATE_n", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.UnitDelay_DSTATE_n);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.DelayInput1_DSTATE);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.UnitDelay1_DSTATE);
    mm.Add("DelayInput1_DSTATE_c", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.DelayInput1_DSTATE_c);
    mm.Add("CoreSubsys_pnae", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw.CoreSubsys_pnae);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData);
    mm.Add("rtb", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtb);
    mm.Add("rtdw", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtdw);
    mm.AddReadOnly(model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtm);
    mm.Add("rtm", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData.rtm);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].MRPtoDownstreamConnection.Reverse);
    mm.Add("FlowNoflow", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].MRPtoDownstreamConnection.Reverse.FlowNoflow);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].MRPtoDownstreamConnection);
    mm.Add("Add", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].MRPtoDownstreamConnection.Add);
    mm.Add("Reverse", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].MRPtoDownstreamConnection.Reverse);
    mm.Add("Forward", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].MRPtoDownstreamConnection.Forward);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].TimerOffDelayNoInit_d);
    mm.Add("LogicalOperator1", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].TimerOffDelayNoInit_d.LogicalOperator1);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].IfActionSubsystem6);
    mm.Add("In1", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].IfActionSubsystem6.In1);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].BCCharge);
    mm.Add("FlowNoflow", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].BCCharge.FlowNoflow);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].BCVent);
    mm.Add("FlowNoflow", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].BCVent.FlowNoflow);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0]);
    mm.Add("P", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].P);
    mm.Add("BCCharge", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].BCCharge);
    mm.Add("BCIsolate", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].BCIsolate);
    mm.Add("BCVent", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].BCVent);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0]);
    mm.Add("VectorConcatenate1", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].VectorConcatenate1);
    mm.Add("VectorConcatenate", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].VectorConcatenate);
    mm.Add("VectorConcatenate1_c", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].VectorConcatenate1_c);
    mm.Add("VectorConcatenate_l", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].VectorConcatenate_l);
    mm.Add("VectorConcatenate1_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].VectorConcatenate1_d);
    mm.Add("VectorConcatenate_k", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].VectorConcatenate_k);
    mm.Add("OutportBufferForOut2", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].OutportBufferForOut2);
    mm.Add("IfActionSubsystem6", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].IfActionSubsystem6);
    mm.Add("IfActionSubsystem4", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].IfActionSubsystem4);
    mm.Add("IfActionSubsystem5", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].IfActionSubsystem5);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys[0].ASVentIC);
    mm.Add("FlowNoflow", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys[0].ASVentIC.FlowNoflow);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys[0]);
    mm.Add("VectorConcatenate1", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys[0].VectorConcatenate1);
    mm.Add("VectorConcatenate", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys[0].VectorConcatenate);
    mm.Add("ASVentDrain", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys[0].ASVentDrain);
    mm.Add("ASVentIC", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys[0].ASVentIC);
    mm.Add("ASVent", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys[0].ASVent);
    mm.Add("ASCharge", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys[0].ASCharge);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0]);
    mm.Add("BusCreator", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].BusCreator);
    mm.Add("P", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].P);
    mm.Add("PressureSwitch", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].PressureSwitch);
    mm.Add("P_a", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].P_a);
    mm.Add("Bias", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].Bias);
    mm.Add("PressureSwitch_g", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].PressureSwitch_g);
    mm.Add("ImpAsg_InsertedFor_SandingPressure_at_inport_0", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ImpAsg_InsertedFor_SandingPressure_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_SandingPressureSwitch_at_inport_0", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ImpAsg_InsertedFor_SandingPressureSwitch_at_inport_0);
    mm.Add("VectorConcatenate1", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].VectorConcatenate1);
    mm.Add("SumofElements", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].SumofElements);
    mm.Add("ImpAsg_InsertedFor_ParkBrakePressure_at_inport_0", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ImpAsg_InsertedFor_ParkBrakePressure_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_ParkBrakePressureSwitch_at_inport_0", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ImpAsg_InsertedFor_ParkBrakePressureSwitch_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_ControlPressure_at_inport_0", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ImpAsg_InsertedFor_ControlPressure_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_BrakeCylinderPressure_at_inport_0", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ImpAsg_InsertedFor_BrakeCylinderPressure_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_BCPressureSwitch_at_inport_0", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ImpAsg_InsertedFor_BCPressureSwitch_at_inport_0);
    mm.Add("VectorConcatenate2", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].VectorConcatenate2);
    mm.Add("VectorConcatenate1_k", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].VectorConcatenate1_k);
    mm.Add("Sum", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].Sum);
    mm.Add("ImpAsg_InsertedFor_AirSuspensionPressure_at_inport_0", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ImpAsg_InsertedFor_AirSuspensionPressure_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_AirSuspensionPressureSwitch_at_inport_0", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ImpAsg_InsertedFor_AirSuspensionPressureSwitch_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_AirSuspPressureVariation_at_inport_0", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ImpAsg_InsertedFor_AirSuspPressureVariation_at_inport_0);
    mm.Add("HornLowPressureSwitch", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].HornLowPressureSwitch);
    mm.Add("HornHighPressureSwitch", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].HornHighPressureSwitch);
    mm.Add("HornLow", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].HornLow);
    mm.Add("HornHigh", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].HornHigh);
    mm.Add("P_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].P_d);
    mm.Add("PressureSwitch_e", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].PressureSwitch_e);
    mm.Add("P_e", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].P_e);
    mm.Add("PressureSwitch_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].PressureSwitch_d);
    mm.Add("PressureSwitch_l", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].PressureSwitch_l);
    mm.Add("P_o", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].P_o);
    mm.Add("PressureSwitch_j", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].PressureSwitch_j);
    mm.Add("VectorConcatenate", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].VectorConcatenate);
    mm.Add("VectorConcatenate2_c", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].VectorConcatenate2_c);
    mm.Add("MRPtoDownstreamConnection", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].MRPtoDownstreamConnection);
    mm.Add("MRPtoUpstreamConnection", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].MRPtoUpstreamConnection);
    mm.Add("MRVentDrain", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].MRVentDrain);
    mm.Add("MRBlowoff", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].MRBlowoff);
    mm.Add("TimerOffDelayNoInit_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].TimerOffDelayNoInit_d);
    mm.Add("MRPipeTwoWayValve", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].MRPipeTwoWayValve);
    mm.Add("BSRCharge_b", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].BSRCharge_b);
    mm.Add("BSRVentDrain_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].BSRVentDrain_d);
    mm.Add("BSRVentIC_c", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].BSRVentIC_c);
    mm.Add("CoreSubsys_pna", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys_pna);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].CoreSubsys);
    mm.Add("VCBIsolate", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].VCBIsolate);
    mm.Add("VCBVent", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].VCBVent);
    mm.Add("VCBCharge", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].VCBCharge);
    mm.Add("PCVentIsol", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].PCVentIsol);
    mm.Add("PCVentControl", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].PCVentControl);
    mm.Add("PCVentEmer", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].PCVentEmer);
    mm.Add("ARCharge", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ARCharge);
    mm.Add("ARChargefromMRP", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ARChargefromMRP);
    mm.Add("ARVentDrain", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ARVentDrain);
    mm.Add("ARBlowoff", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].ARBlowoff);
    mm.Add("TimerOffDelayNoInit1", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].TimerOffDelayNoInit1);
    mm.Add("TimerOffDelayNoInit", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].TimerOffDelayNoInit);
    mm.Add("BSRCharge", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].BSRCharge);
    mm.Add("BSRVentDrain", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].BSRVentDrain);
    mm.Add("BSRVentIC", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn[0].BSRVentIC);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb);
    mm.Add("yUp", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.yUp);
    mm.Add("yDn", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.yDn);
    mm.Add("frontState", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.frontState);
    mm.Add("rearState", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.rearState);
    mm.Add("CoreSubsys_pn", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb.CoreSubsys_pn);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].TimerOffDelayNoInit_d);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].TimerOffDelayNoInit_d.DiscreteTimeIntegrator_DSTATE);
    mm.Add("DiscreteTimeIntegrator_PrevResetState", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].TimerOffDelayNoInit_d.DiscreteTimeIntegrator_PrevResetState);
    mm.Add("DiscreteTimeIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].TimerOffDelayNoInit_d.DiscreteTimeIntegrator_IC_LOADING);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].TimerOffDelayNoInit_d.IC_FirstOutputTime);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pnae[0]);
    mm.Add("Initialise_FirstOutputTime", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pnae[0].Initialise_FirstOutputTime);
    mm.Add("PressureSwitch_Mode", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pnae[0].PressureSwitch_Mode);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0]);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].UnitDelay_DSTATE);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].UnitDelay1_DSTATE);
    mm.Add("UnitDelay1_DSTATE_k", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].UnitDelay1_DSTATE_k);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys[0].IC_FirstOutputTime);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0]);
    mm.Add("DiscreteTransferFcn_states", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DiscreteTransferFcn_states);
    mm.Add("DiscreteTransferFcn_states_i", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DiscreteTransferFcn_states_i);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_b", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DelayInput1_DSTATE_b);
    mm.Add("DelayInput1_DSTATE_e", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DelayInput1_DSTATE_e);
    mm.Add("DelayInput1_DSTATE_a", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DelayInput1_DSTATE_a);
    mm.Add("DelayInput1_DSTATE_f", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DelayInput1_DSTATE_f);
    mm.Add("DiscreteTransferFcn_states_l", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DiscreteTransferFcn_states_l);
    mm.Add("DelayInput2_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DelayInput2_DSTATE);
    mm.Add("DiscreteTransferFcn_tmp", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DiscreteTransferFcn_tmp);
    mm.Add("DiscreteTransferFcn_tmp_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DiscreteTransferFcn_tmp_d);
    mm.Add("DiscreteTransferFcn_tmp_h", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DiscreteTransferFcn_tmp_h);
    mm.Add("DelayInput1_DSTATE_h", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DelayInput1_DSTATE_h);
    mm.Add("DelayInput1_DSTATE_j", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].DelayInput1_DSTATE_j);
    mm.Add("If_ActiveSubsystem", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].If_ActiveSubsystem);
    mm.Add("If1_ActiveSubsystem", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].If1_ActiveSubsystem);
    mm.Add("Initialise_FirstOutputTime", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].Initialise_FirstOutputTime);
    mm.Add("PressureSwitch_Mode", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].PressureSwitch_Mode);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].Memory_PreviousInput);
    mm.Add("Memory_PreviousInput_j", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].Memory_PreviousInput_j);
    mm.Add("Memory_PreviousInput_l", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].Memory_PreviousInput_l);
    mm.Add("Memory_PreviousInput_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].Memory_PreviousInput_d);
    mm.Add("Memory_PreviousInput_f", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].Memory_PreviousInput_f);
    mm.Add("Memory_PreviousInput_g", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].Memory_PreviousInput_g);
    mm.Add("Memory_PreviousInput_p", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].Memory_PreviousInput_p);
    mm.Add("Initialise_FirstOutputTime_g", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].Initialise_FirstOutputTime_g);
    mm.Add("PressureSwitch_Mode_b", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].PressureSwitch_Mode_b);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys[0]);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys[0].UnitDelay_DSTATE);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys[0].UnitDelay1_DSTATE);
    mm.Add("DiscreteTransferFcn_states", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys[0].DiscreteTransferFcn_states);
    mm.Add("DiscreteTransferFcn_tmp", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys[0].DiscreteTransferFcn_tmp);
    mm.Add("UnitDelay1_DSTATE_g", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys[0].UnitDelay1_DSTATE_g);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys[0].IC_FirstOutputTime);
    mm.Add("Initialise_FirstOutputTime", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys[0].Initialise_FirstOutputTime);
    mm.Add("PressureSwitch_Mode", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys[0].PressureSwitch_Mode);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0]);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay_DSTATE);
    mm.Add("UnitDelay_DSTATE_k", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay_DSTATE_k);
    mm.Add("UnitDelay1_DSTATE_k", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_k);
    mm.Add("UnitDelay3_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay3_DSTATE);
    mm.Add("UnitDelay1_DSTATE_a", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_a);
    mm.Add("UnitDelay_DSTATE_g", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay_DSTATE_g);
    mm.Add("UnitDelay5_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay5_DSTATE);
    mm.Add("UnitDelay1_DSTATE_e", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_e);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_d);
    mm.Add("DelayInput1_DSTATE_n", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_n);
    mm.Add("DelayInput1_DSTATE_a", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_a);
    mm.Add("DelayInput1_DSTATE_dh", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_dh);
    mm.Add("DelayInput1_DSTATE_g", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_g);
    mm.Add("DelayInput1_DSTATE_c", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_c);
    mm.Add("DelayInput1_DSTATE_b", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_b);
    mm.Add("DelayInput1_DSTATE_i", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_i);
    mm.Add("DelayInput1_DSTATE_nm", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_nm);
    mm.Add("DelayInput1_DSTATE_b2", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_b2);
    mm.Add("DelayInput1_DSTATE_da", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_da);
    mm.Add("DelayInput1_DSTATE_c4", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_c4);
    mm.Add("DelayInput1_DSTATE_p", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_p);
    mm.Add("DelayInput1_DSTATE_f", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_f);
    mm.Add("DelayInput1_DSTATE_fx", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_fx);
    mm.Add("DelayInput1_DSTATE_ia", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_ia);
    mm.Add("UnitDelay4_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay4_DSTATE);
    mm.Add("UnitDelay_DSTATE_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay_DSTATE_d);
    mm.Add("UnitDelay1_DSTATE_f", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_f);
    mm.Add("UnitDelay_DSTATE_h", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay_DSTATE_h);
    mm.Add("UnitDelay1_DSTATE_es", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_es);
    mm.Add("UnitDelay_DSTATE_f", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay_DSTATE_f);
    mm.Add("UnitDelay1_DSTATE_c", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_c);
    mm.Add("UnitDelay_DSTATE_e", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay_DSTATE_e);
    mm.Add("UnitDelay1_DSTATE_m", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_m);
    mm.Add("DelayInput1_DSTATE_ii", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_ii);
    mm.Add("UnitDelay_DSTATE_eb", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay_DSTATE_eb);
    mm.Add("UnitDelay1_DSTATE_ks", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_ks);
    mm.Add("DelayInput1_DSTATE_m", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_m);
    mm.Add("UnitDelay1_DSTATE_g", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_g);
    mm.Add("UnitDelay1_DSTATE_mr", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_mr);
    mm.Add("UnitDelay1_DSTATE_kw", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_kw);
    mm.Add("UnitDelay1_DSTATE_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_d);
    mm.Add("DelayInput1_DSTATE_pn", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].DelayInput1_DSTATE_pn);
    mm.Add("UnitDelay1_DSTATE_j", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].UnitDelay1_DSTATE_j);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].IC_FirstOutputTime);
    mm.Add("IC_FirstOutputTime_k", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].IC_FirstOutputTime_k);
    mm.Add("Initialise_FirstOutputTime", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].Initialise_FirstOutputTime);
    mm.Add("PressureSwitch_Mode", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].PressureSwitch_Mode);
    mm.Add("Initialise_FirstOutputTime_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].Initialise_FirstOutputTime_d);
    mm.Add("PressureSwitch_Mode_e", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].PressureSwitch_Mode_e);
    mm.Add("IC_FirstOutputTime_c", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].IC_FirstOutputTime_c);
    mm.Add("Overpressure_Mode", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].Overpressure_Mode);
    mm.Add("Initialise_FirstOutputTime_l", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].Initialise_FirstOutputTime_l);
    mm.Add("PressureSwitch_Mode_k", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].PressureSwitch_Mode_k);
    mm.Add("Initialise_FirstOutputTime_e", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].Initialise_FirstOutputTime_e);
    mm.Add("IC_FirstOutputTime_b", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].IC_FirstOutputTime_b);
    mm.Add("PressureSwitch_Mode_m", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].PressureSwitch_Mode_m);
    mm.Add("Initialise_FirstOutputTime_a", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].Initialise_FirstOutputTime_a);
    mm.Add("IC_FirstOutputTime_a", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].IC_FirstOutputTime_a);
    mm.Add("Overpressure_Mode_c", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].Overpressure_Mode_c);
    mm.Add("PressureSwitch_Mode_c", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].PressureSwitch_Mode_c);
    mm.Add("IC_FirstOutputTime_ax", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].IC_FirstOutputTime_ax);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].Memory_PreviousInput);
    mm.Add("IC_FirstOutputTime_ak", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].IC_FirstOutputTime_ak);
    mm.Add("Initialise_FirstOutputTime_g", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].Initialise_FirstOutputTime_g);
    mm.Add("PressureSwitch_Mode_b", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].PressureSwitch_Mode_b);
    mm.Add("Initialise_FirstOutputTime_f", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].Initialise_FirstOutputTime_f);
    mm.Add("PressureSwitch_Mode_f", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].PressureSwitch_Mode_f);
    mm.Add("IC_FirstOutputTime_o", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].IC_FirstOutputTime_o);
    mm.Add("Initialise_FirstOutputTime_n", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].Initialise_FirstOutputTime_n);
    mm.Add("PressureSwitch_Mode_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].PressureSwitch_Mode_d);
    mm.Add("PneumaticsSystem_MODE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].PneumaticsSystem_MODE);
    mm.Add("BrakingSystem_MODE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].BrakingSystem_MODE);
    mm.Add("TimerOffDelayNoInit_d", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].TimerOffDelayNoInit_d);
    mm.Add("CoreSubsys_pnae", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pnae);
    mm.Add("CoreSubsys_pna", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys_pna);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].CoreSubsys);
    mm.Add("TimerOffDelayNoInit1", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].TimerOffDelayNoInit1);
    mm.Add("TimerOffDelayNoInit", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn[0].TimerOffDelayNoInit);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.UnitDelay_DSTATE);
    mm.Add("CoreSubsys_pn", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw.CoreSubsys_pn);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData);
    mm.Add("rtb", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtb);
    mm.Add("rtdw", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtdw);
    mm.AddReadOnly(model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtm);
    mm.Add("rtm", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData.rtm);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtb.CoreSubsys[0]);
    mm.Add("BusAssignment", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtb.CoreSubsys[0].BusAssignment);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtb);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtb.CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0]);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].UnitDelay1_DSTATE);
    mm.Add("DelayInput1_DSTATE_p", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_p);
    mm.Add("DelayInput1_DSTATE_l", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_l);
    mm.Add("UnitDelay3_DSTATE", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].UnitDelay3_DSTATE);
    mm.Add("UnitDelay2_DSTATE", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].UnitDelay2_DSTATE);
    mm.Add("UnitDelay1_DSTATE_e", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].UnitDelay1_DSTATE_e);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].UnitDelay_DSTATE);
    mm.Add("UnitDelay_DSTATE_o", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].UnitDelay_DSTATE_o);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].Memory_PreviousInput);
    mm.Add("Memory_PreviousInput_m", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].Memory_PreviousInput_m);
    mm.Add("Memory_PreviousInput_e", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].Memory_PreviousInput_e);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].IC_FirstOutputTime);
    mm.Add("Memory_PreviousInput_p", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys[0].Memory_PreviousInput_p);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw.CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.PantographSystem_InstanceData);
    mm.Add("rtb", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtb);
    mm.Add("rtdw", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtdw);
    mm.AddReadOnly(model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtm);
    mm.Add("rtm", model.Model().BEML_EMU_DW.PantographSystem_InstanceData.rtm);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.UnitDelay[0]);
    mm.Add("TrainDoorInterlockOk", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.UnitDelay[0].TrainDoorInterlockOk);
    mm.Add("TrainLeftDoorInterlockOk", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.UnitDelay[0].TrainLeftDoorInterlockOk);
    mm.Add("TrainRightDoorInterlockOk", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.UnitDelay[0].TrainRightDoorInterlockOk);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].TimerOnDelayNoInit2);
    mm.Add("Compare", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].TimerOnDelayNoInit2.Compare);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].TimerOffDelayNoInit2);
    mm.Add("LogicalOperator1", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].TimerOffDelayNoInit2.LogicalOperator1);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys_pn[0]);
    mm.Add("TimerOffDelayNoInit_n", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys_pn[0].TimerOffDelayNoInit_n);
    mm.Add("TimerOffDelayNoInit", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys_pn[0].TimerOffDelayNoInit);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable1);
    mm.Add("LogicalOperator1", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable1.LogicalOperator1);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0]);
    mm.Add("OpenCMD", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].OpenCMD);
    mm.Add("CloseCMD", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].CloseCMD);
    mm.Add("ResetOtherCommands", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].ResetOtherCommands);
    mm.Add("MaxOpenAttempts", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].MaxOpenAttempts);
    mm.Add("MaxCloseAttempts", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].MaxCloseAttempts);
    mm.Add("LeadingEdgePulseTunable1", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable1);
    mm.Add("LeadingEdgePulseTunable", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable);
    mm.Add("DoorCloseDelay", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DoorCloseDelay);
    mm.Add("DoorOpenDelay", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DoorOpenDelay);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0]);
    mm.Add("ImpAsg_InsertedFor_DoorOut_at_inport_0", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].ImpAsg_InsertedFor_DoorOut_at_inport_0);
    mm.Add("AND", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].AND);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0]);
    mm.Add("BusCreator1", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].BusCreator1);
    mm.Add("BusAssignment", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].BusAssignment);
    mm.Add("TimerOnDelayNoInit2", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].TimerOnDelayNoInit2);
    mm.Add("TimerOnDelayNoInit1", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].TimerOnDelayNoInit1);
    mm.Add("TimerOffDelayNoInit2", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].TimerOffDelayNoInit2);
    mm.Add("TimerOffDelayNoInit1", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].TimerOffDelayNoInit1);
    mm.Add("TimerOffDelayNoInit", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].TimerOffDelayNoInit);
    mm.Add("CoreSubsys_pn", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys_pn);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb);
    mm.Add("UnitDelay", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.UnitDelay);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb.CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOnDelayNoInit2);
    mm.Add("Timer_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOnDelayNoInit2.Timer_DSTATE);
    mm.Add("Timer_PrevResetState", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOnDelayNoInit2.Timer_PrevResetState);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit2);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit2.DiscreteTimeIntegrator_DSTATE);
    mm.Add("DiscreteTimeIntegrator_PrevResetState", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit2.DiscreteTimeIntegrator_PrevResetState);
    mm.Add("DiscreteTimeIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit2.DiscreteTimeIntegrator_IC_LOADING);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit2.IC_FirstOutputTime);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys_pn[0]);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys_pn[0].DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_n", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys_pn[0].DelayInput1_DSTATE_n);
    mm.Add("TimerOffDelayNoInit_n", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys_pn[0].TimerOffDelayNoInit_n);
    mm.Add("TimerOffDelayNoInit", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys_pn[0].TimerOffDelayNoInit);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable1);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable1.DiscreteTimeIntegrator_DSTATE);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable1.DelayInput1_DSTATE);
    mm.Add("DiscreteTimeIntegrator_PrevResetState", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable1.DiscreteTimeIntegrator_PrevResetState);
    mm.Add("DiscreteTimeIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable1.DiscreteTimeIntegrator_IC_LOADING);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable1.IC_FirstOutputTime);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0]);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE);
    mm.Add("UnitDelay2_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].UnitDelay2_DSTATE);
    mm.Add("DelayInput1_DSTATE_l", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_l);
    mm.Add("DelayInput1_DSTATE_o", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_o);
    mm.Add("DelayInput1_DSTATE_g", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_g);
    mm.Add("DelayInput1_DSTATE_e", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_e);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].UnitDelay1_DSTATE);
    mm.Add("DelayInput1_DSTATE_c", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_c);
    mm.Add("DelayInput1_DSTATE_ly", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_ly);
    mm.Add("ObstaclePosition", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].ObstaclePosition);
    mm.Add("OpenAttempt", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].OpenAttempt);
    mm.Add("temporalCounter_i1", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].temporalCounter_i1);
    mm.Add("DelayInput1_DSTATE_j", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_j);
    mm.Add("DelayInput1_DSTATE_lq", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_lq);
    mm.Add("UnitDelay1_DSTATE_n", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].UnitDelay1_DSTATE_n);
    mm.Add("DelayInput1_DSTATE_p", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_p);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].UnitDelay_DSTATE);
    mm.Add("UnitDelay_DSTATE_h", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].UnitDelay_DSTATE_h);
    mm.Add("DelayInput1_DSTATE_jd", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_jd);
    mm.Add("DelayInput1_DSTATE_a", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_a);
    mm.Add("UnitDelay3_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].UnitDelay3_DSTATE);
    mm.Add("DelayInput1_DSTATE_m", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_m);
    mm.Add("DelayInput1_DSTATE_md", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_md);
    mm.Add("DelayInput1_DSTATE_n", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE_n);
    mm.Add("CloseAttempt", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].CloseAttempt);
    mm.Add("is_active_c1_DoorSystem", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].is_active_c1_DoorSystem);
    mm.Add("is_c1_DoorSystem", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].is_c1_DoorSystem);
    mm.Add("is_Active", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].is_Active);
    mm.Add("is_Active1", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].is_Active1);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput);
    mm.Add("Memory_PreviousInput_o", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput_o);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].IC_FirstOutputTime);
    mm.Add("Memory_PreviousInput_p", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput_p);
    mm.Add("Memory_PreviousInput_b", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput_b);
    mm.Add("Memory_PreviousInput_bz", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput_bz);
    mm.Add("Memory_PreviousInput_f", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput_f);
    mm.Add("Memory_PreviousInput_j", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput_j);
    mm.Add("Memory_PreviousInput_l", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput_l);
    mm.Add("Memory_PreviousInput_b2", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput_b2);
    mm.Add("LeadingEdgePulseTunable1", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable1);
    mm.Add("LeadingEdgePulseTunable", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].LeadingEdgePulseTunable);
    mm.Add("DoorCloseDelay", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DoorCloseDelay);
    mm.Add("DoorOpenDelay", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys[0].DoorOpenDelay);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0]);
    mm.Add("DoorLogic_MODE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].DoorLogic_MODE);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0]);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_j", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_j);
    mm.Add("DelayInput1_DSTATE_h", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_h);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].UnitDelay1_DSTATE);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].UnitDelay_DSTATE);
    mm.Add("DelayInput1_DSTATE_n", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_n);
    mm.Add("UnitDelay1_DSTATE_e", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].UnitDelay1_DSTATE_e);
    mm.Add("DelayInput1_DSTATE_h3", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_h3);
    mm.Add("UnitDelay_DSTATE_e", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].UnitDelay_DSTATE_e);
    mm.Add("DelayInput1_DSTATE_e", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_e);
    mm.Add("DelayInput1_DSTATE_ej", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_ej);
    mm.Add("DelayInput1_DSTATE_ni", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_ni);
    mm.Add("DelayInput1_DSTATE_a", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_a);
    mm.Add("DelayInput1_DSTATE_hl", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_hl);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].IC_FirstOutputTime);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].Memory_PreviousInput);
    mm.Add("Memory_PreviousInput_k", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].Memory_PreviousInput_k);
    mm.Add("Memory_PreviousInput_h", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].Memory_PreviousInput_h);
    mm.Add("Memory_PreviousInput_l", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].Memory_PreviousInput_l);
    mm.Add("EnabledVehicles_MODE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].EnabledVehicles_MODE);
    mm.Add("TimerOnDelayNoInit2", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOnDelayNoInit2);
    mm.Add("TimerOnDelayNoInit1", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOnDelayNoInit1);
    mm.Add("TimerOffDelayNoInit2", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit2);
    mm.Add("TimerOffDelayNoInit1", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit1);
    mm.Add("TimerOffDelayNoInit", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit);
    mm.Add("CoreSubsys_pn", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys_pn);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.UnitDelay_DSTATE);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw.CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData);
    mm.Add("rtb", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtb);
    mm.Add("rtdw", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtdw);
    mm.AddReadOnly(model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtm);
    mm.Add("rtm", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData.rtm);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0]);
    mm.Add("Product", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].Product);
    mm.Add("BrakeFadePercentage", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].BrakeFadePercentage);
    mm.Add("Saturation", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].Saturation);
    mm.Add("Sum1", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].Sum1);
    mm.Add("BrakeTemperature", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].BrakeTemperature);
    mm.Add("Max", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].CoreSubsys[0].Max);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0]);
    mm.Add("TrainBrakesOut", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].TrainBrakesOut);
    mm.Add("BusCreator1", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].BusCreator1);
    mm.Add("Selector", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].Selector);
    mm.Add("Selector1", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].Selector1);
    mm.Add("Compare", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].Compare);
    mm.Add("Compare_a", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].Compare_a);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb.CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0]);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].UnitDelay_DSTATE);
    mm.Add("UnitDelay_DSTATE_n", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].UnitDelay_DSTATE_n);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].DiscreteTimeIntegrator_DSTATE);
    mm.Add("DiscreteTimeIntegrator_PrevResetState", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].DiscreteTimeIntegrator_PrevResetState);
    mm.Add("DiscreteTimeIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].DiscreteTimeIntegrator_IC_LOADING);
    mm.Add("DiscreteTimeIntegrator_SYSTEM_ENABLE", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].DiscreteTimeIntegrator_SYSTEM_ENABLE);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].IC_FirstOutputTime);
    mm.Add("BrakingForce_MODE", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].BrakingForce_MODE);
    mm.Add("BrakeThermalModel_MODE", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].BrakeThermalModel_MODE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0]);
    mm.Add("Assertion_slioAccessor", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].Assertion_slioAccessor);
    mm.Add("VehicleEnabledBrakes_MODE", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].VehicleEnabledBrakes_MODE);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.DiscreteTimeIntegrator_DSTATE);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw.CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainBrakes_InstanceData);
    mm.Add("rtb", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtb);
    mm.Add("rtdw", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtdw);
    mm.AddReadOnly(model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtm);
    mm.Add("rtm", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData.rtm);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TractionSystem_InstanceData.rtb);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TractionSystem_InstanceData.rtdw);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TractionSystem_InstanceData);
    mm.Add("rtb", model.Model().BEML_EMU_DW.TractionSystem_InstanceData.rtb);
    mm.Add("rtdw", model.Model().BEML_EMU_DW.TractionSystem_InstanceData.rtdw);
    AddRTM(mm, model.Model().BEML_EMU_DW.TractionSystem_InstanceData.rtm);
    mm.Add("rtm", model.Model().BEML_EMU_DW.TractionSystem_InstanceData.rtm);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.UnitDelay[0]);
    mm.Add("Enabled", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.UnitDelay[0].Enabled);
    mm.Add("VehicleID", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.UnitDelay[0].VehicleID);
    mm.Add("HeadPosition", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.UnitDelay[0].HeadPosition);
    mm.Add("TailPosition", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.UnitDelay[0].TailPosition);
    mm.Add("Velocity", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.UnitDelay[0].Velocity);
    mm.Add("Mass", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.UnitDelay[0].Mass);
    mm.Add("MovingForce", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.UnitDelay[0].MovingForce);
    mm.Add("HeadCouplerForce", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.UnitDelay[0].HeadCouplerForce);
    mm.Add("TailCouplerForce", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.UnitDelay[0].TailCouplerForce);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ixb[0]);
    mm.Add("Gain", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ixb[0].Gain);
    mm.Add("Gain1", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ixb[0].Gain1);
    mm.Add("Limit", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ixb[0].Limit);
    mm.Add("Merge", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ixb[0].Merge);
    mm.Add("DataTypeConversion1", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ixb[0].DataTypeConversion1);
    mm.Add("Saturation", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ixb[0].Saturation);
    mm.Add("Saturation1", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ixb[0].Saturation1);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ix[0].BusCreator);
    mm.Add("UseMimic", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ix[0].BusCreator.UseMimic);
    mm.Add("MimicPosition", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ix[0].BusCreator.MimicPosition);
    mm.Add("MimicVelocity", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ix[0].BusCreator.MimicVelocity);
    mm.Add("MimicMass", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ix[0].BusCreator.MimicMass);
    mm.Add("MimicMovingForce", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ix[0].BusCreator.MimicMovingForce);
    mm.Add("MimicCouplerForce", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ix[0].BusCreator.MimicCouplerForce);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ix[0]);
    mm.Add("BusCreator", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ix[0].BusCreator);
    mm.Add("External1", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ix[0].External1);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_i[0]);
    mm.Add("BusAssignment", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_i[0].BusAssignment);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys[0]);
    mm.Add("BusCreator", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys[0].BusCreator);
    mm.Add("v", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys[0].v);
    mm.Add("DataTypeConversion2", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys[0].DataTypeConversion2);
    mm.Add("DataTypeConversion3", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys[0].DataTypeConversion3);
    mm.Add("Switch5", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys[0].Switch5);
    mm.Add("WheelSpeed", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys[0].WheelSpeed);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].sf_ReactionForcePerAxle);
    mm.Add("ForcePerAxle", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].sf_ReactionForcePerAxle.ForcePerAxle);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0]);
    mm.Add("BusCreator1", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].BusCreator1);
    mm.Add("UnitDelay1", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].UnitDelay1);
    mm.Add("ImpAsg_InsertedFor_Coupler_Out_at_inport_0", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].ImpAsg_InsertedFor_Coupler_Out_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_Wheel_Out_at_inport_0", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].ImpAsg_InsertedFor_Wheel_Out_at_inport_0);
    mm.Add("Integrator", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].Integrator);
    mm.Add("CouplerSeparation", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CouplerSeparation);
    mm.Add("CouplerSeparationRate", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CouplerSeparationRate);
    mm.Add("FrontVehicleMass", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].FrontVehicleMass);
    mm.Add("BackVehicleMass", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].BackVehicleMass);
    mm.Add("FrontMovingForce", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].FrontMovingForce);
    mm.Add("BackMovingForce", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].BackMovingForce);
    mm.Add("VectorConcatenate", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].VectorConcatenate);
    mm.Add("Position", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].Position);
    mm.Add("VectorConcatenate_k", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].VectorConcatenate_k);
    mm.Add("ImpAsg_InsertedFor_MechanicallyCoupled_at_inport_0", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].ImpAsg_InsertedFor_MechanicallyCoupled_at_inport_0);
    mm.Add("Merge", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].Merge);
    mm.Add("DataTypeConversion", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].DataTypeConversion);
    mm.Add("BrakingForce", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].BrakingForce);
    mm.Add("DrivingForce", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].DrivingForce);
    mm.Add("BrakePower", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].BrakePower);
    mm.Add("Add", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].Add);
    mm.Add("Assignment", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].Assignment);
    mm.Add("ForcePerAxle", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].ForcePerAxle);
    mm.Add("EnableCouplerForceCalc", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].EnableCouplerForceCalc);
    mm.Add("ImpAsg_InsertedFor_ExternalCoupling_at_inport_0", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].ImpAsg_InsertedFor_ExternalCoupling_at_inport_0);
    mm.Add("CoreSubsys_ixb", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ixb);
    mm.Add("CoreSubsys_ix", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_ix);
    mm.Add("CoreSubsys_i", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys_i);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].CoreSubsys);
    mm.Add("sf_ReactionForcePerAxle", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].sf_ReactionForcePerAxle);
    mm.Add("sf_BrakingForcePerAxle", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p[0].sf_BrakingForcePerAxle);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb);
    mm.Add("UnitDelay", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.UnitDelay);
    mm.Add("RunInit", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.RunInit);
    mm.Add("y", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.y);
    mm.Add("ForEach", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.ForEach);
    mm.Add("CoreSubsys_p", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb.CoreSubsys_p);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ixb[0]);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ixb[0].DiscreteTimeIntegrator_DSTATE);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ixb[0].DelayInput1_DSTATE);
    mm.Add("DiscreteTimeIntegrator_PrevResetState", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ixb[0].DiscreteTimeIntegrator_PrevResetState);
    mm.Add("DiscreteTimeIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ixb[0].DiscreteTimeIntegrator_IC_LOADING);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ixb[0].Memory_PreviousInput);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ixb[0].IC_FirstOutputTime);
    mm.Add("CouplerForces_MODE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ixb[0].CouplerForces_MODE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0]);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].DelayInput1_DSTATE);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].UnitDelay_DSTATE);
    mm.Add("PreviousVelocity_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].PreviousVelocity_DSTATE);
    mm.Add("IntegratedVelocity_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].IntegratedVelocity_DSTATE);
    mm.Add("UnitDelay_DSTATE_f", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].UnitDelay_DSTATE_f);
    mm.Add("IntegratedPosition_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].IntegratedPosition_DSTATE);
    mm.Add("Timer_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].Timer_DSTATE);
    mm.Add("IntegratedVelocity_PrevResetState", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].IntegratedVelocity_PrevResetState);
    mm.Add("IntegratedPosition_PrevResetState", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].IntegratedPosition_PrevResetState);
    mm.Add("Timer_PrevResetState", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].Timer_PrevResetState);
    mm.Add("IntegratedVelocity_IC_LOADING", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].IntegratedVelocity_IC_LOADING);
    mm.Add("IntegratedVelocity_SYSTEM_ENABLE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].IntegratedVelocity_SYSTEM_ENABLE);
    mm.Add("IntegratedPosition_IC_LOADING", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].IntegratedPosition_IC_LOADING);
    mm.Add("IntegratedPosition_SYSTEM_ENABLE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].IntegratedPosition_SYSTEM_ENABLE);
    mm.Add("MimicModelEnabled_MODE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix[0].MimicModelEnabled_MODE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_i[0]);
    mm.Add("TappedDelay_X", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_i[0].TappedDelay_X);
    mm.Add("UpdateMimicOutputs_MODE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_i[0].UpdateMimicOutputs_MODE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys[0]);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys[0].UnitDelay_DSTATE);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys[0].UnitDelay1_DSTATE);
    mm.Add("UnitDelay1_DSTATE_k", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys[0].UnitDelay1_DSTATE_k);
    mm.Add("UnitDelay1_DSTATE_n", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys[0].UnitDelay1_DSTATE_n);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys[0].IC_FirstOutputTime);
    mm.Add("AxleModelEnabled_MODE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys[0].AxleModelEnabled_MODE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0]);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].UnitDelay1_DSTATE);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].UnitDelay_DSTATE);
    mm.Add("Integrator_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].Integrator_DSTATE);
    mm.Add("UD_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].UD_DSTATE);
    mm.Add("VelocityIntegrator_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].VelocityIntegrator_DSTATE);
    mm.Add("PositionIntegrator_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].PositionIntegrator_DSTATE);
    mm.Add("UD_DSTATE_l", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].UD_DSTATE_l);
    mm.Add("Assertion_slioAccessor", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].Assertion_slioAccessor);
    mm.Add("PositionIntegrator_PrevResetState", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].PositionIntegrator_PrevResetState);
    mm.Add("VelocityIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].VelocityIntegrator_IC_LOADING);
    mm.Add("PositionIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].PositionIntegrator_IC_LOADING);
    mm.Add("PositionIntegrator_SYSTEM_ENABLE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].PositionIntegrator_SYSTEM_ENABLE);
    mm.Add("CouplerForcesEnabledCar_MODE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CouplerForcesEnabledCar_MODE);
    mm.Add("LongitudinalWheelForce_MODE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].LongitudinalWheelForce_MODE);
    mm.Add("CoreSubsys_ixb", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ixb);
    mm.Add("CoreSubsys_ix", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_ix);
    mm.Add("CoreSubsys_i", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys_i);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p[0].CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.UnitDelay_DSTATE);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.DiscreteTimeIntegrator_DSTATE);
    mm.Add("CoreSubsys_p", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw.CoreSubsys_p);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtzce.CoreSubsys_p[0].CoreSubsys_ix[0]);
    mm.Add("ExternalCouplingLogic_Trig_ZCE", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtzce.CoreSubsys_p[0].CoreSubsys_ix[0].ExternalCouplingLogic_Trig_ZCE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtzce.CoreSubsys_p[0]);
    mm.Add("CoreSubsys_ix", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtzce.CoreSubsys_p[0].CoreSubsys_ix);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtzce);
    mm.Add("CoreSubsys_p", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtzce.CoreSubsys_p);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.TrainDynamics_InstanceData);
    mm.Add("rtb", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtb);
    mm.Add("rtdw", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtdw);
    AddRTM(mm, model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtm);
    mm.Add("rtm", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtm);
    mm.Add("rtzce", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData.rtzce);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ControlKeyToggle);
    mm.Add("Merge", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ControlKeyToggle.Merge);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MasterControllerHandleIncrement);
    mm.Add("ModeSwitch", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MasterControllerHandleIncrement.ModeSwitch);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ModeSelectorIncrement);
    mm.Add("ModeSwitch", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ModeSelectorIncrement.ModeSwitch);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DoorCloseAnnouncementPBMomentary);
    mm.Add("ModeSwitch", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DoorCloseAnnouncementPBMomentary.ModeSwitch);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].HeadLightSwitchIncrement);
    mm.Add("ModeSwitch", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].HeadLightSwitchIncrement.ModeSwitch);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PantoSelectorIncrement);
    mm.Add("ModeSwitch", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PantoSelectorIncrement.ModeSwitch);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DoorWinderRotary);
    mm.Add("ModeSwitch", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DoorWinderRotary.ModeSwitch);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].AC1CBMCB);
    mm.Add("DataTypeConversion", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].AC1CBMCB.DataTypeConversion);
    mm.Add("Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].AC1CBMCB.Toggle);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0]);
    mm.Add("ControlKeyToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ControlKeyToggle);
    mm.Add("DeadmanSafetyDeviceToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DeadmanSafetyDeviceToggle);
    mm.Add("MasterControllerHandleIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MasterControllerHandleIncrement);
    mm.Add("ModeSelectorIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ModeSelectorIncrement);
    mm.Add("CabConsoleLightPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CabConsoleLightPBToggle);
    mm.Add("CabMainLightPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CabMainLightPBToggle);
    mm.Add("DoorCloseAnnouncementPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DoorCloseAnnouncementPBMomentary);
    mm.Add("DoorProvenLoopCutoutPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DoorProvenLoopCutoutPBMomentary);
    mm.Add("EmergencyBrakePBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].EmergencyBrakePBToggle);
    mm.Add("HornPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].HornPBMomentary);
    mm.Add("LeftDoorClosePBOperatingPanel1Momentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoorClosePBOperatingPanel1Momentary);
    mm.Add("LeftDoorOpenPBOperatingPanel1Momentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoorOpenPBOperatingPanel1Momentary);
    mm.Add("ParkingBrakeOffSwitchMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ParkingBrakeOffSwitchMomentary);
    mm.Add("ParkingBrakeOnSwitchMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ParkingBrakeOnSwitchMomentary);
    mm.Add("RightDoorClosePBOperatingPanel1Momentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoorClosePBOperatingPanel1Momentary);
    mm.Add("RightDoorOpenPBOperatingPanel1Momentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoorOpenPBOperatingPanel1Momentary);
    mm.Add("ATOStartPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ATOStartPBMomentary);
    mm.Add("EmergencyBrakeResetPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].EmergencyBrakeResetPBMomentary);
    mm.Add("ROSPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ROSPBMomentary);
    mm.Add("UTOPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].UTOPBMomentary);
    mm.Add("BrakeLoopCutoutSSToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BrakeLoopCutoutSSToggle);
    mm.Add("CallOnLightPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CallOnLightPBToggle);
    mm.Add("DeadmanBypassSwitchToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DeadmanBypassSwitchToggle);
    mm.Add("HeadLightSwitchIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].HeadLightSwitchIncrement);
    mm.Add("LIMPHomePBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LIMPHomePBToggle);
    mm.Add("LeftDoorClosePBOperatingPanel2Momentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoorClosePBOperatingPanel2Momentary);
    mm.Add("LeftDoorOpenPB1OperatingPanel2Momentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoorOpenPB1OperatingPanel2Momentary);
    mm.Add("LeftDoorOpenPBOperatingPanel2Momentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoorOpenPBOperatingPanel2Momentary);
    mm.Add("PantoDownPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PantoDownPBMomentary);
    mm.Add("PantoSelectorIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PantoSelectorIncrement);
    mm.Add("PantoUpPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PantoUpPBMomentary);
    mm.Add("PowerOffPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PowerOffPBMomentary);
    mm.Add("SafetyCutoutSSToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SafetyCutoutSSToggle);
    mm.Add("VCBClosePBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].VCBClosePBMomentary);
    mm.Add("VCBOpenPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].VCBOpenPBMomentary);
    mm.Add("WiperPumpMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].WiperPumpMomentary);
    mm.Add("WiperSelectionSwitchIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].WiperSelectionSwitchIncrement);
    mm.Add("BatteryResetPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BatteryResetPBMomentary);
    mm.Add("CabBoosterFanSSIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CabBoosterFanSSIncrement);
    mm.Add("DoorProvenLoopOutputSwitchToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DoorProvenLoopOutputSwitchToggle);
    mm.Add("EmergencyBrakePBBypassSSToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].EmergencyBrakePBBypassSSToggle);
    mm.Add("EmergencyStopPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].EmergencyStopPBToggle);
    mm.Add("FlasherLightPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].FlasherLightPBToggle);
    mm.Add("FloodLightPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].FloodLightPBToggle);
    mm.Add("HoldDoorCloseBypassSSIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].HoldDoorCloseBypassSSIncrement);
    mm.Add("LampTestPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LampTestPBToggle);
    mm.Add("RightDoorClosePBOperatingPanel5Momentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoorClosePBOperatingPanel5Momentary);
    mm.Add("RightDoorOpenPB1OperatingPanel5Momentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoorOpenPB1OperatingPanel5Momentary);
    mm.Add("RightDoorOpenPBOperatingPanel5Momentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoorOpenPBOperatingPanel5Momentary);
    mm.Add("UncouplePBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].UncouplePBMomentary);
    mm.Add("WFLTestPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].WFLTestPBToggle);
    mm.Add("WiperControlSwitchIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].WiperControlSwitchIncrement);
    mm.Add("CabEEDLeftMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CabEEDLeftMomentary);
    mm.Add("DoorWinderRotary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DoorWinderRotary);
    mm.Add("DummyCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DummyCoverToggle);
    mm.Add("EmergencyDoorGasSpringToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].EmergencyDoorGasSpringToggle);
    mm.Add("LargeHandleToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LargeHandleToggle);
    mm.Add("RampCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RampCoverToggle);
    mm.Add("RampCoverLockingLeverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RampCoverLockingLeverToggle);
    mm.Add("RampEndSupportToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RampEndSupportToggle);
    mm.Add("RampHandleToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RampHandleToggle);
    mm.Add("RampMiddleSupportToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RampMiddleSupportToggle);
    mm.Add("RampWinderRotary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RampWinderRotary);
    mm.Add("SafetyCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SafetyCoverToggle);
    mm.Add("SmallHandleToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SmallHandleToggle);
    mm.Add("WinderHandlesAccessCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].WinderHandlesAccessCoverToggle);
    mm.Add("CabEEDRightMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CabEEDRightMomentary);
    mm.Add("AC1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].AC1CBMCB);
    mm.Add("AC2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].AC2CBMCB);
    mm.Add("ADDCOSToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ADDCOSToggle);
    mm.Add("APSCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].APSCBMCB);
    mm.Add("APSICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].APSICBMCB);
    mm.Add("BCBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BCBCBMCB);
    mm.Add("BCGCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BCGCBMCB);
    mm.Add("BECUCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BECUCB1MCB);
    mm.Add("BECUCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BECUCB2MCB);
    mm.Add("BECUCB3MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BECUCB3MCB);
    mm.Add("BLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BLCBMCB);
    mm.Add("C1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].C1CBMCB);
    mm.Add("CBFCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CBFCBMCB);
    mm.Add("CBFCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CBFCCBMCB);
    mm.Add("CBTCCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CBTCCB1MCB);
    mm.Add("CCNVIO1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CCNVIO1CBMCB);
    mm.Add("CDUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CDUCBMCB);
    mm.Add("CECBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CECBMCB);
    mm.Add("CELCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CELCBMCB);
    mm.Add("CICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CICBMCB);
    mm.Add("CILCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CILCBMCB);
    mm.Add("CMCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CMCBMCB);
    mm.Add("CMCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CMCCBMCB);
    mm.Add("CRSBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CRSBCBMCB);
    mm.Add("CSACBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CSACBMCB);
    mm.Add("CSBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CSBCBMCB);
    mm.Add("CSCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].CSCCBMCB);
    mm.Add("DIOCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DIOCB1MCB);
    mm.Add("DIOCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DIOCB2MCB);
    mm.Add("DLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DLCBMCB);
    mm.Add("DMICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DMICBMCB);
    mm.Add("DPLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DPLCBMCB);
    mm.Add("DRCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DRCBMCB);
    mm.Add("DSCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DSCBMCB);
    mm.Add("EBLR1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].EBLR1CBMCB);
    mm.Add("EBLR2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].EBLR2CBMCB);
    mm.Add("EBMVCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].EBMVCBMCB);
    mm.Add("EDCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].EDCBMCB);
    mm.Add("ELCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ELCB1MCB);
    mm.Add("ELCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ELCB2MCB);
    mm.Add("ERCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ERCBMCB);
    mm.Add("ERVRCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ERVRCB1MCB);
    mm.Add("ERVRCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ERVRCB2MCB);
    mm.Add("ESKCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ESKCBMCB);
    mm.Add("FDSCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].FDSCBMCB);
    mm.Add("HCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].HCBMCB);
    mm.Add("HLLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].HLLCBMCB);
    mm.Add("HLRCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].HLRCBMCB);
    mm.Add("HMCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].HMCBMCB);
    mm.Add("HVAC1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].HVAC1MCB);
    mm.Add("HVAC2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].HVAC2MCB);
    mm.Add("ILCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ILCB1MCB);
    mm.Add("ILCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ILCB2MCB);
    mm.Add("LDICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LDICBMCB);
    mm.Add("LDLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LDLCBMCB);
    mm.Add("LDRCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LDRCBMCB);
    mm.Add("MLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MLCBMCB);
    mm.Add("MMCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MMCBMCB);
    mm.Add("MSOCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MSOCB1MCB);
    mm.Add("MSOCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MSOCB2MCB);
    mm.Add("MSOCB3MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MSOCB3MCB);
    mm.Add("MSOCB4MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MSOCB4MCB);
    mm.Add("MSOCB5MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MSOCB5MCB);
    mm.Add("MTBM1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MTBM1CBMCB);
    mm.Add("MTBM2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MTBM2CBMCB);
    mm.Add("MTBMCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MTBMCCBMCB);
    mm.Add("MTOPCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MTOPCBMCB);
    mm.Add("NBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].NBCBMCB);
    mm.Add("NVICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].NVICBMCB);
    mm.Add("OCCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].OCCB1MCB);
    mm.Add("OCCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].OCCB2MCB);
    mm.Add("ODDCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ODDCBMCB);
    mm.Add("ORDCOSToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ORDCOSToggle);
    mm.Add("PADCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PADCBMCB);
    mm.Add("PANCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PANCBMCB);
    mm.Add("PBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PBCBMCB);
    mm.Add("PISCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PISCB1MCB);
    mm.Add("PISCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PISCB2MCB);
    mm.Add("POCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].POCBMCB);
    mm.Add("PPU1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PPU1CBMCB);
    mm.Add("PPU2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PPU2CBMCB);
    mm.Add("PPU3CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PPU3CBMCB);
    mm.Add("PTCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PTCBMCB);
    mm.Add("RIO1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RIO1CBMCB);
    mm.Add("RIO2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RIO2CBMCB);
    mm.Add("RPTCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RPTCBMCB);
    mm.Add("RSACBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RSACBMCB);
    mm.Add("SAC1CCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SAC1CCBMCB);
    mm.Add("SAC2CCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SAC2CCBMCB);
    mm.Add("SIOCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SIOCB1MCB);
    mm.Add("SIOCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SIOCB2MCB);
    mm.Add("SOCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SOCB1MCB);
    mm.Add("SOCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SOCB2MCB);
    mm.Add("SP11CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SP11CBMCB);
    mm.Add("SP12CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SP12CBMCB);
    mm.Add("SP1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SP1CBMCB);
    mm.Add("SP2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SP2CBMCB);
    mm.Add("SP3CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SP3CBMCB);
    mm.Add("SP4CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SP4CBMCB);
    mm.Add("SP5CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SP5CBMCB);
    mm.Add("SP6CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SP6CBMCB);
    mm.Add("SPCB6MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SPCB6MCB);
    mm.Add("SPCB7MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SPCB7MCB);
    mm.Add("SPCB8MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SPCB8MCB);
    mm.Add("SPPBMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SPPBMomentary);
    mm.Add("SPSWToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SPSWToggle);
    mm.Add("SSCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SSCBMCB);
    mm.Add("SSICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SSICBMCB);
    mm.Add("TBCCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].TBCCB1MCB);
    mm.Add("TBCCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].TBCCB2MCB);
    mm.Add("TBNCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].TBNCBMCB);
    mm.Add("TDICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].TDICBMCB);
    mm.Add("TERCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].TERCB1MCB);
    mm.Add("TERCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].TERCB2MCB);
    mm.Add("TLLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].TLLCBMCB);
    mm.Add("TLRCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].TLRCBMCB);
    mm.Add("TRIVCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].TRIVCBMCB);
    mm.Add("TVDUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].TVDUCBMCB);
    mm.Add("TWVCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].TWVCBMCB);
    mm.Add("VCBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].VCBCBMCB);
    mm.Add("VCBCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].VCBCCBMCB);
    mm.Add("VCCBOrUCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].VCCBOrUCCBMCB);
    mm.Add("VIO1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].VIO1CBMCB);
    mm.Add("VIO2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].VIO2CBMCB);
    mm.Add("WFLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].WFLCBMCB);
    mm.Add("WIFICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].WIFICBMCB);
    mm.Add("WWCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].WWCBMCB);
    mm.Add("ZVBACBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ZVBACBMCB);
    mm.Add("ORDPlungerToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ORDPlungerToggle);
    mm.Add("PantographIsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PantographIsolationCockToggle);
    mm.Add("VCBIsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].VCBIsolationCockToggle);
    mm.Add("LeftDoorEADMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoorEADMomentary);
    mm.Add("LeftDoorEADCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoorEADCoverToggle);
    mm.Add("RightDoorEADMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoorEADMomentary);
    mm.Add("RightDoorEADCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoorEADCoverToggle);
    mm.Add("LeftDoor1CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor1CovingToggle);
    mm.Add("LeftDoor1DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor1DCUCBMCB);
    mm.Add("LeftDoor1EEDMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor1EEDMomentary);
    mm.Add("LeftDoor1LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor1LockoutToggle);
    mm.Add("LeftDoor1ManualCloseMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor1ManualCloseMomentary);
    mm.Add("LeftDoor1ManualOpenMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor1ManualOpenMomentary);
    mm.Add("LeftDoor2CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor2CovingToggle);
    mm.Add("LeftDoor2DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor2DCUCBMCB);
    mm.Add("LeftDoor2EEDMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor2EEDMomentary);
    mm.Add("LeftDoor2LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor2LockoutToggle);
    mm.Add("LeftDoor2ManualCloseMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor2ManualCloseMomentary);
    mm.Add("LeftDoor2ManualOpenMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor2ManualOpenMomentary);
    mm.Add("LeftDoor3CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor3CovingToggle);
    mm.Add("LeftDoor3DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor3DCUCBMCB);
    mm.Add("LeftDoor3EEDMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor3EEDMomentary);
    mm.Add("LeftDoor3LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor3LockoutToggle);
    mm.Add("LeftDoor3ManualCloseMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor3ManualCloseMomentary);
    mm.Add("LeftDoor3ManualOpenMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor3ManualOpenMomentary);
    mm.Add("LeftDoor4CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor4CovingToggle);
    mm.Add("LeftDoor4DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor4DCUCBMCB);
    mm.Add("LeftDoor4EEDMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor4EEDMomentary);
    mm.Add("LeftDoor4LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor4LockoutToggle);
    mm.Add("LeftDoor4ManualCloseMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor4ManualCloseMomentary);
    mm.Add("LeftDoor4ManualOpenMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].LeftDoor4ManualOpenMomentary);
    mm.Add("RightDoor1CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor1CovingToggle);
    mm.Add("RightDoor1DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor1DCUCBMCB);
    mm.Add("RightDoor1EEDMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor1EEDMomentary);
    mm.Add("RightDoor1LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor1LockoutToggle);
    mm.Add("RightDoor1ManualCloseMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor1ManualCloseMomentary);
    mm.Add("RightDoor1ManualOpenMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor1ManualOpenMomentary);
    mm.Add("RightDoor2CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor2CovingToggle);
    mm.Add("RightDoor2DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor2DCUCBMCB);
    mm.Add("RightDoor2EEDMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor2EEDMomentary);
    mm.Add("RightDoor2LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor2LockoutToggle);
    mm.Add("RightDoor2ManualCloseMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor2ManualCloseMomentary);
    mm.Add("RightDoor2ManualOpenMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor2ManualOpenMomentary);
    mm.Add("RightDoor3CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor3CovingToggle);
    mm.Add("RightDoor3DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor3DCUCBMCB);
    mm.Add("RightDoor3EEDMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor3EEDMomentary);
    mm.Add("RightDoor3LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor3LockoutToggle);
    mm.Add("RightDoor3ManualCloseMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor3ManualCloseMomentary);
    mm.Add("RightDoor3ManualOpenMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor3ManualOpenMomentary);
    mm.Add("RightDoor4CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor4CovingToggle);
    mm.Add("RightDoor4DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor4DCUCBMCB);
    mm.Add("RightDoor4EEDMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor4EEDMomentary);
    mm.Add("RightDoor4LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor4LockoutToggle);
    mm.Add("RightDoor4ManualCloseMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor4ManualCloseMomentary);
    mm.Add("RightDoor4ManualOpenMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].RightDoor4ManualOpenMomentary);
    mm.Add("DriversBackDoorToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].DriversBackDoorToggle);
    mm.Add("MicrophoneMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MicrophoneMomentary);
    mm.Add("PECUPushButtonMomentary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].PECUPushButtonMomentary);
    mm.Add("ASCOEnd1Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ASCOEnd1Toggle);
    mm.Add("ASCOEnd2Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ASCOEnd2Toggle);
    mm.Add("ASIsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ASIsolationCockToggle);
    mm.Add("BIC1InsideToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BIC1InsideToggle);
    mm.Add("BIC1OutsideToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BIC1OutsideToggle);
    mm.Add("BIC2InsideToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BIC2InsideToggle);
    mm.Add("BIC2OutsideToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].BIC2OutsideToggle);
    mm.Add("EPICToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].EPICToggle);
    mm.Add("Horn1IsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].Horn1IsolationCockToggle);
    mm.Add("Horn2IsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].Horn2IsolationCockToggle);
    mm.Add("MREPIsolationCockEnd1Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MREPIsolationCockEnd1Toggle);
    mm.Add("MREPIsolationCockEnd2Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MREPIsolationCockEnd2Toggle);
    mm.Add("MRIsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].MRIsolationCockToggle);
    mm.Add("ParkBrakeIsolationCockBogie1Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ParkBrakeIsolationCockBogie1Toggle);
    mm.Add("ParkBrakeIsolationCockBogie2Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ParkBrakeIsolationCockBogie2Toggle);
    mm.Add("ParkingBrakeManualReleaseBogie1Handle1Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ParkingBrakeManualReleaseBogie1Handle1Toggle);
    mm.Add("ParkingBrakeManualReleaseBogie1Handle2Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ParkingBrakeManualReleaseBogie1Handle2Toggle);
    mm.Add("ParkingBrakeManualReleaseBogie2Handle1Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ParkingBrakeManualReleaseBogie2Handle1Toggle);
    mm.Add("ParkingBrakeManualReleaseBogie2Handle2Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].ParkingBrakeManualReleaseBogie2Handle2Toggle);
    mm.Add("SRToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].SRToggle);
    mm.Add("UncouplingCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys[0].UncouplingCockToggle);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb);
    mm.Add("ImpSel_InsertedFor_ModelInputs_at_outport_0", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.ImpSel_InsertedFor_ModelInputs_at_outport_0);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb.CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ControlKeyToggle);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ControlKeyToggle.UnitDelay_DSTATE);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ControlKeyToggle.DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_m", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ControlKeyToggle.DelayInput1_DSTATE_m);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MasterControllerHandleIncrement);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MasterControllerHandleIncrement.DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_f", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MasterControllerHandleIncrement.DelayInput1_DSTATE_f);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MasterControllerHandleIncrement.UnitDelay_DSTATE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ModeSelectorIncrement);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ModeSelectorIncrement.DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_m", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ModeSelectorIncrement.DelayInput1_DSTATE_m);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ModeSelectorIncrement.UnitDelay_DSTATE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HeadLightSwitchIncrement);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HeadLightSwitchIncrement.DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_e", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HeadLightSwitchIncrement.DelayInput1_DSTATE_e);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HeadLightSwitchIncrement.UnitDelay_DSTATE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PantoSelectorIncrement);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PantoSelectorIncrement.DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_a", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PantoSelectorIncrement.DelayInput1_DSTATE_a);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PantoSelectorIncrement.UnitDelay_DSTATE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DoorWinderRotary);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DoorWinderRotary.DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_h", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DoorWinderRotary.DelayInput1_DSTATE_h);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DoorWinderRotary.UnitDelay_DSTATE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].AC1CBMCB);
    mm.Add("Timer_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].AC1CBMCB.Timer_DSTATE);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].AC1CBMCB.UnitDelay_DSTATE);
    mm.Add("Timer_PrevResetState", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].AC1CBMCB.Timer_PrevResetState);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].AC1CBMCB.Memory_PreviousInput);
    mm.Add("MCBTrip_MODE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].AC1CBMCB.MCBTrip_MODE);
    mm.Add("Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].AC1CBMCB.Toggle);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0]);
    mm.Add("ControlKeyToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ControlKeyToggle);
    mm.Add("DeadmanSafetyDeviceToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DeadmanSafetyDeviceToggle);
    mm.Add("MasterControllerHandleIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MasterControllerHandleIncrement);
    mm.Add("ModeSelectorIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ModeSelectorIncrement);
    mm.Add("CabConsoleLightPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CabConsoleLightPBToggle);
    mm.Add("CabMainLightPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CabMainLightPBToggle);
    mm.Add("EmergencyBrakePBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].EmergencyBrakePBToggle);
    mm.Add("BrakeLoopCutoutSSToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].BrakeLoopCutoutSSToggle);
    mm.Add("CallOnLightPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CallOnLightPBToggle);
    mm.Add("DeadmanBypassSwitchToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DeadmanBypassSwitchToggle);
    mm.Add("HeadLightSwitchIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HeadLightSwitchIncrement);
    mm.Add("LIMPHomePBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LIMPHomePBToggle);
    mm.Add("PantoSelectorIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PantoSelectorIncrement);
    mm.Add("SafetyCutoutSSToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SafetyCutoutSSToggle);
    mm.Add("WiperSelectionSwitchIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].WiperSelectionSwitchIncrement);
    mm.Add("CabBoosterFanSSIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CabBoosterFanSSIncrement);
    mm.Add("DoorProvenLoopOutputSwitchToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DoorProvenLoopOutputSwitchToggle);
    mm.Add("EmergencyBrakePBBypassSSToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].EmergencyBrakePBBypassSSToggle);
    mm.Add("EmergencyStopPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].EmergencyStopPBToggle);
    mm.Add("FlasherLightPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].FlasherLightPBToggle);
    mm.Add("FloodLightPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].FloodLightPBToggle);
    mm.Add("HoldDoorCloseBypassSSIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HoldDoorCloseBypassSSIncrement);
    mm.Add("LampTestPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LampTestPBToggle);
    mm.Add("WFLTestPBToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].WFLTestPBToggle);
    mm.Add("WiperControlSwitchIncrement", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].WiperControlSwitchIncrement);
    mm.Add("DoorWinderRotary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DoorWinderRotary);
    mm.Add("DummyCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DummyCoverToggle);
    mm.Add("EmergencyDoorGasSpringToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].EmergencyDoorGasSpringToggle);
    mm.Add("LargeHandleToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LargeHandleToggle);
    mm.Add("RampCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RampCoverToggle);
    mm.Add("RampCoverLockingLeverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RampCoverLockingLeverToggle);
    mm.Add("RampEndSupportToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RampEndSupportToggle);
    mm.Add("RampHandleToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RampHandleToggle);
    mm.Add("RampMiddleSupportToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RampMiddleSupportToggle);
    mm.Add("RampWinderRotary", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RampWinderRotary);
    mm.Add("SafetyCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SafetyCoverToggle);
    mm.Add("SmallHandleToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SmallHandleToggle);
    mm.Add("WinderHandlesAccessCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].WinderHandlesAccessCoverToggle);
    mm.Add("AC1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].AC1CBMCB);
    mm.Add("AC2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].AC2CBMCB);
    mm.Add("ADDCOSToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ADDCOSToggle);
    mm.Add("APSCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].APSCBMCB);
    mm.Add("APSICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].APSICBMCB);
    mm.Add("BCBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].BCBCBMCB);
    mm.Add("BCGCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].BCGCBMCB);
    mm.Add("BECUCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].BECUCB1MCB);
    mm.Add("BECUCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].BECUCB2MCB);
    mm.Add("BECUCB3MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].BECUCB3MCB);
    mm.Add("BLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].BLCBMCB);
    mm.Add("C1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].C1CBMCB);
    mm.Add("CBFCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CBFCBMCB);
    mm.Add("CBFCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CBFCCBMCB);
    mm.Add("CBTCCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CBTCCB1MCB);
    mm.Add("CCNVIO1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CCNVIO1CBMCB);
    mm.Add("CDUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CDUCBMCB);
    mm.Add("CECBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CECBMCB);
    mm.Add("CELCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CELCBMCB);
    mm.Add("CICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CICBMCB);
    mm.Add("CILCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CILCBMCB);
    mm.Add("CMCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CMCBMCB);
    mm.Add("CMCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CMCCBMCB);
    mm.Add("CRSBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CRSBCBMCB);
    mm.Add("CSACBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CSACBMCB);
    mm.Add("CSBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CSBCBMCB);
    mm.Add("CSCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].CSCCBMCB);
    mm.Add("DIOCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DIOCB1MCB);
    mm.Add("DIOCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DIOCB2MCB);
    mm.Add("DLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DLCBMCB);
    mm.Add("DMICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DMICBMCB);
    mm.Add("DPLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DPLCBMCB);
    mm.Add("DRCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DRCBMCB);
    mm.Add("DSCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DSCBMCB);
    mm.Add("EBLR1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].EBLR1CBMCB);
    mm.Add("EBLR2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].EBLR2CBMCB);
    mm.Add("EBMVCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].EBMVCBMCB);
    mm.Add("EDCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].EDCBMCB);
    mm.Add("ELCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ELCB1MCB);
    mm.Add("ELCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ELCB2MCB);
    mm.Add("ERCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ERCBMCB);
    mm.Add("ERVRCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ERVRCB1MCB);
    mm.Add("ERVRCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ERVRCB2MCB);
    mm.Add("ESKCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ESKCBMCB);
    mm.Add("FDSCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].FDSCBMCB);
    mm.Add("HCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HCBMCB);
    mm.Add("HLLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HLLCBMCB);
    mm.Add("HLRCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HLRCBMCB);
    mm.Add("HMCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HMCBMCB);
    mm.Add("HVAC1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HVAC1MCB);
    mm.Add("HVAC2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].HVAC2MCB);
    mm.Add("ILCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ILCB1MCB);
    mm.Add("ILCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ILCB2MCB);
    mm.Add("LDICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LDICBMCB);
    mm.Add("LDLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LDLCBMCB);
    mm.Add("LDRCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LDRCBMCB);
    mm.Add("MLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MLCBMCB);
    mm.Add("MMCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MMCBMCB);
    mm.Add("MSOCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MSOCB1MCB);
    mm.Add("MSOCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MSOCB2MCB);
    mm.Add("MSOCB3MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MSOCB3MCB);
    mm.Add("MSOCB4MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MSOCB4MCB);
    mm.Add("MSOCB5MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MSOCB5MCB);
    mm.Add("MTBM1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MTBM1CBMCB);
    mm.Add("MTBM2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MTBM2CBMCB);
    mm.Add("MTBMCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MTBMCCBMCB);
    mm.Add("MTOPCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MTOPCBMCB);
    mm.Add("NBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].NBCBMCB);
    mm.Add("NVICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].NVICBMCB);
    mm.Add("OCCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].OCCB1MCB);
    mm.Add("OCCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].OCCB2MCB);
    mm.Add("ODDCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ODDCBMCB);
    mm.Add("ORDCOSToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ORDCOSToggle);
    mm.Add("PADCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PADCBMCB);
    mm.Add("PANCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PANCBMCB);
    mm.Add("PBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PBCBMCB);
    mm.Add("PISCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PISCB1MCB);
    mm.Add("PISCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PISCB2MCB);
    mm.Add("POCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].POCBMCB);
    mm.Add("PPU1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PPU1CBMCB);
    mm.Add("PPU2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PPU2CBMCB);
    mm.Add("PPU3CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PPU3CBMCB);
    mm.Add("PTCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PTCBMCB);
    mm.Add("RIO1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RIO1CBMCB);
    mm.Add("RIO2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RIO2CBMCB);
    mm.Add("RPTCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RPTCBMCB);
    mm.Add("RSACBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RSACBMCB);
    mm.Add("SAC1CCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SAC1CCBMCB);
    mm.Add("SAC2CCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SAC2CCBMCB);
    mm.Add("SIOCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SIOCB1MCB);
    mm.Add("SIOCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SIOCB2MCB);
    mm.Add("SOCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SOCB1MCB);
    mm.Add("SOCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SOCB2MCB);
    mm.Add("SP11CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SP11CBMCB);
    mm.Add("SP12CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SP12CBMCB);
    mm.Add("SP1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SP1CBMCB);
    mm.Add("SP2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SP2CBMCB);
    mm.Add("SP3CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SP3CBMCB);
    mm.Add("SP4CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SP4CBMCB);
    mm.Add("SP5CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SP5CBMCB);
    mm.Add("SP6CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SP6CBMCB);
    mm.Add("SPCB6MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SPCB6MCB);
    mm.Add("SPCB7MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SPCB7MCB);
    mm.Add("SPCB8MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SPCB8MCB);
    mm.Add("SPSWToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SPSWToggle);
    mm.Add("SSCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SSCBMCB);
    mm.Add("SSICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SSICBMCB);
    mm.Add("TBCCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].TBCCB1MCB);
    mm.Add("TBCCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].TBCCB2MCB);
    mm.Add("TBNCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].TBNCBMCB);
    mm.Add("TDICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].TDICBMCB);
    mm.Add("TERCB1MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].TERCB1MCB);
    mm.Add("TERCB2MCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].TERCB2MCB);
    mm.Add("TLLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].TLLCBMCB);
    mm.Add("TLRCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].TLRCBMCB);
    mm.Add("TRIVCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].TRIVCBMCB);
    mm.Add("TVDUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].TVDUCBMCB);
    mm.Add("TWVCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].TWVCBMCB);
    mm.Add("VCBCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].VCBCBMCB);
    mm.Add("VCBCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].VCBCCBMCB);
    mm.Add("VCCBOrUCCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].VCCBOrUCCBMCB);
    mm.Add("VIO1CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].VIO1CBMCB);
    mm.Add("VIO2CBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].VIO2CBMCB);
    mm.Add("WFLCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].WFLCBMCB);
    mm.Add("WIFICBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].WIFICBMCB);
    mm.Add("WWCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].WWCBMCB);
    mm.Add("ZVBACBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ZVBACBMCB);
    mm.Add("ORDPlungerToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ORDPlungerToggle);
    mm.Add("PantographIsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].PantographIsolationCockToggle);
    mm.Add("VCBIsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].VCBIsolationCockToggle);
    mm.Add("LeftDoorEADCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoorEADCoverToggle);
    mm.Add("RightDoorEADCoverToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoorEADCoverToggle);
    mm.Add("LeftDoor1CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor1CovingToggle);
    mm.Add("LeftDoor1DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor1DCUCBMCB);
    mm.Add("LeftDoor1LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor1LockoutToggle);
    mm.Add("LeftDoor2CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor2CovingToggle);
    mm.Add("LeftDoor2DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor2DCUCBMCB);
    mm.Add("LeftDoor2LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor2LockoutToggle);
    mm.Add("LeftDoor3CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor3CovingToggle);
    mm.Add("LeftDoor3DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor3DCUCBMCB);
    mm.Add("LeftDoor3LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor3LockoutToggle);
    mm.Add("LeftDoor4CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor4CovingToggle);
    mm.Add("LeftDoor4DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor4DCUCBMCB);
    mm.Add("LeftDoor4LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].LeftDoor4LockoutToggle);
    mm.Add("RightDoor1CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor1CovingToggle);
    mm.Add("RightDoor1DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor1DCUCBMCB);
    mm.Add("RightDoor1LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor1LockoutToggle);
    mm.Add("RightDoor2CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor2CovingToggle);
    mm.Add("RightDoor2DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor2DCUCBMCB);
    mm.Add("RightDoor2LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor2LockoutToggle);
    mm.Add("RightDoor3CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor3CovingToggle);
    mm.Add("RightDoor3DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor3DCUCBMCB);
    mm.Add("RightDoor3LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor3LockoutToggle);
    mm.Add("RightDoor4CovingToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor4CovingToggle);
    mm.Add("RightDoor4DCUCBMCB", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor4DCUCBMCB);
    mm.Add("RightDoor4LockoutToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].RightDoor4LockoutToggle);
    mm.Add("DriversBackDoorToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].DriversBackDoorToggle);
    mm.Add("ASCOEnd1Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ASCOEnd1Toggle);
    mm.Add("ASCOEnd2Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ASCOEnd2Toggle);
    mm.Add("ASIsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ASIsolationCockToggle);
    mm.Add("BIC1InsideToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].BIC1InsideToggle);
    mm.Add("BIC1OutsideToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].BIC1OutsideToggle);
    mm.Add("BIC2InsideToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].BIC2InsideToggle);
    mm.Add("BIC2OutsideToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].BIC2OutsideToggle);
    mm.Add("EPICToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].EPICToggle);
    mm.Add("Horn1IsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].Horn1IsolationCockToggle);
    mm.Add("Horn2IsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].Horn2IsolationCockToggle);
    mm.Add("MREPIsolationCockEnd1Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MREPIsolationCockEnd1Toggle);
    mm.Add("MREPIsolationCockEnd2Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MREPIsolationCockEnd2Toggle);
    mm.Add("MRIsolationCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].MRIsolationCockToggle);
    mm.Add("ParkBrakeIsolationCockBogie1Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ParkBrakeIsolationCockBogie1Toggle);
    mm.Add("ParkBrakeIsolationCockBogie2Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ParkBrakeIsolationCockBogie2Toggle);
    mm.Add("ParkingBrakeManualReleaseBogie1Handle1Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ParkingBrakeManualReleaseBogie1Handle1Toggle);
    mm.Add("ParkingBrakeManualReleaseBogie1Handle2Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ParkingBrakeManualReleaseBogie1Handle2Toggle);
    mm.Add("ParkingBrakeManualReleaseBogie2Handle1Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ParkingBrakeManualReleaseBogie2Handle1Toggle);
    mm.Add("ParkingBrakeManualReleaseBogie2Handle2Toggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].ParkingBrakeManualReleaseBogie2Handle2Toggle);
    mm.Add("SRToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].SRToggle);
    mm.Add("UncouplingCockToggle", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys[0].UncouplingCockToggle);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.DiscreteTimeIntegrator_DSTATE);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw.CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData);
    mm.Add("rtb", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtb);
    mm.Add("rtdw", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtdw);
    mm.AddReadOnly(model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtm);
    mm.Add("rtm", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData.rtm);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.Model_InstanceData.rtb.CoreSubsys[0].TimerOffDelayNoInit_f);
    mm.Add("LogicalOperator1", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.CoreSubsys[0].TimerOffDelayNoInit_f.LogicalOperator1);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.Model_InstanceData.rtb.CoreSubsys[0]);
    mm.Add("BusAssignment", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.CoreSubsys[0].BusAssignment);
    mm.Add("OverrideifDMS", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.CoreSubsys[0].OverrideifDMS);
    mm.Add("OverrideifDMS_h", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.CoreSubsys[0].OverrideifDMS_h);
    mm.Add("OverrideifDMS_o", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.CoreSubsys[0].OverrideifDMS_o);
    mm.Add("OverrideifDMS_l", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.CoreSubsys[0].OverrideifDMS_l);
    mm.Add("TimerOffDelayNoInit_f", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.CoreSubsys[0].TimerOffDelayNoInit_f);
    mm.Add("TimerOffDelayNoInit", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.CoreSubsys[0].TimerOffDelayNoInit);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.Model_InstanceData.rtb);
    mm.Add("NOT", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.NOT);
    mm.Add("VectorConcatenate2", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.VectorConcatenate2);
    mm.Add("VectorConcatenate2_h", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.VectorConcatenate2_h);
    mm.Add("ImpAsg_InsertedFor_ElectricallyCoupledVehicle_at_inport_0", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.ImpAsg_InsertedFor_ElectricallyCoupledVehicle_at_inport_0);
    mm.Add("ImpAsg_InsertedFor_HasCab_at_inport_0", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.ImpAsg_InsertedFor_HasCab_at_inport_0);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.Model_InstanceData.rtb.CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0]);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].DelayInput1_DSTATE);
    mm.Add("Timer_DSTATE", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].Timer_DSTATE);
    mm.Add("Timer_PrevResetState", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].Timer_PrevResetState);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput);
    mm.Add("Memory_PreviousInput_e", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput_e);
    mm.Add("Memory_PreviousInput_g", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput_g);
    mm.Add("Memory_PreviousInput_a", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].CoreSubsys[0].Memory_PreviousInput_a);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit_f);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit_f.DiscreteTimeIntegrator_DSTATE);
    mm.Add("DiscreteTimeIntegrator_PrevResetState", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit_f.DiscreteTimeIntegrator_PrevResetState);
    mm.Add("DiscreteTimeIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit_f.DiscreteTimeIntegrator_IC_LOADING);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit_f.IC_FirstOutputTime);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0]);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].UnitDelay_DSTATE);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_n", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].DelayInput1_DSTATE_n);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].Memory_PreviousInput);
    mm.Add("Memory_PreviousInput_h", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].Memory_PreviousInput_h);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].CoreSubsys);
    mm.Add("TimerOffDelayNoInit_f", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit_f);
    mm.Add("TimerOffDelayNoInit", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys[0].TimerOffDelayNoInit);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.Model_InstanceData.rtdw);
    mm.Add("CoreSubsys", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw.CoreSubsys);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.Model_InstanceData);
    mm.Add("rtb", model.Model().BEML_EMU_DW.Model_InstanceData.rtb);
    mm.Add("rtdw", model.Model().BEML_EMU_DW.Model_InstanceData.rtdw);
    AddRTM(mm, model.Model().BEML_EMU_DW.Model_InstanceData.rtm);
    mm.Add("rtm", model.Model().BEML_EMU_DW.Model_InstanceData.rtm);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.CoreSubsys_m[0].JoltDuration_o);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_m[0].JoltDuration_o.DiscreteTimeIntegrator_DSTATE);
    mm.Add("DiscreteTimeIntegrator_PrevResetState", model.Model().BEML_EMU_DW.CoreSubsys_m[0].JoltDuration_o.DiscreteTimeIntegrator_PrevResetState);
    mm.Add("DiscreteTimeIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.CoreSubsys_m[0].JoltDuration_o.DiscreteTimeIntegrator_IC_LOADING);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.CoreSubsys_m[0].JoltDuration_o.IC_FirstOutputTime);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.CoreSubsys_m[0]);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_DSTATE);
    mm.Add("DiscreteTransferFcn_states", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states);
    mm.Add("DiscreteTimeIntegrator_DSTATE_g", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_DSTATE_g);
    mm.Add("DiscreteTimeIntegrator_DSTATE_m", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_DSTATE_m);
    mm.Add("DiscreteTimeIntegrator_DSTATE_d", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_DSTATE_d);
    mm.Add("DiscreteTimeIntegrator_DSTATE_h", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_DSTATE_h);
    mm.Add("DiscreteTransferFcn_states_b", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_b);
    mm.Add("DiscreteTransferFcn_states_c", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_c);
    mm.Add("DiscreteTransferFcn_states_a", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_a);
    mm.Add("DiscreteTransferFcn_states_o", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_o);
    mm.Add("DiscreteTransferFcn_states_cq", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_cq);
    mm.Add("DiscreteTransferFcn_states_l", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_l);
    mm.Add("DiscreteTransferFcn_states_d", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_d);
    mm.Add("DiscreteTimeIntegrator_DSTATE_hq", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_DSTATE_hq);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DelayInput1_DSTATE);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_m[0].UnitDelay_DSTATE);
    mm.Add("DiscreteTransferFcn_states_bh", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_bh);
    mm.Add("DiscreteTransferFcn_states_d1", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_d1);
    mm.Add("DiscreteTransferFcn_states_j", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_j);
    mm.Add("DiscreteTransferFcn_states_ln", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_ln);
    mm.Add("DiscreteTransferFcn_states_l2", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_l2);
    mm.Add("DiscreteTransferFcn_states_m", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_m);
    mm.Add("DiscreteTimeIntegrator_DSTATE_c", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_DSTATE_c);
    mm.Add("DelayInput1_DSTATE_p", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DelayInput1_DSTATE_p);
    mm.Add("UnitDelay_DSTATE_h", model.Model().BEML_EMU_DW.CoreSubsys_m[0].UnitDelay_DSTATE_h);
    mm.Add("DiscreteTransferFcn_states_op", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_op);
    mm.Add("DiscreteTransferFcn_states_k", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_states_k);
    mm.Add("DiscreteTimeIntegrator_DSTATE_j", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_DSTATE_j);
    mm.Add("DiscreteTransferFcn_tmp", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_tmp);
    mm.Add("DiscreteTransferFcn_tmp_p", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_tmp_p);
    mm.Add("DiscreteTransferFcn_tmp_i", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_tmp_i);
    mm.Add("DiscreteTransferFcn_tmp_ib", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTransferFcn_tmp_ib);
    mm.Add("NextOutput", model.Model().BEML_EMU_DW.CoreSubsys_m[0].NextOutput);
    mm.Add("NextOutput_m", model.Model().BEML_EMU_DW.CoreSubsys_m[0].NextOutput_m);
    mm.Add("NextOutput_c", model.Model().BEML_EMU_DW.CoreSubsys_m[0].NextOutput_c);
    mm.Add("NextOutput_a", model.Model().BEML_EMU_DW.CoreSubsys_m[0].NextOutput_a);
    mm.Add("clockTickCounter", model.Model().BEML_EMU_DW.CoreSubsys_m[0].clockTickCounter);
    mm.Add("clockTickCounter_b", model.Model().BEML_EMU_DW.CoreSubsys_m[0].clockTickCounter_b);
    mm.Add("RandSeed", model.Model().BEML_EMU_DW.CoreSubsys_m[0].RandSeed);
    mm.Add("RandSeed_f", model.Model().BEML_EMU_DW.CoreSubsys_m[0].RandSeed_f);
    mm.Add("RandSeed_p", model.Model().BEML_EMU_DW.CoreSubsys_m[0].RandSeed_p);
    mm.Add("RandSeed_e", model.Model().BEML_EMU_DW.CoreSubsys_m[0].RandSeed_e);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_m[0].UnitDelay1_DSTATE);
    mm.Add("DelayInput1_DSTATE_l", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DelayInput1_DSTATE_l);
    mm.Add("DelayInput1_DSTATE_pk", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DelayInput1_DSTATE_pk);
    mm.Add("DelayInput1_DSTATE_o", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DelayInput1_DSTATE_o);
    mm.Add("DelayInput1_DSTATE_g", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DelayInput1_DSTATE_g);
    mm.Add("DiscreteTimeIntegrator_PrevResetState", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_PrevResetState);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_l", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_PrevResetState_l);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_p", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_PrevResetState_p);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_f", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_PrevResetState_f);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_h", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_PrevResetState_h);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_m", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_PrevResetState_m);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_j", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_PrevResetState_j);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_g", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_PrevResetState_g);
    mm.Add("DiscreteTimeIntegrator_IC_LOADING", model.Model().BEML_EMU_DW.CoreSubsys_m[0].DiscreteTimeIntegrator_IC_LOADING);
    mm.Add("IC_FirstOutputTime", model.Model().BEML_EMU_DW.CoreSubsys_m[0].IC_FirstOutputTime);
    mm.Add("IC_FirstOutputTime_j", model.Model().BEML_EMU_DW.CoreSubsys_m[0].IC_FirstOutputTime_j);
    mm.Add("JoltDuration_o", model.Model().BEML_EMU_DW.CoreSubsys_m[0].JoltDuration_o);
    mm.Add("JoltDuration_n", model.Model().BEML_EMU_DW.CoreSubsys_m[0].JoltDuration_n);
    mm.Add("JoltDuration_e", model.Model().BEML_EMU_DW.CoreSubsys_m[0].JoltDuration_e);
    mm.Add("JoltDuration", model.Model().BEML_EMU_DW.CoreSubsys_m[0].JoltDuration);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.CoreSubsys_cr[0]);
    mm.Add("UD_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_cr[0].UD_DSTATE);
    mm.Add("UD_DSTATE_n", model.Model().BEML_EMU_DW.CoreSubsys_cr[0].UD_DSTATE_n);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.CoreSubsys_gf[0]);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_gf[0].DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_k", model.Model().BEML_EMU_DW.CoreSubsys_gf[0].DelayInput1_DSTATE_k);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.CoreSubsys_gf[0].Memory_PreviousInput);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.CoreSubsys_ij1[0]);
    mm.Add("DelayInput1_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_ij1[0].DelayInput1_DSTATE);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.CoreSubsys_ij1[0].Memory_PreviousInput);
    mm.RegisterStruct(model.Model().BEML_EMU_DW.CoreSubsys_h[0]);
    mm.Add("UnitDelay2_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_h[0].UnitDelay2_DSTATE);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_h[0].UnitDelay1_DSTATE);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_h[0].UnitDelay_DSTATE);
    mm.Add("UD_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_h[0].UD_DSTATE);
    mm.Add("Integrator_DSTATE", model.Model().BEML_EMU_DW.CoreSubsys_h[0].Integrator_DSTATE);
    mm.Add("UD_DSTATE_k", model.Model().BEML_EMU_DW.CoreSubsys_h[0].UD_DSTATE_k);
    mm.Add("Integrator_DSTATE_f", model.Model().BEML_EMU_DW.CoreSubsys_h[0].Integrator_DSTATE_f);
    mm.Add("If_ActiveSubsystem", model.Model().BEML_EMU_DW.CoreSubsys_h[0].If_ActiveSubsystem);
    mm.Add("Memory_PreviousInput", model.Model().BEML_EMU_DW.CoreSubsys_h[0].Memory_PreviousInput);
    mm.Add("Memory_PreviousInput_m", model.Model().BEML_EMU_DW.CoreSubsys_h[0].Memory_PreviousInput_m);
    mm.Add("Memory_PreviousInput_c", model.Model().BEML_EMU_DW.CoreSubsys_h[0].Memory_PreviousInput_c);
    mm.Add("Memory_PreviousInput_f", model.Model().BEML_EMU_DW.CoreSubsys_h[0].Memory_PreviousInput_f);
    mm.Add("Relay_Mode", model.Model().BEML_EMU_DW.CoreSubsys_h[0].Relay_Mode);
    mm.Add("ATO_MODE", model.Model().BEML_EMU_DW.CoreSubsys_h[0].ATO_MODE);
    mm.RegisterStruct(model.Model().BEML_EMU_DW);
    mm.Add("UnitDelay3_DSTATE", model.Model().BEML_EMU_DW.UnitDelay3_DSTATE);
    mm.Add("UnitDelay6_DSTATE", model.Model().BEML_EMU_DW.UnitDelay6_DSTATE);
    mm.Add("UnitDelay_DSTATE", model.Model().BEML_EMU_DW.UnitDelay_DSTATE);
    mm.Add("UnitDelay_DSTATE_b", model.Model().BEML_EMU_DW.UnitDelay_DSTATE_b);
    mm.Add("UnitDelay1_DSTATE", model.Model().BEML_EMU_DW.UnitDelay1_DSTATE);
    mm.Add("UnitDelay3_DSTATE_n", model.Model().BEML_EMU_DW.UnitDelay3_DSTATE_n);
    mm.Add("UnitDelay_DSTATE_i", model.Model().BEML_EMU_DW.UnitDelay_DSTATE_i);
    mm.Add("UnitDelay5_DSTATE", model.Model().BEML_EMU_DW.UnitDelay5_DSTATE);
    mm.Add("UnitDelay_DSTATE_d", model.Model().BEML_EMU_DW.UnitDelay_DSTATE_d);
    mm.Add("UnitDelay2_DSTATE", model.Model().BEML_EMU_DW.UnitDelay2_DSTATE);
    mm.Add("UnitDelay1_DSTATE_l", model.Model().BEML_EMU_DW.UnitDelay1_DSTATE_l);
    mm.Add("UnitDelay4_DSTATE", model.Model().BEML_EMU_DW.UnitDelay4_DSTATE);
    mm.Add("UnitDelay7_DSTATE", model.Model().BEML_EMU_DW.UnitDelay7_DSTATE);
    mm.Add("UnitDelay2_DSTATE_d", model.Model().BEML_EMU_DW.UnitDelay2_DSTATE_d);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().BEML_EMU_DW.DiscreteTimeIntegrator_DSTATE);
    mm.Add("UnitDelay_DSTATE_h", model.Model().BEML_EMU_DW.UnitDelay_DSTATE_h);
    mm.Add("ElectricalSystem_InstanceData", model.Model().BEML_EMU_DW.ElectricalSystem_InstanceData);
    mm.Add("TCMSSystem_InstanceData", model.Model().BEML_EMU_DW.TCMSSystem_InstanceData);
    mm.Add("PneumaticsSystem_InstanceData", model.Model().BEML_EMU_DW.PneumaticsSystem_InstanceData);
    mm.Add("PantographSystem_InstanceData", model.Model().BEML_EMU_DW.PantographSystem_InstanceData);
    mm.Add("DoorsSystem_InstanceData", model.Model().BEML_EMU_DW.DoorsSystem_InstanceData);
    mm.Add("TrainBrakes_InstanceData", model.Model().BEML_EMU_DW.TrainBrakes_InstanceData);
    mm.Add("TractionSystem_InstanceData", model.Model().BEML_EMU_DW.TractionSystem_InstanceData);
    mm.Add("TrainDynamics_InstanceData", model.Model().BEML_EMU_DW.TrainDynamics_InstanceData);
    mm.Add("IOControlsModel_InstanceData", model.Model().BEML_EMU_DW.IOControlsModel_InstanceData);
    mm.Add("Model_InstanceData", model.Model().BEML_EMU_DW.Model_InstanceData);
    mm.Add("CoreSubsys_m", model.Model().BEML_EMU_DW.CoreSubsys_m);
    mm.Add("CoreSubsys_cr", model.Model().BEML_EMU_DW.CoreSubsys_cr);
    mm.Add("CoreSubsys_gf", model.Model().BEML_EMU_DW.CoreSubsys_gf);
    mm.Add("CoreSubsys_ij1", model.Model().BEML_EMU_DW.CoreSubsys_ij1);
    mm.Add("CoreSubsys_h", model.Model().BEML_EMU_DW.CoreSubsys_h);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnaevvfpgh5z[0].dwork);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().self_CoreSubsys_pnaevvfpgh5z[0].dwork.DiscreteTimeIntegrator_DSTATE);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnaevvfpgh5z[0]);
    mm.Add("dwork", model.Model().self_CoreSubsys_pnaevvfpgh5z[0].dwork);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pnaevvfpgh5z[0].defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnaevvfpgh5[0]);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pnaevvfpgh5[0].defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnaevvfpg[0].self_CoreSubsys[0].dwork);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().self_CoreSubsys_pnaevvfpg[0].self_CoreSubsys[0].dwork.DiscreteTimeIntegrator_DSTATE);
    mm.Add("DiscreteTimeIntegrator1_DSTATE", model.Model().self_CoreSubsys_pnaevvfpg[0].self_CoreSubsys[0].dwork.DiscreteTimeIntegrator1_DSTATE);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnaevvfpg[0].self_CoreSubsys[0]);
    mm.Add("dwork", model.Model().self_CoreSubsys_pnaevvfpg[0].self_CoreSubsys[0].dwork);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pnaevvfpg[0].self_CoreSubsys[0].defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnaevvfpg[0]);
    mm.Add("self_CoreSubsys", model.Model().self_CoreSubsys_pnaevvfpg[0].self_CoreSubsys);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pnaevvfpg[0].defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnaevvf[0].dwork);
    mm.Add("DelayInput1_DSTATE", model.Model().self_CoreSubsys_pnaevvf[0].dwork.DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_i", model.Model().self_CoreSubsys_pnaevvf[0].dwork.DelayInput1_DSTATE_i);
    mm.Add("Relay_Mode", model.Model().self_CoreSubsys_pnaevvf[0].dwork.Relay_Mode);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnaevvf[0]);
    mm.Add("dwork", model.Model().self_CoreSubsys_pnaevvf[0].dwork);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pnaevvf[0].defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3_o);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3_o.defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3_ly);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3_ly.defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment2_h);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment2_h.defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3_f);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3_f.defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3.defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pnae[0]);
    mm.Add("self_VehicleEquipment3_o", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3_o);
    mm.Add("self_VehicleEquipment2_f", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment2_f);
    mm.Add("self_VehicleEquipment1_n", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment1_n);
    mm.Add("self_VehicleEquipment4", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment4);
    mm.Add("self_VehicleEquipment3_ly", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3_ly);
    mm.Add("self_VehicleEquipment2_m", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment2_m);
    mm.Add("self_VehicleEquipment1_m", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment1_m);
    mm.Add("self_VehicleEquipment_o", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment_o);
    mm.Add("self_VehicleEquipment2_h", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment2_h);
    mm.Add("self_VehicleEquipment3_l", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3_l);
    mm.Add("self_VehicleEquipment1_a", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment1_a);
    mm.Add("self_VehicleEquipment_g", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment_g);
    mm.Add("self_VehicleEquipment3_f", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3_f);
    mm.Add("self_VehicleEquipment2_n", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment2_n);
    mm.Add("self_VehicleEquipment1_c", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment1_c);
    mm.Add("self_VehicleEquipment_c", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment_c);
    mm.Add("self_VehicleEquipment3", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment3);
    mm.Add("self_VehicleEquipment2", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment2);
    mm.Add("self_VehicleEquipment1", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment1);
    mm.Add("self_VehicleEquipment", model.Model().self_CoreSubsys_pnae[0].self_VehicleEquipment);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pnae[0].defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pna[0].self_CoreSubsys[0]);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pna[0].self_CoreSubsys[0].defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_pna[0]);
    mm.Add("self_CoreSubsys", model.Model().self_CoreSubsys_pna[0].self_CoreSubsys);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_pna[0].defaultParam);
    mm.RegisterStruct(model.Model().self_CoreSubsys_p[0].dwork.sf_Chart_f);
    mm.Add("is_active_c3_IOStateMachinesLib", model.Model().self_CoreSubsys_p[0].dwork.sf_Chart_f.is_active_c3_IOStateMachinesLib);
    mm.Add("is_c3_IOStateMachinesLib", model.Model().self_CoreSubsys_p[0].dwork.sf_Chart_f.is_c3_IOStateMachinesLib);
    mm.Add("is_ChangeIOControlState", model.Model().self_CoreSubsys_p[0].dwork.sf_Chart_f.is_ChangeIOControlState);
    mm.Add("is_ApplyFault", model.Model().self_CoreSubsys_p[0].dwork.sf_Chart_f.is_ApplyFault);
    mm.RegisterStruct(model.Model().self_CoreSubsys_p[0].dwork.ControlStateRequest_a);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().self_CoreSubsys_p[0].dwork.ControlStateRequest_a.DiscreteTimeIntegrator_DSTATE);
    mm.Add("ControlStateRequest_MODE", model.Model().self_CoreSubsys_p[0].dwork.ControlStateRequest_a.ControlStateRequest_MODE);
    mm.RegisterStruct(model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_in);
    mm.Add("chartAbsoluteTimeCounter", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_in.chartAbsoluteTimeCounter);
    mm.Add("durationLastReferenceTick_1", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_in.durationLastReferenceTick_1);
    mm.Add("is_active_c5_IOStateMachinesLib", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_in.is_active_c5_IOStateMachinesLib);
    mm.Add("is_c5_IOStateMachinesLib", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_in.is_c5_IOStateMachinesLib);
    mm.Add("is_ChangeIOControlState", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_in.is_ChangeIOControlState);
    mm.Add("is_ApplyFault", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_in.is_ApplyFault);
    mm.Add("condWasTrueAtLastTimeStep_1", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_in.condWasTrueAtLastTimeStep_1);
    mm.RegisterStruct(model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer);
    mm.Add("CCMCBInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.CCMCBInternalRequest);
    mm.Add("WWCBInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.WWCBInternalRequest);
    mm.Add("CELCBInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.CELCBInternalRequest);
    mm.Add("HLCBInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.HLCBInternalRequest);
    mm.Add("MCBPAGroupOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.MCBPAGroupOpenInternalRequest);
    mm.Add("MCB110VDCGroupOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.MCB110VDCGroupOpenInternalRequest);
    mm.Add("MCBLightGroupOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.MCBLightGroupOpenInternalRequest);
    mm.Add("MCBLightSaloonGroupOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.MCBLightSaloonGroupOpenInternalRequest);
    mm.Add("MCBDoorGroupOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.MCBDoorGroupOpenInternalRequest);
    mm.Add("MCBBrakeGroupOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.MCBBrakeGroupOpenInternalRequest);
    mm.Add("MCBAPSGroupOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.MCBAPSGroupOpenInternalRequest);
    mm.Add("MCBTCMSGroupOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.MCBTCMSGroupOpenInternalRequest);
    mm.Add("MCBSignallingGroupOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.MCBSignallingGroupOpenInternalRequest);
    mm.Add("CECBOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.CECBOpenInternalRequest);
    mm.Add("ELCB1OpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.ELCB1OpenInternalRequest);
    mm.Add("ELCB2OpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.ELCB2OpenInternalRequest);
    mm.Add("ILCB1OpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.ILCB1OpenInternalRequest);
    mm.Add("ILCB2OpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.ILCB2OpenInternalRequest);
    mm.Add("APSCBOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.APSCBOpenInternalRequest);
    mm.Add("UCCBOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.UCCBOpenInternalRequest);
    mm.Add("PANCBOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.PANCBOpenInternalRequest);
    mm.Add("MCBHVACGroupOpenInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.MCBHVACGroupOpenInternalRequest);
    mm.Add("ORDPlungerInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.ORDPlungerInternalRequest);
    mm.Add("APSICBInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.APSICBInternalRequest);
    mm.Add("FDSCBInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.FDSCBInternalRequest);
    mm.Add("SAC1CBInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.SAC1CBInternalRequest);
    mm.Add("SAC2CBInternalRequest", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer.SAC2CBInternalRequest);
    mm.RegisterStruct(model.Model().self_CoreSubsys_p[0].dwork);
    mm.Add("sf_Chart_f", model.Model().self_CoreSubsys_p[0].dwork.sf_Chart_f);
    mm.Add("ControlStateRequest_a", model.Model().self_CoreSubsys_p[0].dwork.ControlStateRequest_a);
    mm.Add("sf_Chart_k", model.Model().self_CoreSubsys_p[0].dwork.sf_Chart_k);
    mm.Add("ControlStateRequest_n", model.Model().self_CoreSubsys_p[0].dwork.ControlStateRequest_n);
    mm.Add("sf_Chart_e", model.Model().self_CoreSubsys_p[0].dwork.sf_Chart_e);
    mm.Add("ControlStateRequest_i", model.Model().self_CoreSubsys_p[0].dwork.ControlStateRequest_i);
    mm.Add("sf_Chart", model.Model().self_CoreSubsys_p[0].dwork.sf_Chart);
    mm.Add("ControlStateRequest", model.Model().self_CoreSubsys_p[0].dwork.ControlStateRequest);
    mm.Add("sf_IRQRequestStateMachine_in", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_in);
    mm.Add("sf_IRQRequestStateMachine_fm", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_fm);
    mm.Add("sf_IRQRequestStateMachine_a", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_a);
    mm.Add("sf_IRQRequestStateMachine_d", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_d);
    mm.Add("sf_IRQRequestStateMachine_f", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_f);
    mm.Add("sf_IRQRequestStateMachine_hr", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_hr);
    mm.Add("sf_IRQRequestStateMachine_e5", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_e5);
    mm.Add("sf_IRQRequestStateMachine_e2", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_e2);
    mm.Add("sf_IRQRequestStateMachine_i", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_i);
    mm.Add("sf_IRQRequestStateMachine_h1", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_h1);
    mm.Add("sf_IRQRequestStateMachine_c", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_c);
    mm.Add("sf_IRQRequestStateMachine_j", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_j);
    mm.Add("sf_IRQRequestStateMachine_h", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_h);
    mm.Add("sf_IRQRequestStateMachine_p", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_p);
    mm.Add("sf_IRQRequestStateMachine_ma", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_ma);
    mm.Add("sf_IRQRequestStateMachine_b", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_b);
    mm.Add("sf_IRQRequestStateMachine_o", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_o);
    mm.Add("sf_IRQRequestStateMachine_mb", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_mb);
    mm.Add("sf_IRQRequestStateMachine_m", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_m);
    mm.Add("sf_IRQRequestStateMachine_l", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_l);
    mm.Add("sf_IRQRequestStateMachine_e", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine_e);
    mm.Add("sf_IRQRequestStateMachine", model.Model().self_CoreSubsys_p[0].dwork.sf_IRQRequestStateMachine);
    mm.Add("RateTransition_Buffer", model.Model().self_CoreSubsys_p[0].dwork.RateTransition_Buffer);
    mm.Add("DelayInput1_DSTATE", model.Model().self_CoreSubsys_p[0].dwork.DelayInput1_DSTATE);
    mm.Add("DelayInput1_DSTATE_i", model.Model().self_CoreSubsys_p[0].dwork.DelayInput1_DSTATE_i);
    mm.Add("DelayInput1_DSTATE_iw", model.Model().self_CoreSubsys_p[0].dwork.DelayInput1_DSTATE_iw);
    mm.Add("DelayInput1_DSTATE_b", model.Model().self_CoreSubsys_p[0].dwork.DelayInput1_DSTATE_b);
    mm.Add("DelayInput1_DSTATE_l", model.Model().self_CoreSubsys_p[0].dwork.DelayInput1_DSTATE_l);
    mm.Add("DiscreteTimeIntegrator_DSTATE", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE);
    mm.Add("DiscreteTimeIntegrator_DSTATE_p", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_p);
    mm.Add("DiscreteTimeIntegrator_DSTATE_o", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_o);
    mm.Add("DiscreteTimeIntegrator_DSTATE_j", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_j);
    mm.Add("DiscreteTimeIntegrator_DSTATE_g", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_g);
    mm.Add("DiscreteTimeIntegrator_DSTATE_go", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_go);
    mm.Add("DiscreteTimeIntegrator_DSTATE_d", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_d);
    mm.Add("DiscreteTimeIntegrator_DSTATE_i", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_i);
    mm.Add("DiscreteTimeIntegrator_DSTATE_dm", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_dm);
    mm.Add("DiscreteTimeIntegrator_DSTATE_b", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_b);
    mm.Add("DiscreteTimeIntegrator_DSTATE_l", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_l);
    mm.Add("DiscreteTimeIntegrator_DSTATE_k", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_k);
    mm.Add("DiscreteTimeIntegrator_DSTATE_h", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_h);
    mm.Add("DiscreteTimeIntegrator_DSTATE_ks", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_ks);
    mm.Add("DiscreteTimeIntegrator_DSTATE_ls", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_ls);
    mm.Add("DiscreteTimeIntegrator_DSTATE_f", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_f);
    mm.Add("DiscreteTimeIntegrator_DSTATE_ik", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_ik);
    mm.Add("DiscreteTimeIntegrator_DSTATE_iq", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_iq);
    mm.Add("DiscreteTimeIntegrator_DSTATE_oh", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_oh);
    mm.Add("DiscreteTimeIntegrator_DSTATE_e", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_e);
    mm.Add("DiscreteTimeIntegrator_DSTATE_c", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_c);
    mm.Add("DiscreteTimeIntegrator_DSTATE_pp", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_DSTATE_pp);
    mm.Add("DiscreteTimeIntegrator_PrevResetState", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_j", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_j);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_h", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_h);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_h2", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_h2);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_l", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_l);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_p", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_p);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_d", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_d);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_f", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_f);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_lt", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_lt);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_h1", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_h1);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_ls", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_ls);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_n", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_n);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_ni", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_ni);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_f4", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_f4);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_ph", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_ph);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_c", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_c);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_n1", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_n1);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_lo", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_lo);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_k", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_k);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_a", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_a);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_m", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_m);
    mm.Add("DiscreteTimeIntegrator_PrevResetState_fg", model.Model().self_CoreSubsys_p[0].dwork.DiscreteTimeIntegrator_PrevResetState_fg);
    mm.Add("DelayInput1_DSTATE_g", model.Model().self_CoreSubsys_p[0].dwork.DelayInput1_DSTATE_g);
    mm.Add("UnitDelay1_DSTATE", model.Model().self_CoreSubsys_p[0].dwork.UnitDelay1_DSTATE);
    mm.Add("UnitDelay_DSTATE", model.Model().self_CoreSubsys_p[0].dwork.UnitDelay_DSTATE);
    mm.Add("UnitDelay_DSTATE_a", model.Model().self_CoreSubsys_p[0].dwork.UnitDelay_DSTATE_a);
    mm.Add("UnitDelay_DSTATE_p", model.Model().self_CoreSubsys_p[0].dwork.UnitDelay_DSTATE_p);
    mm.Add("UnitDelay_DSTATE_k", model.Model().self_CoreSubsys_p[0].dwork.UnitDelay_DSTATE_k);
    mm.Add("Memory_PreviousInput", model.Model().self_CoreSubsys_p[0].dwork.Memory_PreviousInput);
    mm.Add("Memory_PreviousInput_g", model.Model().self_CoreSubsys_p[0].dwork.Memory_PreviousInput_g);
    mm.Add("RateTransition1_Buffer0", model.Model().self_CoreSubsys_p[0].dwork.RateTransition1_Buffer0);
    mm.Add("RateTransition2_Buffer0", model.Model().self_CoreSubsys_p[0].dwork.RateTransition2_Buffer0);
    mm.Add("RateTransition3_Buffer0", model.Model().self_CoreSubsys_p[0].dwork.RateTransition3_Buffer0);
    mm.Add("RateTransition4_Buffer0", model.Model().self_CoreSubsys_p[0].dwork.RateTransition4_Buffer0);
    mm.RegisterStruct(model.Model().self_CoreSubsys_p[0].blockIO.sf_Chart_f);
    mm.Add("TriggerFaultRequest", model.Model().self_CoreSubsys_p[0].blockIO.sf_Chart_f.TriggerFaultRequest);
    mm.Add("UseFaultedTarget", model.Model().self_CoreSubsys_p[0].blockIO.sf_Chart_f.UseFaultedTarget);
    mm.RegisterStruct(model.Model().self_CoreSubsys_p[0].blockIO.ControlStateRequest_a);
    mm.Add("Switch1", model.Model().self_CoreSubsys_p[0].blockIO.ControlStateRequest_a.Switch1);
    mm.Add("RelationalOperator", model.Model().self_CoreSubsys_p[0].blockIO.ControlStateRequest_a.RelationalOperator);
    mm.RegisterStruct(model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_in);
    mm.Add("TargetStateValue", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_in.TargetStateValue);
    mm.Add("TriggerFaultRequest", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_in.TriggerFaultRequest);
    mm.RegisterStruct(model.Model().self_CoreSubsys_p[0].blockIO);
    mm.Add("sf_Chart_f", model.Model().self_CoreSubsys_p[0].blockIO.sf_Chart_f);
    mm.Add("ControlStateRequest_a", model.Model().self_CoreSubsys_p[0].blockIO.ControlStateRequest_a);
    mm.Add("sf_Chart_k", model.Model().self_CoreSubsys_p[0].blockIO.sf_Chart_k);
    mm.Add("ControlStateRequest_n", model.Model().self_CoreSubsys_p[0].blockIO.ControlStateRequest_n);
    mm.Add("sf_Chart_e", model.Model().self_CoreSubsys_p[0].blockIO.sf_Chart_e);
    mm.Add("ControlStateRequest_i", model.Model().self_CoreSubsys_p[0].blockIO.ControlStateRequest_i);
    mm.Add("sf_Chart", model.Model().self_CoreSubsys_p[0].blockIO.sf_Chart);
    mm.Add("ControlStateRequest", model.Model().self_CoreSubsys_p[0].blockIO.ControlStateRequest);
    mm.Add("sf_IRQRequestStateMachine_in", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_in);
    mm.Add("sf_IRQRequestStateMachine_fm", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_fm);
    mm.Add("sf_IRQRequestStateMachine_a", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_a);
    mm.Add("sf_IRQRequestStateMachine_d", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_d);
    mm.Add("sf_IRQRequestStateMachine_f", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_f);
    mm.Add("sf_IRQRequestStateMachine_hr", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_hr);
    mm.Add("sf_IRQRequestStateMachine_e5", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_e5);
    mm.Add("sf_IRQRequestStateMachine_e2", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_e2);
    mm.Add("sf_IRQRequestStateMachine_i", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_i);
    mm.Add("sf_IRQRequestStateMachine_h1", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_h1);
    mm.Add("sf_IRQRequestStateMachine_c", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_c);
    mm.Add("sf_IRQRequestStateMachine_j", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_j);
    mm.Add("sf_IRQRequestStateMachine_h", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_h);
    mm.Add("sf_IRQRequestStateMachine_p", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_p);
    mm.Add("sf_IRQRequestStateMachine_ma", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_ma);
    mm.Add("sf_IRQRequestStateMachine_b", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_b);
    mm.Add("sf_IRQRequestStateMachine_o", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_o);
    mm.Add("sf_IRQRequestStateMachine_mb", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_mb);
    mm.Add("sf_IRQRequestStateMachine_m", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_m);
    mm.Add("sf_IRQRequestStateMachine_l", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_l);
    mm.Add("sf_IRQRequestStateMachine_e", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine_e);
    mm.Add("sf_IRQRequestStateMachine", model.Model().self_CoreSubsys_p[0].blockIO.sf_IRQRequestStateMachine);
    mm.Add("DataTypeConversion6", model.Model().self_CoreSubsys_p[0].blockIO.DataTypeConversion6);
    mm.Add("DataTypeConversion8", model.Model().self_CoreSubsys_p[0].blockIO.DataTypeConversion8);
    mm.Add("DataTypeConversion10", model.Model().self_CoreSubsys_p[0].blockIO.DataTypeConversion10);
    mm.Add("DataTypeConversion11", model.Model().self_CoreSubsys_p[0].blockIO.DataTypeConversion11);
    mm.Add("DataTypeConversion13", model.Model().self_CoreSubsys_p[0].blockIO.DataTypeConversion13);
    mm.Add("DataTypeConversion15", model.Model().self_CoreSubsys_p[0].blockIO.DataTypeConversion15);
    mm.Add("DataTypeConversion17", model.Model().self_CoreSubsys_p[0].blockIO.DataTypeConversion17);
    mm.Add("DataTypeConversion19", model.Model().self_CoreSubsys_p[0].blockIO.DataTypeConversion19);
    mm.Add("DataTypeConversion21", model.Model().self_CoreSubsys_p[0].blockIO.DataTypeConversion21);
    mm.Add("DataTypeConversion23", model.Model().self_CoreSubsys_p[0].blockIO.DataTypeConversion23);
    mm.Add("DataTypeConversion41", model.Model().self_CoreSubsys_p[0].blockIO.DataTypeConversion41);
    mm.Add("OR", model.Model().self_CoreSubsys_p[0].blockIO.OR);
    mm.Add("AND", model.Model().self_CoreSubsys_p[0].blockIO.AND);
    mm.Add("FixPtRelationalOperator", model.Model().self_CoreSubsys_p[0].blockIO.FixPtRelationalOperator);
    mm.Add("APSICBInternalRequest", model.Model().self_CoreSubsys_p[0].blockIO.APSICBInternalRequest);
    mm.Add("FDSCBInternalRequest", model.Model().self_CoreSubsys_p[0].blockIO.FDSCBInternalRequest);
    mm.Add("SAC1CBInternalRequest", model.Model().self_CoreSubsys_p[0].blockIO.SAC1CBInternalRequest);
    mm.Add("SAC2CBInternalRequest", model.Model().self_CoreSubsys_p[0].blockIO.SAC2CBInternalRequest);
    mm.RegisterStruct(model.Model().self_CoreSubsys_p[0]);
    mm.Add("dwork", model.Model().self_CoreSubsys_p[0].dwork);
    mm.Add("blockIO", model.Model().self_CoreSubsys_p[0].blockIO);
    mm.Add("defaultParam", model.Model().self_CoreSubsys_p[0].defaultParam);
    mm.RegisterStruct(model.Model());
    mm.Add("BEML_EMU_U", model.Model().BEML_EMU_U);
    mm.Add("BEML_EMU_Y", model.Model().BEML_EMU_Y);
    mm.Add("BEML_EMU_P", model.Model().BEML_EMU_P);
    mm.Add("BEML_EMU_B", model.Model().BEML_EMU_B);
    mm.Add("BEML_EMU_DW", model.Model().BEML_EMU_DW);
    mm.Add("self_CoreSubsys_pnaevvfpgh5z", model.Model().self_CoreSubsys_pnaevvfpgh5z);
    mm.Add("self_CoreSubsys_pnaevvfpgh5", model.Model().self_CoreSubsys_pnaevvfpgh5);
    mm.Add("self_CoreSubsys_pnaevvfpg", model.Model().self_CoreSubsys_pnaevvfpg);
    mm.Add("self_CoreSubsys_pnaevvf", model.Model().self_CoreSubsys_pnaevvf);
    mm.Add("self_CoreSubsys_pnae", model.Model().self_CoreSubsys_pnae);
    mm.Add("self_CoreSubsys_pna", model.Model().self_CoreSubsys_pna);
    mm.Add("self_CoreSubsys_p", model.Model().self_CoreSubsys_p);
    AddRTM(mm, model.Model().BEML_EMU_M);
    mm.Add("BEML_EMU_M", model.Model().BEML_EMU_M);
}
