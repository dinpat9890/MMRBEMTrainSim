(for-all-trains $t
  (enable-if-auto-train $t
    (for-all-vehicles $t $v
      (create-auto-vehicle-displacement-object $t $v)
      (set-displacement-x $t $v (if (== $v 1) 1 1.2))
      (set-displacement-y $t $v (if (== $v 1) 7 1.3))
      (set-displacement-z $t $v (if (== $v 1) 6 1.4))
      (set-displacement-h $t $v (if (== $v 1) 9 1.5))
      (set-displacement-p $t $v (if (== $v 1) 5 1.6))
      (set-displacement-r $t $v (if (== $v 1) 2 1.7))
    )
  )
)

(! Logically equivalent to the above, shown for testing purposes
(for-all-trains $t
 (enable-if-auto-train $t
   (for-all-vehicles $t $v
      (create-auto-vehicle-displacement-object $t $v)
      (set-displacement $t $v (if (== $v 1) (position 1 7 6 9 5 2) (position 1.2 1.3 1.4 1.5 1.6 1.7)))
    )
  )
)
)

(for-all-trains $t
  (enable-if-simulated-train $t
    (set-var @derailed (get-number (number-id (train-object $t) "Lead Car Derailment Status") 0.0))
    (for-all-vehicles $t $v
      (create-vehicle-displacement-object $t $v)
      (set-displacement-if (and (get-var @derailed) (== $v 4)) $t $v (position 0.1 0.2 0.3 0.4 0.5 0.6))
    )
  )
)

(! Logically equivalent to the above, shown for testing purposes
(for-all-trains $t
  (enable-if-simulated-train $t
    (set-var @derailed (get-number (number-id (train-object $t) "Lead Car Derailment Status") 0.0))
    (for-all-vehicles $t $v
      (create-vehicle-displacement-object $t $v)
      (set-displacement-x-if (and (get-var @derailed) (== $v 4)) $t $v 0.1)
      (set-displacement-y-if (and (get-var @derailed) (== $v 4)) $t $v 0.2)
      (set-displacement-z-if (and (get-var @derailed) (== $v 4)) $t $v 0.3)
      (set-displacement-h-if (and (get-var @derailed) (== $v 4)) $t $v 0.4)
      (set-displacement-p-if (and (get-var @derailed) (== $v 4)) $t $v 0.5)
      (set-displacement-r-if (and (get-var @derailed) (== $v 4)) $t $v 0.6)
    )
  )
)
)



