## SimSetup
## Tue Jul 12 10:37:57 2022

digits.scc.odometer=0
digits.scc.previewdistance=3
digits.scc.speedometer=0
# The location to anchor notifications (i.e. the oldest will appear here with newer ones flowing up or down the screen)
# Valid values are NORTHWEST NORTHEAST SOUTHWEST and SOUTHEAST
gui.notification.anchor.location=NORTHEAST
# Notifications Service settings
# The index of the monitor to display notifications on.
# 
# Usually 0 = primary, 1 = secondary, and so on, but this is not always the case.
# If you use the identify function in Windows,
# and N is the number displayed on the monitor you want to see notifications on,
# the index should be N-1.
# 
# Running on a non-primary monitor or using portrait orientation is more likely to result in rendering glitches.
gui.notification.anchor.monitorIndex=0
# Enables notifications to slide in from the side of the screen.
# May cause the notification to be briefly visible on another monitor, if it's on that side.
# gui.notification.slideIn.enabled
# Usually there's no need to override the default setting for these.
# Sets the distance (in pixels) from the edge of the screen that notifications should appear.
# gui.notification.spacing.edge=20
# Sets the distance (in pixels) between notifications.
# gui.notification.spacing.notification=10
# Speed factor must be > 0.0 and <= 1.0
# gui.notification.speed=0.66
# The time, in millis for a fade to take (if enabled).
# gui.notification.fading.period=300
# Sets the duration of "short" notifications, in seconds. Defaults to 5.
gui.notification.duration.short=5
# Enables fade effects, which can make notifications look slicker.
# The effect depends on a system running reasonably smoothly.
gui.notification.fading.enabled=true
label.scc.speedometer=km/h
# Prevent users from fiddling with the screen.
# Developers would usually switch these off when screen real estate is at a premium.
scc.alwaysOnTop=true
# Flag that enables the resume interface components
# Resume is non-trivial for projects to include.
# Do not enable unless the software has been written to support this.
scc.enableResume=true
scc.environment.clouddensity=true
# The playback and replay speeds the user may choose from.  1 is added if it's missing.  If
# this property is absent, the speed change control will not be available, and only normal
# speed playback is possible (replay will still have fast forward/rewind).  If you go above
# 2x speed, LoggingAndReplay might not keep up, so be sure to test it.
# scc.playback.speeds=0.25, 0.5, 1, 2, 4
# Whether to enable various controls on the environment screen or not.  Controls are enabled by
# default, so properties are only needed here if you would like to disable them.
scc.environment.fog=true
scc.environment.haze=true
scc.environment.lightning=true
scc.environment.rain=true
scc.environment.snow=false
scc.environment.sunglare=true
scc.environment.tunnelsmoke=false
scc.environment.winddirection=true
scc.environment.windvelocity=true
# The number of milliseconds to hold a pulse event at its "high" value
scc.eventPulse.holdTime=150
# The number of seconds that we wait for the session to "initialise" before reporting an error.
# This the time between the SCC progressing to Paused and the other modules in the system
# doing the same.
# During this period the SCC displays a "Modules Initialising. Please Wait..." dialog.
# The time set here should = (time the slowest module takes to reach paused) * (fudge factor)
# Usually CGI Vision is the bottleneck here.
scc.initialiseSession.timeout=250
# The number of seconds that we wait for a session to "load" before reporting an error.
# This the time between clicking "Start Session" and the SCC progressing to Defining/Ready/Paused
# (i.e. while the SCC is asking Comms to start the session).
# Progression will not occur if the session is rejected; unfortunately session rejection can only
# be inferred using this timeout period.
# During this period the SCC displays a "Starting Session. Please Wait..." dialog.
# Generally this time is expected to be very short; the dialog is rarely visible for more than
# a few seconds.
scc.loadSession.timeout=10

scc.mainframeplugin.1.class=com.sydac.mmrbem.plugin.ProjectRadioIntercomPlugin

# Main Frame Plugins are able to add GUI elements to the SCC.
# You may have any number of these plugins (remember to set the count correctly).
# These plugins can be defined as follows (noting that the properties file is optional):
# * Indicate the number of plugins to load (n) with
# scc.mainframeplugin.count=n
# * For each plugin (where x = 1..n)
# * define a class to load with
# scc.mainframeplugin.x.class=com.sydac.project.MyPlugin
# * optionally define a properties file to load with
# scc.mainframeplugin.x.properties=..\\Environment\\MyPlugin.properties
scc.mainframeplugin.count=1
# 
# UI Properties
# 
# Locks the SCC with a modal "Modules Initialising" dialog while modules are loading.
# Usually this should be true, as you don't want to hit play while there are modules that
# aren't ready to go, but developers/testers may find it useful to switch this off.
scc.moduleInterlock=true
# The period in milliseconds at which to poll the current status of all modules in the system
scc.modules.pollPeriod=1000
# The maximum position that the Preview Session mode will allow the user to select (m)
scc.previewsession.maxposition=250000
# The maximum forwards/reverse speed that the Preview Session mode will allow the user to select (m/s)
# to convert km/h into m/s, divide by 3.6
# 97.222 m/s = 350 km/h
scc.previewsession.maxspeed=97.222
# Allows the SCC to sent train relocation requests (AKA teleport). Disabled by default.
scc.relocateTrains.enabled=false
# The class name of a suitable class that implements ICommonObjects
scc.runtimedata.class=com.sydac.project.runtimedata.ProjectObjects
# 
# Configuration Properties
# 
# Behaviour for deciding when to send a save request
# Valid values are:
# never (No option presented, never saves)
# prompt (Present the user with an option to save or not; this is the default)
# always (No option presented, always saves)
scc.saveSession.sendRequest=prompt
# The number of seconds that we wait for the session to save.
scc.saveSession.timeout=120
scc.screenSizeLocked=true
# 
# Plugins
# 
# Session Setup Plugins provide code to start the session.
# Usually this will be a GUI of some sort that starts the session based on user input.
# You must have one (and only one) of these plugins.
# The following are the plugins supplied with the Core SCC.
# scc.sessionsetupplugin.class=com.sydac.simulatorcontroller.session.setup.plugin.multihub.MultipleHubSessionSetupPlugin
# scc.sessionsetupplugin.properties=..\\Environment\\SCCMultipleHubSessionSetup.properties
scc.sessionsetupplugin.class=com.sydac.simulatorcontroller.session.setup.plugin.basic.BasicSessionSetupPlugin
scc.sessionsetupplugin.properties=..\\Environment\\SCCBasicSessionSetup.properties
# The rate at which the simulation fast forwards/rewinds in replay, where 1.0 is normal speed
scc.shuttleRate=3.0
# Time, in seconds, to wait between allowing the user to take snapshots.
# Defaults to 5 seconds.
scc.snapshotRestTime=5
# Unit conversions
units.scc.odometer=m
units.scc.previewdistance=km
# These default to the odometer units, but can be overridden here
# units.scc.replayposition=m
# digits.scc.replayposition=0
units.scc.speedometer=km/h
