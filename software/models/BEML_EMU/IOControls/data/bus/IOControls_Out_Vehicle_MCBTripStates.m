function cellInfo = IOControls_Out_Vehicle_MCBTripStates(varargin) 
% IOCONTROLS_OUT_VEHICLE_MCBTRIPSTATES returns a cell array containing bus object information 
% 
% Optional Input: 'false' will suppress a call to Simulink.Bus.cellToObject 
%                 when the MATLAB file is executed. 
% The order of bus element attributes is as follows:
%   ElementName, Dimensions, DataType, SampleTime, Complexity, SamplingMode, DimensionsMode, Min, Max, DocUnits, Description 

suppressObject = false; 
if nargin == 1 && islogical(varargin{1}) && varargin{1} == false 
    suppressObject = true; 
elseif nargin > 1 
    error('Invalid input argument(s) encountered'); 
end 

cellInfo = { ... 
  { ... 
    'BD_IOControls_Out_Vehicle_MCBTripStates', ... 
    '', ... 
    '', ... 
    'Auto', ... 
    '-1', {... 
{'EBLR2CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'EBMVCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'EDCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ELCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ELCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ERCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'HCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'HLLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'HLRCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ILCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ILCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'LDICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'LDLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'LDRCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MMCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'NBCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'NVICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'OCCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'OCCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ODDCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'PBCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'PISCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'PISCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'POCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'PPU1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'PPU2CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'PPU3CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RIO1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RIO2CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SIOCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SIOCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SSICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TBCCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TBCCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TBNCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TDICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TLLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TLRCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TRIVCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TVDUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TWVCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'VCCBOrUCCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'VCBCCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'VIO1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'VIO2CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'WFLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'WIFICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'WWCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BECUCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BECUCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BECUCB3', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RSACB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CMCCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CILCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CELCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CECB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CDUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CCNVIO1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CBTCCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CBFCCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CBFCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'C1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ZVBACB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'EBLR1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DRCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DPLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DMICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DIOCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DIOCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CSCCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CSBCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CSACB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CRSBCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SOCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SOCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MSOCB5', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MSOCB4', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MSOCB3', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MSOCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MSOCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'HVAC1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SAC2CCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'HVAC2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SAC1CCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CMCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'AC2CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'AC1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'FDSCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BCBCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ERVRCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ERVRCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ESKCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'HMCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SP1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SP2CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SP3CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SP4CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SP5CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SPCB6', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SPCB7', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SPCB8', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RPTCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TERCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TERCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'APSCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'APSICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BCGCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DSCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MTBMCCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'PADCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'PANCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SSCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'PTCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'VCBCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SP12CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MTBM1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MTBM2CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SP11CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SP6CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MTOPCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'LeftDoor1DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'LeftDoor2DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'LeftDoor3DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'LeftDoor4DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RightDoor1DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RightDoor2DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RightDoor3DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RightDoor4DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
    } ...
  } ...
}'; 

if ~suppressObject 
    % Create bus objects in the MATLAB base workspace 
    Simulink.Bus.cellToObject(cellInfo) 
end 
