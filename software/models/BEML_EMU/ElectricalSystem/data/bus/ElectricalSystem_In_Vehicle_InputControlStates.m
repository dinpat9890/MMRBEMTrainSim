function cellInfo = ElectricalSystem_In_Vehicle_InputControlStates(varargin) 
% ELECTRICALSYSTEM_IN_VEHICLE_INPUTCONTROLSTATES returns a cell array containing bus object information 
% 
% Optional Input: 'false' will suppress a call to Simulink.Bus.cellToObject 
%                 when the MATLAB file is executed. 
% The order of bus element attributes is as follows:
%   ElementName, Dimensions, DataType, SampleTime, Complexity, SamplingMode, DimensionsMode, Min, Max, DocUnits, Description 

suppressObject = false; 
if nargin == 1 && islogical(varargin{1}) && varargin{1} == false 
    suppressObject = true; 
elseif nargin > 1 
    error('Invalid input argument(s) encountered'); 
end 

cellInfo = { ... 
  { ... 
    'BD_ElectricalSystem_In_Vehicle_InputControlStates', ... 
    '', ... 
    '', ... 
    'Auto', ... 
    '-1', {... 
{'MasterKeySwitch', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'PowerONPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'PantographDownPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'PantoSelectorSw', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'TractionBrakeController', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('-101 Emergency Brake\n-100 - 0 Brake\n0 Coast\n0 - 100 Traction')}; ...
{'VCBClosePB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'VCBOpenPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'WiperControlSwitch', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'HeadlightSwitch', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('2 High Beam\n1 Low Beam\n0 Off')}; ...
{'IdentificationLightsSwitch', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('2 Fixed\n1 Pulsing\n0 Off')}; ...
{'EmergencyBrakePB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'ParkBrakeApplyPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'ParkBrakeReleasePB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'DoorProvenLoopCutoutPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'DoorProvenLoopCutoutSw', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'ZeroSpeedBypassSwitch', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'ObstacleDetectionDisableSwitch', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'LeftDoorReleasePB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'RightDoorReleasePB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'ROSPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'UTOPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'ATOStartPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'EBReleasePB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'SafetyCutoutSS', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'LampTestPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'HornPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'CabConsolePB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'LeftDoorClosePBOperatingPanel1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'RightDoorClosePBOperatingPanel1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'LeftDoorOpenPBOperatingPanel1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'RightDoorOpenPBOperatingPanel1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'CabMainLightPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'DoorCloseAnnouncementPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'UncouplePB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'FlasherLightPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'FloodLightPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'BatteryResetPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'RightDoorOpenPBOperatingPanel5', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'RightDoorClosePBOperatingPanel5', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'WFLTestPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'LeftDoorOpenPBOperatingPanel2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'LeftDoorClosePBOperatingPanel2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'CallOnLightPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'LIMPHomePB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'PowerOFFPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'DeadmanSafetyDevice', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'DeadmanBypassSwitch', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'BrakeLoopCutoutSS', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'EmergencyBrakePBBypass', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'ADDCOS', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'ORDCOS', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'HoldDoorCloseBS', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'ModeSelector', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'EmerDoorLimitSwitch', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('Emergency Door Limit Switch operated via handle')}; ...
{'PECUPushButton', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'CMCCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'LeftDoorOpenPB1OperatingPanel2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'RightDoorOpenPB1OperatingPanel5', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'ParkBrakeIsolationCock', 1, 'boolean', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'RIO1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RIO2CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TDICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DIOCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DIOCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CSCCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CSBCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CSACB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CECB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'UCCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CRSBCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DMICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'NVICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'VIO1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'VIO2CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'APSCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DRCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'DPLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'HLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'CELCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ILCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ILCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'PANCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TBCCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TBCCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'POCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'TVDUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ODDCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'WFLCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'WWCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'VCBCCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'VCBCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'PADCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SAC1CCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SAC2CCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'AC1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'AC2CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RCCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SFB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'EIVIB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'MRIsolationCock', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('AirSupplyIC')}; ...
{'EBLR1CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'EBLR2CB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'HCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'EmergencyStopPB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'OCCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ELCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'ELCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'FDSCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'SSICB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BCBCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'EDCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BCGCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BECUCB1', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BECUCB2', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'BECUCB3', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'LeftDoor1DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'LeftDoor2DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'LeftDoor3DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'LeftDoor4DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RightDoor1DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RightDoor2DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RightDoor3DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'RightDoor4DCUCB', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', sprintf('MCB\n\nTripped\nSet')}; ...
{'WiperSelectionSwitch', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'WiperWash', 1, 'double', -1, 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
    } ...
  } ...
}'; 

if ~suppressObject 
    % Create bus objects in the MATLAB base workspace 
    Simulink.Bus.cellToObject(cellInfo) 
end 
